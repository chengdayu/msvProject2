Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

<<<<<<< HEAD
#111   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#112   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#113   inner_option_array_declaration :	;
#114   inner_option_array_declaration :	 COMMA error;


Conflict in state 109 between rule 13 and token CHOP resolved as reduce.
Conflict in state 109 between rule 13 and token IFF resolved as reduce.
Conflict in state 109 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 13 and token OR resolved as reduce.
Conflict in state 109 between rule 13 and token AND resolved as reduce.
Conflict in state 109 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 22 and token CHOP resolved as reduce.
Conflict in state 110 between rule 22 and token IFF resolved as reduce.
Conflict in state 110 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 22 and token OR resolved as reduce.
Conflict in state 110 between rule 22 and token AND resolved as reduce.
Conflict in state 110 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 160 between rule 21 and token CHOP resolved as reduce.
Conflict in state 160 between rule 21 and token IFF resolved as reduce.
Conflict in state 160 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 160 between rule 21 and token OR resolved as reduce.
Conflict in state 160 between rule 21 and token AND resolved as reduce.
Conflict in state 160 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 161 between rule 10 and token CHOP resolved as reduce.
Conflict in state 161 between rule 10 and token IFF resolved as reduce.
Conflict in state 161 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 161 between rule 10 and token OR resolved as reduce.
Conflict in state 161 between rule 10 and token AND resolved as reduce.
Conflict in state 161 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 162 between rule 9 and token CHOP resolved as reduce.
Conflict in state 162 between rule 9 and token IFF resolved as reduce.
Conflict in state 162 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 162 between rule 9 and token OR resolved as reduce.
Conflict in state 162 between rule 9 and token AND resolved as reduce.
Conflict in state 162 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 163 between rule 20 and token CHOP resolved as reduce.
Conflict in state 163 between rule 20 and token IFF resolved as reduce.
Conflict in state 163 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 163 between rule 20 and token OR resolved as reduce.
Conflict in state 163 between rule 20 and token AND resolved as reduce.
Conflict in state 163 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 164 between rule 12 and token CHOP resolved as reduce.
Conflict in state 164 between rule 12 and token IFF resolved as reduce.
Conflict in state 164 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 164 between rule 12 and token OR resolved as reduce.
Conflict in state 164 between rule 12 and token AND resolved as reduce.
Conflict in state 164 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 165 between rule 11 and token CHOP resolved as reduce.
Conflict in state 165 between rule 11 and token IFF resolved as reduce.
Conflict in state 165 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 165 between rule 11 and token OR resolved as reduce.
Conflict in state 165 between rule 11 and token AND resolved as reduce.
Conflict in state 165 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 323 between rule 221 and token IMPLY resolved as reduce.
Conflict in state 326 between rule 220 and token IMPLY resolved as reduce.
Conflict in state 349 between rule 8 and token CHOP resolved as reduce.
Conflict in state 349 between rule 8 and token IFF resolved as shift.
Conflict in state 349 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 349 between rule 8 and token OR resolved as shift.
Conflict in state 349 between rule 8 and token AND resolved as shift.
Conflict in state 349 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 350 between rule 6 and token CHOP resolved as reduce.
Conflict in state 350 between rule 6 and token IFF resolved as reduce.
Conflict in state 350 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 350 between rule 6 and token OR resolved as shift.
Conflict in state 350 between rule 6 and token AND resolved as shift.
Conflict in state 350 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 351 between rule 7 and token CHOP resolved as reduce.
Conflict in state 351 between rule 7 and token IFF resolved as reduce.
Conflict in state 351 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 351 between rule 7 and token OR resolved as shift.
Conflict in state 351 between rule 7 and token AND resolved as shift.
Conflict in state 351 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 352 between rule 5 and token CHOP resolved as reduce.
Conflict in state 352 between rule 5 and token IFF resolved as reduce.
Conflict in state 352 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 352 between rule 5 and token OR resolved as reduce.
Conflict in state 352 between rule 5 and token AND resolved as shift.
Conflict in state 352 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 353 between rule 4 and token CHOP resolved as reduce.
Conflict in state 353 between rule 4 and token IFF resolved as reduce.
Conflict in state 353 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 353 between rule 4 and token OR resolved as reduce.
Conflict in state 353 between rule 4 and token AND resolved as reduce.
Conflict in state 353 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 360 between rule 305 and token OR resolved as reduce.
Conflict in state 360 between rule 305 and token AND resolved as reduce.
Conflict in state 428 between rule 400 and token OR resolved as reduce.
Conflict in state 428 between rule 400 and token AND resolved as reduce.
Conflict in state 490 between rule 32 and token CHOP resolved as reduce.
Conflict in state 490 between rule 32 and token OR resolved as shift.
Conflict in state 490 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 490 between rule 32 and token AND resolved as shift.
Conflict in state 491 between rule 31 and token CHOP resolved as reduce.
Conflict in state 491 between rule 31 and token OR resolved as reduce.
Conflict in state 491 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 491 between rule 31 and token AND resolved as shift.
Conflict in state 492 between rule 55 and token CHOP resolved as reduce.
Conflict in state 492 between rule 55 and token OR resolved as reduce.
Conflict in state 492 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 492 between rule 55 and token AND resolved as shift.
Conflict in state 493 between rule 30 and token CHOP resolved as reduce.
Conflict in state 493 between rule 30 and token OR resolved as reduce.
Conflict in state 493 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 493 between rule 30 and token AND resolved as reduce.
Conflict in state 573 between rule 307 and token OR resolved as reduce.
Conflict in state 573 between rule 307 and token AND resolved as shift.
Conflict in state 574 between rule 306 and token OR resolved as reduce.
Conflict in state 574 between rule 306 and token AND resolved as reduce.
Conflict in state 646 between rule 402 and token OR resolved as reduce.
Conflict in state 646 between rule 402 and token AND resolved as shift.
Conflict in state 647 between rule 401 and token OR resolved as reduce.
Conflict in state 647 between rule 401 and token AND resolved as reduce.
Conflict in state 823 between rule 205 and token CON resolved as reduce.
State 81 contains 1 shift/reduce conflict.
State 146 contains 2 shift/reduce conflicts.
State 147 contains 2 shift/reduce conflicts.
State 149 contains 14 shift/reduce conflicts.
State 155 contains 2 shift/reduce conflicts.
State 175 contains 2 shift/reduce conflicts.
State 213 contains 3 reduce/reduce conflicts.
State 215 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 216 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 217 contains 1 shift/reduce conflict.
State 219 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 221 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 222 contains 1 shift/reduce conflict.
State 233 contains 1 reduce/reduce conflict.
State 234 contains 1 reduce/reduce conflict.
State 259 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 292 contains 1 shift/reduce conflict.
State 294 contains 1 shift/reduce conflict.
State 295 contains 1 shift/reduce conflict.
State 296 contains 1 shift/reduce conflict.
State 298 contains 2 shift/reduce conflicts.
State 299 contains 2 shift/reduce conflicts.
State 300 contains 2 shift/reduce conflicts.
State 301 contains 2 shift/reduce conflicts.
State 302 contains 2 shift/reduce conflicts.
State 303 contains 2 shift/reduce conflicts.
State 304 contains 2 shift/reduce conflicts.
State 305 contains 2 shift/reduce conflicts.
State 306 contains 2 shift/reduce conflicts.
State 307 contains 2 shift/reduce conflicts.
State 308 contains 2 shift/reduce conflicts.
State 309 contains 2 shift/reduce conflicts.
State 310 contains 2 shift/reduce conflicts.
State 311 contains 2 shift/reduce conflicts.
State 312 contains 2 shift/reduce conflicts.
State 313 contains 2 shift/reduce conflicts.
State 316 contains 2 shift/reduce conflicts.
State 317 contains 2 shift/reduce conflicts.
State 318 contains 2 shift/reduce conflicts.
State 323 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 358 contains 1 shift/reduce conflict.
State 361 contains 2 shift/reduce conflicts.
State 362 contains 2 shift/reduce conflicts.
State 389 contains 1 shift/reduce conflict.
State 390 contains 1 shift/reduce conflict.
State 391 contains 1 shift/reduce conflict.
State 392 contains 1 shift/reduce conflict.
State 409 contains 1 shift/reduce conflict.
State 418 contains 1 shift/reduce conflict.
State 419 contains 1 shift/reduce conflict.
State 420 contains 1 shift/reduce conflict.
State 426 contains 1 shift/reduce conflict.
State 467 contains 1 shift/reduce conflict.
State 468 contains 1 shift/reduce conflict.
State 470 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 473 contains 1 shift/reduce conflict.
State 474 contains 1 shift/reduce conflict.
State 498 contains 2 shift/reduce conflicts.
State 499 contains 2 shift/reduce conflicts.
State 501 contains 2 shift/reduce conflicts.
State 502 contains 2 shift/reduce conflicts.
State 503 contains 2 shift/reduce conflicts.
State 504 contains 2 shift/reduce conflicts.
State 505 contains 2 shift/reduce conflicts.
State 506 contains 2 shift/reduce conflicts.
State 509 contains 2 shift/reduce conflicts.
State 510 contains 2 shift/reduce conflicts.
State 512 contains 2 shift/reduce conflicts.
State 513 contains 2 shift/reduce conflicts.
State 536 contains 1 shift/reduce conflict.
State 558 contains 8 shift/reduce conflicts.
State 560 contains 2 shift/reduce conflicts.
State 580 contains 1 shift/reduce conflict.
State 614 contains 1 shift/reduce conflict.
State 615 contains 1 shift/reduce conflict.
State 616 contains 1 shift/reduce conflict.
State 633 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 634 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 638 contains 1 shift/reduce conflict.
State 667 contains 1 shift/reduce conflict.
State 668 contains 1 shift/reduce conflict.
State 669 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 714 contains 3 shift/reduce conflicts.
State 717 contains 10 shift/reduce conflicts.
State 834 contains 2 shift/reduce conflicts.
State 835 contains 2 shift/reduce conflicts.
State 850 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 851 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 863 contains 1 shift/reduce conflict.
State 864 contains 1 shift/reduce conflict.
State 869 contains 2 shift/reduce conflicts.
State 870 contains 2 shift/reduce conflicts.
State 872 contains 2 shift/reduce conflicts.
State 873 contains 2 shift/reduce conflicts.
State 979 contains 1 shift/reduce conflict.
State 980 contains 1 shift/reduce conflict.
State 982 contains 1 shift/reduce conflict.
State 983 contains 1 shift/reduce conflict.
State 984 contains 1 shift/reduce conflict.
State 985 contains 1 shift/reduce conflict.
State 1000 contains 2 shift/reduce conflicts.
State 1008 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1014 contains 1 shift/reduce conflict.
State 1021 contains 2 shift/reduce conflicts.
State 1024 contains 8 shift/reduce conflicts.
State 1091 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1094 contains 1 shift/reduce conflict.
State 1096 contains 1 shift/reduce conflict.
State 1169 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1170 contains 1 shift/reduce conflict.
State 1171 contains 1 shift/reduce conflict.
State 1260 contains 1 shift/reduce conflict.
State 1261 contains 1 shift/reduce conflict.
State 1265 contains 1 shift/reduce conflict.
State 1266 contains 1 shift/reduce conflict.
State 1297 contains 1 shift/reduce conflict.
State 1300 contains 1 shift/reduce conflict.
State 1302 contains 1 shift/reduce conflict.
State 1303 contains 1 shift/reduce conflict.
State 1328 contains 1 shift/reduce conflict.
=======
#107   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#109   inner_option_array_declaration :	;
#110   inner_option_array_declaration :	 COMMA error;


Conflict in state 85 between rule 13 and token CHOP resolved as reduce.
Conflict in state 85 between rule 13 and token IFF resolved as reduce.
Conflict in state 85 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 13 and token OR resolved as reduce.
Conflict in state 85 between rule 13 and token AND resolved as reduce.
Conflict in state 85 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 86 between rule 22 and token CHOP resolved as reduce.
Conflict in state 86 between rule 22 and token IFF resolved as reduce.
Conflict in state 86 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 22 and token OR resolved as reduce.
Conflict in state 86 between rule 22 and token AND resolved as reduce.
Conflict in state 86 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 21 and token CHOP resolved as reduce.
Conflict in state 109 between rule 21 and token IFF resolved as reduce.
Conflict in state 109 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 21 and token OR resolved as reduce.
Conflict in state 109 between rule 21 and token AND resolved as reduce.
Conflict in state 109 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 10 and token CHOP resolved as reduce.
Conflict in state 110 between rule 10 and token IFF resolved as reduce.
Conflict in state 110 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 10 and token OR resolved as reduce.
Conflict in state 110 between rule 10 and token AND resolved as reduce.
Conflict in state 110 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 9 and token CHOP resolved as reduce.
Conflict in state 111 between rule 9 and token IFF resolved as reduce.
Conflict in state 111 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 9 and token OR resolved as reduce.
Conflict in state 111 between rule 9 and token AND resolved as reduce.
Conflict in state 111 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 20 and token CHOP resolved as reduce.
Conflict in state 112 between rule 20 and token IFF resolved as reduce.
Conflict in state 112 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 20 and token OR resolved as reduce.
Conflict in state 112 between rule 20 and token AND resolved as reduce.
Conflict in state 112 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 12 and token CHOP resolved as reduce.
Conflict in state 113 between rule 12 and token IFF resolved as reduce.
Conflict in state 113 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 12 and token OR resolved as reduce.
Conflict in state 113 between rule 12 and token AND resolved as reduce.
Conflict in state 113 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 11 and token CHOP resolved as reduce.
Conflict in state 114 between rule 11 and token IFF resolved as reduce.
Conflict in state 114 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 11 and token OR resolved as reduce.
Conflict in state 114 between rule 11 and token AND resolved as reduce.
Conflict in state 114 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 232 between rule 208 and token IMPLY resolved as reduce.
Conflict in state 235 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 258 between rule 8 and token CHOP resolved as reduce.
Conflict in state 258 between rule 8 and token IFF resolved as shift.
Conflict in state 258 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 258 between rule 8 and token OR resolved as shift.
Conflict in state 258 between rule 8 and token AND resolved as shift.
Conflict in state 258 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 6 and token CHOP resolved as reduce.
Conflict in state 259 between rule 6 and token IFF resolved as reduce.
Conflict in state 259 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 6 and token OR resolved as shift.
Conflict in state 259 between rule 6 and token AND resolved as shift.
Conflict in state 259 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 7 and token CHOP resolved as reduce.
Conflict in state 260 between rule 7 and token IFF resolved as reduce.
Conflict in state 260 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 7 and token OR resolved as shift.
Conflict in state 260 between rule 7 and token AND resolved as shift.
Conflict in state 260 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 261 between rule 5 and token CHOP resolved as reduce.
Conflict in state 261 between rule 5 and token IFF resolved as reduce.
Conflict in state 261 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 261 between rule 5 and token OR resolved as reduce.
Conflict in state 261 between rule 5 and token AND resolved as shift.
Conflict in state 261 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 262 between rule 4 and token CHOP resolved as reduce.
Conflict in state 262 between rule 4 and token IFF resolved as reduce.
Conflict in state 262 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 262 between rule 4 and token OR resolved as reduce.
Conflict in state 262 between rule 4 and token AND resolved as reduce.
Conflict in state 262 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 269 between rule 237 and token OR resolved as reduce.
Conflict in state 269 between rule 237 and token AND resolved as reduce.
Conflict in state 328 between rule 332 and token OR resolved as reduce.
Conflict in state 328 between rule 332 and token AND resolved as reduce.
Conflict in state 379 between rule 32 and token CHOP resolved as reduce.
Conflict in state 379 between rule 32 and token OR resolved as shift.
Conflict in state 379 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 379 between rule 32 and token AND resolved as shift.
Conflict in state 380 between rule 31 and token CHOP resolved as reduce.
Conflict in state 380 between rule 31 and token OR resolved as reduce.
Conflict in state 380 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 31 and token AND resolved as shift.
Conflict in state 381 between rule 55 and token CHOP resolved as reduce.
Conflict in state 381 between rule 55 and token OR resolved as reduce.
Conflict in state 381 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 381 between rule 55 and token AND resolved as shift.
Conflict in state 382 between rule 30 and token CHOP resolved as reduce.
Conflict in state 382 between rule 30 and token OR resolved as reduce.
Conflict in state 382 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 382 between rule 30 and token AND resolved as reduce.
Conflict in state 447 between rule 239 and token OR resolved as reduce.
Conflict in state 447 between rule 239 and token AND resolved as shift.
Conflict in state 448 between rule 238 and token OR resolved as reduce.
Conflict in state 448 between rule 238 and token AND resolved as reduce.
Conflict in state 509 between rule 334 and token OR resolved as reduce.
Conflict in state 509 between rule 334 and token AND resolved as shift.
Conflict in state 510 between rule 333 and token OR resolved as reduce.
Conflict in state 510 between rule 333 and token AND resolved as reduce.
Conflict in state 658 between rule 192 and token CON resolved as reduce.
State 97 contains 2 shift/reduce conflicts.
State 98 contains 2 shift/reduce conflicts.
State 100 contains 14 shift/reduce conflicts.
State 104 contains 2 shift/reduce conflicts.
State 124 contains 2 shift/reduce conflicts.
State 156 contains 3 reduce/reduce conflicts.
State 158 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict.
State 162 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 164 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 165 contains 1 shift/reduce conflict.
State 193 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 229 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 232 contains 1 shift/reduce conflict.
State 235 contains 1 shift/reduce conflict.
State 267 contains 1 shift/reduce conflict.
State 270 contains 2 shift/reduce conflicts.
State 271 contains 2 shift/reduce conflicts.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 292 contains 1 shift/reduce conflict.
State 309 contains 1 shift/reduce conflict.
State 318 contains 1 shift/reduce conflict.
State 319 contains 1 shift/reduce conflict.
State 320 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 354 contains 1 shift/reduce conflict.
State 355 contains 1 shift/reduce conflict.
State 357 contains 1 shift/reduce conflict.
State 358 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 363 contains 1 shift/reduce conflict.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 402 contains 2 shift/reduce conflicts.
State 425 contains 1 shift/reduce conflict.
State 432 contains 8 shift/reduce conflicts.
State 434 contains 2 shift/reduce conflicts.
State 477 contains 1 shift/reduce conflict.
State 478 contains 1 shift/reduce conflict.
State 479 contains 1 shift/reduce conflict.
State 496 contains 1 shift/reduce conflict.
State 497 contains 1 shift/reduce conflict.
State 501 contains 1 shift/reduce conflict.
State 523 contains 1 shift/reduce conflict.
State 524 contains 1 shift/reduce conflict.
State 525 contains 1 shift/reduce conflict.
State 529 contains 1 shift/reduce conflict.
State 551 contains 1 shift/reduce conflict.
State 574 contains 3 shift/reduce conflicts.
State 577 contains 10 shift/reduce conflicts.
State 669 contains 2 shift/reduce conflicts.
State 670 contains 2 shift/reduce conflicts.
State 683 contains 1 shift/reduce conflict.
State 684 contains 1 shift/reduce conflict.
State 700 contains 1 shift/reduce conflict.
State 701 contains 1 shift/reduce conflict.
State 707 contains 2 shift/reduce conflicts.
State 708 contains 2 shift/reduce conflicts.
State 710 contains 2 shift/reduce conflicts.
State 711 contains 2 shift/reduce conflicts.
State 801 contains 1 shift/reduce conflict.
State 802 contains 1 shift/reduce conflict.
State 804 contains 1 shift/reduce conflict.
State 805 contains 1 shift/reduce conflict.
State 806 contains 1 shift/reduce conflict.
State 807 contains 1 shift/reduce conflict.
State 820 contains 2 shift/reduce conflicts.
State 829 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 835 contains 1 shift/reduce conflict.
State 842 contains 2 shift/reduce conflicts.
State 845 contains 8 shift/reduce conflicts.
State 905 contains 1 shift/reduce conflict.
State 907 contains 1 shift/reduce conflict.
State 908 contains 1 shift/reduce conflict.
State 910 contains 1 shift/reduce conflict.
State 983 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 984 contains 1 shift/reduce conflict.
State 985 contains 1 shift/reduce conflict.
State 1074 contains 1 shift/reduce conflict.
State 1075 contains 1 shift/reduce conflict.
State 1079 contains 1 shift/reduce conflict.
State 1080 contains 1 shift/reduce conflict.
State 1111 contains 1 shift/reduce conflict.
State 1114 contains 1 shift/reduce conflict.
State 1116 contains 1 shift/reduce conflict.
State 1117 contains 1 shift/reduce conflict.
State 1142 contains 1 shift/reduce conflict.
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
<<<<<<< HEAD
rule 61   statement -> struct_define_statement
rule 62   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 63   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 64   statement -> function_define
rule 65   statement -> function
rule 66   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 67   statement -> OPEN_PAR statement CLOSE_PAR
rule 68   option_struct_declaration -> sign_declaration
rule 69   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 70   empty_statement -> statement
rule 71   empty_statement ->		/* empty */
rule 72   function_define -> all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 75   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 76   function -> file_statement
rule 77   function -> String_Function
rule 78   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 79   struct_identifier -> STRUCT ID
rule 80   struct_identifier -> UNION ID
rule 81   sign_declaration -> SIGNED declaration
rule 82   sign_declaration -> UNSIGNED declaration
rule 83   sign_declaration -> declaration
rule 84   declaration -> type_define option_identifier_array_declaration
rule 85   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 86   declaration -> STRUCT ID option_identifier_array_declaration
rule 87   declaration -> UNION ID option_identifier_array_declaration
rule 88   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 89   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 90   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 91   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 93   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 94   type_define -> INTDECLARATION
rule 95   type_define -> FLOATDECLARATION
rule 96   type_define -> CHARDECLARATION
rule 97   type_define -> STRDECLARATION
rule 98   type_define -> VOIDDECLARATION
rule 99   type_define -> FILEDECLARATION
rule 100  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 107  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 108  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 109  inner_option_identifier_array_declaration -> COMMA error
rule 110  inner_option_identifier_array_declaration ->		/* empty */
rule 115  file_statement -> FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR
rule 116  file_statement -> FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR
rule 117  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 118  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 119  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 120  file_statement -> FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR
rule 121  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 122  ass_statement -> ass_left assign_operator ass_right
rule 123  ass_left -> identifier
rule 124  ass_left -> struct_member_exp
rule 125  ass_left -> array
rule 126  ass_left -> point_exp
rule 127  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 128  ass_left -> NEXT ass_left
rule 129  ass_left -> leftaddrshift
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 138  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  assign_operator -> ASS_P
rule 144  assign_operator -> ASS_N
rule 145  ass_right -> ari_exp
rule 146  ass_right -> array_exp
rule 147  ass_right -> strliteral
rule 148  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 149  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 150  ass_right -> rightaddrshift
rule 151  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 152  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 156  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 157  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 158  array -> OPEN_PAR array CLOSE_PAR
rule 159  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 160  option_ari_exp -> COMMA error
rule 161  option_ari_exp ->		/* empty */
rule 162  point_exp -> MUL identifier
rule 163  point_exp -> MUL point_exp
rule 164  point_exp -> MUL array
rule 165  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 166  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 167  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 168  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 169  ari_exp -> simple_ari_exp
rule 170  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 171  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 172  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 173  type_cast_alg_exp -> simple_ari_exp
rule 174  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 175  option_exp_else_statement -> ELSE ari_exp
rule 176  option_exp_else_statement ->		/* empty */
rule 177  simple_ari_exp -> member_in_exp
rule 178  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 179  member_in_exp -> intliteral
rule 180  member_in_exp -> SUB member_in_exp
rule 181  member_in_exp -> BNE member_in_exp
rule 182  member_in_exp -> POINTERNULL
rule 183  member_in_exp -> floatliteral
rule 184  member_in_exp -> identifier
rule 185  member_in_exp -> array
rule 186  member_in_exp -> point_exp
rule 187  member_in_exp -> function
rule 188  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 189  member_in_exp -> math_function
rule 190  member_in_exp -> charliteral
rule 191  member_in_exp -> address_exp
rule 192  member_in_exp -> type_cast
rule 193  member_in_exp -> struct_member_exp
rule 194  member_in_exp -> size_of
rule 195  bi_operator -> MUL
rule 196  bi_operator -> DIV
rule 197  bi_operator -> MOD
rule 198  bi_operator -> LST
rule 199  bi_operator -> RST
rule 200  bi_operator -> ADDRESS
rule 201  bi_operator -> INTER_OR
rule 202  bi_operator -> CON
rule 203  ari_operator -> ADD
rule 204  ari_operator -> SUB
rule 205  array_exp -> array_exp CON array_exp
rule 206  array_exp -> option_list_value
rule 207  array_exp -> option_struct_list_value
rule 208  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 209  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 210  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 211  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 212  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 213  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 214  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 215  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 216  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 217  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 218  inner_option_list_value ->		/* empty */
rule 219  inner_option_list_value -> COMMA error
rule 220  address_exp -> ADDRESS identifier
rule 221  address_exp -> ADDRESS array
rule 222  address_exp -> ADDRESS struct_member_exp
rule 223  address_exp -> ADDRESS address_exp
rule 224  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 225  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 227  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 228  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 229  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 230  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 231  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 232  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 240  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 241  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 242  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 243  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 244  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 245  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 246  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 247  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 248  casted_element -> type_cast_alg_exp
rule 249  casted_element -> MALLOC OPEN_PAR ari_exp CLOSE_PAR
rule 250  all_sizeof_type -> all_type_define
rule 251  all_sizeof_type -> INTDECLARATION MUL
rule 252  all_sizeof_type -> FLOATDECLARATION MUL
rule 253  all_sizeof_type -> CHARDECLARATION MUL
rule 254  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 255  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 256  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 257  all_sizeof_type -> STRUCT_TYPE MUL
rule 258  size_of -> SIZEOF OPEN_PAR ari_exp CLOSE_PAR
rule 259  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 260  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 261  size_of -> SIZEOF OPEN_PAR strliteral CLOSE_PAR
rule 262  String_Function -> String_Function_head
rule 263  String_Function -> String_Function_tail
rule 264  String_Function -> String_Function_cat
rule 265  String_Function -> String_Function_cpy
rule 266  String_Function -> String_Function_cmp
rule 267  String_Function -> String_Function_len
rule 268  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 269  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 270  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 271  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 272  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 273  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 274  str_func_parameter -> identifier
rule 275  str_func_parameter -> array
rule 276  str_func_parameter -> point_exp
rule 277  str_func_parameter -> strliteral
rule 278  str_func_parameter -> String_Function
rule 279  str_func_parameter -> struct_member_exp
rule 280  math_function -> ROUND ari_exp
rule 281  math_function -> CEIL ari_exp
rule 282  math_function -> FLOOR ari_exp
rule 283  math_function -> SIN ari_exp
rule 284  math_function -> COS ari_exp
rule 285  math_function -> TAN ari_exp
rule 286  math_function -> ASIN ari_exp
rule 287  math_function -> ACOS ari_exp
rule 288  math_function -> ATAN ari_exp
rule 289  math_function -> SINH ari_exp
rule 290  math_function -> COSH ari_exp
rule 291  math_function -> TANH ari_exp
rule 292  math_function -> EXP ari_exp
rule 293  math_function -> LOG ari_exp
rule 294  math_function -> LOG10 ari_exp
rule 295  math_function -> SQRT ari_exp
rule 296  math_function -> ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 297  math_function -> POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 298  math_function -> FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 299  math_function -> MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 300  math_function -> LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 301  math_function -> ABS ari_exp
rule 302  math_function -> FABS ari_exp
rule 303  math_function -> LABS ari_exp
rule 304  bool_exp -> prime_bool_exp
rule 305  bool_exp -> NEGATION bool_exp
rule 306  bool_exp -> bool_exp AND bool_exp
rule 307  bool_exp -> bool_exp OR bool_exp
rule 308  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 309  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 310  prime_bool_exp -> MY_TRUE
rule 311  prime_bool_exp -> MY_FALSE
rule 312  prime_bool_exp -> ari_exp
rule 313  prime_bool_exp -> ari_exp EQ strliteral
rule 314  prime_bool_exp -> ari_exp NE strliteral
rule 315  prime_bool_exp -> strliteral EQ ari_exp
rule 316  prime_bool_exp -> strliteral NE ari_exp
rule 317  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 318  prime_bool_exp -> ari_exp NE POINTERNULL
rule 319  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 320  prime_bool_exp -> POINTERNULL NE ari_exp
rule 321  prime_bool_exp -> ari_exp EQ charliteral
rule 322  prime_bool_exp -> ari_exp NE charliteral
rule 323  relation_operator -> GE
rule 324  relation_operator -> LE
rule 325  relation_operator -> NE
rule 326  relation_operator -> GT
rule 327  relation_operator -> LT
rule 328  relation_operator -> EQ
rule 329  sign_type_define -> UNSIGNED INTDECLARATION
rule 330  sign_type_define -> UNSIGNED CHARDECLARATION
rule 331  all_type_define -> sign_type_define
rule 332  all_type_define -> type_define
rule 333  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 334  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 335  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 336  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 337  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 338  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 339  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 340  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 341  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 342  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 343  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 344  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 345  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 346  option_function_parameter_list -> ID inner_option_define_identifier
rule 347  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 348  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 349  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 350  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 351  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 352  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 353  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 354  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 355  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 356  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 357  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 358  option_function_parameter_list ->		/* empty */
rule 359  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 360  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 361  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 362  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 363  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 364  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 365  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 366  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 367  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 368  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 369  inner_option_define_identifier ->		/* empty */
rule 370  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 371  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 372  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 373  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 374  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 375  inner_option_define_identifier -> COMMA error
rule 376  option_function_identifier -> ass_right inner_option_function_identifier
rule 377  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 378  option_function_identifier ->		/* empty */
rule 379  option_function_identifier -> ADDRESS error
rule 380  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 381  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 382  inner_option_function_identifier ->		/* empty */
rule 383  inner_option_function_identifier -> COMMA error
rule 384  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 385  statement_bpar -> error CLOSE_BPAR
rule 386  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 387  bool_par -> error CLOSE_PAR
rule 388  identifier -> ID
rule 389  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 390  strliteral -> STRLITERAL
rule 391  intliteral -> INTLITERAL
rule 392  charliteral -> CHARLITERAL
rule 393  floatliteral -> FLOATLITERAL
rule 394  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 395  option_frame_identifier ->		/* empty */
rule 396  option_frame_identifier -> COMMA error
rule 397  option_projection ->		/* empty */
rule 398  option_projection -> COMMA statement option_projection
rule 399  imply_pre -> prime_bool_exp
rule 400  imply_pre -> NEGATION imply_pre
rule 401  imply_pre -> imply_pre AND imply_pre
rule 402  imply_pre -> imply_pre OR imply_pre
rule 403  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 404  while_statement -> WHILE bool_par statement_bpar
rule 405  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 406  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 407  for_sta_init -> ass_statement
rule 408  for_sta_init -> declaration
rule 409  for_sta_init ->		/* empty */
rule 410  for_sta_condition -> bool_exp
rule 411  for_sta_condition ->		/* empty */
rule 412  for_sta_control -> ass_statement
rule 413  for_sta_control ->		/* empty */
rule 414  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 415  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 416  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 417  init_case_par -> BREAK case_par
rule 418  init_case_par -> case_par
rule 419  init_case_par ->		/* empty */
rule 420  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 421  option_else_statement -> ELSE statement_bpar
rule 422  option_else_statement ->		/* empty */
rule 423  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 424  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 425  option_output ->		/* empty */
rule 426  option_output -> COMMA ass_right option_output
rule 427  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 428  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 429  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 430  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 431  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 432  option_input ->		/* empty */
rule 433  option_input -> COMMA identifier option_input
rule 434  option_input -> COMMA array option_input
rule 435  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 436  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 437  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 438  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 439  struct_member_exp -> array DOT array option_struct_member_exp
rule 440  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 441  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 442  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 443  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 444  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 445  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 446  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 447  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 448  struct_member_exp -> identifier DOT function
rule 449  struct_member_exp -> identifier IMPLY function
rule 450  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 451  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 452  option_struct_member_exp ->		/* empty */
rule 453  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 454  option_struct_member_exp -> DOT array option_struct_member_exp
rule 455  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 456  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 457  option_struct_member_exp -> DOT function
rule 458  option_struct_member_exp -> IMPLY function
=======
rule 61   statement -> type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 62   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 63   statement -> struct_define_statement
rule 64   statement -> function
rule 65   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 66   statement -> OPEN_PAR statement CLOSE_PAR
rule 67   option_struct_declaration -> sign_declaration
rule 68   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 69   empty_statement -> statement
rule 70   empty_statement ->		/* empty */
rule 71   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 75   struct_identifier -> STRUCT ID
rule 76   struct_identifier -> UNION ID
rule 77   sign_declaration -> SIGNED declaration
rule 78   sign_declaration -> UNSIGNED declaration
rule 79   sign_declaration -> declaration
rule 80   declaration -> type_define option_identifier_array_declaration
rule 81   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 82   declaration -> STRUCT ID option_identifier_array_declaration
rule 83   declaration -> UNION ID option_identifier_array_declaration
rule 84   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 86   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 89   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 90   type_define -> INTDECLARATION
rule 91   type_define -> FLOATDECLARATION
rule 92   type_define -> CHARDECLARATION
rule 93   type_define -> STRDECLARATION
rule 94   type_define -> VOIDDECLARATION
rule 95   type_define -> FILEDECLARATION
rule 96   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 105  inner_option_identifier_array_declaration -> COMMA error
rule 106  inner_option_identifier_array_declaration ->		/* empty */
rule 111  ass_statement -> ass_left assign_operator ass_right
rule 112  ass_left -> identifier
rule 113  ass_left -> struct_member_exp
rule 114  ass_left -> array
rule 115  ass_left -> point_exp
rule 116  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 117  ass_left -> NEXT ass_left
rule 118  ass_left -> leftaddrshift
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  assign_operator -> ASS_P
rule 133  assign_operator -> ASS_N
rule 134  ass_right -> ari_exp
rule 135  ass_right -> array_exp
rule 136  ass_right -> strliteral
rule 137  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 138  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 139  ass_right -> rightaddrshift
rule 140  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 141  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR array CLOSE_PAR
rule 148  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 149  option_ari_exp -> COMMA error
rule 150  option_ari_exp ->		/* empty */
rule 151  point_exp -> MUL identifier
rule 152  point_exp -> MUL point_exp
rule 153  point_exp -> MUL array
rule 154  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 156  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 157  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 158  ari_exp -> simple_ari_exp
rule 159  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 160  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 161  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 162  type_cast_alg_exp -> simple_ari_exp
rule 163  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 164  option_exp_else_statement -> ELSE ari_exp
rule 165  option_exp_else_statement ->		/* empty */
rule 166  simple_ari_exp -> member_in_exp
rule 167  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 168  member_in_exp -> intliteral
rule 169  member_in_exp -> SUB member_in_exp
rule 170  member_in_exp -> BNE member_in_exp
rule 171  member_in_exp -> POINTERNULL
rule 172  member_in_exp -> floatliteral
rule 173  member_in_exp -> identifier
rule 174  member_in_exp -> array
rule 175  member_in_exp -> point_exp
rule 176  member_in_exp -> function
rule 177  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 178  member_in_exp -> charliteral
rule 179  member_in_exp -> address_exp
rule 180  member_in_exp -> type_cast
rule 181  member_in_exp -> struct_member_exp
rule 182  bi_operator -> MUL
rule 183  bi_operator -> DIV
rule 184  bi_operator -> MOD
rule 185  bi_operator -> LST
rule 186  bi_operator -> RST
rule 187  bi_operator -> ADDRESS
rule 188  bi_operator -> INTER_OR
rule 189  bi_operator -> CON
rule 190  ari_operator -> ADD
rule 191  ari_operator -> SUB
rule 192  array_exp -> array_exp CON array_exp
rule 193  array_exp -> option_list_value
rule 194  array_exp -> option_struct_list_value
rule 195  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 196  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 198  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 199  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 201  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 202  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 203  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 204  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 205  inner_option_list_value ->		/* empty */
rule 206  inner_option_list_value -> COMMA error
rule 207  address_exp -> ADDRESS identifier
rule 208  address_exp -> ADDRESS array
rule 209  address_exp -> ADDRESS struct_member_exp
rule 210  address_exp -> ADDRESS address_exp
rule 211  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 212  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 235  casted_element -> type_cast_alg_exp
rule 236  bool_exp -> prime_bool_exp
rule 237  bool_exp -> NEGATION bool_exp
rule 238  bool_exp -> bool_exp AND bool_exp
rule 239  bool_exp -> bool_exp OR bool_exp
rule 240  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 241  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 242  prime_bool_exp -> MY_TRUE
rule 243  prime_bool_exp -> MY_FALSE
rule 244  prime_bool_exp -> ari_exp
rule 245  prime_bool_exp -> ari_exp EQ strliteral
rule 246  prime_bool_exp -> ari_exp NE strliteral
rule 247  prime_bool_exp -> strliteral EQ ari_exp
rule 248  prime_bool_exp -> strliteral NE ari_exp
rule 249  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 250  prime_bool_exp -> ari_exp NE POINTERNULL
rule 251  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 252  prime_bool_exp -> POINTERNULL NE ari_exp
rule 253  prime_bool_exp -> ari_exp EQ charliteral
rule 254  prime_bool_exp -> ari_exp NE charliteral
rule 255  relation_operator -> GE
rule 256  relation_operator -> LE
rule 257  relation_operator -> NE
rule 258  relation_operator -> GT
rule 259  relation_operator -> LT
rule 260  relation_operator -> EQ
rule 261  sign_type_define -> UNSIGNED INTDECLARATION
rule 262  sign_type_define -> UNSIGNED CHARDECLARATION
rule 263  all_type_define -> sign_type_define
rule 264  all_type_define -> type_define
rule 265  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 271  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 289  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 290  option_function_parameter_list ->		/* empty */
rule 291  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 301  inner_option_define_identifier ->		/* empty */
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 306  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 307  inner_option_define_identifier -> COMMA error
rule 308  option_function_identifier -> ass_right inner_option_function_identifier
rule 309  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 310  option_function_identifier ->		/* empty */
rule 311  option_function_identifier -> ADDRESS error
rule 312  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 313  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 314  inner_option_function_identifier ->		/* empty */
rule 315  inner_option_function_identifier -> COMMA error
rule 316  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 317  statement_bpar -> error CLOSE_BPAR
rule 318  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 319  bool_par -> error CLOSE_PAR
rule 320  identifier -> ID
rule 321  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 322  strliteral -> STRLITERAL
rule 323  intliteral -> INTLITERAL
rule 324  charliteral -> CHARLITERAL
rule 325  floatliteral -> FLOATLITERAL
rule 326  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 327  option_frame_identifier ->		/* empty */
rule 328  option_frame_identifier -> COMMA error
rule 329  option_projection ->		/* empty */
rule 330  option_projection -> COMMA statement option_projection
rule 331  imply_pre -> prime_bool_exp
rule 332  imply_pre -> NEGATION imply_pre
rule 333  imply_pre -> imply_pre AND imply_pre
rule 334  imply_pre -> imply_pre OR imply_pre
rule 335  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 336  while_statement -> WHILE bool_par statement_bpar
rule 337  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 338  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 339  for_sta_init -> ass_statement
rule 340  for_sta_init -> declaration
rule 341  for_sta_init ->		/* empty */
rule 342  for_sta_condition -> bool_exp
rule 343  for_sta_condition ->		/* empty */
rule 344  for_sta_control -> ass_statement
rule 345  for_sta_control ->		/* empty */
rule 346  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 347  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 348  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 349  init_case_par -> BREAK case_par
rule 350  init_case_par -> case_par
rule 351  init_case_par ->		/* empty */
rule 352  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 353  option_else_statement -> ELSE statement_bpar
rule 354  option_else_statement ->		/* empty */
rule 355  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 356  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 357  option_output ->		/* empty */
rule 358  option_output -> COMMA ass_right option_output
rule 359  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 361  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 362  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 363  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 364  option_input ->		/* empty */
rule 365  option_input -> COMMA identifier option_input
rule 366  option_input -> COMMA array option_input
rule 367  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 368  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 369  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 370  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 371  struct_member_exp -> array DOT array option_struct_member_exp
rule 372  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 373  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 375  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 376  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 377  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 378  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 379  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 380  struct_member_exp -> identifier DOT function
rule 381  struct_member_exp -> identifier IMPLY function
rule 382  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 383  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 384  option_struct_member_exp ->		/* empty */
rule 385  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 386  option_struct_member_exp -> DOT array option_struct_member_exp
rule 387  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 388  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 389  option_struct_member_exp -> DOT function
rule 390  option_struct_member_exp -> IMPLY function
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

Terminals, with rules where they appear

$ (-1)
error (256) 105 110 149 206 307 311 315 317 319 328
SWITCH (258) 346
CASE (259) 347
BREAK (260) 349
DEFAULT (261) 348
RETURN (262) 36
IF (263) 161 352
ELSE (264) 164 353
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
<<<<<<< HEAD
POINTERNULL (270) 182 317 318 319 320
ARRAY (271) 103 104 338 342 349 350 353 364 365 366 367 372
STRUCT (272) 79 86 88 244 246 256
DOT (273) 435 436 437 438 439 440 448 453 454 457
UNION (274) 80 87 89
FOPEN (275) 115
FCLOSE (276) 121
FILEDECLARATION (277) 99
FGETS (278) 116
FPUTS (279) 118
FGETC (280) 117
FPUTC (281) 119 120
MORE (282) 19 48
DEFINE (283) 25 60
MY_TRUE (284) 15 310
MY_FALSE (285) 16 311
EXIST (286) 66
FRAME (287) 57
FOR (288) 405 406
WHILE (289) 404
DO (290) 405
TRUE (291) 52
FALSE (292) 53
REPEAT (293) 45
UNTIL (294) 45
DISPLAY (295) 423 424
SKIP (296) 14 46
THEN (297) 172 420
COMMA (298) 28 108 109 112 114 115 116 118 119 120 159 160 215 216
    217 219 270 271 272 296 297 298 299 300 352 359 360 361 362 363
    364 365 366 367 368 370 371 372 373 374 375 380 381 383 394 396
    398 406 426 433 434
COLON (299) 25 66 415 416
INTDECLARATION (300) 94 132 136 139 140 141 142 153 154 225 228 230
    232 233 238 239 251 254 329
STRDECLARATION (301) 97
POINTERDECLARATION (302)
CHARDECLARATION (303) 96 130 131 134 135 136 137 138 139 140 141 156
    157 227 229 231 235 236 241 242 253 255 330
VOIDDECLARATION (304) 98 237 243
FLOATDECLARATION (305) 95 133 155 226 234 240 252
LISTDECLARATION (306)
OPEN_PAR (307) 27 41 42 43 44 45 49 54 56 57 60 62 63 67 72 73 74 75
    90 91 92 93 115 116 117 118 119 120 121 127 130 131 132 133 134
    135 136 137 138 139 140 141 142 148 149 151 153 154 155 156 157
    158 165 166 167 168 188 208 224 225 226 227 228 229 230 231 232
    233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 249
    258 259 260 261 268 269 270 271 272 273 296 297 298 299 300 308
    357 368 377 381 386 389 403 406 414 415 416 423 424 427 428 429
    430 431 443 447 451
CLOSE_PAR (308) 27 41 42 43 44 45 49 54 56 57 60 62 63 67 72 73 74
    75 90 91 92 93 115 116 117 118 119 120 121 127 130 131 132 133
    134 135 136 137 138 139 140 141 142 148 149 151 153 154 155 156
    157 158 165 166 167 168 188 208 224 225 226 227 228 229 230 231
    232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247
    249 258 259 260 261 268 269 270 271 272 273 296 297 298 299 300
    308 357 368 377 381 386 387 389 403 406 414 415 416 423 424 427
    428 429 430 431 443 447 451
TIMES (309) 405
OPEN_BPAR (310) 23 45 58 59 60 66 72 78 212 213 214 384 414
CLOSE_BPAR (311) 23 45 58 59 60 66 72 78 212 213 214 384 385 414
OPEN_MPAR (312) 56 92 93 101 105 106 111 112 130 131 132 133 134 135
    136 137 138 139 140 141 142 152 153 154 155 156 157 165 209 210
    211 351 352 353 370 371 372
CLOSE_MPAR (313) 56 92 93 101 105 106 111 112 130 131 132 133 134 135
    136 137 138 139 140 141 142 152 153 154 155 156 157 165 209 210
    211 351 352 353 370 371 372
FUNCTION (314)
OVER (315)
CYLINDER (316)
OVEREP (317)
INTER_OR (318) 201
NON_DETERMINED (319)
SEND (320)
RECEIVE (321)
PROCESS (322)
CHANNEL (323)
PUT (324)
GET (325)
ERROR_TOKEN (326)
STRFUNCHEAD (327) 268
STRFUNCTAIL (328) 269
STRFUNCCAT (329) 270
STRFUNCCMP (330) 271
STRFUNCCPY (331) 272
STRFUNCLEN (332) 273
SIZEOF (333) 258 259 260 261
SYSTEM (334) 63
EXTERN (335) 74
CEIL (336) 281
FLOOR (337) 282
ROUND (338) 280
SIN (339) 283
COS (340) 284
TAN (341) 285
ASIN (342) 286
ACOS (343) 287
ATAN (344) 288
SINH (345) 289
COSH (346) 290
TANH (347) 291
EXP (348) 292
LOG (349) 293
LOG10 (350) 294
SQRT (351) 295
ATAN2 (352) 296
POW (353) 297
ABS (354) 301
FABS (355) 302
LABS (356) 303
FMOD (357) 298
MODF (358) 299
LDEXP (359) 300
FREXP (360)
UNSIGNED (361) 82 131 135 137 138 139 141 154 157 230 231 233 236 239
    242 254 255 329 330
SIGNED (362) 81 228 229
MALLOC (363) 249
FREE (364) 62
CHOP (365) 8 32
IMPLY (366) 56 441 442 443 444 445 446 447 449 450 455 456 458
IFF (367) 6
PROPIMPLY (368) 7
OR (369) 5 31 307 402
PARALLEL (370) 55
AND (371) 4 30 57 69 306 401
ASS_P (372) 60 93 102 103 104 105 106 143
ASS_N (373) 144
CON (374) 202 205
ADDRESS (375) 200 220 221 222 223 379
NE (376) 314 316 318 320 322 325
EQ (377) 313 315 317 319 321 328
GE (378) 323
LE (379) 324
GT (380) 326
LT (381) 327
LST (382) 198
RST (383) 199
ADD (384) 203
SUB (385) 180 204
MUL (386) 90 91 92 93 107 130 131 132 133 134 135 136 137 138 139 140
    141 142 151 153 154 155 156 157 162 163 164 166 167 195 232 233
    234 235 236 237 238 239 240 241 242 243 244 245 246 247 251 252
    253 254 255 256 257 336 337 340 341 344 345 347 348 350 354 355
    356 357 363 367 368 373 374
DIV (387) 196
MOD (388) 197
BNE (389) 181
CHOPSTAR (390) 26
NEXT (391) 13 41 128
NEGATION (392) 22 305 400
LENGTH (393) 17 49
REQUEST (394) 427 428 429 430 431
FINAL (395) 21 54
KEEP (396) 10 42
ALWAYS (397) 9 43
HALT (398) 20
W_NEXT (399) 12
PREFIX (400)
SOMETIMES (401) 11
ID (402) 24 25 36 60 72 73 74 79 80 86 87 92 93 101 103 104 105 106
    111 112 152 153 154 155 156 157 339 340 341 342 346 347 348 361
    364 377 381 388
STRLITERAL (403) 390
STRUCT_TYPE (404) 85 88 89 244 245 246 247 256 257 260 335 336 337
    338 343 344 345 362 363 365
INTLITERAL (405) 130 131 132 133 134 135 136 137 138 139 140 141 142
    391
FLOATLITERAL (406) 393
CHARLITERAL (407) 392
=======
POINTERNULL (270) 171 249 250 251 252
ARRAY (271) 99 100 270 274 281 282 285 296 297 298 299 304
STRUCT (272) 75 82 84 231 233
DOT (273) 367 368 369 370 371 372 380 385 386 389
UNION (274) 76 83 85
FILEDECLARATION (275) 95
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 242
MY_FALSE (279) 16 243
EXIST (280) 65
FRAME (281) 57
FOR (282) 337 338
WHILE (283) 336
DO (284) 337
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 355 356
SKIP (290) 14 46
THEN (291) 161 352
COMMA (292) 28 104 105 108 110 148 149 202 203 204 206 284 291 292
    293 294 295 296 297 298 299 300 302 303 304 305 306 307 312 313
    315 326 328 330 338 358 365 366
COLON (293) 25 65 347 348
INTDECLARATION (294) 90 121 125 128 129 130 131 142 143 212 215 217
    219 220 225 226 261
STRDECLARATION (295) 93
POINTERDECLARATION (296)
CHARDECLARATION (297) 92 119 120 123 124 125 126 127 128 129 130 145
    146 214 216 218 222 223 228 229 262
VOIDDECLARATION (298) 94 224 230
FLOATDECLARATION (299) 91 122 144 213 221 227
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 61 62 66 71 72 73 86
    87 88 89 116 119 120 121 122 123 124 125 126 127 128 129 130 131
    137 138 140 142 143 144 145 146 147 154 155 156 157 177 195 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 240 289 300 309 313 318 321 335 338
    346 347 348 355 356 359 360 361 362 363 375 379 383
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 61 62 66 71 72 73
    86 87 88 89 116 119 120 121 122 123 124 125 126 127 128 129 130
    131 137 138 140 142 143 144 145 146 147 154 155 156 157 177 195
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 234 240 289 300 309 313 318 319 321
    335 338 346 347 348 355 356 359 360 361 362 363 375 379 383
TIMES (303) 337
OPEN_BPAR (304) 23 45 58 59 60 61 62 65 74 199 200 201 316 346
CLOSE_BPAR (305) 23 45 58 59 60 61 62 65 74 199 200 201 316 317 346
OPEN_MPAR (306) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 284 285 302 303 304
CLOSE_MPAR (307) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 284 285 302 303 304
FUNCTION (308)
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 188
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316) 62
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 72
UNSIGNED (328) 78 120 124 126 127 128 130 143 146 217 218 220 223 226
    229 261 262
SIGNED (329) 77 215 216
CHOP (330) 8 32
IMPLY (331) 56 373 374 375 376 377 378 379 381 382 387 388 390
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 239 334
PARALLEL (335) 55
AND (336) 4 30 57 68 238 333
ASS_P (337) 60 62 89 98 99 100 101 102 132
ASS_N (338) 133
CON (339) 189 192
ADDRESS (340) 187 207 208 209 210 311
NE (341) 246 248 250 252 254 257
EQ (342) 245 247 249 251 253 260
GE (343) 255
LE (344) 256
GT (345) 258
LT (346) 259
LST (347) 185
RST (348) 186
ADD (349) 190
SUB (350) 169 191
MUL (351) 86 87 88 89 103 119 120 121 122 123 124 125 126 127 128 129
    130 131 140 142 143 144 145 146 151 152 153 155 156 182 219 220
    221 222 223 224 225 226 227 228 229 230 231 232 233 234 268 269
    272 273 276 277 279 280 282 286 287 288 289 295 299 300 305 306
DIV (352) 183
MOD (353) 184
BNE (354) 170
CHOPSTAR (355) 26
NEXT (356) 13 41 117
NEGATION (357) 22 237 332
LENGTH (358) 17 49
REQUEST (359) 359 360 361 362 363
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 61 62 71 72 75 76 82 83 88 89 97 99 100 101 102
    107 108 141 142 143 144 145 146 271 272 273 274 278 279 280 293
    296 309 313 320
STRLITERAL (368) 322
STRUCT_TYPE (369) 81 84 85 231 232 233 234 267 268 269 270 275 276
    277 294 295 297
INTLITERAL (370) 119 120 121 122 123 124 125 126 127 128 129 130 131
    323
FLOATLITERAL (371) 325
CHARLITERAL (372) 324
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
<<<<<<< HEAD
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 66 67 70 72
    384 398 415 416
option_struct_declaration (158)
    on left: 68 69, on right: 69 78
empty_statement (159)
    on left: 70 71, on right: 60
function_define (160)
    on left: 72, on right: 64
function (161)
    on left: 73 74 75 76 77, on right: 65 148 187 448 449 457 458
struct_define_statement (162)
    on left: 78, on right: 61
struct_identifier (163)
    on left: 79 80, on right: 78
sign_declaration (164)
    on left: 81 82 83, on right: 34 68 69
declaration (165)
    on left: 84 85 86 87 88 89 90 91 92 93, on right: 81 82 83 408
type_define (166)
    on left: 94 95 96 97 98 99, on right: 84 148 332
option_identifier_array_declaration (167)
    on left: 100 101 102 103 104 105 106 107, on right: 84 85 86 87
    88 89 107 108
inner_option_identifier_array_declaration (168)
    on left: 108 109 110, on right: 100 101 102 103 104 105 106
file_statement (169)
    on left: 115 116 117 118 119 120 121, on right: 76
ass_statement (170)
    on left: 122, on right: 33 407 412
ass_left (171)
    on left: 123 124 125 126 127 128 129, on right: 115 122 127 128
leftaddrshift (172)
    on left: 130 131 132 133 134 135 136 137 138 139 140 141 142,
    on right: 129 151
assign_operator (173)
    on left: 143 144, on right: 122
ass_right (174)
    on left: 145 146 147 148 149 150, on right: 102 122 149 376 380
    423 424 426
rightaddrshift (175)
    on left: 151, on right: 150
array (176)
    on left: 152 153 154 155 156 157 158, on right: 75 120 125 158
    164 185 221 275 429 430 434 436 438 439 440 442 445 446 447 450
    454 456
option_ari_exp (177)
    on left: 159 160 161, on right: 92 93 101 105 106 111 112 130 131
    132 133 134 135 136 137 138 139 140 141 142 152 153 154 155 156
    157 159 165
point_exp (178)
    on left: 162 163 164 165 166 167 168, on right: 126 163 165 168
    186 276 437 440 444 450
ari_exp (179)
    on left: 169 170 171 172, on right: 17 49 92 93 101 105 106 111
    112 130 131 132 133 134 135 136 137 138 139 140 141 142 145 152
    153 154 155 156 157 159 165 166 167 170 171 172 175 188 209 212
    215 249 258 280 281 282 283 284 285 286 287 288 289 290 291 292
    293 294 295 296 297 298 299 300 301 302 303 309 312 313 314 315
    316 317 318 319 320 321 322 351 352 353 370 371 372 405
type_cast_alg_exp (180)
    on left: 173 174, on right: 225 226 227 228 229 230 231 248
option_exp_else_statement (181)
    on left: 175 176, on right: 172
simple_ari_exp (182)
    on left: 177 178, on right: 169 170 171 173 174 178
member_in_exp (183)
    on left: 179 180 181 182 183 184 185 186 187 188 189 190 191 192
    193 194, on right: 177 178 180 181 414 415
bi_operator (184)
    on left: 195 196 197 198 199 200 201 202, on right: 178
ari_operator (185)
    on left: 203 204, on right: 171 174
array_exp (186)
    on left: 205 206 207 208, on right: 93 103 105 146 205 208 211
    214 217
option_list_value (187)
    on left: 209 210 211, on right: 206
option_struct_list_value (188)
    on left: 212 213 214, on right: 207
inner_option_list_value (189)
    on left: 215 216 217 218 219, on right: 209 210 211 212 213 214
    215 216 217
address_exp (190)
    on left: 220 221 222 223 224, on right: 191 223 224 443 447
type_cast (191)
    on left: 225 226 227 228 229 230 231 232 233 234 235 236 237 238
    239 240 241 242 243 244 245 246 247, on right: 192
casted_element (192)
    on left: 248 249, on right: 232 233 234 235 236 237 238 239 240
    241 242 243 244 245 246 247
all_sizeof_type (193)
    on left: 250 251 252 253 254 255 256 257, on right: 259
size_of (194)
    on left: 258 259 260 261, on right: 194
String_Function (195)
    on left: 262 263 264 265 266 267, on right: 77 278
String_Function_head (196)
    on left: 268, on right: 262
String_Function_tail (197)
    on left: 269, on right: 263
String_Function_cat (198)
    on left: 270, on right: 264
String_Function_cmp (199)
    on left: 271, on right: 266
String_Function_cpy (200)
    on left: 272, on right: 265
String_Function_len (201)
    on left: 273, on right: 267
str_func_parameter (202)
    on left: 274 275 276 277 278 279, on right: 63 268 269 270 271
    272 273
math_function (203)
    on left: 280 281 282 283 284 285 286 287 288 289 290 291 292 293
    294 295 296 297 298 299 300 301 302 303, on right: 189
bool_exp (204)
    on left: 304 305 306 307 308, on right: 44 45 172 305 306 307 308
    386 410 420
prime_bool_exp (205)
    on left: 309 310 311 312 313 314 315 316 317 318 319 320 321 322
   , on right: 25 304 399
relation_operator (206)
    on left: 323 324 325 326 327 328, on right: 170 309
sign_type_define (207)
    on left: 329 330, on right: 331
all_type_define (208)
    on left: 331 332, on right: 72 166 250 333 334 349 350 351 352
    353 354 355 356 359 360 366 367 370 371 372 373 374
option_function_parameter_list (209)
    on left: 333 334 335 336 337 338 339 340 341 342 343 344 345 346
    347 348 349 350 351 352 353 354 355 356 357 358,
    on right: 60 72 90 91 92 93 148 357 368
inner_option_define_identifier (210)
    on left: 359 360 361 362 363 364 365 366 367 368 369 370 371 372
    373 374 375, on right: 66 333 334 335 336 337 338 339 340 341 342
    343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 359
    360 361 362 363 364 365 366 367 368 370 371 372 373 374
option_function_identifier (211)
    on left: 376 377 378 379, on right: 73 74 75 377 381
inner_option_function_identifier (212)
    on left: 380 381 382 383, on right: 376 377 380 381
statement_bpar (213)
    on left: 384 385, on right: 58 59 404 405 406 420 421
bool_par (214)
    on left: 386 387, on right: 404
identifier (215)
    on left: 388 389, on right: 57 62 66 90 91 100 102 116 117 118
    119 120 121 123 162 184 220 274 333 335 336 337 338 339 340 341
    342 349 350 351 352 353 354 356 357 359 361 362 363 364 365 366
    367 368 370 371 372 373 389 394 427 428 433 435 436 437 438 441
    442 443 444 445 448 449 453 455
strliteral (216)
    on left: 390, on right: 104 106 115 147 148 210 213 216 261 277
    313 314 315 316
intliteral (217)
    on left: 391, on right: 116 179
charliteral (218)
    on left: 392, on right: 190 321 322
floatliteral (219)
    on left: 393, on right: 183
option_frame_identifier (220)
    on left: 394 395 396, on right: 57 394
option_projection (221)
    on left: 397 398, on right: 58 398
imply_pre (222)
    on left: 399 400 401 402 403, on right: 56 400 401 402 403
while_statement (223)
    on left: 404, on right: 38
for_statement (224)
    on left: 405, on right: 39
extend_for_statement (225)
    on left: 406, on right: 40
for_sta_init (226)
    on left: 407 408 409, on right: 406
for_sta_condition (227)
    on left: 410 411, on right: 406
for_sta_control (228)
    on left: 412 413, on right: 406
switch_statement (229)
    on left: 414, on right: 35
case_par (230)
    on left: 415 416, on right: 414 417 418
init_case_par (231)
    on left: 417 418 419, on right: 415
if_statement (232)
    on left: 420, on right: 37
option_else_statement (233)
    on left: 421 422, on right: 420
output_statement (234)
    on left: 423 424, on right: 51
option_output (235)
    on left: 425 426, on right: 424 426
input_statement (236)
    on left: 427 428 429 430 431, on right: 50
option_input (237)
    on left: 432 433 434, on right: 428 430 433 434
struct_member_exp (238)
    on left: 435 436 437 438 439 440 441 442 443 444 445 446 447 448
    449 450 451, on right: 124 193 222 279 431 451
option_struct_member_exp (239)
    on left: 452 453 454 455 456 457 458, on right: 435 436 437 438
    439 440 441 442 443 444 445 446 447 450 453 454 455 456
=======
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 61 65 66 69
    316 330 347 348
option_struct_declaration (123)
    on left: 67 68, on right: 68 74
empty_statement (124)
    on left: 69 70, on right: 60 62
function (125)
    on left: 71 72 73, on right: 64 137 176 380 381 389 390
struct_define_statement (126)
    on left: 74, on right: 63
struct_identifier (127)
    on left: 75 76, on right: 74
sign_declaration (128)
    on left: 77 78 79, on right: 34 67 68
declaration (129)
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 77 78 79 340
type_define (130)
    on left: 90 91 92 93 94 95, on right: 61 80 137 264
option_identifier_array_declaration (131)
    on left: 96 97 98 99 100 101 102 103, on right: 80 81 82 83 84
    85 103 104
inner_option_identifier_array_declaration (132)
    on left: 104 105 106, on right: 96 97 98 99 100 101 102
ass_statement (133)
    on left: 111, on right: 33 339 344
ass_left (134)
    on left: 112 113 114 115 116 117 118, on right: 111 116 117
leftaddrshift (135)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131,
    on right: 118 140
assign_operator (136)
    on left: 132 133, on right: 111
ass_right (137)
    on left: 134 135 136 137 138 139, on right: 98 111 138 308 312
    355 356 358
rightaddrshift (138)
    on left: 140, on right: 139
array (139)
    on left: 141 142 143 144 145 146 147, on right: 73 114 147 153
    174 208 361 362 366 368 370 371 372 374 377 378 379 382 386 388
option_ari_exp (140)
    on left: 148 149 150, on right: 88 89 97 101 102 107 108 119 120
    121 122 123 124 125 126 127 128 129 130 131 141 142 143 144 145
    146 148 154
point_exp (141)
    on left: 151 152 153 154 155 156 157, on right: 115 152 154 157
    175 369 372 376 382
ari_exp (142)
    on left: 158 159 160 161, on right: 17 49 88 89 97 101 102 107
    108 119 120 121 122 123 124 125 126 127 128 129 130 131 134 141
    142 143 144 145 146 148 154 155 156 159 160 161 164 177 196 199
    202 241 244 245 246 247 248 249 250 251 252 253 254 283 284 285
    302 303 304 337
type_cast_alg_exp (143)
    on left: 162 163, on right: 212 213 214 215 216 217 218 235
option_exp_else_statement (144)
    on left: 164 165, on right: 161
simple_ari_exp (145)
    on left: 166 167, on right: 158 159 160 162 163 167
member_in_exp (146)
    on left: 168 169 170 171 172 173 174 175 176 177 178 179 180 181
   , on right: 166 167 169 170 346 347
bi_operator (147)
    on left: 182 183 184 185 186 187 188 189, on right: 167
ari_operator (148)
    on left: 190 191, on right: 160 163
array_exp (149)
    on left: 192 193 194 195, on right: 89 99 101 135 192 195 198 201
    204
option_list_value (150)
    on left: 196 197 198, on right: 193
option_struct_list_value (151)
    on left: 199 200 201, on right: 194
inner_option_list_value (152)
    on left: 202 203 204 205 206, on right: 196 197 198 199 200 201
    202 203 204
address_exp (153)
    on left: 207 208 209 210 211, on right: 179 210 211 375 379
type_cast (154)
    on left: 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 233 234, on right: 180
casted_element (155)
    on left: 235, on right: 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234
bool_exp (156)
    on left: 236 237 238 239 240, on right: 44 45 161 237 238 239 240
    318 342 352
prime_bool_exp (157)
    on left: 241 242 243 244 245 246 247 248 249 250 251 252 253 254
   , on right: 25 236 331
relation_operator (158)
    on left: 255 256 257 258 259 260, on right: 159 241
sign_type_define (159)
    on left: 261 262, on right: 263
all_type_define (160)
    on left: 263 264, on right: 155 265 266 281 282 283 284 285 286
    287 288 291 292 298 299 302 303 304 305 306
option_function_parameter_list (161)
    on left: 265 266 267 268 269 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 287 288 289 290,
    on right: 60 61 62 86 87 88 89 137 289 300
inner_option_define_identifier (162)
    on left: 291 292 293 294 295 296 297 298 299 300 301 302 303 304
    305 306 307, on right: 65 265 266 267 268 269 270 271 272 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 291
    292 293 294 295 296 297 298 299 300 302 303 304 305 306
option_function_identifier (163)
    on left: 308 309 310 311, on right: 71 72 73 309 313
inner_option_function_identifier (164)
    on left: 312 313 314 315, on right: 308 309 312 313
statement_bpar (165)
    on left: 316 317, on right: 58 59 336 337 338 352 353
bool_par (166)
    on left: 318 319, on right: 336
identifier (167)
    on left: 320 321, on right: 57 65 86 87 96 98 112 151 173 207 265
    267 268 269 270 271 272 273 274 281 282 283 284 285 286 288 289
    291 293 294 295 296 297 298 299 300 302 303 304 305 321 326 359
    360 365 367 368 369 370 373 374 375 376 377 380 381 385 387
strliteral (168)
    on left: 322, on right: 100 102 136 137 197 200 203 245 246 247
    248
intliteral (169)
    on left: 323, on right: 168
charliteral (170)
    on left: 324, on right: 178 253 254
floatliteral (171)
    on left: 325, on right: 172
option_frame_identifier (172)
    on left: 326 327 328, on right: 57 326
option_projection (173)
    on left: 329 330, on right: 58 330
imply_pre (174)
    on left: 331 332 333 334 335, on right: 56 332 333 334 335
while_statement (175)
    on left: 336, on right: 38
for_statement (176)
    on left: 337, on right: 39
extend_for_statement (177)
    on left: 338, on right: 40
for_sta_init (178)
    on left: 339 340 341, on right: 338
for_sta_condition (179)
    on left: 342 343, on right: 338
for_sta_control (180)
    on left: 344 345, on right: 338
switch_statement (181)
    on left: 346, on right: 35
case_par (182)
    on left: 347 348, on right: 346 349 350
init_case_par (183)
    on left: 349 350 351, on right: 347
if_statement (184)
    on left: 352, on right: 37
option_else_statement (185)
    on left: 353 354, on right: 352
output_statement (186)
    on left: 355 356, on right: 51
option_output (187)
    on left: 357 358, on right: 356 358
input_statement (188)
    on left: 359 360 361 362 363, on right: 50
option_input (189)
    on left: 364 365 366, on right: 360 362 365 366
struct_member_exp (190)
    on left: 367 368 369 370 371 372 373 374 375 376 377 378 379 380
    381 382 383, on right: 113 181 209 363 383
option_struct_member_exp (191)
    on left: 384 385 386 387 388 389 390, on right: 367 368 369 370
    371 372 373 374 375 376 377 378 379 382 385 386 387 388
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

<<<<<<< HEAD
    program	go to state 1378
=======
    program	go to state 1192
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
<<<<<<< HEAD
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 74
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

<<<<<<< HEAD
    ID  	shift, and go to state 106
=======
    ID  	shift, and go to state 82
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 107
=======
    complexProposition	go to state 83
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 108
=======
    complexProposition	go to state 84
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 109
=======
    complexProposition	go to state 85
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 110
=======
    complexProposition	go to state 86
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 148
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 99
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 160
=======
    complexProposition	go to state 109
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 161
=======
    complexProposition	go to state 110
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 162
=======
    complexProposition	go to state 111
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 163
=======
    complexProposition	go to state 112
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 164
=======
    complexProposition	go to state 113
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 165
=======
    complexProposition	go to state 114
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    PEND	shift, and go to state 166
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
    PEND	shift, and go to state 115
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 173
=======
    OPEN_PAR	shift, and go to state 122
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 23

    statement  ->  RETURN . ID   (rule 36)

<<<<<<< HEAD
    ID  	shift, and go to state 174
=======
    ID  	shift, and go to state 123
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 24

<<<<<<< HEAD
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 420)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 182
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 352)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 131
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 185
=======
    OPEN_PAR	shift, and go to state 134
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 27

    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

<<<<<<< HEAD
    ID  	shift, and go to state 186
    STRUCT_TYPE	shift, and go to state 187
=======
    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 136
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 28

    struct_identifier  ->  UNION . ID   (rule 76)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

<<<<<<< HEAD
    ID  	shift, and go to state 188
    STRUCT_TYPE	shift, and go to state 189
=======
    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 138
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 29

    type_define  ->  FILEDECLARATION .   (rule 95)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 190
=======
    $default	reduce using rule 95 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 30

    statement  ->  MORE .   (rule 48)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 191
=======
    $default	reduce using rule 48 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 139



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 65)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 192
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 142
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 193
=======
    OPEN_PAR	shift, and go to state 143
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 34

<<<<<<< HEAD
    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 194
=======
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 337)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 144
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 145
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 35

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 336)

    error	shift, and go to state 146
    OPEN_PAR	shift, and go to state 147

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 195
=======
    bool_par	go to state 148
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

<<<<<<< HEAD
    ID  	shift, and go to state 196
=======
    $default	reduce using rule 53 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 38

<<<<<<< HEAD
    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 199
=======
    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 149
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 39

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 355)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 356)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 200
=======
    OPEN_PAR	shift, and go to state 150
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 40

<<<<<<< HEAD
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 405)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 201
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 202
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 41

<<<<<<< HEAD
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 404)

    error	shift, and go to state 203
    OPEN_PAR	shift, and go to state 204

    bool_par	go to state 205
=======
    type_define  ->  INTDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 42

    type_define  ->  STRDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 43

    type_define  ->  CHARDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  VOIDDECLARATION .   (rule 94)

<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 206
=======
    $default	reduce using rule 94 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 45

    type_define  ->  FLOATDECLARATION .   (rule 91)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 207
=======
    $default	reduce using rule 91 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 66)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 160
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 165
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 48

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    ID  	shift, and go to state 166



state 49

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    ID  	shift, and go to state 167



state 50

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 172



state 51

    sign_declaration  ->  SIGNED . declaration   (rule 77)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 173
    type_define	go to state 172



state 52

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 208
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 209
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 211
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    statement	go to state 212
    function_define	go to state 75
    function	go to state 213
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 217
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 219
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 220
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 221
=======
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 178
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 53

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 117)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 222
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======
    OPEN_PAR	shift, and go to state 179
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 181
    leftaddrshift	go to state 70
    array	go to state 182
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 54

<<<<<<< HEAD
    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 223
=======
    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 183
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 55

<<<<<<< HEAD
    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 224
=======
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 362)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 363)

    OPEN_PAR	shift, and go to state 184
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 56

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 225
=======
    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 185
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 57

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 226
=======
    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 186
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 58

<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 227
=======
    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 187
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 59

<<<<<<< HEAD
    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 273)

    OPEN_PAR	shift, and go to state 228
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 60

<<<<<<< HEAD
    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 229
=======
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 192
    identifier	go to state 193
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 61

<<<<<<< HEAD
    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)

    ID  	shift, and go to state 230
=======
    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    $default	reduce using rule 1 (program)



state 62

    statement  ->  function .   (rule 64)

    $default	reduce using rule 64 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 62

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED . declaration   (rule 82)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 233
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 234
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237
=======
    statement  ->  struct_define_statement .   (rule 63)

    $default	reduce using rule 63 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 63

<<<<<<< HEAD
    sign_declaration  ->  SIGNED . declaration   (rule 81)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 238
    type_define	go to state 237
=======
    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 198
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 64

<<<<<<< HEAD
    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 62)

    OPEN_PAR	shift, and go to state 239
=======
    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 65

    sign_declaration  ->  declaration .   (rule 79)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 240
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 244
=======
    $default	reduce using rule 79 (sign_declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 66

    statement  ->  type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)
    declaration  ->  type_define . option_identifier_array_declaration   (rule 80)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 245
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 247
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    struct_member_exp	go to state 105
=======
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 199

    option_identifier_array_declaration	go to state 200
    identifier	go to state 193
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 67

    statement  ->  ass_statement .   (rule 33)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 249
=======
    $default	reduce using rule 33 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 68

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 250
=======
    ASS_P	shift, and go to state 201
    ASS_N	shift, and go to state 202

    assign_operator	go to state 203
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 69

    ass_left  ->  leftaddrshift .   (rule 118)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 251
=======
    $default	reduce using rule 118 (ass_left)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 70

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 206

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 252
=======
    $default	reduce using rule 114 (ass_left)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 71

    ass_left  ->  point_exp .   (rule 115)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 253
=======
    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    $default	reduce using rule 115 (ass_left)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 72

    ass_left  ->  identifier .   (rule 112)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    OPEN_MPAR	shift, and go to state 255
=======
    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 112 (ass_left)



state 73

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 258
    identifier	go to state 259
=======
    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 74

<<<<<<< HEAD
    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
    statement  ->  for_statement .   (rule 39)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 39 (statement)



state 75

    statement  ->  function_define .   (rule 64)

    $default	reduce using rule 64 (statement)



state 76

<<<<<<< HEAD
    statement  ->  function .   (rule 65)

    $default	reduce using rule 65 (statement)
=======
    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 77

<<<<<<< HEAD
    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)
=======
    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 78

    statement  ->  if_statement .   (rule 37)

<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 264
=======
    $default	reduce using rule 37 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 79

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 80

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 81

<<<<<<< HEAD
    declaration  ->  type_define . option_identifier_array_declaration   (rule 84)
    all_type_define  ->  type_define .   (rule 332)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    ID  	[reduce using rule 332 (all_type_define)]
    $default	reduce using rule 332 (all_type_define)

    option_identifier_array_declaration	go to state 265
    identifier	go to state 259
=======
    ass_left  ->  struct_member_exp .   (rule 113)

    $default	reduce using rule 113 (ass_left)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 82

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 211



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 212
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 213
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

<<<<<<< HEAD
    ASS_P	shift, and go to state 266
    ASS_N	shift, and go to state 267

    assign_operator	go to state 268
=======
    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 214
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 86

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    ass_left  ->  array .   (rule 125)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 271
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



<<<<<<< HEAD
    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273
=======
state 87
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 215
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 88

    member_in_exp  ->  POINTERNULL .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)



state 89

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 90

    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)

    OPEN_PAR	shift, and go to state 231
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 232
    point_exp	go to state 233
    address_exp	go to state 234
    identifier	go to state 235
    struct_member_exp	go to state 236



state 91

    member_in_exp  ->  SUB . member_in_exp   (rule 169)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 237
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 92

    member_in_exp  ->  BNE . member_in_exp   (rule 170)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 238
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 93

    intliteral  ->  INTLITERAL .   (rule 323)

    $default	reduce using rule 323 (intliteral)



state 94

    floatliteral  ->  FLOATLITERAL .   (rule 325)

    $default	reduce using rule 325 (floatliteral)



state 95

<<<<<<< HEAD
    all_type_define  ->  sign_type_define .   (rule 331)

    $default	reduce using rule 331 (all_type_define)



state 96

    function_define  ->  all_type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    ID  	shift, and go to state 274



state 97

    ass_left  ->  identifier .   (rule 123)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    IMPLY	shift, and go to state 276

    $default	reduce using rule 123 (ass_left)
=======
    charliteral  ->  CHARLITERAL .   (rule 324)

    $default	reduce using rule 324 (charliteral)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 98

    member_in_exp  ->  function .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 99

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 206

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 100

    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    DOT 	[reduce using rule 175 (member_in_exp)]
    IMPLY	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 101

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 241


<<<<<<< HEAD
state 102
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 100

    ari_exp  ->  simple_ari_exp .   (rule 158)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    NE  	shift, and go to state 245
    EQ  	shift, and go to state 246
    GE  	shift, and go to state 247
    LE  	shift, and go to state 248
    GT  	shift, and go to state 249
    LT  	shift, and go to state 250
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    NE  	[reduce using rule 158 (ari_exp)]
    EQ  	[reduce using rule 158 (ari_exp)]
    GE  	[reduce using rule 158 (ari_exp)]
    LE  	[reduce using rule 158 (ari_exp)]
    GT  	[reduce using rule 158 (ari_exp)]
    LT  	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    bi_operator	go to state 256
    relation_operator	go to state 257



state 103

    simple_ari_exp  ->  member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)



state 104

    member_in_exp  ->  address_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 105

    member_in_exp  ->  type_cast .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 106

    member_in_exp  ->  identifier .   (rule 173)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

<<<<<<< HEAD
    COLON	shift, and go to state 277
=======
    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 107

    member_in_exp  ->  intliteral .   (rule 168)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 278
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
    $default	reduce using rule 168 (member_in_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 108

    member_in_exp  ->  charliteral .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 107

    member_in_exp  ->  floatliteral .   (rule 172)

    $default	reduce using rule 172 (member_in_exp)



state 108

    member_in_exp  ->  struct_member_exp .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    COMMA	shift, and go to state 279
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHOPSTAR	error (nonassociative)

<<<<<<< HEAD
    poptional_projection	go to state 280



state 109
=======
    $default	reduce using rule 21 (complexProposition)



state 110
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



<<<<<<< HEAD
state 110
=======
state 111
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

<<<<<<< HEAD
    $default	reduce using rule 22 (complexProposition)



state 111

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 172)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 281
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 112

    member_in_exp  ->  POINTERNULL .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 113

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 114

    size_of  ->  SIZEOF . OPEN_PAR ari_exp CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 259)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 260)
    size_of  ->  SIZEOF . OPEN_PAR strliteral CLOSE_PAR   (rule 261)

    OPEN_PAR	shift, and go to state 297



state 115

    math_function  ->  CEIL . ari_exp   (rule 281)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 298
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 116

    math_function  ->  FLOOR . ari_exp   (rule 282)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 299
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 117

    math_function  ->  ROUND . ari_exp   (rule 280)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 300
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 118

    math_function  ->  SIN . ari_exp   (rule 283)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 301
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 119

    math_function  ->  COS . ari_exp   (rule 284)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 302
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 120

    math_function  ->  TAN . ari_exp   (rule 285)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 303
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 121

    math_function  ->  ASIN . ari_exp   (rule 286)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 304
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 122

    math_function  ->  ACOS . ari_exp   (rule 287)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 305
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 123

    math_function  ->  ATAN . ari_exp   (rule 288)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 306
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 124

    math_function  ->  SINH . ari_exp   (rule 289)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 307
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 125

    math_function  ->  COSH . ari_exp   (rule 290)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 308
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 126

    math_function  ->  TANH . ari_exp   (rule 291)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 309
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 127

    math_function  ->  EXP . ari_exp   (rule 292)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 310
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 128

    math_function  ->  LOG . ari_exp   (rule 293)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 311
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 129

    math_function  ->  LOG10 . ari_exp   (rule 294)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 312
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 130

    math_function  ->  SQRT . ari_exp   (rule 295)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 313
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 131

    math_function  ->  ATAN2 . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    OPEN_PAR	shift, and go to state 314



state 132

    math_function  ->  POW . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    OPEN_PAR	shift, and go to state 315



state 133

    math_function  ->  ABS . ari_exp   (rule 301)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 316
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 134

    math_function  ->  FABS . ari_exp   (rule 302)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 317
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 135

    math_function  ->  LABS . ari_exp   (rule 303)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 318
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 136

    math_function  ->  FMOD . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    OPEN_PAR	shift, and go to state 319



state 137

    math_function  ->  MODF . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 299)

    OPEN_PAR	shift, and go to state 320



state 138

    math_function  ->  LDEXP . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 300)

    OPEN_PAR	shift, and go to state 321



state 139

    address_exp  ->  ADDRESS . identifier   (rule 220)
    address_exp  ->  ADDRESS . array   (rule 221)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 222)
    address_exp  ->  ADDRESS . address_exp   (rule 223)

    OPEN_PAR	shift, and go to state 322
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 323
    point_exp	go to state 324
    address_exp	go to state 325
    identifier	go to state 326
    struct_member_exp	go to state 327



state 140

    member_in_exp  ->  SUB . member_in_exp   (rule 180)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 328
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 141

    member_in_exp  ->  BNE . member_in_exp   (rule 181)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 329
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 142

    intliteral  ->  INTLITERAL .   (rule 391)

    $default	reduce using rule 391 (intliteral)



state 143

    floatliteral  ->  FLOATLITERAL .   (rule 393)

    $default	reduce using rule 393 (floatliteral)



state 144

    charliteral  ->  CHARLITERAL .   (rule 392)

    $default	reduce using rule 392 (charliteral)



state 145

    member_in_exp  ->  function .   (rule 187)

    $default	reduce using rule 187 (member_in_exp)



state 146

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    member_in_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 271

    DOT 	[reduce using rule 185 (member_in_exp)]
    IMPLY	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)



state 147

    member_in_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273

    DOT 	[reduce using rule 186 (member_in_exp)]
    IMPLY	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)



state 148

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 332



state 149

    ari_exp  ->  simple_ari_exp .   (rule 169)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 170)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 178)

    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    NE  	shift, and go to state 336
    EQ  	shift, and go to state 337
    GE  	shift, and go to state 338
    LE  	shift, and go to state 339
    GT  	shift, and go to state 340
    LT  	shift, and go to state 341
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346

    INTER_OR	[reduce using rule 169 (ari_exp)]
    CON 	[reduce using rule 169 (ari_exp)]
    ADDRESS	[reduce using rule 169 (ari_exp)]
    NE  	[reduce using rule 169 (ari_exp)]
    EQ  	[reduce using rule 169 (ari_exp)]
    GE  	[reduce using rule 169 (ari_exp)]
    LE  	[reduce using rule 169 (ari_exp)]
    GT  	[reduce using rule 169 (ari_exp)]
    LT  	[reduce using rule 169 (ari_exp)]
    LST 	[reduce using rule 169 (ari_exp)]
    RST 	[reduce using rule 169 (ari_exp)]
    MUL 	[reduce using rule 169 (ari_exp)]
    DIV 	[reduce using rule 169 (ari_exp)]
    MOD 	[reduce using rule 169 (ari_exp)]
    $default	reduce using rule 169 (ari_exp)

    bi_operator	go to state 347
    relation_operator	go to state 348



state 150

    simple_ari_exp  ->  member_in_exp .   (rule 177)

    $default	reduce using rule 177 (simple_ari_exp)



state 151

    member_in_exp  ->  address_exp .   (rule 191)

    $default	reduce using rule 191 (member_in_exp)



state 152

    member_in_exp  ->  type_cast .   (rule 192)

    $default	reduce using rule 192 (member_in_exp)



state 153

    member_in_exp  ->  size_of .   (rule 194)

    $default	reduce using rule 194 (member_in_exp)



state 154

    member_in_exp  ->  math_function .   (rule 189)

    $default	reduce using rule 189 (member_in_exp)



state 155

    member_in_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    IMPLY	shift, and go to state 276

    DOT 	[reduce using rule 184 (member_in_exp)]
    IMPLY	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 156

    member_in_exp  ->  intliteral .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 157

    member_in_exp  ->  charliteral .   (rule 190)

    $default	reduce using rule 190 (member_in_exp)



state 158

    member_in_exp  ->  floatliteral .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)



state 159

    member_in_exp  ->  struct_member_exp .   (rule 193)

    $default	reduce using rule 193 (member_in_exp)



state 160

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 161

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 162

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 163

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 164

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 165

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 166

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 167

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 349



state 168

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 350



state 169

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 351



state 170

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 352



state 171

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 353



state 172

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 173

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 414)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 354
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 174

    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 175

    member_in_exp  ->  POINTERNULL .   (rule 182)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 319)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 320)

    NE  	shift, and go to state 355
    EQ  	shift, and go to state 356

    NE  	[reduce using rule 182 (member_in_exp)]
    EQ  	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



state 176

    prime_bool_exp  ->  MY_TRUE .   (rule 310)

    $default	reduce using rule 310 (prime_bool_exp)



state 177

    prime_bool_exp  ->  MY_FALSE .   (rule 311)

    $default	reduce using rule 311 (prime_bool_exp)



state 178

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 308)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 357
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 359
    prime_bool_exp	go to state 183
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 179

    bool_exp  ->  NEGATION . bool_exp   (rule 305)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 360
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 180

    strliteral  ->  STRLITERAL .   (rule 390)

    $default	reduce using rule 390 (strliteral)



state 181

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 309)
    prime_bool_exp  ->  ari_exp .   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 314)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 318)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 321)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 322)

    NE  	shift, and go to state 361
    EQ  	shift, and go to state 362
    GE  	shift, and go to state 338
    LE  	shift, and go to state 339
    GT  	shift, and go to state 340
    LT  	shift, and go to state 341
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 312 (prime_bool_exp)

    ari_operator	go to state 332
    relation_operator	go to state 363



state 182

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 420)

    THEN	shift, and go to state 364
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 183

    bool_exp  ->  prime_bool_exp .   (rule 304)

    $default	reduce using rule 304 (bool_exp)



state 184

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 315)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 316)

    NE  	shift, and go to state 367
    EQ  	shift, and go to state 368



state 185

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 369
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 186

    struct_identifier  ->  STRUCT ID .   (rule 79)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    $default	reduce using rule 79 (struct_identifier)

    option_identifier_array_declaration	go to state 370
    identifier	go to state 259



state 187

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 371
    identifier	go to state 259



state 188

    struct_identifier  ->  UNION ID .   (rule 80)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    $default	reduce using rule 80 (struct_identifier)

    option_identifier_array_declaration	go to state 372
    identifier	go to state 259



state 189

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 373
    identifier	go to state 259



state 190

    file_statement  ->  FOPEN OPEN_PAR . ass_left COMMA strliteral CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 375
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    struct_member_exp	go to state 105



state 191

    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 121)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 376



state 192

    file_statement  ->  FGETS OPEN_PAR . identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 377



state 193

    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 378



state 194

    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 379



state 195

    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 119)
    file_statement  ->  FPUTC OPEN_PAR . array COMMA identifier CLOSE_PAR   (rule 120)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 381
    identifier	go to state 382



state 196

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 383



state 197

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 384



state 198

    identifier  ->  ID .   (rule 388)

    $default	reduce using rule 388 (identifier)



state 199

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 386



state 200

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 387



state 201

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 388
    UNION	shift, and go to state 232
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 389
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 390
    VOIDDECLARATION	shift, and go to state 391
    FLOATDECLARATION	shift, and go to state 392
    OPEN_PAR	shift, and go to state 393
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 394
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 409 (for_sta_init)

    function	go to state 145
    declaration	go to state 395
    type_define	go to state 237
    file_statement	go to state 82
    ass_statement	go to state 396
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 219
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    for_sta_init	go to state 397
    struct_member_exp	go to state 221



state 202

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 405)

    TIMES	shift, and go to state 398
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 203

    bool_par  ->  error . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 399



state 204

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 386)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 400
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 205

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 404)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 403



state 206

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 404
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 207

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 423)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 424)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 409
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 208

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 172)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 420)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 416
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 209

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 403)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 208
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 417
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 418
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 419
    VOIDDECLARATION	shift, and go to state 391
    FLOATDECLARATION	shift, and go to state 420
    OPEN_PAR	shift, and go to state 209
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 421
    SIGNED	shift, and go to state 422
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 211
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 394
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    statement	go to state 212
    function_define	go to state 75
    function	go to state 213
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 219
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 423
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 221



state 210

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    point_exp  ->  MUL . identifier   (rule 162)
    point_exp  ->  MUL . point_exp   (rule 163)
    point_exp  ->  MUL . array   (rule 164)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 167)

    OPEN_PAR	shift, and go to state 240
    MUL 	shift, and go to state 424
    ID  	shift, and go to state 425

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 426



state 211

    imply_pre  ->  NEGATION . imply_pre   (rule 400)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 427
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 428
    struct_member_exp	go to state 159



state 212

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 67)

    CLOSE_PAR	shift, and go to state 429
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 213

    statement  ->  function .   (rule 65)
    member_in_exp  ->  function .   (rule 187)

    CLOSE_PAR	reduce using rule 65 (statement)
    CLOSE_PAR	[reduce using rule 187 (member_in_exp)]
    CHOP	reduce using rule 65 (statement)
    OR  	reduce using rule 65 (statement)
    OR  	[reduce using rule 187 (member_in_exp)]
    PARALLEL	reduce using rule 65 (statement)
    AND 	reduce using rule 65 (statement)
    AND 	[reduce using rule 187 (member_in_exp)]
    $default	reduce using rule 187 (member_in_exp)



state 214

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 122)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 127)

    CLOSE_PAR	shift, and go to state 430
    ASS_P	shift, and go to state 266
    ASS_N	shift, and go to state 267

    assign_operator	go to state 268



state 215

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    ass_left  ->  array .   (rule 125)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)
    member_in_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 125 (ass_left)]
    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    ASS_P	reduce using rule 125 (ass_left)
    ASS_N	reduce using rule 125 (ass_left)
    $default	reduce using rule 185 (member_in_exp)



state 216

    ass_left  ->  point_exp .   (rule 126)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 168)
    member_in_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273

    CLOSE_PAR	[reduce using rule 126 (ass_left)]
    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    ASS_P	reduce using rule 126 (ass_left)
    ASS_N	reduce using rule 126 (ass_left)
    $default	reduce using rule 186 (member_in_exp)



state 217

    member_in_exp  ->  address_exp .   (rule 191)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)

    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    $default	reduce using rule 191 (member_in_exp)



state 218

    imply_pre  ->  prime_bool_exp .   (rule 399)

    $default	reduce using rule 399 (imply_pre)



state 219

    ass_left  ->  identifier .   (rule 123)
    member_in_exp  ->  identifier .   (rule 184)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 389)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    ASS_P	reduce using rule 123 (ass_left)
    ASS_N	reduce using rule 123 (ass_left)
    $default	reduce using rule 184 (member_in_exp)



state 220

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)

    CLOSE_PAR	shift, and go to state 435
    OR  	shift, and go to state 436
    AND 	shift, and go to state 437



state 221

    ass_left  ->  struct_member_exp .   (rule 124)
    member_in_exp  ->  struct_member_exp .   (rule 193)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 451)

    CLOSE_PAR	shift, and go to state 438

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    CLOSE_PAR	[reduce using rule 193 (member_in_exp)]
    ASS_P	reduce using rule 124 (ass_left)
    ASS_N	reduce using rule 124 (ass_left)
    $default	reduce using rule 193 (member_in_exp)



state 222

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 439
    CLOSE_BPAR	shift, and go to state 440
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    CLOSE_BPAR	[reduce using rule 397 (option_projection)]
    $default	reduce using rule 397 (option_projection)

    option_projection	go to state 441



state 223

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 446
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 224

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 450
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 225

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 451
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 226

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 452
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 227

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 453
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 228

    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 273)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 454
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 229

    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 455
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 230

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 456



state 231

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 187



state 232

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 458
    STRUCT_TYPE	shift, and go to state 189



state 233

    type_define  ->  INTDECLARATION .   (rule 94)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    ID  	reduce using rule 94 (type_define)
    ID  	[reduce using rule 329 (sign_type_define)]
    $default	reduce using rule 94 (type_define)



state 234

    type_define  ->  CHARDECLARATION .   (rule 96)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    ID  	reduce using rule 96 (type_define)
    ID  	[reduce using rule 330 (sign_type_define)]
    $default	reduce using rule 96 (type_define)



state 235

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    MUL 	shift, and go to state 459



state 236

    sign_declaration  ->  UNSIGNED declaration .   (rule 82)

    $default	reduce using rule 82 (sign_declaration)



state 237

    declaration  ->  type_define . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 265
    identifier	go to state 259



state 238

    sign_declaration  ->  SIGNED declaration .   (rule 81)

    $default	reduce using rule 81 (sign_declaration)



state 239

    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 62)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 460



state 240

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 167)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 461
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    type_define	go to state 462
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 463
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    sign_type_define	go to state 95
    all_type_define	go to state 464
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 241

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 388)

    OPEN_MPAR	shift, and go to state 255

    $default	reduce using rule 388 (identifier)



state 242

    point_exp  ->  MUL array .   (rule 164)

    $default	reduce using rule 164 (point_exp)



state 243

    point_exp  ->  MUL point_exp .   (rule 163)

    $default	reduce using rule 163 (point_exp)



state 244

    point_exp  ->  MUL identifier .   (rule 162)

    $default	reduce using rule 162 (point_exp)



state 245

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 465
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 466
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 467
    point_exp	go to state 468
    address_exp	go to state 469
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 470
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 471



state 246

    ass_left  ->  NEXT . ass_left   (rule 128)

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 247
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    struct_member_exp	go to state 105



state 247

    ass_left  ->  NEXT ass_left .   (rule 128)

    $default	reduce using rule 128 (ass_left)



state 248

    ass_left  ->  array .   (rule 125)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    IMPLY	shift, and go to state 271

    $default	reduce using rule 125 (ass_left)



state 249

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 472
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 250

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 428)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 429)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 430)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 431)

    OPEN_PAR	shift, and go to state 442
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 473
    point_exp	go to state 324
    identifier	go to state 474
    struct_member_exp	go to state 475



state 251

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 476
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 252

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 477
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 253

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 478
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 254

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 482
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 255

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 483
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 256

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259



state 257

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)
    identifier  ->  ID .   (rule 388)

    ARRAY	shift, and go to state 485
    OPEN_MPAR	shift, and go to state 486

    $default	reduce using rule 388 (identifier)



state 258

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 259

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 487
    ASS_P	shift, and go to state 488

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 489



state 260

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 490
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 261

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 491
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 262

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 492
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 263

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 493
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 264

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 78)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    UNSIGNED	shift, and go to state 494
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 495
    sign_declaration	go to state 496
    declaration	go to state 80
    type_define	go to state 237



state 265

    declaration  ->  type_define option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 266

    assign_operator  ->  ASS_P .   (rule 143)

    $default	reduce using rule 143 (assign_operator)



state 267

    assign_operator  ->  ASS_N .   (rule 144)

    $default	reduce using rule 144 (assign_operator)



state 268

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 122)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 497
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 269

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 439)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 498
    identifier	go to state 499



state 270

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 75)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 500
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 271

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 446)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 501
    identifier	go to state 502



state 272

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 440)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 503
    identifier	go to state 504
=======
    $default	reduce using rule 9 (complexProposition)


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
state 273
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHOPSTAR	error (nonassociative)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 505
    identifier	go to state 506

=======
    $default	reduce using rule 20 (complexProposition)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 274

<<<<<<< HEAD
    function_define  ->  all_type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_PAR	shift, and go to state 507



state 275

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier DOT . function   (rule 448)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 508
    file_statement	go to state 82
    array	go to state 509
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 510
=======
state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)

<<<<<<< HEAD
state 276

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier IMPLY . function   (rule 449)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 511
    file_statement	go to state 82
    array	go to state 512
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 513
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
state 277
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHOPSTAR	error (nonassociative)

<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 514
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 278
=======
    $default	reduce using rule 11 (complexProposition)



state 115
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



<<<<<<< HEAD
state 279
=======
state 116
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 515



state 280

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 516



state 281

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 172)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)

    THEN	shift, and go to state 517
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 282

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)

    STRUCT_TYPE	shift, and go to state 518



state 283

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 520



state 284

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 522



state 285

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 243)

    MUL 	shift, and go to state 523
=======
    complexProposition	go to state 258



state 117
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
state 286
=======
    complexProposition	go to state 259
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 525
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 118

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

<<<<<<< HEAD
state 287

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 288
=======
    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 260



state 119
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 530
    CHARDECLARATION	shift, and go to state 531
=======
    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition	go to state 261


<<<<<<< HEAD
state 289
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 120

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 532
    CHARDECLARATION	shift, and go to state 533
=======
    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 262

<<<<<<< HEAD
state 290
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 534
=======
state 121
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)

<<<<<<< HEAD
state 291
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271
=======
state 122
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 263
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 292
=======
state 123
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  RETURN ID .   (rule 36)

<<<<<<< HEAD
    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273
=======
    $default	reduce using rule 36 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 124

<<<<<<< HEAD
state 293
=======
    member_in_exp  ->  POINTERNULL .   (rule 171)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 251)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 252)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    NE  	shift, and go to state 264
    EQ  	shift, and go to state 265

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 535
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    NE  	[reduce using rule 171 (member_in_exp)]
    EQ  	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 125

<<<<<<< HEAD
state 294
=======
    prime_bool_exp  ->  MY_TRUE .   (rule 242)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 242 (prime_bool_exp)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 536
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 126

    prime_bool_exp  ->  MY_FALSE .   (rule 243)

<<<<<<< HEAD
state 295
=======
    $default	reduce using rule 243 (prime_bool_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 127

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 266
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    bool_exp	go to state 268
    prime_bool_exp	go to state 132
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230


<<<<<<< HEAD
state 296
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 128

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 438
=======
    bool_exp  ->  NEGATION . bool_exp   (rule 237)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 269
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 129

<<<<<<< HEAD
state 297

    size_of  ->  SIZEOF OPEN_PAR . ari_exp CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 259)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 260)
    size_of  ->  SIZEOF OPEN_PAR . strliteral CLOSE_PAR   (rule 261)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 537
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 538
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 539
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 540
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 541
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 542
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    type_define	go to state 462
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 543
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    all_sizeof_type	go to state 544
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    sign_type_define	go to state 95
    all_type_define	go to state 545
    identifier	go to state 155
    strliteral	go to state 546
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 298
=======
    strliteral  ->  STRLITERAL .   (rule 322)

    $default	reduce using rule 322 (strliteral)



state 130
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    NE  	shift, and go to state 270
    EQ  	shift, and go to state 271
    GE  	shift, and go to state 247
    LE  	shift, and go to state 248
    GT  	shift, and go to state 249
    LT  	shift, and go to state 250
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 244 (prime_bool_exp)

<<<<<<< HEAD
    ari_operator	go to state 332



state 299
=======
    ari_operator	go to state 241
    relation_operator	go to state 272



state 131
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 352)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    THEN	shift, and go to state 273
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 132

    bool_exp  ->  prime_bool_exp .   (rule 236)

<<<<<<< HEAD
state 300
=======
    $default	reduce using rule 236 (bool_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 133

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 247)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 248)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    NE  	shift, and go to state 276
    EQ  	shift, and go to state 277


<<<<<<< HEAD
state 301
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 134

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 278
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 135

<<<<<<< HEAD
state 302
=======
    struct_identifier  ->  STRUCT ID .   (rule 75)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    $default	reduce using rule 75 (struct_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration	go to state 279
    identifier	go to state 193

<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 136

<<<<<<< HEAD
state 303
=======
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_identifier_array_declaration	go to state 280
    identifier	go to state 193
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 137

    struct_identifier  ->  UNION ID .   (rule 76)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

<<<<<<< HEAD
state 304
=======
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 76 (struct_identifier)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_identifier_array_declaration	go to state 281
    identifier	go to state 193
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 138

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 85)

<<<<<<< HEAD
state 305
=======
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration	go to state 282
    identifier	go to state 193

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
state 139
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 283

<<<<<<< HEAD
state 306
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 140
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier	go to state 284


<<<<<<< HEAD
state 307
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 141

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 320 (identifier)

<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 142

<<<<<<< HEAD
state 308
=======
    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 65)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 285

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier	go to state 286

<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 143

<<<<<<< HEAD
state 309
=======
    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    identifier	go to state 287
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 144

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 288
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 289
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 290
    VOIDDECLARATION	shift, and go to state 291
    FLOATDECLARATION	shift, and go to state 292
    OPEN_PAR	shift, and go to state 293
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 294
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 341 (for_sta_init)

    function	go to state 96
    declaration	go to state 295
    type_define	go to state 172
    ass_statement	go to state 296
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_init	go to state 297
    struct_member_exp	go to state 164

<<<<<<< HEAD
state 310
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 145
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 337)

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    TIMES	shift, and go to state 298
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241


<<<<<<< HEAD
state 311
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 146

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    bool_par  ->  error . CLOSE_PAR   (rule 319)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 299

<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 147

<<<<<<< HEAD
state 312
=======
    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 318)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 300
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 148

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    while_statement  ->  WHILE bool_par . statement_bpar   (rule 336)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 303

<<<<<<< HEAD
state 313
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 149
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

<<<<<<< HEAD
    ari_operator	go to state 332



state 314

    math_function  ->  ATAN2 OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 547
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 315

    math_function  ->  POW OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 548
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 316
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 304
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 150

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 355)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 356)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 309
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 151

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 352)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 316
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 152
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 66)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 317
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 318
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 319
    VOIDDECLARATION	shift, and go to state 291
    FLOATDECLARATION	shift, and go to state 320
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 321
    SIGNED	shift, and go to state 322
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 294
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 323
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 153

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

<<<<<<< HEAD
state 317
=======
    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 324
    ID  	shift, and go to state 325
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 326

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
state 154
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    imply_pre  ->  NEGATION . imply_pre   (rule 332)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 328
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 318
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 155

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 66)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 329
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 156

<<<<<<< HEAD
state 319

    math_function  ->  FMOD OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 549
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 320

    math_function  ->  MODF OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 550
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    statement  ->  function .   (rule 64)
    member_in_exp  ->  function .   (rule 176)

    CLOSE_PAR	reduce using rule 64 (statement)
    CLOSE_PAR	[reduce using rule 176 (member_in_exp)]
    CHOP	reduce using rule 64 (statement)
    OR  	reduce using rule 64 (statement)
    OR  	[reduce using rule 176 (member_in_exp)]
    PARALLEL	reduce using rule 64 (statement)
    AND 	reduce using rule 64 (statement)
    AND 	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 157

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 330
    ASS_P	shift, and go to state 201
    ASS_N	shift, and go to state 202

    assign_operator	go to state 203

<<<<<<< HEAD
state 321

    math_function  ->  LDEXP OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 300)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 551
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 158

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

<<<<<<< HEAD
state 322

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    OPEN_PAR	shift, and go to state 552
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 553
    point_exp	go to state 554
    address_exp	go to state 555
    identifier	go to state 556
    struct_member_exp	go to state 557



state 323
=======
    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 114 (ass_left)
    ASS_N	reduce using rule 114 (ass_left)
    $default	reduce using rule 174 (member_in_exp)



state 159
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

<<<<<<< HEAD
    DOT 	shift, and go to state 269
=======
    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    ASS_P	reduce using rule 115 (ass_left)
    ASS_N	reduce using rule 115 (ass_left)
    $default	reduce using rule 175 (member_in_exp)



<<<<<<< HEAD
state 324
=======
state 160
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    member_in_exp  ->  address_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

<<<<<<< HEAD
    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273
=======
    CLOSE_PAR	shift, and go to state 333
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)


<<<<<<< HEAD
state 325
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 161

    imply_pre  ->  prime_bool_exp .   (rule 331)

    $default	reduce using rule 331 (imply_pre)


<<<<<<< HEAD
state 326
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 162

<<<<<<< HEAD
    DOT 	shift, and go to state 275
=======
    ass_left  ->  identifier .   (rule 112)
    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 173 (member_in_exp)


<<<<<<< HEAD
state 327
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 163

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)

    CLOSE_PAR	shift, and go to state 335
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337


<<<<<<< HEAD
state 328
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 164

    ass_left  ->  struct_member_exp .   (rule 113)
    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 181 (member_in_exp)

<<<<<<< HEAD
state 329
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 165

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 339
    CLOSE_BPAR	shift, and go to state 340
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 330
=======
    CLOSE_BPAR	[reduce using rule 329 (option_projection)]
    $default	reduce using rule 329 (option_projection)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_projection	go to state 341



state 166

<<<<<<< HEAD
state 331
=======
    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 342



state 167

<<<<<<< HEAD
state 332

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 171)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    simple_ari_exp	go to state 558
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 333
=======
    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 343



state 168
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 344
    STRUCT_TYPE	shift, and go to state 136



<<<<<<< HEAD
state 334
=======
state 169
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 345
    STRUCT_TYPE	shift, and go to state 138



<<<<<<< HEAD
state 335
=======
state 170
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    MUL 	shift, and go to state 346



<<<<<<< HEAD
state 336
=======
state 171
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    sign_declaration  ->  UNSIGNED declaration .   (rule 78)

    $default	reduce using rule 78 (sign_declaration)



<<<<<<< HEAD
state 337
=======
state 172
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  type_define . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 200
    identifier	go to state 193


<<<<<<< HEAD
state 338
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 173

    sign_declaration  ->  SIGNED declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)


<<<<<<< HEAD
state 339
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 174

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 347
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 348
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 349
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 350
    all_type_define	go to state 351
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 340
=======
state 175
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 320)

    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)


<<<<<<< HEAD
state 341
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 176

    point_exp  ->  MUL array .   (rule 153)

    $default	reduce using rule 153 (point_exp)


<<<<<<< HEAD
state 342
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 177

    point_exp  ->  MUL point_exp .   (rule 152)

    $default	reduce using rule 152 (point_exp)


<<<<<<< HEAD
state 343
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 178

    point_exp  ->  MUL identifier .   (rule 151)

    $default	reduce using rule 151 (point_exp)


<<<<<<< HEAD
state 344
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 179

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 352
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 353
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 354
    point_exp	go to state 355
    address_exp	go to state 356
    identifier	go to state 357
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 358


<<<<<<< HEAD
state 345
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 180

    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 359
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 181
    leftaddrshift	go to state 70
    array	go to state 182
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81

<<<<<<< HEAD
state 346
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 181

    ass_left  ->  NEXT ass_left .   (rule 117)

    $default	reduce using rule 117 (ass_left)

<<<<<<< HEAD
state 347

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 178)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 559
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 182

    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

<<<<<<< HEAD
state 348

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 170)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 560
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 349
=======
    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 206

    $default	reduce using rule 114 (ass_left)



state 183
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

<<<<<<< HEAD
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 360
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 184

<<<<<<< HEAD
state 350
=======
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 362)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 363)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 361
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

<<<<<<< HEAD
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
    array	go to state 362
    point_exp	go to state 233
    identifier	go to state 363
    struct_member_exp	go to state 364
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 185

<<<<<<< HEAD
state 351
=======
    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 365
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 186

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

<<<<<<< HEAD
state 352
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 366
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 187

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 367
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
state 353
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CHOPSTAR	shift, and go to state 172
=======
state 188
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 371
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 354
=======
state 189
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 372
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 561
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 190

<<<<<<< HEAD
state 355

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 320)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 562
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193


<<<<<<< HEAD
state 356

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 319)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 563
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    identifier  ->  ID .   (rule 320)

    ARRAY	shift, and go to state 374
    OPEN_MPAR	shift, and go to state 375

<<<<<<< HEAD
state 357

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 308)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 357
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 359
    prime_bool_exp	go to state 183
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
    $default	reduce using rule 320 (identifier)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 192

<<<<<<< HEAD
state 358
=======
    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 81)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 81 (declaration)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 535
    NE  	shift, and go to state 361
    EQ  	shift, and go to state 362
    GE  	shift, and go to state 338
    LE  	shift, and go to state 339
    GT  	shift, and go to state 340
    LT  	shift, and go to state 341
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
    relation_operator	go to state 363
=======
state 193
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 376
    ASS_P	shift, and go to state 377

<<<<<<< HEAD
state 359
=======
    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_identifier_array_declaration	go to state 378

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 564
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 194

<<<<<<< HEAD
state 360
=======
    statement  ->  statement CHOP . statement   (rule 32)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 379
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 195

    statement  ->  statement OR . statement   (rule 31)

<<<<<<< HEAD
state 361
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 380
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    POINTERNULL	shift, and go to state 565
    STRLITERAL	shift, and go to state 180
    CHARLITERAL	shift, and go to state 144
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 196

<<<<<<< HEAD
    strliteral	go to state 566
    charliteral	go to state 567
=======
    statement  ->  statement PARALLEL . statement   (rule 55)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 381
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81


<<<<<<< HEAD
state 362
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 197

<<<<<<< HEAD
    POINTERNULL	shift, and go to state 568
    STRLITERAL	shift, and go to state 180
    CHARLITERAL	shift, and go to state 144
=======
    statement  ->  statement AND . statement   (rule 30)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 382
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
    strliteral	go to state 569
    charliteral	go to state 570
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 198

<<<<<<< HEAD
state 363

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 309)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 571
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 74)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_declaration	go to state 383
    sign_declaration	go to state 384
    declaration	go to state 66
    type_define	go to state 172


<<<<<<< HEAD
state 364
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 199

<<<<<<< HEAD
    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 572
=======
    statement  ->  type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    identifier  ->  ID .   (rule 320)

    ARRAY	shift, and go to state 374
    OPEN_PAR	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 375
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 320 (identifier)


<<<<<<< HEAD
state 365

    bool_exp  ->  bool_exp OR . bool_exp   (rule 307)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 573
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 200
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  type_define option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)

<<<<<<< HEAD
state 366

    bool_exp  ->  bool_exp AND . bool_exp   (rule 306)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 574
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 201

    assign_operator  ->  ASS_P .   (rule 132)

<<<<<<< HEAD
state 367

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 316)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 575
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 132 (assign_operator)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 202

<<<<<<< HEAD
state 368

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 315)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 576
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 369
=======
    assign_operator  ->  ASS_N .   (rule 133)

    $default	reduce using rule 133 (assign_operator)



state 203
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 111)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 386
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 577
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 204

<<<<<<< HEAD
state 370
=======
    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 371)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 388
    identifier	go to state 389



<<<<<<< HEAD
state 371
=======
state 205
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 390
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 206

<<<<<<< HEAD
state 372
=======
    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 378)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 391
    identifier	go to state 392



<<<<<<< HEAD
state 373
=======
state 207
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 372)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 393
    identifier	go to state 394


<<<<<<< HEAD
state 374

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    OPEN_PAR	shift, and go to state 578
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 580
    point_exp	go to state 468
    address_exp	go to state 469
    identifier	go to state 470
    struct_member_exp	go to state 471
=======

state 208
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 382)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

<<<<<<< HEAD
state 375
=======
    array	go to state 395
    identifier	go to state 396
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 581
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 209

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier DOT . function   (rule 380)

<<<<<<< HEAD
state 376
=======
    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function	go to state 397
    array	go to state 398
    identifier	go to state 399

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 582
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 210

<<<<<<< HEAD
state 377
=======
    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier IMPLY . function   (rule 381)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

<<<<<<< HEAD
    COMMA	shift, and go to state 583



state 378
=======
    function	go to state 400
    array	go to state 401
    identifier	go to state 402



state 211
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

<<<<<<< HEAD
    COMMA	shift, and go to state 584



state 379
=======
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 403
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 212
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 585



state 380
=======
    $default	reduce using rule 27 (complexProposition)



state 213
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 586
    ID  	shift, and go to state 241

    array	go to state 587
    identifier	go to state 384



state 381
=======
    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 404



state 214
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

<<<<<<< HEAD
    COMMA	shift, and go to state 588



state 382
=======
    CLOSE_BPAR	shift, and go to state 405



state 215
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

<<<<<<< HEAD
    COMMA	shift, and go to state 589



state 383
=======
    THEN	shift, and go to state 406
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 216
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592
=======
    STRUCT_TYPE	shift, and go to state 407
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 594
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 217

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
state 384
=======
    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 409
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 434
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 218

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
state 385

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 363)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 367)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 373)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 374)
    inner_option_define_identifier  ->  COMMA . error   (rule 375)

    error	shift, and go to state 595
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 596
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 597
    STRUCT_TYPE	shift, and go to state 598

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 599
=======
    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 219

<<<<<<< HEAD
state 386

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COLON	shift, and go to state 600
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 412

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 220

<<<<<<< HEAD
state 387
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 414

<<<<<<< HEAD
    COMMA	shift, and go to state 601
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_frame_identifier	go to state 602
=======
state 221
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230


<<<<<<< HEAD
state 388
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 222

<<<<<<< HEAD
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 603
=======
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420


<<<<<<< HEAD
state 389
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 223

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 520
=======
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 421
    CHARDECLARATION	shift, and go to state 422



<<<<<<< HEAD
state 390
=======
state 224
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 522
=======
    MUL 	shift, and go to state 423
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 225

<<<<<<< HEAD
state 391
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

<<<<<<< HEAD
    MUL 	shift, and go to state 523
=======
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 226

<<<<<<< HEAD
state 392
=======
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 525
=======
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 227

<<<<<<< HEAD
state 393

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 604
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 219
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 221
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 424
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241


<<<<<<< HEAD
state 394
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 228

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 605
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 258
    identifier	go to state 259
=======
    member_in_exp  ->  address_exp .   (rule 179)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

    CLOSE_PAR	shift, and go to state 425
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)


<<<<<<< HEAD
state 395
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 229

    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)

<<<<<<< HEAD
state 396
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 230

    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

    CLOSE_PAR	shift, and go to state 338

<<<<<<< HEAD
state 397
=======
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 606
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 231

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    OPEN_PAR	shift, and go to state 426
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 427
    point_exp	go to state 428
    address_exp	go to state 429
    identifier	go to state 430
    struct_member_exp	go to state 431

<<<<<<< HEAD
state 398
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DO  	shift, and go to state 607
=======
state 232
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    address_exp  ->  ADDRESS array .   (rule 208)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 204

<<<<<<< HEAD
state 399
=======
    DOT 	[reduce using rule 208 (address_exp)]
    $default	reduce using rule 208 (address_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 233

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

<<<<<<< HEAD
state 400
=======
    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 234

    address_exp  ->  ADDRESS address_exp .   (rule 210)

<<<<<<< HEAD
state 401
=======
    $default	reduce using rule 210 (address_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 609
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 235

    address_exp  ->  ADDRESS identifier .   (rule 207)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

<<<<<<< HEAD
state 402
=======
    DOT 	shift, and go to state 209
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 610
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 236

<<<<<<< HEAD
state 403
=======
    address_exp  ->  ADDRESS struct_member_exp .   (rule 209)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 209 (address_exp)



state 237

<<<<<<< HEAD
state 404
=======
    member_in_exp  ->  SUB member_in_exp .   (rule 169)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 169 (member_in_exp)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 611
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 238

<<<<<<< HEAD
state 405

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 612
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 613
    rightaddrshift	go to state 410
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 614
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 615
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    strliteral	go to state 616
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 406

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 212)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 213)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 214)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 617
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 618
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 619
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 620
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    member_in_exp  ->  BNE member_in_exp .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 239

    ari_operator  ->  ADD .   (rule 190)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 190 (ari_operator)


<<<<<<< HEAD
state 407

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 209)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 210)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 211)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 617
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 621
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 622
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 623
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator  ->  SUB .   (rule 191)

    $default	reduce using rule 191 (ari_operator)

<<<<<<< HEAD
state 408
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 624
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 244



state 409
=======
state 241

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 160)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 432
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 242
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bi_operator  ->  INTER_OR .   (rule 188)

<<<<<<< HEAD
    COMMA	shift, and go to state 625
    CLOSE_PAR	shift, and go to state 626
=======
    $default	reduce using rule 188 (bi_operator)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_output	go to state 627
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 243

    bi_operator  ->  CON .   (rule 189)

<<<<<<< HEAD
state 410
=======
    $default	reduce using rule 189 (bi_operator)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 244

    bi_operator  ->  ADDRESS .   (rule 187)

<<<<<<< HEAD
state 411
=======
    $default	reduce using rule 187 (bi_operator)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 245

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    relation_operator  ->  NE .   (rule 257)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 257 (relation_operator)


<<<<<<< HEAD
state 412
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 246

<<<<<<< HEAD
    CON 	shift, and go to state 628
=======
    relation_operator  ->  EQ .   (rule 260)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 260 (relation_operator)



<<<<<<< HEAD
state 413
=======
state 247
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    relation_operator  ->  GE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



<<<<<<< HEAD
state 414
=======
state 248
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    relation_operator  ->  LE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



<<<<<<< HEAD
state 415
=======
state 249
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    relation_operator  ->  GT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



<<<<<<< HEAD
state 416
=======
state 250
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    relation_operator  ->  LT .   (rule 259)

<<<<<<< HEAD
    THEN	shift, and go to state 629
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 417
=======
    $default	reduce using rule 259 (relation_operator)



state 251
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bi_operator  ->  LST .   (rule 185)

<<<<<<< HEAD
    ID  	shift, and go to state 186
    STRUCT_TYPE	shift, and go to state 603



state 418
=======
    $default	reduce using rule 185 (bi_operator)



state 252
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bi_operator  ->  RST .   (rule 186)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 630
=======
    $default	reduce using rule 186 (bi_operator)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 253

<<<<<<< HEAD
state 419
=======
    bi_operator  ->  MUL .   (rule 182)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 182 (bi_operator)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 631
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 254

    bi_operator  ->  DIV .   (rule 183)

<<<<<<< HEAD
state 420
=======
    $default	reduce using rule 183 (bi_operator)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 632
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 255

    bi_operator  ->  MOD .   (rule 184)

    $default	reduce using rule 184 (bi_operator)

<<<<<<< HEAD
state 421

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 633
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 634
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237
=======


state 256
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 433
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 422
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 257

<<<<<<< HEAD
    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 635
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 636
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 238
    type_define	go to state 237
=======
    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 159)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 434
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 258

<<<<<<< HEAD
state 423
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 637
    OR  	shift, and go to state 436
    AND 	shift, and go to state 437



state 424
=======
    $default	reduce using rule 8 (complexProposition)



state 259
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 240
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 638



state 425
=======
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 6 (complexProposition)



state 260
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 639
=======
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 7 (complexProposition)



<<<<<<< HEAD
state 426
=======
state 261
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 640
=======
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 5 (complexProposition)



<<<<<<< HEAD
state 427

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 403)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 641
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 642
    struct_member_exp	go to state 296
=======
state 262

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 4 (complexProposition)

<<<<<<< HEAD
state 428
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 263

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    CLOSE_PAR	shift, and go to state 435


<<<<<<< HEAD
state 429

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 67)

    $default	reduce using rule 67 (statement)



state 430
=======

state 264

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 252)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 436
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 265
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 251)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 437
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 266

<<<<<<< HEAD
state 431
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 266
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    bool_exp	go to state 268
    prime_bool_exp	go to state 132
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 267

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

<<<<<<< HEAD
state 432
=======
    CLOSE_PAR	shift, and go to state 424
    NE  	shift, and go to state 270
    EQ  	shift, and go to state 271
    GE  	shift, and go to state 247
    LE  	shift, and go to state 248
    GT  	shift, and go to state 249
    LT  	shift, and go to state 250
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 244 (prime_bool_exp)]
    $default	reduce using rule 244 (prime_bool_exp)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 643
=======
    ari_operator	go to state 241
    relation_operator	go to state 272
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 268

<<<<<<< HEAD
state 433
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 240)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 438
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275

<<<<<<< HEAD
    IMPLY	shift, and go to state 644
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 269

<<<<<<< HEAD
state 434
=======
    bool_exp  ->  NEGATION bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


    $default	reduce using rule 237 (bool_exp)



<<<<<<< HEAD
state 435
=======
state 270
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 254)
    relation_operator  ->  NE .   (rule 257)

<<<<<<< HEAD
    IMPLY	shift, and go to state 645
=======
    POINTERNULL	shift, and go to state 439
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    POINTERNULL	[reduce using rule 257 (relation_operator)]
    CHARLITERAL	[reduce using rule 257 (relation_operator)]
    $default	reduce using rule 257 (relation_operator)

    strliteral	go to state 440
    charliteral	go to state 441

<<<<<<< HEAD
state 436

    imply_pre  ->  imply_pre OR . imply_pre   (rule 402)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 427
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 646
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 271

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 253)
    relation_operator  ->  EQ .   (rule 260)

<<<<<<< HEAD
state 437

    imply_pre  ->  imply_pre AND . imply_pre   (rule 401)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 427
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 647
    struct_member_exp	go to state 159
=======
    POINTERNULL	shift, and go to state 442
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 260 (relation_operator)]
    CHARLITERAL	[reduce using rule 260 (relation_operator)]
    $default	reduce using rule 260 (relation_operator)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    strliteral	go to state 443
    charliteral	go to state 444


<<<<<<< HEAD
state 438
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 272

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 241)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 445
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 439
=======
state 273
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 352)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 648
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======
    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement_bpar	go to state 446


<<<<<<< HEAD
state 440
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 274

<<<<<<< HEAD
    PROJECTION	shift, and go to state 649



state 441
=======
    bool_exp  ->  bool_exp OR . bool_exp   (rule 239)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 447
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 275
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bool_exp  ->  bool_exp AND . bool_exp   (rule 238)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 448
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 650
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 276

<<<<<<< HEAD

state 442
=======
    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 248)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 449
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 277

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 247)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 450
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 278
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 552
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 553
    point_exp	go to state 554
    address_exp	go to state 469
    identifier	go to state 556
    struct_member_exp	go to state 557
=======
    CLOSE_PAR	shift, and go to state 451
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 279

<<<<<<< HEAD
state 443
=======
    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 82)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 82 (declaration)

<<<<<<< HEAD
    DOT 	shift, and go to state 269
    IMPLY	shift, and go to state 271
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 280

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

<<<<<<< HEAD
state 444
=======
    $default	reduce using rule 84 (declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 281

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)

<<<<<<< HEAD
state 445
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 282

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)

<<<<<<< HEAD
state 446
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 651
=======
state 283
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

<<<<<<< HEAD
state 447
=======
    $default	reduce using rule 290 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 456

<<<<<<< HEAD
    DOT 	shift, and go to state 275
    IMPLY	shift, and go to state 276
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 284

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)

<<<<<<< HEAD
state 448
=======
    CLOSE_PAR	shift, and go to state 334
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 285

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA . error   (rule 307)

    error	shift, and go to state 457
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 458
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 459
    STRUCT_TYPE	shift, and go to state 460

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 461

<<<<<<< HEAD
state 449
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 286

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    COLON	shift, and go to state 462

<<<<<<< HEAD
state 450
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 652
=======
state 287
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 463

<<<<<<< HEAD
state 451
=======
    $default	reduce using rule 327 (option_frame_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_frame_identifier	go to state 464

<<<<<<< HEAD
    COMMA	shift, and go to state 653
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 288

<<<<<<< HEAD
state 452
=======
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ID  	shift, and go to state 344
    STRUCT_TYPE	shift, and go to state 465

<<<<<<< HEAD
    COMMA	shift, and go to state 654
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 289

<<<<<<< HEAD
state 453
=======
    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 409

<<<<<<< HEAD
    COMMA	shift, and go to state 655



state 454
=======
    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 290
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 656
=======
    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)


<<<<<<< HEAD
state 455

    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 63)

    CLOSE_PAR	shift, and go to state 657
=======

state 291

    type_define  ->  VOIDDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 412

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)

<<<<<<< HEAD
state 456

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 74)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 658
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 292

    type_define  ->  FLOATDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
state 457
=======
    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 414
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 370
    identifier	go to state 259
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 293

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 466
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164

<<<<<<< HEAD
state 458
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 372
    identifier	go to state 259
=======
state 294

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 468
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 192
    identifier	go to state 193

<<<<<<< HEAD
state 459
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 659
    ID  	shift, and go to state 660

    identifier	go to state 661
=======
state 295

    for_sta_init  ->  declaration .   (rule 340)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 340 (for_sta_init)


<<<<<<< HEAD
state 460

    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 62)

    CLOSE_PAR	shift, and go to state 662
=======

state 296

    for_sta_init  ->  ass_statement .   (rule 339)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 339 (for_sta_init)


<<<<<<< HEAD
state 461
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 297

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 663
    CHARDECLARATION	shift, and go to state 664
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 469


<<<<<<< HEAD
state 462
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 298

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 337)

    DO  	shift, and go to state 470


<<<<<<< HEAD
state 463
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 299

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 665
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 464
=======
    bool_par  ->  error CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (bool_par)



state 300

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 318)

    CLOSE_PAR	shift, and go to state 471
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275



state 301
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement_bpar  ->  error . CLOSE_BPAR   (rule 317)

<<<<<<< HEAD
    MUL 	shift, and go to state 666



state 465

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 208
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 667
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 668
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 669
    OPEN_PAR	shift, and go to state 209
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 670
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 211
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    statement	go to state 212
    function_define	go to state 75
    function	go to state 213
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 219
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 220
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 221



state 466

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 671
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
    CLOSE_BPAR	shift, and go to state 472



state 302

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 316)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 473
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 303

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 336)

<<<<<<< HEAD
state 467
=======
    $default	reduce using rule 336 (while_statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 304

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 474
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 468
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273
=======
state 305
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 476
    rightaddrshift	go to state 310
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 477
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 478
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    strliteral	go to state 479
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



<<<<<<< HEAD
state 469
=======
state 306
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 200)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 201)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 480
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 481
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 482
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 483
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 433
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 307

<<<<<<< HEAD
state 470
=======
    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 197)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 198)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 480
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 484
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 485
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 486
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 308

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 140)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 487
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

<<<<<<< HEAD
state 471
=======
    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 178
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 438
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 309

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 355)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 356)

    COMMA	shift, and go to state 488
    CLOSE_PAR	shift, and go to state 489

<<<<<<< HEAD
state 472
=======
    CLOSE_PAR	[reduce using rule 357 (option_output)]
    $default	reduce using rule 357 (option_output)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_output	go to state 490

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 672
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 310

    ass_right  ->  rightaddrshift .   (rule 139)

<<<<<<< HEAD
state 473
=======
    $default	reduce using rule 139 (ass_right)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 269
    COMMA	shift, and go to state 673
    CLOSE_PAR	shift, and go to state 674
    IMPLY	shift, and go to state 271
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 311

<<<<<<< HEAD
    option_input	go to state 675
=======
    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 134 (ass_right)

<<<<<<< HEAD
state 474

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 428)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    COMMA	shift, and go to state 673
    CLOSE_PAR	shift, and go to state 676
    IMPLY	shift, and go to state 276
=======
    ari_operator	go to state 241

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_input	go to state 677
=======
state 312
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 491

<<<<<<< HEAD
state 475
=======
    $default	reduce using rule 135 (ass_right)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 678
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 313

    array_exp  ->  option_list_value .   (rule 193)

<<<<<<< HEAD
state 476
=======
    $default	reduce using rule 193 (array_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 679
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 314

    array_exp  ->  option_struct_list_value .   (rule 194)

<<<<<<< HEAD
state 477
=======
    $default	reduce using rule 194 (array_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 680
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 315

    ass_right  ->  strliteral .   (rule 136)

<<<<<<< HEAD
state 478
=======
    $default	reduce using rule 136 (ass_right)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 681
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 316

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 352)

<<<<<<< HEAD
state 479
=======
    THEN	shift, and go to state 492
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    error	shift, and go to state 682
    OPEN_PAR	shift, and go to state 322
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 323
    point_exp	go to state 324
    address_exp	go to state 325
    identifier	go to state 326
    struct_member_exp	go to state 327
=======

state 317
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 465

<<<<<<< HEAD
state 480
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 683
    OPEN_MPAR	shift, and go to state 255
=======
state 318
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 493

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)

<<<<<<< HEAD
state 481
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 684
=======
state 319
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    inner_option_function_identifier	go to state 685
=======
    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 494
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)


<<<<<<< HEAD
state 482
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 320

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 686
=======
    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 495

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)

<<<<<<< HEAD
state 483
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 321
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 496
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 497
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 172

<<<<<<< HEAD
    option_ari_exp	go to state 688
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 322

<<<<<<< HEAD
state 484
=======
    sign_declaration  ->  SIGNED . declaration   (rule 77)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 498
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 499
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 173
    type_define	go to state 172



<<<<<<< HEAD
state 485
=======
state 323
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 335)

<<<<<<< HEAD
    ASS_P	shift, and go to state 689



state 486

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 690
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 500
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 324

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 176
    point_exp	go to state 177
    identifier	go to state 501

<<<<<<< HEAD
state 487
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    error	shift, and go to state 691
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 692
    identifier	go to state 259
=======
state 325

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 502

    $default	reduce using rule 320 (identifier)

<<<<<<< HEAD
state 488

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 102)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 693
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 326

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL identifier .   (rule 151)

<<<<<<< HEAD
state 489
=======
    CLOSE_PAR	shift, and go to state 503
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



state 327

<<<<<<< HEAD
state 490
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 504
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 505
    struct_member_exp	go to state 230
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 328

    imply_pre  ->  NEGATION imply_pre .   (rule 332)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)


<<<<<<< HEAD
state 491
=======
    $default	reduce using rule 332 (imply_pre)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 329

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 66)

    $default	reduce using rule 66 (statement)

<<<<<<< HEAD
state 492
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    AND 	shift, and go to state 263
=======
state 330
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (ass_left)


<<<<<<< HEAD
state 493
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 331

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 147)

    $default	reduce using rule 147 (array)



<<<<<<< HEAD
state 494

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73
=======
state 332

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 157)

    OPEN_MPAR	shift, and go to state 506

    $default	reduce using rule 157 (point_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration	go to state 236
    type_define	go to state 237


<<<<<<< HEAD

state 495

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 78)
=======
state 333

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 379)

    IMPLY	shift, and go to state 507
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_BPAR	shift, and go to state 694


<<<<<<< HEAD

state 496

    option_struct_declaration  ->  sign_declaration .   (rule 68)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 69)

    AND 	shift, and go to state 695

    $default	reduce using rule 68 (option_struct_declaration)
=======
state 334

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 321)

    $default	reduce using rule 321 (identifier)


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 335

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

<<<<<<< HEAD
state 497
=======
    IMPLY	shift, and go to state 508
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 336

    imply_pre  ->  imply_pre OR . imply_pre   (rule 334)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 509
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 498
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 337

    imply_pre  ->  imply_pre AND . imply_pre   (rule 333)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 510
    struct_member_exp	go to state 108



state 338

<<<<<<< HEAD
state 499
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 383)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 383 (struct_member_exp)



state 339

    option_projection  ->  COMMA . statement option_projection   (rule 330)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 511
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
state 500
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 340

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 512

<<<<<<< HEAD
state 501
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 341

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 513



<<<<<<< HEAD
state 502
=======
state 342
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 514



<<<<<<< HEAD
state 503
=======
state 343
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 515
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 344

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

<<<<<<< HEAD
state 504
=======
    option_identifier_array_declaration	go to state 279
    identifier	go to state 193
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 345

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 281
    identifier	go to state 193

<<<<<<< HEAD
state 505
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 346

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 516
    ID  	shift, and go to state 517

    identifier	go to state 518


<<<<<<< HEAD
state 506
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 347

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 261)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 262)

    INTDECLARATION	shift, and go to state 519
    CHARDECLARATION	shift, and go to state 520



state 348

<<<<<<< HEAD
state 507

    function_define  ->  all_type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 707



state 508
=======
    all_type_define  ->  type_define .   (rule 264)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 264 (all_type_define)



state 349

<<<<<<< HEAD
state 509
=======
    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 156)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 521
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697
=======
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_struct_member_exp	go to state 708
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 350

    all_type_define  ->  sign_type_define .   (rule 263)

<<<<<<< HEAD
state 510
=======
    $default	reduce using rule 263 (all_type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 351

<<<<<<< HEAD
    option_struct_member_exp	go to state 709
=======
    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 155)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 522


<<<<<<< HEAD
state 511
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 352

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 66)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 523
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 524
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 525
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 526
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164


<<<<<<< HEAD
state 512
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 353

<<<<<<< HEAD
    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 527
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
    option_struct_member_exp	go to state 710
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 354

<<<<<<< HEAD
state 513
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 204
    OPEN_PAR	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)


<<<<<<< HEAD
    option_struct_member_exp	go to state 711
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 355

    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)

<<<<<<< HEAD
state 514
=======
    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    $default	reduce using rule 115 (ass_left)



state 356

<<<<<<< HEAD
state 515
=======
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 333

<<<<<<< HEAD
    COMMA	shift, and go to state 279
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    poptional_projection	go to state 712
=======
state 357
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_left  ->  identifier .   (rule 112)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210

<<<<<<< HEAD
state 516
=======
    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    PROJECTION	shift, and go to state 713
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 358

    ass_left  ->  struct_member_exp .   (rule 113)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)

<<<<<<< HEAD
state 517

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 172)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 714
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 518
=======
    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 359
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    OPEN_PAR	shift, and go to state 528
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 529
    point_exp	go to state 355
    address_exp	go to state 356
    identifier	go to state 357
    struct_member_exp	go to state 358

<<<<<<< HEAD
    MUL 	shift, and go to state 715
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 360

<<<<<<< HEAD
state 519

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 225)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 716
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 530
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241


<<<<<<< HEAD
state 520
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 361

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 718
    MUL 	shift, and go to state 719
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 426
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 427
    point_exp	go to state 428
    address_exp	go to state 356
    identifier	go to state 430
    struct_member_exp	go to state 431

<<<<<<< HEAD
state 521

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 227)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 720
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 362

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 362)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

<<<<<<< HEAD
state 522
=======
    DOT 	shift, and go to state 204
    COMMA	shift, and go to state 531
    CLOSE_PAR	shift, and go to state 532
    IMPLY	shift, and go to state 206
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 364 (option_input)]
    $default	reduce using rule 364 (option_input)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 722



state 523
=======
    option_input	go to state 533



state 363
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 360)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

    DOT 	shift, and go to state 209
    COMMA	shift, and go to state 531
    CLOSE_PAR	shift, and go to state 534
    IMPLY	shift, and go to state 210

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 723
    MUL 	shift, and go to state 724
=======
    CLOSE_PAR	[reduce using rule 364 (option_input)]
    $default	reduce using rule 364 (option_input)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_input	go to state 535


<<<<<<< HEAD
state 524

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 226)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 725
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 364
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 363)

    CLOSE_PAR	shift, and go to state 536

<<<<<<< HEAD
state 525
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 727
=======
state 365
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 537
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 526
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 728
=======
state 366
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 538
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 527
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 729
=======
state 367
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 539
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 528
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 730
=======
state 368
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)
    option_function_identifier  ->  ADDRESS . error   (rule 311)

    error	shift, and go to state 540
    OPEN_PAR	shift, and go to state 231
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

<<<<<<< HEAD
state 529
=======
    array	go to state 232
    point_exp	go to state 233
    address_exp	go to state 234
    identifier	go to state 235
    struct_member_exp	go to state 236
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 732
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 369

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)
    identifier  ->  ID .   (rule 320)

<<<<<<< HEAD
state 530
=======
    OPEN_PAR	shift, and go to state 541
    OPEN_MPAR	shift, and go to state 189
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 320 (identifier)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 734
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 370

<<<<<<< HEAD
state 531
=======
    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 308)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 542

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 736
=======
    $default	reduce using rule 314 (inner_option_function_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_function_identifier	go to state 543


<<<<<<< HEAD
state 532
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 371

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 737
=======
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 544


<<<<<<< HEAD
state 533
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 372

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 738
=======
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
state 534
=======
    option_ari_exp	go to state 546
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 739
    MUL 	shift, and go to state 740
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 373

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 103)

<<<<<<< HEAD
state 535
=======
    $default	reduce using rule 103 (option_identifier_array_declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 374

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

<<<<<<< HEAD
state 536
=======
    ASS_P	shift, and go to state 547
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    IMPLY	shift, and go to state 644
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 375

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 548
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 537
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 376

<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 741
=======
    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 104)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 105)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    error	shift, and go to state 549
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 550
    identifier	go to state 193

<<<<<<< HEAD
state 538
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 742
=======
state 377
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 98)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 551
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 539
=======
state 378
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 96)

<<<<<<< HEAD
    MUL 	shift, and go to state 743
=======
    $default	reduce using rule 96 (option_identifier_array_declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 379

<<<<<<< HEAD
state 540
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
    MUL 	shift, and go to state 744
=======
    $default	reduce using rule 32 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 380

<<<<<<< HEAD
state 541
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    AND 	shift, and go to state 197

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 745
    CHARDECLARATION	shift, and go to state 746



state 542
=======
    $default	reduce using rule 31 (statement)



state 381
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 747
    MUL 	shift, and go to state 748
=======
    AND 	shift, and go to state 197
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 55 (statement)


<<<<<<< HEAD
state 543
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 382

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 749
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 30 (statement)


<<<<<<< HEAD
state 544
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 383

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 750
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 74)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_BPAR	shift, and go to state 552


<<<<<<< HEAD
state 545
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 384

    option_struct_declaration  ->  sign_declaration .   (rule 67)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 68)

    AND 	shift, and go to state 553

    $default	reduce using rule 67 (option_struct_declaration)

<<<<<<< HEAD
state 546
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 751
=======
state 385
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

<<<<<<< HEAD
state 547
=======
    $default	reduce using rule 290 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 554

<<<<<<< HEAD
    COMMA	shift, and go to state 752
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 386

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 111)

<<<<<<< HEAD
state 548
=======
    $default	reduce using rule 111 (ass_statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 753
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

state 387
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    OPEN_PAR	shift, and go to state 555
    ID  	shift, and go to state 175

<<<<<<< HEAD
state 549
=======
    array	go to state 556
    identifier	go to state 284
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 754
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

state 388
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

<<<<<<< HEAD
state 550
=======
    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp	go to state 559

<<<<<<< HEAD
    COMMA	shift, and go to state 755
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 389

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 368)

<<<<<<< HEAD
state 551
=======
    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    COMMA	shift, and go to state 756
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    option_struct_member_exp	go to state 560

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 390

<<<<<<< HEAD
state 552

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    INTDECLARATION	shift, and go to state 757
    CHARDECLARATION	shift, and go to state 758
    FLOATDECLARATION	shift, and go to state 759
    OPEN_PAR	shift, and go to state 552
    UNSIGNED	shift, and go to state 760
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 553
    point_exp	go to state 554
    address_exp	go to state 555
    identifier	go to state 556
    struct_member_exp	go to state 557



state 553
=======
    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 561



state 391
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 378)

<<<<<<< HEAD
    DOT 	shift, and go to state 269
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271
=======
    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 562

<<<<<<< HEAD
state 554
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273
=======
state 392
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

<<<<<<< HEAD
state 555
=======
    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp	go to state 563

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 536
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 393

<<<<<<< HEAD
state 556
=======
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 372)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

<<<<<<< HEAD
    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276
=======
    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp	go to state 564


<<<<<<< HEAD
state 557
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 394

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 438
=======
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 369)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
state 558
=======
    option_struct_member_exp	go to state 565
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 395

<<<<<<< HEAD
    bi_operator	go to state 347
=======
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 382)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
state 559
=======
    option_struct_member_exp	go to state 566
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 396

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 376)

<<<<<<< HEAD
state 560
=======
    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_struct_member_exp	go to state 567
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 397

    struct_member_exp  ->  identifier DOT function .   (rule 380)

<<<<<<< HEAD
state 561
=======
    $default	reduce using rule 380 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 761
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 398

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 370)

<<<<<<< HEAD
state 562
=======
    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_struct_member_exp	go to state 568
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 399

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 367)

<<<<<<< HEAD
state 563
=======
    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_struct_member_exp	go to state 569
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 400

    struct_member_exp  ->  identifier IMPLY function .   (rule 381)

<<<<<<< HEAD
state 564
=======
    $default	reduce using rule 381 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 401

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 377)

<<<<<<< HEAD
state 565
=======
    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 570



<<<<<<< HEAD
state 566
=======
state 402
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 571

<<<<<<< HEAD
state 567
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 403

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)

<<<<<<< HEAD
state 568
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 404

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 213
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

<<<<<<< HEAD
state 569
=======
    $default	reduce using rule 29 (poptional_projection)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    poptional_projection	go to state 572



state 405

<<<<<<< HEAD
state 570
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    PROJECTION	shift, and go to state 573



state 406

<<<<<<< HEAD
state 571
=======
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 574
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 407

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 575


<<<<<<< HEAD
state 572
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 408

<<<<<<< HEAD
    ELSE	shift, and go to state 762
=======
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 576
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_else_statement	go to state 763
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 409

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
state 573
=======
    CLOSE_PAR	shift, and go to state 578
    MUL 	shift, and go to state 579
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    AND 	shift, and go to state 366
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 410

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 580
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 574
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 411

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 581
    MUL 	shift, and go to state 582



<<<<<<< HEAD
state 575
=======
state 412
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    CLOSE_PAR	shift, and go to state 583
    MUL 	shift, and go to state 584
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 413

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 585
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 576
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 414
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    ari_operator	go to state 332



state 577
=======
    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 415
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 588



<<<<<<< HEAD
state 578

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    INTDECLARATION	shift, and go to state 764
    CHARDECLARATION	shift, and go to state 765
    FLOATDECLARATION	shift, and go to state 766
    OPEN_PAR	shift, and go to state 578
    UNSIGNED	shift, and go to state 767
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 580
    point_exp	go to state 468
    address_exp	go to state 555
    identifier	go to state 470
    struct_member_exp	go to state 471
=======
state 416

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 589


<<<<<<< HEAD
state 579
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 417

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 430
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 590


<<<<<<< HEAD
state 580
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 418

<<<<<<< HEAD
    DOT 	shift, and go to state 269
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 592



<<<<<<< HEAD
state 581
=======
state 419

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594

<<<<<<< HEAD
    STRLITERAL	shift, and go to state 180

    strliteral	go to state 768
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 420

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
state 582
=======
    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 596
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 421

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

<<<<<<< HEAD
state 583
=======
    CLOSE_PAR	shift, and go to state 597
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTLITERAL	shift, and go to state 142

    intliteral	go to state 769
=======

state 422
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 598

<<<<<<< HEAD
state 584
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 770
=======
state 423

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600


<<<<<<< HEAD
state 585
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 424

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)


<<<<<<< HEAD
state 586
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 425

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 757
    CHARDECLARATION	shift, and go to state 758
    FLOATDECLARATION	shift, and go to state 759
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 760
    ID  	shift, and go to state 241

    array	go to state 587
    identifier	go to state 384
=======
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 379)

    IMPLY	shift, and go to state 507
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    IMPLY	[reduce using rule 211 (address_exp)]
    $default	reduce using rule 211 (address_exp)


<<<<<<< HEAD
state 587
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 426

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 431



state 588
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
    FLOATDECLARATION	shift, and go to state 603
    OPEN_PAR	shift, and go to state 426
    UNSIGNED	shift, and go to state 604
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 175

    array	go to state 427
    point_exp	go to state 428
    address_exp	go to state 429
    identifier	go to state 430
    struct_member_exp	go to state 431



state 427
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 771
=======
    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 428

<<<<<<< HEAD
state 589
=======
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 772
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 429

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)

<<<<<<< HEAD
state 590
=======
    CLOSE_PAR	shift, and go to state 425
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 773
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 430

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 321)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . DOT function   (rule 380)
    struct_member_exp  ->  identifier . IMPLY function   (rule 381)

<<<<<<< HEAD
state 591
=======
    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 210
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 774
    ID  	shift, and go to state 198
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 431

<<<<<<< HEAD
    inner_option_define_identifier	go to state 775
    identifier	go to state 776
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 383)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 338


<<<<<<< HEAD
state 592
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 432

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 198
=======
    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 160)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

<<<<<<< HEAD
    inner_option_define_identifier	go to state 778
    identifier	go to state 779
=======
    INTER_OR	[reduce using rule 160 (ari_exp)]
    CON 	[reduce using rule 160 (ari_exp)]
    ADDRESS	[reduce using rule 160 (ari_exp)]
    LST 	[reduce using rule 160 (ari_exp)]
    RST 	[reduce using rule 160 (ari_exp)]
    MUL 	[reduce using rule 160 (ari_exp)]
    DIV 	[reduce using rule 160 (ari_exp)]
    MOD 	[reduce using rule 160 (ari_exp)]
    $default	reduce using rule 160 (ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bi_operator	go to state 256


<<<<<<< HEAD
state 593
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 433

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 780
    ID  	shift, and go to state 198
=======
    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 167)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 167 (simple_ari_exp)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 781
    identifier	go to state 782
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 434

<<<<<<< HEAD
state 594
=======
    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 783
=======
    ADD 	[reduce using rule 159 (ari_exp)]
    SUB 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241


<<<<<<< HEAD
state 595
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 435

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 346)

    OPEN_BPAR	shift, and go to state 605


<<<<<<< HEAD
state 596
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 436

<<<<<<< HEAD
    MUL 	shift, and go to state 784
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 252)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 252 (prime_bool_exp)

<<<<<<< HEAD
state 597
=======
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 785
=======

state 437
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 251)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
state 598
=======
    $default	reduce using rule 251 (prime_bool_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 786
    ID  	shift, and go to state 198

    identifier	go to state 787
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 438

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 240)

<<<<<<< HEAD
state 599
=======
    $default	reduce using rule 240 (bool_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 788
    ID  	shift, and go to state 198
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 439

<<<<<<< HEAD
    inner_option_define_identifier	go to state 789
    identifier	go to state 790
=======
    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 250)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 250 (prime_bool_exp)


<<<<<<< HEAD
state 600

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 791
=======

state 440

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 246)

    $default	reduce using rule 246 (prime_bool_exp)



state 441
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)

<<<<<<< HEAD
state 601
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    error	shift, and go to state 792
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 793
=======
state 442

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 249)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 249 (prime_bool_exp)


<<<<<<< HEAD
state 602
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 443

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 794
=======
    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 245)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 245 (prime_bool_exp)


<<<<<<< HEAD
state 603
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 444

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 795
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 371
    identifier	go to state 259



state 604

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 796
    CHARDECLARATION	shift, and go to state 797
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 798
    OPEN_PAR	shift, and go to state 604
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 799
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 219
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 221
=======
    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 445

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 241)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 241 (prime_bool_exp)

<<<<<<< HEAD
state 605
=======
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 739
    MUL 	shift, and go to state 800
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259
=======

state 446
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 352)

    ELSE	shift, and go to state 606

<<<<<<< HEAD
state 606

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 411 (for_sta_condition)

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 801
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    for_sta_condition	go to state 802
    struct_member_exp	go to state 159



state 607
=======
    $default	reduce using rule 354 (option_else_statement)

    option_else_statement	go to state 607



state 447
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 239)

<<<<<<< HEAD
    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 803



state 608
=======
    AND 	shift, and go to state 275

    $default	reduce using rule 239 (bool_exp)



state 448
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 238 (bool_exp)


<<<<<<< HEAD
state 609
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 449

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 248)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 248 (prime_bool_exp)

<<<<<<< HEAD
state 610
=======
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 804
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 450

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 247)

<<<<<<< HEAD
state 611
=======
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 247 (prime_bool_exp)

<<<<<<< HEAD
    UNTIL	shift, and go to state 805



state 612

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 612
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 613
    rightaddrshift	go to state 410
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 614
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 615
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    strliteral	go to state 616
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
    ari_operator	go to state 241



state 451

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 44 (statement)


<<<<<<< HEAD
state 613
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 452

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 806
=======
    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 608


<<<<<<< HEAD
state 614
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 453

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 535
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 280)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 609
    ID  	shift, and go to state 141

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier	go to state 610
    identifier	go to state 611


<<<<<<< HEAD
state 615
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 454

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 807
    CON 	shift, and go to state 628
=======
    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 277)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 612
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 613
    identifier	go to state 614

<<<<<<< HEAD
state 616
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 808
=======
state 455
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 615
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
state 617

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 809
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 810
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
    inner_option_define_identifier	go to state 616
    identifier	go to state 617

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 456

<<<<<<< HEAD
state 618
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 618

<<<<<<< HEAD
    COMMA	shift, and go to state 811
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
    inner_option_list_value	go to state 812
=======
state 457
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA error .   (rule 307)

    $default	reduce using rule 307 (inner_option_define_identifier)

<<<<<<< HEAD
state 619
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 811
    CON 	shift, and go to state 628
=======
state 458
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

<<<<<<< HEAD
    inner_option_list_value	go to state 813



state 620
=======
    MUL 	shift, and go to state 619



state 459
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 296)

<<<<<<< HEAD
    COMMA	shift, and go to state 811
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier	go to state 620

<<<<<<< HEAD
    inner_option_list_value	go to state 814
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 460

<<<<<<< HEAD
state 621
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 297)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 621
    ID  	shift, and go to state 141

<<<<<<< HEAD
    COMMA	shift, and go to state 811
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    identifier	go to state 622
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ari_operator	go to state 332
    inner_option_list_value	go to state 815
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 461

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 306)

<<<<<<< HEAD
state 622
=======
    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 623
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
    COMMA	shift, and go to state 811
    CON 	shift, and go to state 628
=======
    inner_option_define_identifier	go to state 624
    identifier	go to state 625
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_list_value	go to state 816
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 462

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 65)

<<<<<<< HEAD
state 623
=======
    OPEN_BPAR	shift, and go to state 626
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 811
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 463

<<<<<<< HEAD
    inner_option_list_value	go to state 817
=======
    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 326)
    option_frame_identifier  ->  COMMA . error   (rule 328)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    error	shift, and go to state 627
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 628

<<<<<<< HEAD
state 624

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 167)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 818
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 461
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    type_define	go to state 462
    file_statement	go to state 82
    leftaddrshift	go to state 819
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 463
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    sign_type_define	go to state 95
    all_type_define	go to state 464
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 464

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

<<<<<<< HEAD
state 625

    option_output  ->  COMMA . ass_right option_output   (rule 426)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 820
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 629

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 465

<<<<<<< HEAD
state 626
=======
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 630
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 280
    identifier	go to state 193



<<<<<<< HEAD
state 627
=======
state 466
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 631
    CHARDECLARATION	shift, and go to state 632
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 633
    OPEN_PAR	shift, and go to state 466
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 634
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 821
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 467

<<<<<<< HEAD
state 628
=======
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 330

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407

    array_exp	go to state 823
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 468

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
state 629

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 172)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 420)

    error	shift, and go to state 401
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    OPEN_BPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 714
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    statement_bpar	go to state 572
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 630
=======
    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 635
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193



state 469
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 343 (for_sta_condition)

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 636
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_condition	go to state 637
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 824
    MUL 	shift, and go to state 719
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 470

<<<<<<< HEAD
state 631
=======
    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 337)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 825
    MUL 	shift, and go to state 722



state 632
=======
    statement_bpar	go to state 638



state 471
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 318)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 826
    MUL 	shift, and go to state 727



state 633

    type_define  ->  INTDECLARATION .   (rule 94)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 827

    MUL 	[reduce using rule 94 (type_define)]
    ID  	reduce using rule 94 (type_define)
    ID  	[reduce using rule 329 (sign_type_define)]
    $default	reduce using rule 94 (type_define)
=======
    $default	reduce using rule 318 (bool_par)



state 472

    statement_bpar  ->  error CLOSE_BPAR .   (rule 317)

    $default	reduce using rule 317 (statement_bpar)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 473

<<<<<<< HEAD
state 634

    type_define  ->  CHARDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 828

    MUL 	[reduce using rule 96 (type_define)]
    ID  	reduce using rule 96 (type_define)
    ID  	[reduce using rule 330 (sign_type_define)]
    $default	reduce using rule 96 (type_define)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 316)

    CLOSE_BPAR	shift, and go to state 639
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 474

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

<<<<<<< HEAD
state 635
=======
    UNTIL	shift, and go to state 640
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 737
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 475

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 475
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 476
    rightaddrshift	go to state 310
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 477
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 478
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    strliteral	go to state 479
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230


<<<<<<< HEAD
state 636
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 476

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 738
=======
    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 138)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 641



<<<<<<< HEAD
state 637
=======
state 477
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

<<<<<<< HEAD
    IMPLY	shift, and go to state 645
=======
    CLOSE_PAR	shift, and go to state 424
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)

    ari_operator	go to state 241


<<<<<<< HEAD
state 638
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 478

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 829
=======
    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 642
    CON 	shift, and go to state 491

    CLOSE_PAR	[reduce using rule 135 (ass_right)]
    $default	reduce using rule 135 (ass_right)


<<<<<<< HEAD
state 639

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 830
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 479
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  strliteral .   (rule 136)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 643

<<<<<<< HEAD
state 640
=======
    CLOSE_PAR	[reduce using rule 136 (ass_right)]
    $default	reduce using rule 136 (ass_right)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 831
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 480

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 644
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 645
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230

<<<<<<< HEAD
state 641

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 403)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 641
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 642
    struct_member_exp	go to state 296
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 481

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

<<<<<<< HEAD
state 642
=======
    COMMA	shift, and go to state 646
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 205 (inner_option_list_value)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 832
    OR  	shift, and go to state 436
    AND 	shift, and go to state 437



state 643

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 165)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 833
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    ari_operator	go to state 241
    inner_option_list_value	go to state 647



state 482

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 201)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 646
    CON 	shift, and go to state 491

    $default	reduce using rule 205 (inner_option_list_value)

<<<<<<< HEAD
state 644
=======
    inner_option_list_value	go to state 648
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 834
    identifier	go to state 835
=======

state 483
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 646

<<<<<<< HEAD
state 645
=======
    $default	reduce using rule 205 (inner_option_list_value)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_list_value	go to state 649

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 836
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 484

<<<<<<< HEAD
state 646
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 196)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 646
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    AND 	shift, and go to state 437
=======
    $default	reduce using rule 205 (inner_option_list_value)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241
    inner_option_list_value	go to state 650



<<<<<<< HEAD
state 647
=======
state 485
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 198)

    COMMA	shift, and go to state 646
    CON 	shift, and go to state 491

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 651


<<<<<<< HEAD
state 648
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 486

<<<<<<< HEAD
    COMMA	shift, and go to state 439
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 197)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 646

<<<<<<< HEAD
    option_projection	go to state 837



state 649

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 838
=======
    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 652



state 487

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 653
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 347
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 348
    leftaddrshift	go to state 654
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 349
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 350
    all_type_define	go to state 351
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 488

    option_output  ->  COMMA . ass_right option_output   (rule 358)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 655
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 489

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 355)

<<<<<<< HEAD
state 650

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 839
=======
    $default	reduce using rule 355 (output_statement)


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 490

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 356)

<<<<<<< HEAD
state 651
=======
    CLOSE_PAR	shift, and go to state 656
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 491

    array_exp  ->  array_exp CON . array_exp   (rule 192)

<<<<<<< HEAD
state 652
=======
    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array_exp	go to state 658
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 492

<<<<<<< HEAD
state 653

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 840
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449
=======
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 352)

    error	shift, and go to state 301
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    OPEN_BPAR	shift, and go to state 302
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 574
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    statement_bpar	go to state 446
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 493

<<<<<<< HEAD
state 654

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 841
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 655

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 842
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 659
    MUL 	shift, and go to state 579



state 494

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 660
    MUL 	shift, and go to state 582


<<<<<<< HEAD
state 656
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 495

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 661
    MUL 	shift, and go to state 587


<<<<<<< HEAD
state 657

    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 63)

    $default	reduce using rule 63 (statement)
=======

state 496

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 662

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)

<<<<<<< HEAD
state 658
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 497

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 663

<<<<<<< HEAD
state 659
=======
    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 498

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 597

<<<<<<< HEAD
state 660
=======
    $default	reduce using rule 90 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 499

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 598

<<<<<<< HEAD
state 661
=======
    $default	reduce using rule 92 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 640
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 500

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 335)

<<<<<<< HEAD
state 662

    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 62)

    $default	reduce using rule 62 (statement)
=======
    IMPLY	shift, and go to state 508

    $default	reduce using rule 335 (imply_pre)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 501

<<<<<<< HEAD
state 663
=======
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL identifier .   (rule 151)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 664

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



<<<<<<< HEAD
state 664
=======
state 502
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 665
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 503

<<<<<<< HEAD
state 665
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 666



state 504

<<<<<<< HEAD
state 666
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 216
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 504
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 267
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 229
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 505
    struct_member_exp	go to state 230
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 505

    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 335)

<<<<<<< HEAD
state 667
=======
    CLOSE_PAR	shift, and go to state 667
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 506

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 668
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 668
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 507

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 379)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

    array	go to state 669
    identifier	go to state 670


<<<<<<< HEAD
state 669
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 508

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 671



<<<<<<< HEAD
state 670

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 850
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 851
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237



state 671
=======
state 509

    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 334)

    AND 	shift, and go to state 337

    $default	reduce using rule 334 (imply_pre)



state 510
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    imply_pre  ->  imply_pre . AND imply_pre   (rule 333)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 333)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 334)


    $default	reduce using rule 333 (imply_pre)


<<<<<<< HEAD
state 672
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 511

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 330)

    COMMA	shift, and go to state 339
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

    $default	reduce using rule 329 (option_projection)

<<<<<<< HEAD
state 673
=======
    option_projection	go to state 672
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 512

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

<<<<<<< HEAD
state 674
=======
    statement_bpar	go to state 673
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 513

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

<<<<<<< HEAD
state 675
=======
    PROJECTION	shift, and go to state 674
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 514

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

<<<<<<< HEAD
state 676
=======
    CLOSE_PAR	shift, and go to state 675
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 515

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

<<<<<<< HEAD
state 677
=======
    CLOSE_PAR	shift, and go to state 676
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 516

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

<<<<<<< HEAD
state 678
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier	go to state 677



state 517

<<<<<<< HEAD
state 679
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 678

    $default	reduce using rule 320 (identifier)



<<<<<<< HEAD
state 680
=======
state 518
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 503



<<<<<<< HEAD
state 681
=======
state 519
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



<<<<<<< HEAD
state 682
=======
state 520
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 262)

    $default	reduce using rule 262 (sign_type_define)



<<<<<<< HEAD
state 683

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 377)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 856
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
state 521

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 156)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 156 (point_exp)


<<<<<<< HEAD
state 684

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 380)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 381)
    inner_option_function_identifier  ->  COMMA . error   (rule 383)

    error	shift, and go to state 857
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 858
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 859
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 522
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 155)

    CLOSE_PAR	shift, and go to state 679

<<<<<<< HEAD
state 685
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 523

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 680

<<<<<<< HEAD
state 686
=======
    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 524

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
state 687

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 159)
    option_ari_exp  ->  COMMA . error   (rule 160)

    error	shift, and go to state 860
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 861
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 688
=======
    MUL 	shift, and go to state 681

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 525
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 682

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)


<<<<<<< HEAD
state 689
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 526

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRLITERAL	shift, and go to state 180

    array_exp	go to state 863
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    strliteral	go to state 864
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 683
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 684
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration	go to state 171
    type_define	go to state 172


<<<<<<< HEAD
state 690
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 527

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 41 (statement)

<<<<<<< HEAD
    option_ari_exp	go to state 865
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 528

<<<<<<< HEAD
state 691
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    INTDECLARATION	shift, and go to state 685
    CHARDECLARATION	shift, and go to state 686
    FLOATDECLARATION	shift, and go to state 687
    OPEN_PAR	shift, and go to state 528
    UNSIGNED	shift, and go to state 688
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    ass_left	go to state 467
    leftaddrshift	go to state 70
    array	go to state 529
    point_exp	go to state 355
    address_exp	go to state 429
    identifier	go to state 357
    struct_member_exp	go to state 358
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 529

    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 378)

<<<<<<< HEAD
state 692
=======
    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 206
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 530

<<<<<<< HEAD
state 693
=======
    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 49 (statement)

<<<<<<< HEAD
    COMMA	shift, and go to state 487
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 531

    option_input  ->  COMMA . identifier option_input   (rule 365)
    option_input  ->  COMMA . array option_input   (rule 366)

    OPEN_PAR	shift, and go to state 387
    ID  	shift, and go to state 175

<<<<<<< HEAD
state 694
=======
    array	go to state 689
    identifier	go to state 690
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 532

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 361)

<<<<<<< HEAD
state 695

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 69)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    UNSIGNED	shift, and go to state 494
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 867
    sign_declaration	go to state 496
    declaration	go to state 80
    type_define	go to state 237
=======
    $default	reduce using rule 361 (input_statement)



state 533

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 362)

    CLOSE_PAR	shift, and go to state 691



state 534
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)


<<<<<<< HEAD
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 453)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 454)
    option_struct_member_exp  ->  DOT . function   (rule 457)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 868
    file_statement	go to state 82
    array	go to state 869
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 870
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 535

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 360)

    CLOSE_PAR	shift, and go to state 692

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 455)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 456)
    option_struct_member_exp  ->  IMPLY . function   (rule 458)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 871
    file_statement	go to state 82
    array	go to state 872
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 873
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 536

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 363)

    $default	reduce using rule 363 (input_statement)



state 537

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 538

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 539

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 540

    option_function_identifier  ->  ADDRESS error .   (rule 311)

    $default	reduce using rule 311 (option_function_identifier)



state 541

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 309)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 693
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 542

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 312)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 313)
    inner_option_function_identifier  ->  COMMA . error   (rule 315)

    error	shift, and go to state 694
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 695
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 696
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 543

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 308)

    $default	reduce using rule 308 (option_function_identifier)



state 544

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 545

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 148)
    option_ari_exp  ->  COMMA . error   (rule 149)

    error	shift, and go to state 697
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 698
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 874



state 708

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 438)
=======
state 546
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 699


<<<<<<< HEAD
state 709
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 547

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 700
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    strliteral	go to state 701

<<<<<<< HEAD
state 710
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 548

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
state 711
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 702
    ari_operator	go to state 241



state 549

<<<<<<< HEAD
state 712
=======
    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 105)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 105 (inner_option_identifier_array_declaration)



state 550

<<<<<<< HEAD
state 713
=======
    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 104)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 104 (inner_option_identifier_array_declaration)



state 551

<<<<<<< HEAD
state 714
=======
    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 98)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 376

<<<<<<< HEAD
    ELSE	shift, and go to state 876
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_identifier_array_declaration	go to state 703

<<<<<<< HEAD
    option_exp_else_statement	go to state 877
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 552

<<<<<<< HEAD
state 715
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 74)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 74 (struct_define_statement)



state 553

<<<<<<< HEAD
state 716
=======
    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 68)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 704
    sign_declaration	go to state 384
    declaration	go to state 66
    type_define	go to state 172



<<<<<<< HEAD
state 717

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 173)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 174)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 178)

    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346

    INTER_OR	[reduce using rule 173 (type_cast_alg_exp)]
    CON 	[reduce using rule 173 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 173 (type_cast_alg_exp)]
    LST 	[reduce using rule 173 (type_cast_alg_exp)]
    RST 	[reduce using rule 173 (type_cast_alg_exp)]
    ADD 	[reduce using rule 173 (type_cast_alg_exp)]
    SUB 	[reduce using rule 173 (type_cast_alg_exp)]
    MUL 	[reduce using rule 173 (type_cast_alg_exp)]
    DIV 	[reduce using rule 173 (type_cast_alg_exp)]
    MOD 	[reduce using rule 173 (type_cast_alg_exp)]
    $default	reduce using rule 173 (type_cast_alg_exp)

    bi_operator	go to state 347
    ari_operator	go to state 880
=======
state 554

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 61)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 705


<<<<<<< HEAD
state 718

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 555
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
    FLOATDECLARATION	shift, and go to state 603
    OPEN_PAR	shift, and go to state 555
    UNSIGNED	shift, and go to state 604
    ID  	shift, and go to state 175

<<<<<<< HEAD
state 719
=======
    array	go to state 556
    identifier	go to state 284
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 556

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)

<<<<<<< HEAD
state 720
=======
    CLOSE_PAR	shift, and go to state 331
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 557

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 386)
    option_struct_member_exp  ->  DOT . function   (rule 389)

<<<<<<< HEAD
state 721

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 722
=======
    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 706
    array	go to state 707
    identifier	go to state 708



state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 387)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 388)
    option_struct_member_exp  ->  IMPLY . function   (rule 390)

    OPEN_PAR	shift, and go to state 387
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 709
    array	go to state 710
    identifier	go to state 711


<<<<<<< HEAD
state 723

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 887
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 559
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)

<<<<<<< HEAD
state 724
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 560

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)

<<<<<<< HEAD
state 725
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 561

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)

<<<<<<< HEAD
state 726

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 889
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 562

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 378)

<<<<<<< HEAD
state 727
=======
    $default	reduce using rule 378 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 563

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 374)

<<<<<<< HEAD
state 728
=======
    $default	reduce using rule 374 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 891
    MUL 	shift, and go to state 719
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 564

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 372)

<<<<<<< HEAD
state 729
=======
    $default	reduce using rule 372 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 892
    MUL 	shift, and go to state 722
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 565

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 369)

<<<<<<< HEAD
state 730
=======
    $default	reduce using rule 369 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 893
    MUL 	shift, and go to state 727
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 566

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 382)

<<<<<<< HEAD
state 731
=======
    $default	reduce using rule 382 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 827
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 567

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 376)

<<<<<<< HEAD
state 732
=======
    $default	reduce using rule 376 (struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 894
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 568

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 370)

<<<<<<< HEAD
state 733

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 230)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 895
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 370 (struct_member_exp)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 569

<<<<<<< HEAD
state 734
=======
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 367)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 367 (struct_member_exp)



state 570

<<<<<<< HEAD
state 735

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 231)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 898
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 736
=======
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 571
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



<<<<<<< HEAD
state 737

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 228)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 901
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
state 572

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 28 (poptional_projection)


<<<<<<< HEAD
state 738

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 229)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 902
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 573
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 712

<<<<<<< HEAD
state 739

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 245)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 903
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 574

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 161)

<<<<<<< HEAD
state 740
=======
    ELSE	shift, and go to state 713
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ELSE	[reduce using rule 165 (option_exp_else_statement)]
    ADD 	[reduce using rule 165 (option_exp_else_statement)]
    SUB 	[reduce using rule 165 (option_exp_else_statement)]
    $default	reduce using rule 165 (option_exp_else_statement)

    option_exp_else_statement	go to state 714
    ari_operator	go to state 241



<<<<<<< HEAD
state 741
=======
state 575
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 716



<<<<<<< HEAD
state 742
=======
state 576
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



<<<<<<< HEAD
state 743
=======
state 577
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 162)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    ADD 	[reduce using rule 162 (type_cast_alg_exp)]
    SUB 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 256
    ari_operator	go to state 717


<<<<<<< HEAD
state 744
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 578

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 745
=======
state 579
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 720



state 580

<<<<<<< HEAD
state 746
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 214 (type_cast)



state 581

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 747
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 582

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 722

<<<<<<< HEAD
state 748
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 583

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 723
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 749
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 584

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 724


<<<<<<< HEAD
state 750
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 585

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)


<<<<<<< HEAD
state 751
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 586

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 725
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 752

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 908
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
state 587

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 726


<<<<<<< HEAD
state 753

    math_function  ->  POW OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 909
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 588
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 579

<<<<<<< HEAD
state 754

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 910
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 589

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
state 755

    math_function  ->  MODF OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 911
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 728
    MUL 	shift, and go to state 582

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 590

<<<<<<< HEAD
state 756

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 300)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 912
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 757
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 729
    MUL 	shift, and go to state 587



state 591
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 662



<<<<<<< HEAD
state 758
=======
state 592
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 730



<<<<<<< HEAD
state 759
=======
state 593
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 731
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 594

<<<<<<< HEAD
state 760
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 733



state 595

<<<<<<< HEAD
state 761
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 734
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 596

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 736

<<<<<<< HEAD
state 762
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402
=======
state 597
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 737
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 763
=======
state 598
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 738
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 599

<<<<<<< HEAD
state 764
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 739
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 600

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
state 765
=======
    CLOSE_PAR	shift, and go to state 740
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 601

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
state 766
=======
    MUL 	shift, and go to state 741
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 602

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
state 767
=======
    MUL 	shift, and go to state 742
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 603

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
state 768
=======
    MUL 	shift, and go to state 743
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 604

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
state 769
=======
    INTDECLARATION	shift, and go to state 744
    CHARDECLARATION	shift, and go to state 745
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 605

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 346)

<<<<<<< HEAD
state 770
=======
    CASE	shift, and go to state 746
    DEFAULT	shift, and go to state 747
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    case_par	go to state 748



state 606

<<<<<<< HEAD
state 771
=======
    option_else_statement  ->  ELSE . statement_bpar   (rule 353)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 749



<<<<<<< HEAD
state 772
=======
state 607
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 352)

    $default	reduce using rule 352 (if_statement)



<<<<<<< HEAD
state 773
=======
state 608
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier	go to state 750



<<<<<<< HEAD
state 774
=======
state 609
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 280)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 929
    ID  	shift, and go to state 198
=======
    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 751
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 752
    identifier	go to state 753



<<<<<<< HEAD
state 775
=======
state 610
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



<<<<<<< HEAD
state 776
=======
state 611
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 274)

<<<<<<< HEAD
    ARRAY	shift, and go to state 932
    COMMA	shift, and go to state 385
=======
    ARRAY	shift, and go to state 754
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 755



<<<<<<< HEAD
state 777
=======
state 612
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 277)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 934
    ID  	shift, and go to state 198
=======
    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 756
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 757
    identifier	go to state 758



<<<<<<< HEAD
state 778
=======
state 613
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



<<<<<<< HEAD
state 779
=======
state 614
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 270)

<<<<<<< HEAD
    ARRAY	shift, and go to state 937
    COMMA	shift, and go to state 385
=======
    ARRAY	shift, and go to state 759
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 760



<<<<<<< HEAD
state 780
=======
state 615
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 288)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 939
    ID  	shift, and go to state 198
=======
    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 761
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 762
    identifier	go to state 763



<<<<<<< HEAD
state 781
=======
state 616
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



<<<<<<< HEAD
state 782
=======
state 617
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

<<<<<<< HEAD
    ARRAY	shift, and go to state 942
    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 943
=======
    ARRAY	shift, and go to state 764
    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 765
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766



<<<<<<< HEAD
state 783
=======
state 618
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 767



<<<<<<< HEAD
state 784
=======
state 619
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier	go to state 768



<<<<<<< HEAD
state 785
=======
state 620
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 296)

<<<<<<< HEAD
    ARRAY	shift, and go to state 947
    COMMA	shift, and go to state 385
=======
    ARRAY	shift, and go to state 769
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 770



<<<<<<< HEAD
state 786
=======
state 621
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 295)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    identifier	go to state 771



<<<<<<< HEAD
state 787
=======
state 622
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 297)

<<<<<<< HEAD
    ARRAY	shift, and go to state 950
    COMMA	shift, and go to state 385
=======
    ARRAY	shift, and go to state 772
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 773



<<<<<<< HEAD
state 788
=======
state 623
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 306)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 774
    identifier	go to state 775



<<<<<<< HEAD
state 789
=======
state 624
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



<<<<<<< HEAD
state 790
=======
state 625
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)

<<<<<<< HEAD
    ARRAY	shift, and go to state 954
    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 955
=======
    ARRAY	shift, and go to state 776
    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 777
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778



<<<<<<< HEAD
state 791

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 66)
=======
state 626

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 65)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
<<<<<<< HEAD
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 957
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 792
=======
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 779
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 627
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_frame_identifier  ->  COMMA error .   (rule 328)

    $default	reduce using rule 328 (option_frame_identifier)



<<<<<<< HEAD
state 793
=======
state 628
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 326)

<<<<<<< HEAD
    COMMA	shift, and go to state 601
=======
    COMMA	shift, and go to state 463
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 327 (option_frame_identifier)

    option_frame_identifier	go to state 780



<<<<<<< HEAD
state 794
=======
state 629
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 781



<<<<<<< HEAD
state 795

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 878
    MUL 	shift, and go to state 960
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259
=======
state 630

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 782
    ID  	shift, and go to state 191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193


<<<<<<< HEAD
state 796
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 631

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 630
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 493


<<<<<<< HEAD
state 797
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 632

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 631
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 494


<<<<<<< HEAD
state 798
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 633

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 632
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 413
    MUL 	shift, and go to state 495


<<<<<<< HEAD
state 799
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 634

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 961
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 783


<<<<<<< HEAD
state 800
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 635

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 904
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 740
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193


<<<<<<< HEAD
state 801
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 636

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    for_sta_condition  ->  bool_exp .   (rule 342)

<<<<<<< HEAD
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366
=======
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 342 (for_sta_condition)



<<<<<<< HEAD
state 802
=======
state 637
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 338)

    COMMA	shift, and go to state 784



<<<<<<< HEAD
state 803
=======
state 638
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 337)

    $default	reduce using rule 337 (for_statement)



<<<<<<< HEAD
state 804
=======
state 639
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 316)

    $default	reduce using rule 316 (statement_bpar)



<<<<<<< HEAD
state 805
=======
state 640
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 785



<<<<<<< HEAD
state 806
=======
state 641
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (ass_right)



<<<<<<< HEAD
state 807
=======
state 642
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 195)

    $default	reduce using rule 195 (array_exp)



<<<<<<< HEAD
state 808
=======
state 643
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    OPEN_PAR	shift, and go to state 786



<<<<<<< HEAD
state 809

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 809
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 810
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 810
=======
state 644

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 644
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 645
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 645
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 807
    CON 	shift, and go to state 628



state 811

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 215)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 216)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 217)
    inner_option_list_value  ->  COMMA . error   (rule 219)

    error	shift, and go to state 965
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 617
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 966
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 967
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 968
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 812
=======
    CLOSE_PAR	shift, and go to state 642
    CON 	shift, and go to state 491



state 646

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 204)
    inner_option_list_value  ->  COMMA . error   (rule 206)

    error	shift, and go to state 787
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 480
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 788
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 789
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 790
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 647
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 791



<<<<<<< HEAD
state 813
=======
state 648
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 201)

    CLOSE_BPAR	shift, and go to state 792



<<<<<<< HEAD
state 814
=======
state 649
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 793



<<<<<<< HEAD
state 815
=======
state 650
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 794



<<<<<<< HEAD
state 816
=======
state 651
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 198)

    CLOSE_MPAR	shift, and go to state 795



<<<<<<< HEAD
state 817
=======
state 652
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 796



<<<<<<< HEAD
state 818

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 975
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 819
=======
state 653

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 797
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 418
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 654
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 140)

    CLOSE_PAR	shift, and go to state 798



<<<<<<< HEAD
state 820
=======
state 655
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_output  ->  COMMA ass_right . option_output   (rule 358)

<<<<<<< HEAD
    COMMA	shift, and go to state 625
=======
    COMMA	shift, and go to state 488
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 357 (option_output)

    option_output	go to state 799



<<<<<<< HEAD
state 821
=======
state 656
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (output_statement)



<<<<<<< HEAD
state 822
=======
state 657
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407

    array_exp	go to state 810
    option_list_value	go to state 413
    option_struct_list_value	go to state 414



state 823
=======
    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 645
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 658
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  array_exp CON array_exp .   (rule 192)


    $default	reduce using rule 192 (array_exp)



<<<<<<< HEAD
state 824

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 978
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 980
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 981
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 983
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 826

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 984
    INTLITERAL	shift, and go to state 985
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 889
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 827
=======
state 659

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 800
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 802
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 660

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 803
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 805
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 661

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 806
    INTLITERAL	shift, and go to state 807
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 725
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 662
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 808
    MUL 	shift, and go to state 733



<<<<<<< HEAD
state 828
=======
state 663
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 809
    MUL 	shift, and go to state 736



<<<<<<< HEAD
state 829
=======
state 664
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    OPEN_PAR	shift, and go to state 810



<<<<<<< HEAD
state 830
=======
state 665
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 989
    ari_operator	go to state 332



state 831
=======
    option_ari_exp	go to state 811
    ari_operator	go to state 241



state 666
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 290 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 990



state 832
=======
    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 812



state 667
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 335)

    $default	reduce using rule 335 (imply_pre)



<<<<<<< HEAD
state 833
=======
state 668
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 991
    ari_operator	go to state 332



state 834
=======
    option_ari_exp	go to state 813
    ari_operator	go to state 241



state 669
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 814



<<<<<<< HEAD
state 835
=======
state 670
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

    option_struct_member_exp	go to state 815



<<<<<<< HEAD
state 836
=======
state 671
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
<<<<<<< HEAD
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 994
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 837
=======
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 816
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 672
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_projection  ->  COMMA statement option_projection .   (rule 330)

    $default	reduce using rule 330 (option_projection)



<<<<<<< HEAD
state 838
=======
state 673
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



<<<<<<< HEAD
state 839

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402
=======
state 674

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement_bpar	go to state 817



<<<<<<< HEAD
state 840
=======
state 675

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    ASS_P	shift, and go to state 818



state 676
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 996
=======
    $default	reduce using rule 72 (function)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 677

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 997
=======
    CLOSE_PAR	shift, and go to state 664
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 678

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 819
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 998
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 679

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 155)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 820
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 821


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 829
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 681

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 822

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 999
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 682

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 166)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1000
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 823
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 683

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1001
=======
    MUL 	shift, and go to state 824
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 684

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1002
=======
    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 825

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1003
=======
state 685
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 680


<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 94)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    MUL 	shift, and go to state 1004

    MUL 	[reduce using rule 94 (type_define)]
    ID  	reduce using rule 94 (type_define)
    ID  	[reduce using rule 329 (sign_type_define)]
    $default	reduce using rule 94 (type_define)
=======

state 686

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 681



<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    MUL 	shift, and go to state 1005

    MUL 	[reduce using rule 96 (type_define)]
    ID  	reduce using rule 96 (type_define)
    ID  	[reduce using rule 330 (sign_type_define)]
    $default	reduce using rule 96 (type_define)
=======
state 687

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 682
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 688

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    INTDECLARATION	shift, and go to state 744
    CHARDECLARATION	shift, and go to state 826

<<<<<<< HEAD
    COMMA	shift, and go to state 673
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_input	go to state 1006
=======
state 689
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_input  ->  COMMA array . option_input   (rule 366)

    COMMA	shift, and go to state 531

    $default	reduce using rule 364 (option_input)

    option_input	go to state 827

<<<<<<< HEAD
    COMMA	shift, and go to state 673
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_input	go to state 1007
=======
state 690
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_input  ->  COMMA identifier . option_input   (rule 365)

    COMMA	shift, and go to state 531

    $default	reduce using rule 364 (option_input)

    option_input	go to state 828



state 691

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 362)

    $default	reduce using rule 362 (input_statement)



state 692

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1008
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 693

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 309)

    CLOSE_PAR	shift, and go to state 829



state 694

    inner_option_function_identifier  ->  COMMA error .   (rule 315)

    $default	reduce using rule 315 (inner_option_function_identifier)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1009
    OPEN_MPAR	shift, and go to state 255
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 695

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 313)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 830
    OPEN_MPAR	shift, and go to state 189

    $default	reduce using rule 320 (identifier)

<<<<<<< HEAD
    COMMA	shift, and go to state 684
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_function_identifier	go to state 1010
=======
state 696
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 312)

    COMMA	shift, and go to state 542

    $default	reduce using rule 314 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 831



state 697

    option_ari_exp  ->  COMMA error .   (rule 149)

    $default	reduce using rule 149 (option_ari_exp)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_ari_exp	go to state 1011
    ari_operator	go to state 332
=======
state 698
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 832
    ari_operator	go to state 241



state 699

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)

<<<<<<< HEAD
    COMMA	shift, and go to state 487
    CON 	shift, and go to state 628
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1012
=======
state 700
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 376
    CON 	shift, and go to state 491

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 833

<<<<<<< HEAD
    COMMA	shift, and go to state 487
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1013
=======
state 701
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 834

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1014
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 702

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    CLOSE_MPAR	shift, and go to state 835



state 703

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 98)

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 69)

    $default	reduce using rule 69 (option_struct_declaration)
=======
    $default	reduce using rule 98 (option_identifier_array_declaration)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 704

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 68)

    $default	reduce using rule 68 (option_struct_declaration)



state 705

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT function .   (rule 457)
=======
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 836



state 706

    option_struct_member_exp  ->  DOT function .   (rule 389)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 389 (option_struct_member_exp)



<<<<<<< HEAD
state 869
=======
state 707
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 386)

<<<<<<< HEAD
    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697
=======
    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 1015



state 870
=======
    option_struct_member_exp	go to state 837



state 708
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 1016



state 871
=======
    option_struct_member_exp	go to state 838



state 709
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp  ->  IMPLY function .   (rule 390)

    $default	reduce using rule 390 (option_struct_member_exp)



<<<<<<< HEAD
state 872
=======
state 710
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 388)

<<<<<<< HEAD
    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697
=======
    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 205
    IMPLY	shift, and go to state 558
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 1017



state 873
=======
    option_struct_member_exp	go to state 839



state 711
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 384 (option_struct_member_exp)]
    IMPLY	[reduce using rule 384 (option_struct_member_exp)]
    $default	reduce using rule 384 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 1018



state 874

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 1019
=======
    option_struct_member_exp	go to state 840
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 712

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 1020
=======
    complexProposition	go to state 841
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 713

<<<<<<< HEAD
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 175)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1021
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 164)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 842
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 714

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 161)

    $default	reduce using rule 161 (ari_exp)



state 715

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 244)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1022
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 716

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1023
=======
    CLOSE_PAR	shift, and go to state 844
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 717

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 174)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    simple_ari_exp	go to state 1024
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 163)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 845
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 718

    casted_element  ->  type_cast_alg_exp .   (rule 235)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1025
=======
    $default	reduce using rule 235 (casted_element)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 719

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 720

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 846
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 721

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1026
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 222 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 722

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 847
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 723

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 241)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1027
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 224 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 724

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 848
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 725

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 243)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1028
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 221 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 726

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 849
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 727

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 240)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1029
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 728

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 729

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 806
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 725
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 730

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 984
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 889
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 850
    MUL 	shift, and go to state 736
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 731

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1030
    MUL 	shift, and go to state 900
=======
    $default	reduce using rule 217 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 732

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 851
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 733

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1031
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 852
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 734

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1032
=======
    $default	reduce using rule 218 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 735

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 736

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 854
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 737

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1034
=======
    $default	reduce using rule 215 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 738

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 739

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 740

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 855
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 741

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 856

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 247)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1035
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 742

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 857



state 743

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 858



state 744

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 824



state 745

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 859

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1036
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 746

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 347)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 860
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1037
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
state 747

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 348)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COLON	shift, and go to state 861



state 748

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1038
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 346)

    CLOSE_BPAR	shift, and go to state 862
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 749

    option_else_statement  ->  ELSE statement_bpar .   (rule 353)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1039
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    $default	reduce using rule 353 (option_else_statement)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 750

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    CLOSE_PAR	shift, and go to state 863

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1040
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 751

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1041
=======
    inner_option_define_identifier	go to state 864
    identifier	go to state 865
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 752

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 279)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1042
=======
    $default	reduce using rule 279 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 753

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 272)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1043
=======
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866



<<<<<<< HEAD
    MUL 	shift, and go to state 1004
=======
state 754
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867

<<<<<<< HEAD
    MUL 	shift, and go to state 1044
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 755

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 271)

<<<<<<< HEAD
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 415)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 1045
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 271 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 756

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 277)

<<<<<<< HEAD
    COLON	shift, and go to state 1046
=======
    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868
    identifier	go to state 869



<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 1047
=======
state 757
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 758

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870

<<<<<<< HEAD
    MUL 	shift, and go to state 1005
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 759

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 871



state 760

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 1048
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 761

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 288)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 872



state 762

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 763

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 286)

    ARRAY	shift, and go to state 873
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 874


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1049
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 764

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 875

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
    inner_option_define_identifier	go to state 876
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1050
    identifier	go to state 1051
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 765

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 877
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 766

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 767
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1052
=======
    OPEN_BPAR	shift, and go to state 878
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 768

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    CLOSE_PAR	shift, and go to state 879
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1053
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 769

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 296)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 880



state 770

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 293)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198
=======
    $default	reduce using rule 293 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1054
    identifier	go to state 1055
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 771

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 881



state 772

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 297)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1056
=======
    inner_option_define_identifier	go to state 882
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 773

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 294)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    $default	reduce using rule 294 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1057
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 774

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 306)

    $default	reduce using rule 306 (inner_option_define_identifier)



state 775

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 305)

    ARRAY	shift, and go to state 883
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 1058
=======
    inner_option_define_identifier	go to state 884

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 776

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 885

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 886



state 777

<<<<<<< HEAD
    ARRAY	shift, and go to state 1059
    COMMA	shift, and go to state 385
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 887
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1060
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 778

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)


<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 1061
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 779

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1062
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 65)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_BPAR	shift, and go to state 888
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1063
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
state 780
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 326)

    $default	reduce using rule 326 (option_frame_identifier)



state 781

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 889



<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 1064
=======
state 782
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 844
    MUL 	shift, and go to state 190
    ID  	shift, and go to state 191

    option_identifier_array_declaration	go to state 373
    identifier	go to state 193


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1065
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 783

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 663


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 784

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1066
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 338)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 359
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 180
    ID  	shift, and go to state 175

    $default	reduce using rule 345 (for_sta_control)

    ass_statement	go to state 890
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 182
    point_exp	go to state 72
    identifier	go to state 73
    for_sta_control	go to state 891
    struct_member_exp	go to state 81



state 785

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 892
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 786

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1067
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 893



<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 787
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_list_value  ->  COMMA error .   (rule 206)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1068
=======
    $default	reduce using rule 206 (inner_option_list_value)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 788

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 646
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 241
    inner_option_list_value	go to state 894



state 789

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 204)

    COMMA	shift, and go to state 646
    CON 	shift, and go to state 491

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 895

<<<<<<< HEAD
    ARRAY	shift, and go to state 1069
    COMMA	shift, and go to state 385
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1070
=======
state 790
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 203)

    COMMA	shift, and go to state 646

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 896

<<<<<<< HEAD
    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 1071
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1072
=======
state 791
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)


<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1073
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 792

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 201)

    $default	reduce using rule 201 (option_struct_list_value)



state 793

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 200)

    $default	reduce using rule 200 (option_struct_list_value)

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1074
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 794

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 795

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 198)

    $default	reduce using rule 198 (option_list_value)


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1075
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 796

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 197)

    $default	reduce using rule 197 (option_list_value)


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 1023
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259
=======

state 797
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 631
    CHARDECLARATION	shift, and go to state 632
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 633
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 634
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 798

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 828
=======
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 140)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 140 (rightaddrshift)



state 799

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241
=======
    option_output  ->  COMMA ass_right option_output .   (rule 358)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 358 (option_output)

<<<<<<< HEAD
    ass_statement	go to state 1076
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    for_sta_control	go to state 1077
    struct_member_exp	go to state 105
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 800

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 897
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230


<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 1078
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 801

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 320)

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 898
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)


<<<<<<< HEAD
    type_define	go to state 1079
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 802

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 899

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 803

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 900
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230


<<<<<<< HEAD
    COMMA	shift, and go to state 811
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 804

<<<<<<< HEAD
    ari_operator	go to state 332
    inner_option_list_value	go to state 1080
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 901
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



<<<<<<< HEAD
    COMMA	shift, and go to state 811
    CON 	shift, and go to state 628
=======
state 805
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 323)

<<<<<<< HEAD
    inner_option_list_value	go to state 1081
=======
    CLOSE_PAR	shift, and go to state 902
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 806

<<<<<<< HEAD
    COMMA	shift, and go to state 811
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 903
    OPEN_MPAR	shift, and go to state 189

<<<<<<< HEAD
    inner_option_list_value	go to state 1082
=======
    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 807

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 904

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)



state 808

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 905
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 851
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 809

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 906
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 908
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 810

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 87)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 909



state 811

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 910



state 812

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 911



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 796
    CHARDECLARATION	shift, and go to state 797
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 798
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 799
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
state 813
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 912



state 814

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 815

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 1083
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 816

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 913
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1084
    OPEN_MPAR	shift, and go to state 255
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 817

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1085
=======
state 818
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 62)

    OPEN_BPAR	shift, and go to state 914



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 1086
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
state 819
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 915
    ari_operator	go to state 241

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1087
    OPEN_MPAR	shift, and go to state 255
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 820

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ADD 	[reduce using rule 155 (point_exp)]
    SUB 	[reduce using rule 155 (point_exp)]
    $default	reduce using rule 155 (point_exp)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1088
=======
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 821

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_PAR	shift, and go to state 916
    ID  	shift, and go to state 917
    INTLITERAL	shift, and go to state 918

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1089
    OPEN_MPAR	shift, and go to state 255
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_PAR	shift, and go to state 919
    ID  	shift, and go to state 920
    INTLITERAL	shift, and go to state 921


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1090
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 823

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 922
    INTLITERAL	shift, and go to state 923


<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1091
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1031
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 824

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 924

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 1092
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1094
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 925

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1095
=======
state 826
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 825



<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1096
=======
state 827
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_input  ->  COMMA array option_input .   (rule 366)

    $default	reduce using rule 366 (option_input)



<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1097
=======
state 828
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_input  ->  COMMA identifier option_input .   (rule 365)

    $default	reduce using rule 365 (option_input)



<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1098
=======
state 829
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 309)

    COMMA	shift, and go to state 542

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 314 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 926



state 830

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 313)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 368
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 369
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 310 (option_function_identifier)

    function	go to state 96
    ass_right	go to state 370
    rightaddrshift	go to state 310
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 311
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 102
    type_cast	go to state 103
    option_function_identifier	go to state 927
    identifier	go to state 104
    strliteral	go to state 315
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 831

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 312)

    $default	reduce using rule 312 (inner_option_function_identifier)


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1099
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 832

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)



state 833

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 270)
=======


state 834

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 835

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

<<<<<<< HEAD
state 997
=======
    COMMA	shift, and go to state 376
    ASS_P	shift, and go to state 928
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 929



<<<<<<< HEAD
state 998
=======
state 836
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 930
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



<<<<<<< HEAD
state 999
=======
state 837
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 386)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    $default	reduce using rule 386 (option_struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_ari_exp	go to state 1100
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 838

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 385)

<<<<<<< HEAD
state 1000
=======
    $default	reduce using rule 385 (option_struct_member_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 839

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 388)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 388 (option_struct_member_exp)


<<<<<<< HEAD
state 1001
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 840

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1101
    ID  	shift, and go to state 1102
    INTLITERAL	shift, and go to state 1103
=======
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 387)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 387 (option_struct_member_exp)


<<<<<<< HEAD
state 1002
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 841

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1104
    ID  	shift, and go to state 1105
    INTLITERAL	shift, and go to state 1106
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_BPAR	shift, and go to state 931
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121


<<<<<<< HEAD
state 1003
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 842

<<<<<<< HEAD
    ID  	shift, and go to state 1107
    INTLITERAL	shift, and go to state 1108
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 164)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

<<<<<<< HEAD
state 1004
=======
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1109
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 843

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

<<<<<<< HEAD
state 1005
=======
    $default	reduce using rule 231 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1110
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 844

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 932
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 1006
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 845

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 242
    CON 	shift, and go to state 243
    ADDRESS	shift, and go to state 244
    LST 	shift, and go to state 251
    RST 	shift, and go to state 252
    MUL 	shift, and go to state 253
    DIV 	shift, and go to state 254
    MOD 	shift, and go to state 255

<<<<<<< HEAD
state 1007
=======
    INTER_OR	[reduce using rule 163 (type_cast_alg_exp)]
    CON 	[reduce using rule 163 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 163 (type_cast_alg_exp)]
    LST 	[reduce using rule 163 (type_cast_alg_exp)]
    RST 	[reduce using rule 163 (type_cast_alg_exp)]
    MUL 	[reduce using rule 163 (type_cast_alg_exp)]
    DIV 	[reduce using rule 163 (type_cast_alg_exp)]
    MOD 	[reduce using rule 163 (type_cast_alg_exp)]
    $default	reduce using rule 163 (type_cast_alg_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    bi_operator	go to state 256



state 846

<<<<<<< HEAD
state 1008
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 225 (type_cast)

<<<<<<< HEAD
    COMMA	shift, and go to state 684
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_function_identifier	go to state 1111
=======
state 847
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)

<<<<<<< HEAD
state 1009

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 381)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 1112
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 848

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

<<<<<<< HEAD
state 1010
=======
    $default	reduce using rule 230 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 849

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

<<<<<<< HEAD
state 1011
=======
    $default	reduce using rule 227 (type_cast)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 850

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 1012
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 851

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)

<<<<<<< HEAD
state 1013
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 852

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 933
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 1014
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 853

<<<<<<< HEAD
    COMMA	shift, and go to state 487
    ASS_P	shift, and go to state 1113
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 223 (type_cast)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1114



state 1015

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 454)

    $default	reduce using rule 454 (option_struct_member_exp)
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 854

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 934
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 453)

    $default	reduce using rule 453 (option_struct_member_exp)



state 1017

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 456)

    $default	reduce using rule 456 (option_struct_member_exp)



state 1018

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 455)

    $default	reduce using rule 455 (option_struct_member_exp)



state 1019

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 72)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1115
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======


state 855

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 856

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 917



state 857

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    ID  	shift, and go to state 920


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 858

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 922

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 1116
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172
=======


state 859

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 935


>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 860

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 347)

<<<<<<< HEAD
state 1021
=======
    COLON	shift, and go to state 936
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 861

<<<<<<< HEAD
    ari_operator	go to state 332
=======
    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 348)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 937


<<<<<<< HEAD
state 1022
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 862

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 346)

    $default	reduce using rule 346 (switch_statement)


<<<<<<< HEAD
state 1023

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 246)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1117
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 863
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

    OPEN_PAR	shift, and go to state 938

<<<<<<< HEAD
state 1024
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346
=======
state 864
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 280)

<<<<<<< HEAD
    bi_operator	go to state 347



state 1025

    casted_element  ->  MALLOC OPEN_PAR . ari_exp CLOSE_PAR   (rule 249)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1118
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 280 (option_function_parameter_list)



state 865

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 273)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
state 1026
=======
    inner_option_define_identifier	go to state 939
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 866

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 272)

<<<<<<< HEAD
state 1027
=======
    $default	reduce using rule 272 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 867

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 274)

<<<<<<< HEAD
state 1028
=======
    $default	reduce using rule 274 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 868

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 277)

<<<<<<< HEAD
state 1029
=======
    $default	reduce using rule 277 (option_function_parameter_list)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 869

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 269)

<<<<<<< HEAD
state 1030

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier	go to state 940


<<<<<<< HEAD
state 1031
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 870

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)


<<<<<<< HEAD
state 1032

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1119
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 871
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)

<<<<<<< HEAD
state 1033
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 872

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285

<<<<<<< HEAD
state 1034

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 242)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1120
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1035
=======
    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 941



state 873
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 942

<<<<<<< HEAD
state 1036
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 874

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)

<<<<<<< HEAD
state 1037
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 875

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 285)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 943
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 1038
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 876

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)


<<<<<<< HEAD
state 1039
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 877

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    COMMA	shift, and go to state 944
    CLOSE_MPAR	shift, and go to state 945
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241

<<<<<<< HEAD
state 1040
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 878

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 70 (empty_statement)

    statement	go to state 946
    empty_statement	go to state 947
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
state 1041
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ID  	shift, and go to state 1102
=======
state 879
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

    OPEN_PAR	shift, and go to state 948

<<<<<<< HEAD
state 1042
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ID  	shift, and go to state 1105
=======
state 880
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)

<<<<<<< HEAD
state 1043
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    ID  	shift, and go to state 1107
=======
state 881
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)

<<<<<<< HEAD
state 1044
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1121
=======
state 882
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)

<<<<<<< HEAD
state 1045
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COLON	shift, and go to state 1122
=======
state 883
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 285

<<<<<<< HEAD
state 1046
=======
    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier	go to state 949

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1123
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 884

<<<<<<< HEAD
state 1047
=======
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 305)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 305 (inner_option_define_identifier)



state 885

<<<<<<< HEAD
state 1048
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 304)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 950
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1124
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 886

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 298)

<<<<<<< HEAD
state 1049
=======
    $default	reduce using rule 298 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1125
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 887

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)

<<<<<<< HEAD
state 1050
=======
    COMMA	shift, and go to state 951
    CLOSE_MPAR	shift, and go to state 952
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241



state 888

<<<<<<< HEAD
state 1051
=======
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 65)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 65 (statement)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1126
=======
state 889
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 953
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
state 1052
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 890

    for_sta_control  ->  ass_statement .   (rule 344)

    $default	reduce using rule 344 (for_sta_control)

<<<<<<< HEAD
state 1053
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 891

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 338)

    CLOSE_PAR	shift, and go to state 954

<<<<<<< HEAD
state 1054
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 892

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 955
    OR  	shift, and go to state 274
    AND 	shift, and go to state 275

<<<<<<< HEAD
state 1055
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 893
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1127



state 1056
=======
    CLOSE_PAR	shift, and go to state 956



state 894
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)



<<<<<<< HEAD
state 1057
=======
state 895
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



<<<<<<< HEAD
state 1058
=======
state 896
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 203)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    $default	reduce using rule 203 (inner_option_list_value)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1128
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 897

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 957
    CHARDECLARATION	shift, and go to state 958
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 959
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230

<<<<<<< HEAD
state 1059
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 898
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1129



state 1060
=======
    OPEN_MPAR	shift, and go to state 960



state 899
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 961



<<<<<<< HEAD
state 1061

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 353)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1130
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1062
=======
state 900

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 962
    CHARDECLARATION	shift, and go to state 963
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 964
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 901
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 965



<<<<<<< HEAD
state 1063
=======
state 902
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

<<<<<<< HEAD
    COMMA	shift, and go to state 1131
    CLOSE_MPAR	shift, and go to state 1132
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    OPEN_MPAR	shift, and go to state 966

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 903

<<<<<<< HEAD
state 1064
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 967

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1133
    empty_statement	go to state 1134
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 904

<<<<<<< HEAD
state 1065
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 968

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1135
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 905

<<<<<<< HEAD
state 1066
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 969
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



<<<<<<< HEAD
state 1067
=======
state 906
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 217
    CHARDECLARATION	shift, and go to state 218
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 220
    OPEN_PAR	shift, and go to state 970
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 222
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230



state 907

<<<<<<< HEAD
state 1068
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 320)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 188
    CLOSE_PAR	shift, and go to state 971
    OPEN_MPAR	shift, and go to state 189

    CLOSE_PAR	[reduce using rule 320 (identifier)]
    $default	reduce using rule 320 (identifier)



<<<<<<< HEAD
state 1069
=======
state 908
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 323)

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    CLOSE_PAR	shift, and go to state 972
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1136
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 909

<<<<<<< HEAD
state 1070
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 87)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 973



state 910

<<<<<<< HEAD
state 1071

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1137
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    CLOSE_PAR	shift, and go to state 974
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 141 (array)]
    $default	reduce using rule 141 (array)


<<<<<<< HEAD
state 1072
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 911

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (declaration)


<<<<<<< HEAD
state 1073
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 912

<<<<<<< HEAD
    COMMA	shift, and go to state 1138
    CLOSE_MPAR	shift, and go to state 1139
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1074

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)



state 1075
=======
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 913

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 914
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 62)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
<<<<<<< HEAD
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1140
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1076
=======
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 70 (empty_statement)

    statement	go to state 946
    empty_statement	go to state 975
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 915
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_MPAR	shift, and go to state 976



<<<<<<< HEAD
state 1077
=======
state 916
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1141



state 1078
=======
    OPEN_PAR	shift, and go to state 977



state 917
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1142
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 1079
=======
    CLOSE_PAR	shift, and go to state 898



state 918
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1143



state 1080
=======
    CLOSE_PAR	shift, and go to state 899



state 919
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_PAR	shift, and go to state 978



<<<<<<< HEAD
state 1081
=======
state 920
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 901



<<<<<<< HEAD
state 1082
=======
state 921
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 902



<<<<<<< HEAD
state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 1144
    CHARDECLARATION	shift, and go to state 1145
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 1146
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
state 922

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 903


<<<<<<< HEAD
state 1084
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 923

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1147
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 904


<<<<<<< HEAD
state 1085
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 924

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1148
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ID  	shift, and go to state 979


<<<<<<< HEAD
state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 1149
    CHARDECLARATION	shift, and go to state 1150
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 1151
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======

state 925
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_PAR	shift, and go to state 980
    ID  	shift, and go to state 981
    INTLITERAL	shift, and go to state 982

<<<<<<< HEAD
state 1087
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1152
=======
state 926
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 309)

    $default	reduce using rule 309 (option_function_identifier)

<<<<<<< HEAD
state 1088
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1153
=======
state 927
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 313)

    CLOSE_PAR	shift, and go to state 983

<<<<<<< HEAD
state 1089
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1154
=======
state 928

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 984
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    strliteral	go to state 985



state 929

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 930

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 61)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_BPAR	shift, and go to state 986
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197


<<<<<<< HEAD
state 1090
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 931

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1155
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 23 (complexProposition)


<<<<<<< HEAD
state 1091
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 932

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1156
    OPEN_MPAR	shift, and go to state 255
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 233 (type_cast)



<<<<<<< HEAD
state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 1157
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======
state 933

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 226 (type_cast)


<<<<<<< HEAD
state 1093
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 934

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1158
    OPEN_MPAR	shift, and go to state 255
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 229 (type_cast)



<<<<<<< HEAD
state 1094
=======
state 935
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1159
=======
    ID  	shift, and go to state 981
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 936

<<<<<<< HEAD
state 1095
=======
    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 347)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 987

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1160
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 937

<<<<<<< HEAD
state 1096
=======
    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 348)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 988
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1161
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 938

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 289)

<<<<<<< HEAD
state 1097
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 989



<<<<<<< HEAD
state 1098
=======
state 939
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



<<<<<<< HEAD
state 1099
=======
state 940
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



<<<<<<< HEAD
state 1100
=======
state 941

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)



state 942
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 282)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1162



state 1101
=======
    $default	reduce using rule 282 (option_function_parameter_list)



state 943
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 285)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1163
=======
    CLOSE_MPAR	shift, and go to state 990
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241


<<<<<<< HEAD
state 1102
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 944

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1084



state 1103
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 284)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 991
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 945
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1085
=======
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 992

<<<<<<< HEAD
state 1104
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1164
=======
state 946
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 69)

    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 1105
=======
    $default	reduce using rule 69 (empty_statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1087
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 947

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

<<<<<<< HEAD
state 1106
=======
    CLOSE_BPAR	shift, and go to state 993
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1088
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 948

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 300)

<<<<<<< HEAD
state 1107
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 290 (option_function_parameter_list)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1089



state 1108
=======
    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 994



state 949
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 299)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1090



state 1109
=======
    $default	reduce using rule 299 (inner_option_define_identifier)



state 950
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 304)

<<<<<<< HEAD
    ID  	shift, and go to state 1165
=======
    CLOSE_MPAR	shift, and go to state 995
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ari_operator	go to state 241


<<<<<<< HEAD
state 1110
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 951

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1166
    ID  	shift, and go to state 1167
    INTLITERAL	shift, and go to state 1168



state 1111
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 303)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 996
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 952
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 997

<<<<<<< HEAD
state 1112
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1169
=======
state 953
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 998
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 1113
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRLITERAL	shift, and go to state 180

    array_exp	go to state 1170
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    strliteral	go to state 1171
=======
state 954

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 338)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 999

<<<<<<< HEAD
state 1114
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 955

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)

<<<<<<< HEAD
state 1115

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 1172
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======


state 956
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    OPEN_PAR	shift, and go to state 1000

<<<<<<< HEAD
state 1116
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 957

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 1001

<<<<<<< HEAD
state 1117
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 958

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1002

<<<<<<< HEAD
state 1118
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1173
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
state 959

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1003


<<<<<<< HEAD
state 1119
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 960

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1004
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 1120
=======
state 961
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1005
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 962

<<<<<<< HEAD
state 1121
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 1006

<<<<<<< HEAD
    ID  	shift, and go to state 1167
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 963

<<<<<<< HEAD
state 1122
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1007

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1174
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 964

<<<<<<< HEAD
state 1123
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1008

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1175
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 965

<<<<<<< HEAD
state 1124
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1009
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 966

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1010
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 1125
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592
=======
state 967
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1011
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1176
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 968

<<<<<<< HEAD
state 1126
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1012
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 969

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
state 1127
=======
    OPEN_MPAR	shift, and go to state 1013
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 321)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 383)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 216
    INTDECLARATION	shift, and go to state 1014
    CHARDECLARATION	shift, and go to state 1015
    VOIDDECLARATION	shift, and go to state 219
    FLOATDECLARATION	shift, and go to state 417
    OPEN_PAR	shift, and go to state 221
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 1016
    SIGNED	shift, and go to state 223
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 224
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 225
    point_exp	go to state 226
    ari_exp	go to state 227
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 228
    type_cast	go to state 103
    identifier	go to state 229
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 230

<<<<<<< HEAD
state 1128
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 971

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 1017

<<<<<<< HEAD
state 1129
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 1018

<<<<<<< HEAD
state 1130
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1177
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
state 973

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 87)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 87 (declaration)


<<<<<<< HEAD
state 1131

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1178
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 974
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 1019

<<<<<<< HEAD
state 1132
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 975
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 62)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1179



state 1133

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 70)

    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    $default	reduce using rule 70 (empty_statement)
=======
    CLOSE_BPAR	shift, and go to state 1020



state 976

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_PAR	shift, and go to state 974

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 977

<<<<<<< HEAD
state 1134
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 1021
    CHARDECLARATION	shift, and go to state 1022
    UNSIGNED	shift, and go to state 1023

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 1180
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 978

<<<<<<< HEAD
state 1135
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 1024
    CHARDECLARATION	shift, and go to state 1025
    UNSIGNED	shift, and go to state 1026

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1181
=======
state 979
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 969

<<<<<<< HEAD
state 1136
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_PAR	shift, and go to state 1027

<<<<<<< HEAD
state 1137
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1182
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
state 981

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 971


<<<<<<< HEAD
state 1138

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1183
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 982
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 972

<<<<<<< HEAD
state 1139
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 983
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 313)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1184
=======
    COMMA	shift, and go to state 542
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 314 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 1028

<<<<<<< HEAD
state 1140
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1185
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
state 984
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 101)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 376
    CON 	shift, and go to state 491

<<<<<<< HEAD
state 1141
=======
    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_identifier_array_declaration	go to state 1029

<<<<<<< HEAD
    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 1186
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 985

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 102)

<<<<<<< HEAD
state 1142
=======
    COMMA	shift, and go to state 376
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1030



<<<<<<< HEAD
state 1143
=======
state 986
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 61)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1187



state 1144
=======
    $default	reduce using rule 61 (statement)



state 987
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 347)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 1188



state 1145
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    PROCESS	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1031
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 988
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 348)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 1189



state 1146
=======
    CLOSE_PAR	shift, and go to state 1032
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197



state 989
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 289)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 1190



state 1147

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1191
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 1033



state 990

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 285)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 285

    $default	reduce using rule 301 (inner_option_define_identifier)

<<<<<<< HEAD
state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1192
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    inner_option_define_identifier	go to state 1034

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 991

<<<<<<< HEAD
state 1149
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 284)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_MPAR	shift, and go to state 1035
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 1193



state 1150
=======
    ari_operator	go to state 241



state 992
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 1194



state 1151
=======
    $default	reduce using rule 283 (option_function_parameter_list)



state 993
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 1195



state 1152

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1196
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 60 (statement)



state 994

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 300)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1036


<<<<<<< HEAD
state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1197
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

state 995
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 285

<<<<<<< HEAD
state 1154

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1198
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1199
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1037



state 996

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 303)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_MPAR	shift, and go to state 1038
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    ari_operator	go to state 241

<<<<<<< HEAD
state 1156
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1200
=======
state 997
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)

<<<<<<< HEAD
state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 1201
    CHARDECLARATION	shift, and go to state 1202
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 1203
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 998

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

<<<<<<< HEAD
state 1158
=======
    $default	reduce using rule 57 (statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1204
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 999

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 338)

<<<<<<< HEAD
state 1159
=======
    $default	reduce using rule 338 (extend_for_statement)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1205
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1000

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 137)

<<<<<<< HEAD
state 1160
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 1039



<<<<<<< HEAD
state 1161
=======
state 1001
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1206



state 1162
=======
    CLOSE_PAR	shift, and go to state 1040
    MUL 	shift, and go to state 579



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1041
    MUL 	shift, and go to state 582



state 1003
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1161



state 1163
=======
    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1042



state 1004
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1207
    CHARDECLARATION	shift, and go to state 1208
    UNSIGNED	shift, and go to state 1209
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1043
    ari_operator	go to state 241

<<<<<<< HEAD
state 1164
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1210
    CHARDECLARATION	shift, and go to state 1211
    UNSIGNED	shift, and go to state 1212
=======
state 1005
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
state 1165
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1044
    ari_operator	go to state 241

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1156
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1006

<<<<<<< HEAD
state 1166
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1045
    MUL 	shift, and go to state 579

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1213
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1007

<<<<<<< HEAD
state 1167
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1046
    MUL 	shift, and go to state 582

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1158
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1008

<<<<<<< HEAD
state 1168
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1047

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1159
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1009

<<<<<<< HEAD
state 1169
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    COMMA	shift, and go to state 684
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1048
    ari_operator	go to state 241

<<<<<<< HEAD
    inner_option_function_identifier	go to state 1214
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1010

<<<<<<< HEAD
state 1170
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    COMMA	shift, and go to state 487
    CON 	shift, and go to state 628
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1049
    ari_operator	go to state 241

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1215
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1011

<<<<<<< HEAD
state 1171
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    COMMA	shift, and go to state 487
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1050
    ari_operator	go to state 241

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1216
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1012

<<<<<<< HEAD
state 1172

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (function_define)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1051
    ari_operator	go to state 241


<<<<<<< HEAD
state 1173
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1013

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1052
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 1174
=======
state 1014
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1217
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1175
=======
    CLOSE_PAR	shift, and go to state 408
    MUL 	shift, and go to state 1053



state 1015
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1218
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 1176
=======
    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1054



state 1016
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1219



state 1177
=======
    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1055



state 1017
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1056
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1220
=======
state 1018
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1057
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 1178
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1019

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1221
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 452
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 453
    STRUCT_TYPE	shift, and go to state 454
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 290 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 350
    all_type_define	go to state 455
    option_function_parameter_list	go to state 1058

<<<<<<< HEAD
state 1179
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1020

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 62)

    $default	reduce using rule 62 (statement)

<<<<<<< HEAD
state 1180
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1059

<<<<<<< HEAD
state 1181
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1222
=======
state 1022
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1060

<<<<<<< HEAD
state 1182
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 1023
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1223



state 1183
=======
    CHARDECLARATION	shift, and go to state 1061



state 1024
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1224
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332
=======
    MUL 	shift, and go to state 1062

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1025

<<<<<<< HEAD
state 1184
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 1063



state 1026

<<<<<<< HEAD
state 1185
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHARDECLARATION	shift, and go to state 1064



state 1027

<<<<<<< HEAD
state 1186
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTDECLARATION	shift, and go to state 1065
    CHARDECLARATION	shift, and go to state 1066
    UNSIGNED	shift, and go to state 1067



state 1028

<<<<<<< HEAD
state 1187
=======
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 313)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 313 (inner_option_function_identifier)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1225
=======
state 1029
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)

<<<<<<< HEAD
state 1188
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1226
    MUL 	shift, and go to state 719
=======
state 1030
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)

<<<<<<< HEAD
state 1189
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1227
    MUL 	shift, and go to state 722
=======
state 1031
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 347)

    CLOSE_PAR	shift, and go to state 1068
    CHOP	shift, and go to state 194
    OR  	shift, and go to state 195
    PARALLEL	shift, and go to state 196
    AND 	shift, and go to state 197

<<<<<<< HEAD
state 1190
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 1228
=======
state 1032
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 348)

    $default	reduce using rule 348 (case_par)

<<<<<<< HEAD
state 1191
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1033
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 289)

<<<<<<< HEAD
    option_ari_exp	go to state 1229
    ari_operator	go to state 332
=======
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1069

<<<<<<< HEAD
state 1192
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1034
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 285)

<<<<<<< HEAD
    option_ari_exp	go to state 1230
    ari_operator	go to state 332



state 1193
=======
    $default	reduce using rule 285 (option_function_parameter_list)



state 1035
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 284)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1231
    MUL 	shift, and go to state 719
=======
    COMMA	shift, and go to state 285
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 301 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1070

<<<<<<< HEAD
state 1194
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1232
    MUL 	shift, and go to state 722
=======
state 1036
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 285

<<<<<<< HEAD
state 1195
=======
    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier	go to state 1071

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 1233
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1037

<<<<<<< HEAD
state 1196
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 304)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 304 (inner_option_define_identifier)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_ari_exp	go to state 1234
    ari_operator	go to state 332
=======
state 1038
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 285

<<<<<<< HEAD
state 1197
=======
    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    inner_option_define_identifier	go to state 1072

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_ari_exp	go to state 1235
    ari_operator	go to state 332
=======
state 1039
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 1073

<<<<<<< HEAD
state 1198
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1040
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1074
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    option_ari_exp	go to state 1236
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1041

<<<<<<< HEAD
state 1199
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1075
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1042

<<<<<<< HEAD
    option_ari_exp	go to state 1237
    ari_operator	go to state 332
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1076
    MUL 	shift, and go to state 736


<<<<<<< HEAD
state 1200
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1043

<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1238
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 1239



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 1240



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 1241



state 1204

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1242
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1243
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1206

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1244
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1077

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1044

<<<<<<< HEAD
state 1207
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_MPAR	shift, and go to state 1078

<<<<<<< HEAD
    MUL 	shift, and go to state 1245
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1045

<<<<<<< HEAD
state 1208
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1079
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1246
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1080
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 1209
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1247
=======
state 1047
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1081
    MUL 	shift, and go to state 736

<<<<<<< HEAD
state 1210
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1248
=======
state 1048
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1082

<<<<<<< HEAD
state 1211
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1249
=======
state 1049
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1083

<<<<<<< HEAD
state 1212
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1250
=======
state 1050
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1084

<<<<<<< HEAD
state 1213
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1251
    CHARDECLARATION	shift, and go to state 1252
    UNSIGNED	shift, and go to state 1253
=======
state 1051
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1085

<<<<<<< HEAD
state 1214
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1052

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
state 1215
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1086
    ari_operator	go to state 241



state 1053

<<<<<<< HEAD
state 1216
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1087
    MUL 	shift, and go to state 579



state 1054

<<<<<<< HEAD
state 1217
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1088
    MUL 	shift, and go to state 582

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1254
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1055

<<<<<<< HEAD
state 1218
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1089



state 1056

<<<<<<< HEAD
state 1219
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    $default	reduce using rule 150 (option_ari_exp)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    option_ari_exp	go to state 1090
    ari_operator	go to state 241

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1255
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1057

<<<<<<< HEAD
state 1220
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1091
    ari_operator	go to state 241


<<<<<<< HEAD
state 1221
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1058

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 89)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1092

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1256
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1059

<<<<<<< HEAD
state 1222
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1093

<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    inner_option_define_identifier	go to state 1257
=======
state 1060
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1094

<<<<<<< HEAD
state 1223
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1095

<<<<<<< HEAD
state 1224
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 385
=======
state 1062
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1258



state 1225
=======
    CLOSE_PAR	shift, and go to state 1096



state 1063
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1259



state 1226
=======
    CLOSE_PAR	shift, and go to state 1097



state 1064
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1260
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 1261
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1228

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 1262
    MUL 	shift, and go to state 900



state 1229

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1263



state 1230

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1264



state 1231

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1265
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1232

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 1266
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    MUL 	shift, and go to state 1098

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1065

<<<<<<< HEAD
state 1233
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 1099

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1267
    MUL 	shift, and go to state 900
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1066

<<<<<<< HEAD
state 1234
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 1100

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1268
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1067

<<<<<<< HEAD
state 1235
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CHARDECLARATION	shift, and go to state 1101

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1269
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1068

<<<<<<< HEAD
state 1236
=======
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 347)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CASE	shift, and go to state 746
    BREAK	shift, and go to state 1102
    DEFAULT	shift, and go to state 747

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1270
=======
    $default	reduce using rule 351 (init_case_par)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    case_par	go to state 1103
    init_case_par	go to state 1104


<<<<<<< HEAD
state 1237
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1069

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1271
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 289)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 289 (option_function_parameter_list)


<<<<<<< HEAD
state 1238
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1070

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 284)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 284 (option_function_parameter_list)

<<<<<<< HEAD
    option_ari_exp	go to state 1272
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1071

<<<<<<< HEAD
state 1239
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 300)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 300 (inner_option_define_identifier)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1273
    MUL 	shift, and go to state 719
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1072

<<<<<<< HEAD
state 1240
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 303)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 303 (inner_option_define_identifier)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1274
    MUL 	shift, and go to state 722
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1073

<<<<<<< HEAD
state 1241
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 137)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 1105
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1106

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 1275



state 1242
=======
    function	go to state 1107
    array	go to state 1108



state 1074
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 323)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    CLOSE_PAR	shift, and go to state 1109
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)

<<<<<<< HEAD
    option_ari_exp	go to state 1276
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1075

<<<<<<< HEAD
state 1243
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 323)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1110

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    option_ari_exp	go to state 1277
    ari_operator	go to state 332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 1111
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 1244
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1278
=======
state 1077
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)

<<<<<<< HEAD
state 1245
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1279
=======
state 1078
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)

<<<<<<< HEAD
state 1246
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1280
=======
state 1079
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1112

<<<<<<< HEAD
state 1247
=======
    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1281
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 323)

<<<<<<< HEAD
state 1248
=======
    CLOSE_PAR	shift, and go to state 1113
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1282
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1081

<<<<<<< HEAD
state 1249
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 1114
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1283
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1082

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

<<<<<<< HEAD
state 1250
=======
    $default	reduce using rule 145 (array)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1284
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

<<<<<<< HEAD
state 1251
=======
    $default	reduce using rule 119 (leftaddrshift)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1285
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1084

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

<<<<<<< HEAD
state 1252
=======
    $default	reduce using rule 144 (array)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    MUL 	shift, and go to state 1286
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

<<<<<<< HEAD
state 1253
=======
    $default	reduce using rule 122 (leftaddrshift)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1287
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1086

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
state 1254
=======
    CLOSE_MPAR	shift, and go to state 1115
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CASE	shift, and go to state 918
    BREAK	shift, and go to state 1288
    DEFAULT	shift, and go to state 919
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1087

<<<<<<< HEAD
    case_par	go to state 1289
    init_case_par	go to state 1290



state 1255
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1116
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1088
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1117
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1089

<<<<<<< HEAD
state 1256
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1118
    MUL 	shift, and go to state 736



state 1090

<<<<<<< HEAD
state 1257
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_MPAR	shift, and go to state 1119



state 1091

<<<<<<< HEAD
state 1258
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_MPAR	shift, and go to state 1120



state 1092

<<<<<<< HEAD
state 1259
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 89)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ASS_P	shift, and go to state 1121

<<<<<<< HEAD
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 1291
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 1292

    function	go to state 1293
    file_statement	go to state 82
    array	go to state 1294
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
=======
    $default	reduce using rule 88 (declaration)

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1093

<<<<<<< HEAD
state 1260
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTLITERAL	shift, and go to state 1122

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1295
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
state 1261
=======
    INTLITERAL	shift, and go to state 1123
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1296
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1124

<<<<<<< HEAD
state 1262
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1297
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1263

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (array)



state 1264

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1265

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1298

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1266

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1299

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1267

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1300
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1268

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 156)

    $default	reduce using rule 156 (array)



state 1269

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)
=======
state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTLITERAL	shift, and go to state 1125



<<<<<<< HEAD
state 1270
=======
state 1097
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1126



<<<<<<< HEAD
state 1271
=======
state 1098
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1127



<<<<<<< HEAD
state 1272
=======
state 1099
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1301



state 1273
=======
    CLOSE_PAR	shift, and go to state 1128



state 1100
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1302
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1274

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 1303
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    CLOSE_PAR	shift, and go to state 1129

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1101

<<<<<<< HEAD
state 1275
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    MUL 	shift, and go to state 1130

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1304
    MUL 	shift, and go to state 900
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1102

<<<<<<< HEAD
state 1276
=======
    init_case_par  ->  BREAK . case_par   (rule 349)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CASE	shift, and go to state 746
    DEFAULT	shift, and go to state 747

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1305



state 1277
=======
    case_par	go to state 1131



state 1103
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    init_case_par  ->  case_par .   (rule 350)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1306



state 1278
=======
    $default	reduce using rule 350 (init_case_par)



state 1104
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 347)

<<<<<<< HEAD
    ASS_P	shift, and go to state 1307
=======
    $default	reduce using rule 347 (case_par)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 1105

<<<<<<< HEAD
state 1279
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 1132
    ID  	shift, and go to state 1133

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1308



state 1280
=======
    array	go to state 556



state 1106
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1309



state 1281
=======
    OPEN_PAR	shift, and go to state 188
    OPEN_MPAR	shift, and go to state 189



state 1107
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 137)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1310



state 1282
=======
    $default	reduce using rule 137 (ass_right)



state 1108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1311



state 1283
=======
    OPEN_PAR	shift, and go to state 205



state 1109
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1312



state 1284
=======
    CLOSE_PAR	shift, and go to state 1134



state 1110
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1313



state 1285
=======
    CLOSE_PAR	shift, and go to state 1135



state 1111
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 323)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1314
=======
    CLOSE_PAR	shift, and go to state 1136
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)


<<<<<<< HEAD
state 1286
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1112

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1315
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1137


<<<<<<< HEAD
state 1287
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1113

<<<<<<< HEAD
    MUL 	shift, and go to state 1316
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1138


<<<<<<< HEAD
state 1288
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 323)

<<<<<<< HEAD
    case_par	go to state 1317
=======
    CLOSE_PAR	shift, and go to state 1139
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)


<<<<<<< HEAD
state 1289
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1115

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)


<<<<<<< HEAD
state 1290
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1140

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)

<<<<<<< HEAD
state 1291
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1318
    ID  	shift, and go to state 1319

    array	go to state 587
=======
state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 323)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1141

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)

<<<<<<< HEAD
state 1292
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 254
    OPEN_MPAR	shift, and go to state 255
=======
state 1118
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 1142
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 718
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 853
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 1293
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1119

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)


<<<<<<< HEAD
state 1294
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1120

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 270
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 120 (leftaddrshift)


<<<<<<< HEAD
state 1295
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1121

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1320
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 89)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_PAR	shift, and go to state 657
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 1143
    option_list_value	go to state 313
    option_struct_list_value	go to state 314

<<<<<<< HEAD
state 1296
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1321
=======
state 1122
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1109

<<<<<<< HEAD
state 1297
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1322
=======
state 1123
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1110


<<<<<<< HEAD
state 1298
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1124

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1323
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTLITERAL	shift, and go to state 1144


<<<<<<< HEAD
state 1299
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1125

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1324
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1112


<<<<<<< HEAD
state 1300
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1126

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1325
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1113



<<<<<<< HEAD
state 1301
=======
state 1127
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1145



<<<<<<< HEAD
state 1302
=======
state 1128
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1326
=======
    INTLITERAL	shift, and go to state 1146
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6



state 1129

<<<<<<< HEAD
state 1303
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    INTLITERAL	shift, and go to state 1147

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1327
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
state 1304
=======
    CLOSE_PAR	shift, and go to state 1148
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1328
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1305

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 157)

    $default	reduce using rule 157 (array)



state 1306

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)
=======

state 1131
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    init_case_par  ->  BREAK case_par .   (rule 349)

    $default	reduce using rule 349 (init_case_par)


<<<<<<< HEAD
state 1307
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1132

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407

    array_exp	go to state 1329
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
    FLOATDECLARATION	shift, and go to state 603
    OPEN_PAR	shift, and go to state 1132
    UNSIGNED	shift, and go to state 604
    ID  	shift, and go to state 1133
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    array	go to state 556


<<<<<<< HEAD
state 1308
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1133

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1295
=======
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 189


<<<<<<< HEAD
state 1309
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1134

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1296
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 1149


<<<<<<< HEAD
state 1310
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1135

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1330
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 1150


<<<<<<< HEAD
state 1311
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1136

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1298
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1151


<<<<<<< HEAD
state 1312
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1137

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1299
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 1152


<<<<<<< HEAD
state 1313
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1138

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1331
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 1153


<<<<<<< HEAD
state 1314
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1139

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1332
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1154


<<<<<<< HEAD
state 1315
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1140

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1333
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1155


<<<<<<< HEAD
state 1316
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1141

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1334
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1156


<<<<<<< HEAD
state 1317
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 323)

    CLOSE_PAR	shift, and go to state 1157

    CLOSE_PAR	[reduce using rule 323 (intliteral)]
    $default	reduce using rule 323 (intliteral)

<<<<<<< HEAD
state 1318
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 757
    CHARDECLARATION	shift, and go to state 758
    FLOATDECLARATION	shift, and go to state 759
    OPEN_PAR	shift, and go to state 1318
    UNSIGNED	shift, and go to state 760
    ID  	shift, and go to state 1319

    array	go to state 587
=======
state 1143

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 89)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CON 	shift, and go to state 491

    $default	reduce using rule 89 (declaration)

<<<<<<< HEAD
state 1319
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 255
=======
state 1144
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1136

<<<<<<< HEAD
state 1320
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1335
=======
state 1145
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1139

<<<<<<< HEAD
state 1321
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1336
=======
state 1146
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1140

<<<<<<< HEAD
state 1322
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1337
=======
state 1147
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1141

<<<<<<< HEAD
state 1323
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1338
=======
state 1148
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1158

<<<<<<< HEAD
state 1324
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1339
=======
state 1149
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1159
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD
state 1325
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1150

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1340



state 1326
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1160
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1151
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1341



state 1327
=======
    OPEN_MPAR	shift, and go to state 1161



state 1152
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1162
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1342
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1153

<<<<<<< HEAD
state 1328
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1163
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1343
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1164

<<<<<<< HEAD
state 1329
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CON 	shift, and go to state 628
=======
state 1155
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1165


<<<<<<< HEAD
state 1330
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1156

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1322
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    OPEN_MPAR	shift, and go to state 1166


<<<<<<< HEAD
state 1331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1157

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1325
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1167


<<<<<<< HEAD
state 1332
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1158

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1326
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    CLOSE_PAR	shift, and go to state 1157


<<<<<<< HEAD
state 1333
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1159

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1327
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
state 1334
=======
    option_ari_exp	go to state 1168
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1344
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
state 1335
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1345
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1336

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1346
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1337

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 1347



state 1338

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1348
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1339

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1349
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======
    option_ari_exp	go to state 1169
    ari_operator	go to state 241

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


state 1161

<<<<<<< HEAD
state 1340
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1170
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1350
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
state 1341
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1351



state 1342

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_MPAR	shift, and go to state 1352



state 1343

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1353



state 1344

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1343



state 1345

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1354
    ari_operator	go to state 332
=======
    option_ari_exp	go to state 1171
    ari_operator	go to state 241



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
state 1346
=======
    option_ari_exp	go to state 1172
    ari_operator	go to state 241
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1164

<<<<<<< HEAD
    option_ari_exp	go to state 1355
    ari_operator	go to state 332



state 1347
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1173
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1165
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1174
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1356
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1348

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1357
    ari_operator	go to state 332



state 1349

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1358
    ari_operator	go to state 332



state 1350

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1359
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1360
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1352

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1361
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159
=======

>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1175
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
state 1353
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1362
=======
state 1167
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1176

<<<<<<< HEAD
state 1354
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1363
=======
state 1168
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1177

<<<<<<< HEAD
state 1355
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1364
=======
state 1169
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1178

<<<<<<< HEAD
state 1356
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1170
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    option_ari_exp	go to state 1365
    ari_operator	go to state 332
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1179
    ari_operator	go to state 241

<<<<<<< HEAD
state 1357
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1366
=======
state 1171
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1180

<<<<<<< HEAD
state 1358
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1367
=======
state 1172
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1181

<<<<<<< HEAD
state 1359
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1173
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    option_ari_exp	go to state 1368
    ari_operator	go to state 332
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1182
    ari_operator	go to state 241

<<<<<<< HEAD
state 1360
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1174
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    option_ari_exp	go to state 1369
    ari_operator	go to state 332
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1183
    ari_operator	go to state 241

<<<<<<< HEAD
state 1361
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
state 1175
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    option_ari_exp	go to state 1370
    ari_operator	go to state 332
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1184
    ari_operator	go to state 241

<<<<<<< HEAD
state 1362
=======
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6


<<<<<<< HEAD
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1371
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1363
=======
state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1185
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1177
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



<<<<<<< HEAD
state 1364
=======
state 1178
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



<<<<<<< HEAD
state 1365
=======
state 1179
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1372



state 1366
=======
    CLOSE_MPAR	shift, and go to state 1186



state 1180
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



<<<<<<< HEAD
state 1367
=======
state 1181
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



<<<<<<< HEAD
state 1368
=======
state 1182
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1373



state 1369
=======
    CLOSE_MPAR	shift, and go to state 1187



state 1183
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1374



state 1370
=======
    CLOSE_MPAR	shift, and go to state 1188



state 1184
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1375



state 1371
=======
    CLOSE_MPAR	shift, and go to state 1189



state 1185
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
=======
    COMMA	shift, and go to state 545
    ADD 	shift, and go to state 239
    SUB 	shift, and go to state 240
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1376
    ari_operator	go to state 332



state 1372
=======
    option_ari_exp	go to state 1190
    ari_operator	go to state 241



state 1186
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



<<<<<<< HEAD
state 1373
=======
state 1187
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



<<<<<<< HEAD
state 1374
=======
state 1188
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



<<<<<<< HEAD
state 1375
=======
state 1189
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



<<<<<<< HEAD
state 1376
=======
state 1190
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1377



state 1377
=======
    CLOSE_MPAR	shift, and go to state 1191



state 1191
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



<<<<<<< HEAD
state 1378

    $   	go to state 1379



state 1379

    $   	go to state 1380



state 1380
=======
state 1192

    $   	go to state 1193



state 1193

    $   	go to state 1194



state 1194
>>>>>>> c7006a97d3ea4c7cf74b3454279e96b7f30fe1d6

    $default	accept
