Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#112   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#113   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#114   inner_option_array_declaration :	;
#115   inner_option_array_declaration :	 COMMA error;


Conflict in state 86 between rule 13 and token CHOP resolved as reduce.
Conflict in state 86 between rule 13 and token IFF resolved as reduce.
Conflict in state 86 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 13 and token OR resolved as reduce.
Conflict in state 86 between rule 13 and token AND resolved as reduce.
Conflict in state 86 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 87 between rule 22 and token CHOP resolved as reduce.
Conflict in state 87 between rule 22 and token IFF resolved as reduce.
Conflict in state 87 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 87 between rule 22 and token OR resolved as reduce.
Conflict in state 87 between rule 22 and token AND resolved as reduce.
Conflict in state 87 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 21 and token CHOP resolved as reduce.
Conflict in state 110 between rule 21 and token IFF resolved as reduce.
Conflict in state 110 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 21 and token OR resolved as reduce.
Conflict in state 110 between rule 21 and token AND resolved as reduce.
Conflict in state 110 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 10 and token CHOP resolved as reduce.
Conflict in state 111 between rule 10 and token IFF resolved as reduce.
Conflict in state 111 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 10 and token OR resolved as reduce.
Conflict in state 111 between rule 10 and token AND resolved as reduce.
Conflict in state 111 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 9 and token CHOP resolved as reduce.
Conflict in state 112 between rule 9 and token IFF resolved as reduce.
Conflict in state 112 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 9 and token OR resolved as reduce.
Conflict in state 112 between rule 9 and token AND resolved as reduce.
Conflict in state 112 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 20 and token CHOP resolved as reduce.
Conflict in state 113 between rule 20 and token IFF resolved as reduce.
Conflict in state 113 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 20 and token OR resolved as reduce.
Conflict in state 113 between rule 20 and token AND resolved as reduce.
Conflict in state 113 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 12 and token CHOP resolved as reduce.
Conflict in state 114 between rule 12 and token IFF resolved as reduce.
Conflict in state 114 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 12 and token OR resolved as reduce.
Conflict in state 114 between rule 12 and token AND resolved as reduce.
Conflict in state 114 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 11 and token CHOP resolved as reduce.
Conflict in state 115 between rule 11 and token IFF resolved as reduce.
Conflict in state 115 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 11 and token OR resolved as reduce.
Conflict in state 115 between rule 11 and token AND resolved as reduce.
Conflict in state 115 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 235 between rule 213 and token IMPLY resolved as reduce.
Conflict in state 238 between rule 212 and token IMPLY resolved as reduce.
Conflict in state 261 between rule 8 and token CHOP resolved as reduce.
Conflict in state 261 between rule 8 and token IFF resolved as shift.
Conflict in state 261 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 261 between rule 8 and token OR resolved as shift.
Conflict in state 261 between rule 8 and token AND resolved as shift.
Conflict in state 261 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 262 between rule 6 and token CHOP resolved as reduce.
Conflict in state 262 between rule 6 and token IFF resolved as reduce.
Conflict in state 262 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 262 between rule 6 and token OR resolved as shift.
Conflict in state 262 between rule 6 and token AND resolved as shift.
Conflict in state 262 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 263 between rule 7 and token CHOP resolved as reduce.
Conflict in state 263 between rule 7 and token IFF resolved as reduce.
Conflict in state 263 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 263 between rule 7 and token OR resolved as shift.
Conflict in state 263 between rule 7 and token AND resolved as shift.
Conflict in state 263 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 264 between rule 5 and token CHOP resolved as reduce.
Conflict in state 264 between rule 5 and token IFF resolved as reduce.
Conflict in state 264 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 264 between rule 5 and token OR resolved as reduce.
Conflict in state 264 between rule 5 and token AND resolved as shift.
Conflict in state 264 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 265 between rule 4 and token CHOP resolved as reduce.
Conflict in state 265 between rule 4 and token IFF resolved as reduce.
Conflict in state 265 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 265 between rule 4 and token OR resolved as reduce.
Conflict in state 265 between rule 4 and token AND resolved as reduce.
Conflict in state 265 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 272 between rule 242 and token OR resolved as reduce.
Conflict in state 272 between rule 242 and token AND resolved as reduce.
Conflict in state 331 between rule 336 and token OR resolved as reduce.
Conflict in state 331 between rule 336 and token AND resolved as reduce.
Conflict in state 384 between rule 32 and token CHOP resolved as reduce.
Conflict in state 384 between rule 32 and token OR resolved as shift.
Conflict in state 384 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 384 between rule 32 and token AND resolved as shift.
Conflict in state 385 between rule 31 and token CHOP resolved as reduce.
Conflict in state 385 between rule 31 and token OR resolved as reduce.
Conflict in state 385 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 385 between rule 31 and token AND resolved as shift.
Conflict in state 386 between rule 55 and token CHOP resolved as reduce.
Conflict in state 386 between rule 55 and token OR resolved as reduce.
Conflict in state 386 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 386 between rule 55 and token AND resolved as shift.
Conflict in state 387 between rule 30 and token CHOP resolved as reduce.
Conflict in state 387 between rule 30 and token OR resolved as reduce.
Conflict in state 387 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 387 between rule 30 and token AND resolved as reduce.
Conflict in state 451 between rule 244 and token OR resolved as reduce.
Conflict in state 451 between rule 244 and token AND resolved as shift.
Conflict in state 452 between rule 243 and token OR resolved as reduce.
Conflict in state 452 between rule 243 and token AND resolved as reduce.
Conflict in state 513 between rule 338 and token OR resolved as reduce.
Conflict in state 513 between rule 338 and token AND resolved as shift.
Conflict in state 514 between rule 337 and token OR resolved as reduce.
Conflict in state 514 between rule 337 and token AND resolved as reduce.
Conflict in state 663 between rule 197 and token CON resolved as reduce.
State 98 contains 2 shift/reduce conflicts.
State 99 contains 2 shift/reduce conflicts.
State 101 contains 14 shift/reduce conflicts.
State 105 contains 2 shift/reduce conflicts.
State 125 contains 2 shift/reduce conflicts.
State 157 contains 3 reduce/reduce conflicts.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 161 contains 1 shift/reduce conflict.
State 163 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 165 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 166 contains 1 shift/reduce conflict.
State 197 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 229 contains 1 shift/reduce conflict.
State 231 contains 1 shift/reduce conflict.
State 232 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 235 contains 1 shift/reduce conflict.
State 238 contains 1 shift/reduce conflict.
State 270 contains 1 shift/reduce conflict.
State 273 contains 2 shift/reduce conflicts.
State 274 contains 2 shift/reduce conflicts.
State 292 contains 1 shift/reduce conflict.
State 293 contains 1 shift/reduce conflict.
State 294 contains 1 shift/reduce conflict.
State 295 contains 1 shift/reduce conflict.
State 312 contains 1 shift/reduce conflict.
State 321 contains 1 shift/reduce conflict.
State 322 contains 1 shift/reduce conflict.
State 323 contains 1 shift/reduce conflict.
State 329 contains 1 shift/reduce conflict.
State 358 contains 1 shift/reduce conflict.
State 359 contains 1 shift/reduce conflict.
State 361 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 366 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 397 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
State 400 contains 2 shift/reduce conflicts.
State 402 contains 2 shift/reduce conflicts.
State 403 contains 2 shift/reduce conflicts.
State 405 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 429 contains 1 shift/reduce conflict.
State 436 contains 8 shift/reduce conflicts.
State 438 contains 2 shift/reduce conflicts.
State 481 contains 1 shift/reduce conflict.
State 482 contains 1 shift/reduce conflict.
State 483 contains 1 shift/reduce conflict.
State 500 contains 1 shift/reduce conflict.
State 501 contains 1 shift/reduce conflict.
State 505 contains 1 shift/reduce conflict.
State 529 contains 1 shift/reduce conflict.
State 530 contains 1 shift/reduce conflict.
State 531 contains 1 shift/reduce conflict.
State 535 contains 1 shift/reduce conflict.
State 557 contains 1 shift/reduce conflict.
State 579 contains 3 shift/reduce conflicts.
State 582 contains 10 shift/reduce conflicts.
State 674 contains 2 shift/reduce conflicts.
State 675 contains 2 shift/reduce conflicts.
State 693 contains 1 shift/reduce conflict.
State 694 contains 1 shift/reduce conflict.
State 710 contains 1 shift/reduce conflict.
State 711 contains 1 shift/reduce conflict.
State 716 contains 2 shift/reduce conflicts.
State 717 contains 2 shift/reduce conflicts.
State 719 contains 2 shift/reduce conflicts.
State 720 contains 2 shift/reduce conflicts.
State 809 contains 1 shift/reduce conflict.
State 810 contains 1 shift/reduce conflict.
State 812 contains 1 shift/reduce conflict.
State 813 contains 1 shift/reduce conflict.
State 814 contains 1 shift/reduce conflict.
State 815 contains 1 shift/reduce conflict.
State 833 contains 2 shift/reduce conflicts.
State 842 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 848 contains 1 shift/reduce conflict.
State 854 contains 2 shift/reduce conflicts.
State 857 contains 8 shift/reduce conflicts.
State 916 contains 1 shift/reduce conflict.
State 918 contains 1 shift/reduce conflict.
State 919 contains 1 shift/reduce conflict.
State 921 contains 1 shift/reduce conflict.
State 1001 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1002 contains 1 shift/reduce conflict.
State 1003 contains 1 shift/reduce conflict.
State 1097 contains 1 shift/reduce conflict.
State 1098 contains 1 shift/reduce conflict.
State 1102 contains 1 shift/reduce conflict.
State 1103 contains 1 shift/reduce conflict.
State 1137 contains 1 shift/reduce conflict.
State 1140 contains 1 shift/reduce conflict.
State 1142 contains 1 shift/reduce conflict.
State 1143 contains 1 shift/reduce conflict.
State 1169 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function_define
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
rule 70   function_define -> FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function_define -> FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 72   function_define -> FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function_define -> FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 74   function_define -> FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 75   function_define -> FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 76   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 77   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 78   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 79   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 80   struct_identifier -> STRUCT ID
rule 81   struct_identifier -> UNION ID
rule 82   sign_declaration -> SIGNED declaration
rule 83   sign_declaration -> UNSIGNED declaration
rule 84   sign_declaration -> declaration
rule 85   declaration -> type_define option_identifier_array_declaration
rule 86   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 87   declaration -> STRUCT ID option_identifier_array_declaration
rule 88   declaration -> UNION ID option_identifier_array_declaration
rule 89   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 90   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 91   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 93   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 94   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 95   type_define -> INTDECLARATION
rule 96   type_define -> FLOATDECLARATION
rule 97   type_define -> CHARDECLARATION
rule 98   type_define -> STRDECLARATION
rule 99   type_define -> VOIDDECLARATION
rule 100  type_define -> FILEDECLARATION
rule 101  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 107  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 108  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 109  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 110  inner_option_identifier_array_declaration -> COMMA error
rule 111  inner_option_identifier_array_declaration ->		/* empty */
rule 116  ass_statement -> ass_left assign_operator ass_right
rule 117  ass_left -> identifier
rule 118  ass_left -> struct_member_exp
rule 119  ass_left -> array
rule 120  ass_left -> point_exp
rule 121  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 122  ass_left -> NEXT ass_left
rule 123  ass_left -> leftaddrshift
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  assign_operator -> ASS_P
rule 138  assign_operator -> ASS_N
rule 139  ass_right -> ari_exp
rule 140  ass_right -> array_exp
rule 141  ass_right -> strliteral
rule 142  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 143  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 144  ass_right -> rightaddrshift
rule 145  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 146  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 148  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 149  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 150  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 151  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR array CLOSE_PAR
rule 153  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 154  option_ari_exp -> COMMA error
rule 155  option_ari_exp ->		/* empty */
rule 156  point_exp -> MUL identifier
rule 157  point_exp -> MUL point_exp
rule 158  point_exp -> MUL array
rule 159  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 160  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 161  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 162  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 163  ari_exp -> simple_ari_exp
rule 164  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 165  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 166  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 167  type_cast_alg_exp -> simple_ari_exp
rule 168  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 169  option_exp_else_statement -> ELSE ari_exp
rule 170  option_exp_else_statement ->		/* empty */
rule 171  simple_ari_exp -> member_in_exp
rule 172  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 173  member_in_exp -> intliteral
rule 174  member_in_exp -> SUB member_in_exp
rule 175  member_in_exp -> BNE member_in_exp
rule 176  member_in_exp -> POINTERNULL
rule 177  member_in_exp -> floatliteral
rule 178  member_in_exp -> identifier
rule 179  member_in_exp -> array
rule 180  member_in_exp -> point_exp
rule 181  member_in_exp -> function
rule 182  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 183  member_in_exp -> charliteral
rule 184  member_in_exp -> address_exp
rule 185  member_in_exp -> type_cast
rule 186  member_in_exp -> struct_member_exp
rule 187  bi_operator -> MUL
rule 188  bi_operator -> DIV
rule 189  bi_operator -> MOD
rule 190  bi_operator -> LST
rule 191  bi_operator -> RST
rule 192  bi_operator -> ADDRESS
rule 193  bi_operator -> INTER_OR
rule 194  bi_operator -> CON
rule 195  ari_operator -> ADD
rule 196  ari_operator -> SUB
rule 197  array_exp -> array_exp CON array_exp
rule 198  array_exp -> option_list_value
rule 199  array_exp -> option_struct_list_value
rule 200  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 201  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 202  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 203  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 204  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 205  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 206  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 207  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 208  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 209  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 210  inner_option_list_value ->		/* empty */
rule 211  inner_option_list_value -> COMMA error
rule 212  address_exp -> ADDRESS identifier
rule 213  address_exp -> ADDRESS array
rule 214  address_exp -> ADDRESS struct_member_exp
rule 215  address_exp -> ADDRESS address_exp
rule 216  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 217  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 222  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 240  casted_element -> type_cast_alg_exp
rule 241  bool_exp -> prime_bool_exp
rule 242  bool_exp -> NEGATION bool_exp
rule 243  bool_exp -> bool_exp AND bool_exp
rule 244  bool_exp -> bool_exp OR bool_exp
rule 245  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 246  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 247  prime_bool_exp -> MY_TRUE
rule 248  prime_bool_exp -> MY_FALSE
rule 249  prime_bool_exp -> ari_exp
rule 250  prime_bool_exp -> ari_exp EQ strliteral
rule 251  prime_bool_exp -> ari_exp NE strliteral
rule 252  prime_bool_exp -> strliteral EQ ari_exp
rule 253  prime_bool_exp -> strliteral NE ari_exp
rule 254  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 255  prime_bool_exp -> ari_exp NE POINTERNULL
rule 256  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 257  prime_bool_exp -> POINTERNULL NE ari_exp
rule 258  prime_bool_exp -> ari_exp EQ charliteral
rule 259  prime_bool_exp -> ari_exp NE charliteral
rule 260  relation_operator -> GE
rule 261  relation_operator -> LE
rule 262  relation_operator -> NE
rule 263  relation_operator -> GT
rule 264  relation_operator -> LT
rule 265  relation_operator -> EQ
rule 266  sign_type_define -> UNSIGNED INTDECLARATION
rule 267  sign_type_define -> UNSIGNED CHARDECLARATION
rule 268  all_type_define -> sign_type_define
rule 269  all_type_define -> type_define
rule 270  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 272  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 276  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 279  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 281  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 282  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 283  option_function_parameter_list -> ID inner_option_define_identifier
rule 284  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 289  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 290  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 291  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 292  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 293  option_function_parameter_list ->		/* empty */
rule 294  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 304  inner_option_define_identifier ->		/* empty */
rule 305  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 306  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 307  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 308  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 309  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 310  inner_option_define_identifier -> COMMA error
rule 311  option_function_identifier -> ass_right inner_option_function_identifier
rule 312  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 313  option_function_identifier -> all_type_define
rule 314  option_function_identifier ->		/* empty */
rule 315  option_function_identifier -> ADDRESS error
rule 316  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 317  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 318  inner_option_function_identifier ->		/* empty */
rule 319  inner_option_function_identifier -> COMMA error
rule 320  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 321  statement_bpar -> error CLOSE_BPAR
rule 322  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 323  bool_par -> error CLOSE_PAR
rule 324  identifier -> ID
rule 325  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 326  strliteral -> STRLITERAL
rule 327  intliteral -> INTLITERAL
rule 328  charliteral -> CHARLITERAL
rule 329  floatliteral -> FLOATLITERAL
rule 330  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 331  option_frame_identifier ->		/* empty */
rule 332  option_frame_identifier -> COMMA error
rule 333  option_projection ->		/* empty */
rule 334  option_projection -> COMMA statement option_projection
rule 335  imply_pre -> prime_bool_exp
rule 336  imply_pre -> NEGATION imply_pre
rule 337  imply_pre -> imply_pre AND imply_pre
rule 338  imply_pre -> imply_pre OR imply_pre
rule 339  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 340  while_statement -> WHILE bool_par statement_bpar
rule 341  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 342  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 343  for_sta_init -> ass_statement
rule 344  for_sta_init -> declaration
rule 345  for_sta_init ->		/* empty */
rule 346  for_sta_condition -> bool_exp
rule 347  for_sta_condition ->		/* empty */
rule 348  for_sta_control -> ass_statement
rule 349  for_sta_control ->		/* empty */
rule 350  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 351  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 352  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 353  init_case_par -> BREAK case_par
rule 354  init_case_par -> case_par
rule 355  init_case_par ->		/* empty */
rule 356  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 357  option_else_statement -> ELSE statement_bpar
rule 358  option_else_statement ->		/* empty */
rule 359  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 360  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 361  option_output ->		/* empty */
rule 362  option_output -> COMMA ass_right option_output
rule 363  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 364  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 365  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 366  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 367  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 368  option_input ->		/* empty */
rule 369  option_input -> COMMA identifier option_input
rule 370  option_input -> COMMA array option_input
rule 371  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 372  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 373  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 374  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 375  struct_member_exp -> array DOT array option_struct_member_exp
rule 376  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 377  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 378  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 379  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 380  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 381  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 382  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 383  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 384  struct_member_exp -> identifier DOT function
rule 385  struct_member_exp -> identifier IMPLY function
rule 386  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 387  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 388  option_struct_member_exp ->		/* empty */
rule 389  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 390  option_struct_member_exp -> DOT array option_struct_member_exp
rule 391  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 392  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 393  option_struct_member_exp -> DOT function
rule 394  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 110 115 154 211 310 315 319 321 323 332
SWITCH (258) 350
CASE (259) 351
BREAK (260) 353
DEFAULT (261) 352
RETURN (262) 36
IF (263) 166 356
ELSE (264) 169 357
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 176 254 255 256 257
ARRAY (271) 104 105 275 279 286 287 288 299 300 301 302 307
STRUCT (272) 73 74 75 80 87 89 236 238
DOT (273) 371 372 373 374 375 376 384 389 390 393
UNION (274) 81 88 90
FILEDECLARATION (275) 100
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 247
MY_FALSE (279) 16 248
EXIST (280) 64
FRAME (281) 57
FOR (282) 341 342
WHILE (283) 340
DO (284) 341
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 359 360
SKIP (290) 14 46
THEN (291) 166 356
COMMA (292) 28 109 110 113 115 153 154 207 208 209 211 294 295 296
    297 298 299 300 301 302 303 305 306 307 308 309 310 316 317 319
    330 332 334 342 362 369 370
COLON (293) 25 64 351 352
INTDECLARATION (294) 95 126 130 133 134 135 136 147 148 217 220 222
    224 225 230 231 266
STRDECLARATION (295) 98
POINTERDECLARATION (296)
CHARDECLARATION (297) 97 124 125 128 129 130 131 132 133 134 135 150
    151 219 221 223 227 228 233 234 267
VOIDDECLARATION (298) 99 229 235
FLOATDECLARATION (299) 96 127 149 218 226 232
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74 75
    76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132 133
    134 135 136 142 143 145 147 148 149 150 151 152 159 160 161 162
    182 200 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 245 292 303 312 317 322
    325 339 342 350 351 352 359 360 363 364 365 366 367 379 383 387
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74
    75 76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132
    133 134 135 136 142 143 145 147 148 149 150 151 152 159 160 161
    162 182 200 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 235 236 237 238 239 245 292 303 312 317
    322 323 325 339 342 350 351 352 359 360 363 364 365 366 367 379
    383 387
TIMES (303) 341
OPEN_BPAR (304) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    320 350
CLOSE_BPAR (305) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    320 321 350
OPEN_MPAR (306) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 305 306 307
CLOSE_MPAR (307) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 305 306 307
FUNCTION (308) 70 71 72 73 74 75
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 193
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 77
UNSIGNED (328) 83 125 129 131 132 133 135 148 151 222 223 225 228 231
    234 266 267
SIGNED (329) 82 220 221
CHOP (330) 8 32
IMPLY (331) 56 377 378 379 380 381 382 383 385 386 391 392 394
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 244 338
PARALLEL (335) 55
AND (336) 4 30 57 67 243 337
ASS_P (337) 60 94 103 104 105 106 107 137
ASS_N (338) 138
CON (339) 194 197
ADDRESS (340) 192 212 213 214 215 315
NE (341) 251 253 255 257 259 262
EQ (342) 250 252 254 256 258 265
GE (343) 260
LE (344) 261
GT (345) 263
LT (346) 264
LST (347) 190
RST (348) 191
ADD (349) 195
SUB (350) 174 196
MUL (351) 71 72 74 75 91 92 93 94 108 124 125 126 127 128 129 130 131
    132 133 134 135 136 145 147 148 149 150 151 156 157 158 160 161
    187 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
    239 273 274 277 278 281 282 284 285 287 289 290 291 292 298 302
    303 308 309
DIV (352) 188
MOD (353) 189
BNE (354) 175
CHOPSTAR (355) 26
NEXT (356) 13 41 122
NEGATION (357) 22 242 336
LENGTH (358) 17 49
REQUEST (359) 363 364 365 366 367
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 70 71 72 73 74 75 76 77 80 81 87 88 93 94 102
    104 105 106 107 112 113 146 147 148 149 150 151 276 277 278 279
    283 284 285 296 299 312 317 324
STRLITERAL (368) 326
STRUCT_TYPE (369) 73 74 75 86 89 90 236 237 238 239 272 273 274 275
    280 281 282 297 298 300
INTLITERAL (370) 124 125 126 127 128 129 130 131 132 133 134 135 136
    327
FLOATLITERAL (371) 329
CHARLITERAL (372) 328

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 64 65 68 70
    71 72 73 74 75 320 334 351 352
option_struct_declaration (123)
    on left: 66 67, on right: 67 79
empty_statement (124)
    on left: 68 69, on right: 60
function_define (125)
    on left: 70 71 72 73 74 75, on right: 62
function (126)
    on left: 76 77 78, on right: 63 142 181 384 385 393 394
struct_define_statement (127)
    on left: 79, on right: 61
struct_identifier (128)
    on left: 80 81, on right: 79
sign_declaration (129)
    on left: 82 83 84, on right: 34 66 67
declaration (130)
    on left: 85 86 87 88 89 90 91 92 93 94, on right: 82 83 84 344
type_define (131)
    on left: 95 96 97 98 99 100, on right: 85 142 269
option_identifier_array_declaration (132)
    on left: 101 102 103 104 105 106 107 108, on right: 85 86 87 88
    89 90 108 109
inner_option_identifier_array_declaration (133)
    on left: 109 110 111, on right: 101 102 103 104 105 106 107
ass_statement (134)
    on left: 116, on right: 33 343 348
ass_left (135)
    on left: 117 118 119 120 121 122 123, on right: 116 121 122
leftaddrshift (136)
    on left: 124 125 126 127 128 129 130 131 132 133 134 135 136,
    on right: 123 145
assign_operator (137)
    on left: 137 138, on right: 116
ass_right (138)
    on left: 139 140 141 142 143 144, on right: 103 116 143 311 316
    359 360 362
rightaddrshift (139)
    on left: 145, on right: 144
array (140)
    on left: 146 147 148 149 150 151 152, on right: 78 119 152 158
    179 213 365 366 370 372 374 375 376 378 381 382 383 386 390 392
option_ari_exp (141)
    on left: 153 154 155, on right: 93 94 102 106 107 112 113 124 125
    126 127 128 129 130 131 132 133 134 135 136 146 147 148 149 150
    151 153 159
point_exp (142)
    on left: 156 157 158 159 160 161 162, on right: 120 157 159 162
    180 373 376 380 386
ari_exp (143)
    on left: 163 164 165 166, on right: 17 49 93 94 102 106 107 112
    113 124 125 126 127 128 129 130 131 132 133 134 135 136 139 146
    147 148 149 150 151 153 159 160 161 164 165 166 169 182 201 204
    207 246 249 250 251 252 253 254 255 256 257 258 259 288 305 306
    307 341
type_cast_alg_exp (144)
    on left: 167 168, on right: 217 218 219 220 221 222 223 240
option_exp_else_statement (145)
    on left: 169 170, on right: 166
simple_ari_exp (146)
    on left: 171 172, on right: 163 164 165 167 168 172
member_in_exp (147)
    on left: 173 174 175 176 177 178 179 180 181 182 183 184 185 186
   , on right: 171 172 174 175 350 351
bi_operator (148)
    on left: 187 188 189 190 191 192 193 194, on right: 172
ari_operator (149)
    on left: 195 196, on right: 165 168
array_exp (150)
    on left: 197 198 199 200, on right: 94 104 106 140 197 200 203
    206 209
option_list_value (151)
    on left: 201 202 203, on right: 198
option_struct_list_value (152)
    on left: 204 205 206, on right: 199
inner_option_list_value (153)
    on left: 207 208 209 210 211, on right: 201 202 203 204 205 206
    207 208 209
address_exp (154)
    on left: 212 213 214 215 216, on right: 184 215 216 379 383
type_cast (155)
    on left: 217 218 219 220 221 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239, on right: 185
casted_element (156)
    on left: 240, on right: 224 225 226 227 228 229 230 231 232 233
    234 235 236 237 238 239
bool_exp (157)
    on left: 241 242 243 244 245, on right: 44 45 166 242 243 244 245
    322 346 356
prime_bool_exp (158)
    on left: 246 247 248 249 250 251 252 253 254 255 256 257 258 259
   , on right: 25 241 335
relation_operator (159)
    on left: 260 261 262 263 264 265, on right: 164 246
sign_type_define (160)
    on left: 266 267, on right: 268
all_type_define (161)
    on left: 268 269, on right: 70 71 72 160 270 271 286 287 288 289
    290 291 294 295 301 302 305 306 307 308 309 313
option_function_parameter_list (162)
    on left: 270 271 272 273 274 275 276 277 278 279 280 281 282 283
    284 285 286 287 288 289 290 291 292 293, on right: 60 70 71 72
    73 74 75 91 92 93 94 142 292 303
inner_option_define_identifier (163)
    on left: 294 295 296 297 298 299 300 301 302 303 304 305 306 307
    308 309 310, on right: 64 270 271 272 273 274 275 276 277 278 279
    280 281 282 283 284 285 286 287 288 289 290 291 292 294 295 296
    297 298 299 300 301 302 303 305 306 307 308 309
option_function_identifier (164)
    on left: 311 312 313 314 315, on right: 76 77 78 312 317
inner_option_function_identifier (165)
    on left: 316 317 318 319, on right: 311 312 316 317
statement_bpar (166)
    on left: 320 321, on right: 58 59 340 341 342 356 357
bool_par (167)
    on left: 322 323, on right: 340
identifier (168)
    on left: 324 325, on right: 57 64 91 92 101 103 117 156 178 212
    270 272 273 274 275 276 277 278 279 286 287 288 289 291 292 294
    296 297 298 299 300 301 302 303 305 306 307 308 325 330 363 364
    369 371 372 373 374 377 378 379 380 381 384 385 389 391
strliteral (169)
    on left: 326, on right: 105 107 141 142 202 205 208 250 251 252
    253
intliteral (170)
    on left: 327, on right: 173
charliteral (171)
    on left: 328, on right: 183 258 259
floatliteral (172)
    on left: 329, on right: 177
option_frame_identifier (173)
    on left: 330 331 332, on right: 57 330
option_projection (174)
    on left: 333 334, on right: 58 334
imply_pre (175)
    on left: 335 336 337 338 339, on right: 56 336 337 338 339
while_statement (176)
    on left: 340, on right: 38
for_statement (177)
    on left: 341, on right: 39
extend_for_statement (178)
    on left: 342, on right: 40
for_sta_init (179)
    on left: 343 344 345, on right: 342
for_sta_condition (180)
    on left: 346 347, on right: 342
for_sta_control (181)
    on left: 348 349, on right: 342
switch_statement (182)
    on left: 350, on right: 35
case_par (183)
    on left: 351 352, on right: 350 353 354
init_case_par (184)
    on left: 353 354 355, on right: 351
if_statement (185)
    on left: 356, on right: 37
option_else_statement (186)
    on left: 357 358, on right: 356
output_statement (187)
    on left: 359 360, on right: 51
option_output (188)
    on left: 361 362, on right: 360 362
input_statement (189)
    on left: 363 364 365 366 367, on right: 50
option_input (190)
    on left: 368 369 370, on right: 364 366 369 370
struct_member_exp (191)
    on left: 371 372 373 374 375 376 377 378 379 380 381 382 383 384
    385 386 387, on right: 118 186 214 367 387
option_struct_member_exp (192)
    on left: 388 389 390 391 392 393 394, on right: 371 372 373 374
    375 376 377 378 379 380 381 382 383 386 389 390 391 392


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1219
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 61
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 83



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 86



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 87



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 100
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 115



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 116
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 350)

    OPEN_PAR	shift, and go to state 123



state 23

    statement  ->  RETURN . ID   (rule 36)

    ID  	shift, and go to state 124



state 24

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 356)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 132
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 135



state 27

    struct_identifier  ->  STRUCT . ID   (rule 80)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 136
    STRUCT_TYPE	shift, and go to state 137



state 28

    struct_identifier  ->  UNION . ID   (rule 81)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 88)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 90)

    ID  	shift, and go to state 138
    STRUCT_TYPE	shift, and go to state 139



state 29

    type_define  ->  FILEDECLARATION .   (rule 100)

    $default	reduce using rule 100 (type_define)



state 30

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 140



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 143



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 144



state 34

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 341)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 145
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 146
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 35

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 340)

    error	shift, and go to state 147
    OPEN_PAR	shift, and go to state 148

    bool_par	go to state 149



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 38

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 150



state 39

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 359)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 360)

    OPEN_PAR	shift, and go to state 151



state 40

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

    type_define  ->  INTDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 42

    type_define  ->  STRDECLARATION .   (rule 98)

    $default	reduce using rule 98 (type_define)



state 43

    type_define  ->  CHARDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)



state 44

    type_define  ->  VOIDDECLARATION .   (rule 99)

    $default	reduce using rule 99 (type_define)



state 45

    type_define  ->  FLOATDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 152
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 153
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 154
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 155
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 156
    function_define	go to state 62
    function	go to state 157
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 158
    leftaddrshift	go to state 71
    array	go to state 159
    point_exp	go to state 160
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 161
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 163
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 164
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 165



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 166
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 48

    function_define  ->  FUNCTION . all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)
    function_define  ->  FUNCTION . all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  FUNCTION . all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  FUNCTION . STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  FUNCTION . STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  FUNCTION . STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    STRUCT	shift, and go to state 167
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    UNSIGNED	shift, and go to state 168

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 171



state 49

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 77)

    ID  	shift, and go to state 172



state 50

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 176
    type_define	go to state 68



state 51

    sign_declaration  ->  SIGNED . declaration   (rule 82)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 177
    type_define	go to state 68



state 52

    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 178
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 180
    point_exp	go to state 181
    identifier	go to state 182



state 53

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 122)

    OPEN_PAR	shift, and go to state 183
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 179

    ass_left	go to state 185
    leftaddrshift	go to state 71
    array	go to state 186
    point_exp	go to state 73
    identifier	go to state 74
    struct_member_exp	go to state 82



state 54

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 187



state 55

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 363)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 367)

    OPEN_PAR	shift, and go to state 188



state 56

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 189



state 57

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 190



state 58

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 191



state 59

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 192
    OPEN_MPAR	shift, and go to state 193

    $default	reduce using rule 324 (identifier)



state 60

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 196
    identifier	go to state 197



state 61

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201

    $default	reduce using rule 1 (program)



state 62

    statement  ->  function_define .   (rule 62)

    $default	reduce using rule 62 (statement)



state 63

    statement  ->  function .   (rule 63)

    $default	reduce using rule 63 (statement)



state 64

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 65

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 79)

    OPEN_BPAR	shift, and go to state 202



state 66

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 67

    sign_declaration  ->  declaration .   (rule 84)

    $default	reduce using rule 84 (sign_declaration)



state 68

    declaration  ->  type_define . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 203
    identifier	go to state 197



state 69

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 70

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 116)

    ASS_P	shift, and go to state 204
    ASS_N	shift, and go to state 205

    assign_operator	go to state 206



state 71

    ass_left  ->  leftaddrshift .   (rule 123)

    $default	reduce using rule 123 (ass_left)



state 72

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    OPEN_PAR	shift, and go to state 208
    IMPLY	shift, and go to state 209

    $default	reduce using rule 119 (ass_left)



state 73

    ass_left  ->  point_exp .   (rule 120)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    IMPLY	shift, and go to state 211

    $default	reduce using rule 120 (ass_left)



state 74

    ass_left  ->  identifier .   (rule 117)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    IMPLY	shift, and go to state 213

    $default	reduce using rule 117 (ass_left)



state 75

    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 76

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 77

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 78

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 79

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 80

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 81

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 82

    ass_left  ->  struct_member_exp .   (rule 118)

    $default	reduce using rule 118 (ass_left)



state 83

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 214



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 215
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 216
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 217



state 86

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 87

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 88

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 218
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 89

    member_in_exp  ->  POINTERNULL .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 90

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 91

    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)

    OPEN_PAR	shift, and go to state 234
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 235
    point_exp	go to state 236
    address_exp	go to state 237
    identifier	go to state 238
    struct_member_exp	go to state 239



state 92

    member_in_exp  ->  SUB . member_in_exp   (rule 174)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 240
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 93

    member_in_exp  ->  BNE . member_in_exp   (rule 175)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 241
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 94

    intliteral  ->  INTLITERAL .   (rule 327)

    $default	reduce using rule 327 (intliteral)



state 95

    floatliteral  ->  FLOATLITERAL .   (rule 329)

    $default	reduce using rule 329 (floatliteral)



state 96

    charliteral  ->  CHARLITERAL .   (rule 328)

    $default	reduce using rule 328 (charliteral)



state 97

    member_in_exp  ->  function .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 98

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    OPEN_PAR	shift, and go to state 208
    IMPLY	shift, and go to state 209

    DOT 	[reduce using rule 179 (member_in_exp)]
    IMPLY	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 99

    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    IMPLY	shift, and go to state 211

    DOT 	[reduce using rule 180 (member_in_exp)]
    IMPLY	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 100

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 244



state 101

    ari_exp  ->  simple_ari_exp .   (rule 163)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 164)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 245
    CON 	shift, and go to state 246
    ADDRESS	shift, and go to state 247
    NE  	shift, and go to state 248
    EQ  	shift, and go to state 249
    GE  	shift, and go to state 250
    LE  	shift, and go to state 251
    GT  	shift, and go to state 252
    LT  	shift, and go to state 253
    LST 	shift, and go to state 254
    RST 	shift, and go to state 255
    MUL 	shift, and go to state 256
    DIV 	shift, and go to state 257
    MOD 	shift, and go to state 258

    INTER_OR	[reduce using rule 163 (ari_exp)]
    CON 	[reduce using rule 163 (ari_exp)]
    ADDRESS	[reduce using rule 163 (ari_exp)]
    NE  	[reduce using rule 163 (ari_exp)]
    EQ  	[reduce using rule 163 (ari_exp)]
    GE  	[reduce using rule 163 (ari_exp)]
    LE  	[reduce using rule 163 (ari_exp)]
    GT  	[reduce using rule 163 (ari_exp)]
    LT  	[reduce using rule 163 (ari_exp)]
    LST 	[reduce using rule 163 (ari_exp)]
    RST 	[reduce using rule 163 (ari_exp)]
    MUL 	[reduce using rule 163 (ari_exp)]
    DIV 	[reduce using rule 163 (ari_exp)]
    MOD 	[reduce using rule 163 (ari_exp)]
    $default	reduce using rule 163 (ari_exp)

    bi_operator	go to state 259
    relation_operator	go to state 260



state 102

    simple_ari_exp  ->  member_in_exp .   (rule 171)

    $default	reduce using rule 171 (simple_ari_exp)



state 103

    member_in_exp  ->  address_exp .   (rule 184)

    $default	reduce using rule 184 (member_in_exp)



state 104

    member_in_exp  ->  type_cast .   (rule 185)

    $default	reduce using rule 185 (member_in_exp)



state 105

    member_in_exp  ->  identifier .   (rule 178)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    IMPLY	shift, and go to state 213

    DOT 	[reduce using rule 178 (member_in_exp)]
    IMPLY	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 106

    member_in_exp  ->  intliteral .   (rule 173)

    $default	reduce using rule 173 (member_in_exp)



state 107

    member_in_exp  ->  charliteral .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)



state 108

    member_in_exp  ->  floatliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 109

    member_in_exp  ->  struct_member_exp .   (rule 186)

    $default	reduce using rule 186 (member_in_exp)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 115

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 116

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 117

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 261



state 118

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 262



state 119

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 263



state 120

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 264



state 121

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 265



state 122

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 123

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 350)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 266
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 124

    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 125

    member_in_exp  ->  POINTERNULL .   (rule 176)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 256)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 257)

    NE  	shift, and go to state 267
    EQ  	shift, and go to state 268

    NE  	[reduce using rule 176 (member_in_exp)]
    EQ  	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 126

    prime_bool_exp  ->  MY_TRUE .   (rule 247)

    $default	reduce using rule 247 (prime_bool_exp)



state 127

    prime_bool_exp  ->  MY_FALSE .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 128

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 219
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 269
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 270
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    bool_exp	go to state 271
    prime_bool_exp	go to state 133
    identifier	go to state 232
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 129

    bool_exp  ->  NEGATION . bool_exp   (rule 242)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 272
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 130

    strliteral  ->  STRLITERAL .   (rule 326)

    $default	reduce using rule 326 (strliteral)



state 131

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    NE  	shift, and go to state 273
    EQ  	shift, and go to state 274
    GE  	shift, and go to state 250
    LE  	shift, and go to state 251
    GT  	shift, and go to state 252
    LT  	shift, and go to state 253
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 244
    relation_operator	go to state 275



state 132

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 356)

    THEN	shift, and go to state 276
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 133

    bool_exp  ->  prime_bool_exp .   (rule 241)

    $default	reduce using rule 241 (bool_exp)



state 134

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 252)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 253)

    NE  	shift, and go to state 279
    EQ  	shift, and go to state 280



state 135

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 281
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 136

    struct_identifier  ->  STRUCT ID .   (rule 80)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    $default	reduce using rule 80 (struct_identifier)

    option_identifier_array_declaration	go to state 282
    identifier	go to state 197



state 137

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 283
    identifier	go to state 197



state 138

    struct_identifier  ->  UNION ID .   (rule 81)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    $default	reduce using rule 81 (struct_identifier)

    option_identifier_array_declaration	go to state 284
    identifier	go to state 197



state 139

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 90)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 285
    identifier	go to state 197



state 140

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 286



state 141

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 287



state 142

    identifier  ->  ID .   (rule 324)

    $default	reduce using rule 324 (identifier)



state 143

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 289



state 144

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 290



state 145

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 291
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 292
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 293
    VOIDDECLARATION	shift, and go to state 294
    FLOATDECLARATION	shift, and go to state 295
    OPEN_PAR	shift, and go to state 296
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 297
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 345 (for_sta_init)

    function	go to state 97
    declaration	go to state 298
    type_define	go to state 68
    ass_statement	go to state 299
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 159
    point_exp	go to state 160
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 163
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_init	go to state 300
    struct_member_exp	go to state 165



state 146

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 341)

    TIMES	shift, and go to state 301
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 147

    bool_par  ->  error . CLOSE_PAR   (rule 323)

    CLOSE_PAR	shift, and go to state 302



state 148

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 322)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 303
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 149

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 340)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 306



state 150

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 307
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 151

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 359)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 360)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 312
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 152

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 356)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 319
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 153

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 339)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 152
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 320
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 321
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 322
    VOIDDECLARATION	shift, and go to state 294
    FLOATDECLARATION	shift, and go to state 323
    OPEN_PAR	shift, and go to state 153
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 324
    SIGNED	shift, and go to state 325
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 154
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 155
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 297
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 156
    function_define	go to state 62
    function	go to state 157
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 158
    leftaddrshift	go to state 71
    array	go to state 159
    point_exp	go to state 160
    ari_exp	go to state 270
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 163
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 326
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 165



state 154

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 178
    MUL 	shift, and go to state 327
    ID  	shift, and go to state 328

    array	go to state 180
    point_exp	go to state 181
    identifier	go to state 329



state 155

    imply_pre  ->  NEGATION . imply_pre   (rule 336)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 330
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 155
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 331
    struct_member_exp	go to state 109



state 156

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 65)

    CLOSE_PAR	shift, and go to state 332
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 157

    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 181)

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 181 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



state 158

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 116)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 333
    ASS_P	shift, and go to state 204
    ASS_N	shift, and go to state 205

    assign_operator	go to state 206



state 159

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    OPEN_PAR	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 119 (ass_left)
    ASS_N	reduce using rule 119 (ass_left)
    $default	reduce using rule 179 (member_in_exp)



state 160

    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    CLOSE_PAR	shift, and go to state 335
    IMPLY	shift, and go to state 211

    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 120 (ass_left)
    ASS_N	reduce using rule 120 (ass_left)
    $default	reduce using rule 180 (member_in_exp)



state 161

    member_in_exp  ->  address_exp .   (rule 184)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 162

    imply_pre  ->  prime_bool_exp .   (rule 335)

    $default	reduce using rule 335 (imply_pre)



state 163

    ass_left  ->  identifier .   (rule 117)
    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 213

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    ASS_P	reduce using rule 117 (ass_left)
    ASS_N	reduce using rule 117 (ass_left)
    $default	reduce using rule 178 (member_in_exp)



state 164

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)

    CLOSE_PAR	shift, and go to state 338
    OR  	shift, and go to state 339
    AND 	shift, and go to state 340



state 165

    ass_left  ->  struct_member_exp .   (rule 118)
    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 341

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    ASS_P	reduce using rule 118 (ass_left)
    ASS_N	reduce using rule 118 (ass_left)
    $default	reduce using rule 186 (member_in_exp)



state 166

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 342
    CLOSE_BPAR	shift, and go to state 343
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201

    CLOSE_BPAR	[reduce using rule 333 (option_projection)]
    $default	reduce using rule 333 (option_projection)

    option_projection	go to state 344



state 167

    function_define  ->  FUNCTION STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  FUNCTION STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  FUNCTION STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    STRUCT_TYPE	shift, and go to state 345



state 168

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    INTDECLARATION	shift, and go to state 346
    CHARDECLARATION	shift, and go to state 347



state 169

    all_type_define  ->  type_define .   (rule 269)

    $default	reduce using rule 269 (all_type_define)



state 170

    all_type_define  ->  sign_type_define .   (rule 268)

    $default	reduce using rule 268 (all_type_define)



state 171

    function_define  ->  FUNCTION all_type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)
    function_define  ->  FUNCTION all_type_define . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  FUNCTION all_type_define . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    MUL 	shift, and go to state 348
    ID  	shift, and go to state 349



state 172

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 77)

    OPEN_PAR	shift, and go to state 350



state 173

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 351
    STRUCT_TYPE	shift, and go to state 137



state 174

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 88)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 90)

    ID  	shift, and go to state 352
    STRUCT_TYPE	shift, and go to state 139



state 175

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    MUL 	shift, and go to state 353



state 176

    sign_declaration  ->  UNSIGNED declaration .   (rule 83)

    $default	reduce using rule 83 (sign_declaration)



state 177

    sign_declaration  ->  SIGNED declaration .   (rule 82)

    $default	reduce using rule 82 (sign_declaration)



state 178

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    type_define	go to state 169
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 354
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 355
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 179

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 324)

    OPEN_MPAR	shift, and go to state 193

    $default	reduce using rule 324 (identifier)



state 180

    point_exp  ->  MUL array .   (rule 158)

    $default	reduce using rule 158 (point_exp)



state 181

    point_exp  ->  MUL point_exp .   (rule 157)

    $default	reduce using rule 157 (point_exp)



state 182

    point_exp  ->  MUL identifier .   (rule 156)

    $default	reduce using rule 156 (point_exp)



state 183

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 356
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 357
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 158
    leftaddrshift	go to state 71
    array	go to state 358
    point_exp	go to state 359
    address_exp	go to state 360
    identifier	go to state 361
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 362



state 184

    ass_left  ->  NEXT . ass_left   (rule 122)

    OPEN_PAR	shift, and go to state 363
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 179

    ass_left	go to state 185
    leftaddrshift	go to state 71
    array	go to state 186
    point_exp	go to state 73
    identifier	go to state 74
    struct_member_exp	go to state 82



state 185

    ass_left  ->  NEXT ass_left .   (rule 122)

    $default	reduce using rule 122 (ass_left)



state 186

    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 209

    $default	reduce using rule 119 (ass_left)



state 187

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 364
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 188

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 363)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 367)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 366
    point_exp	go to state 236
    identifier	go to state 367
    struct_member_exp	go to state 368



state 189

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 369
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 190

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 370
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 191

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 371
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 192

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 373
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 376
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 193

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 377
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 194

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197



state 195

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 324)

    ARRAY	shift, and go to state 379
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 324 (identifier)



state 196

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 197

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 382

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 383



state 198

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 384
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 199

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 385
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 200

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 386
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 201

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 387
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 202

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 79)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 388
    sign_declaration	go to state 389
    declaration	go to state 67
    type_define	go to state 68



state 203

    declaration  ->  type_define option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 204

    assign_operator  ->  ASS_P .   (rule 137)

    $default	reduce using rule 137 (assign_operator)



state 205

    assign_operator  ->  ASS_N .   (rule 138)

    $default	reduce using rule 138 (assign_operator)



state 206

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 116)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 390
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 207

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 375)

    OPEN_PAR	shift, and go to state 391
    ID  	shift, and go to state 179

    array	go to state 392
    identifier	go to state 393



state 208

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 78)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 373
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 394
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 209

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 382)

    OPEN_PAR	shift, and go to state 391
    ID  	shift, and go to state 179

    array	go to state 395
    identifier	go to state 396



state 210

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 391
    ID  	shift, and go to state 179

    array	go to state 397
    identifier	go to state 398



state 211

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 386)

    OPEN_PAR	shift, and go to state 391
    ID  	shift, and go to state 179

    array	go to state 399
    identifier	go to state 400



state 212

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier DOT . function   (rule 384)

    OPEN_PAR	shift, and go to state 391
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 401
    array	go to state 402
    identifier	go to state 403



state 213

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier IMPLY . function   (rule 385)

    OPEN_PAR	shift, and go to state 391
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 404
    array	go to state 405
    identifier	go to state 406



state 214

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 407
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 215

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 216

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 408



state 217

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 409



state 218

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    THEN	shift, and go to state 410
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 219

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    STRUCT_TYPE	shift, and go to state 411



state 220

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413



state 221

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 415



state 222

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 416



state 223

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 418



state 224

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 225

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424



state 226

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    INTDECLARATION	shift, and go to state 425
    CHARDECLARATION	shift, and go to state 426



state 227

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    MUL 	shift, and go to state 427



state 228

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    OPEN_PAR	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 229

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    CLOSE_PAR	shift, and go to state 335
    IMPLY	shift, and go to state 211

    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 230

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)

    CLOSE_PAR	shift, and go to state 428
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 231

    member_in_exp  ->  address_exp .   (rule 184)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)

    CLOSE_PAR	shift, and go to state 429

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 232

    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 213

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 233

    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 341

    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)



state 234

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 430
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 431
    point_exp	go to state 432
    address_exp	go to state 433
    identifier	go to state 434
    struct_member_exp	go to state 435



state 235

    address_exp  ->  ADDRESS array .   (rule 213)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207

    DOT 	[reduce using rule 213 (address_exp)]
    $default	reduce using rule 213 (address_exp)



state 236

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    IMPLY	shift, and go to state 211



state 237

    address_exp  ->  ADDRESS address_exp .   (rule 215)

    $default	reduce using rule 215 (address_exp)



state 238

    address_exp  ->  ADDRESS identifier .   (rule 212)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212

    DOT 	[reduce using rule 212 (address_exp)]
    $default	reduce using rule 212 (address_exp)



state 239

    address_exp  ->  ADDRESS struct_member_exp .   (rule 214)

    $default	reduce using rule 214 (address_exp)



state 240

    member_in_exp  ->  SUB member_in_exp .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)



state 241

    member_in_exp  ->  BNE member_in_exp .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 242

    ari_operator  ->  ADD .   (rule 195)

    $default	reduce using rule 195 (ari_operator)



state 243

    ari_operator  ->  SUB .   (rule 196)

    $default	reduce using rule 196 (ari_operator)



state 244

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 165)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    simple_ari_exp	go to state 436
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 245

    bi_operator  ->  INTER_OR .   (rule 193)

    $default	reduce using rule 193 (bi_operator)



state 246

    bi_operator  ->  CON .   (rule 194)

    $default	reduce using rule 194 (bi_operator)



state 247

    bi_operator  ->  ADDRESS .   (rule 192)

    $default	reduce using rule 192 (bi_operator)



state 248

    relation_operator  ->  NE .   (rule 262)

    $default	reduce using rule 262 (relation_operator)



state 249

    relation_operator  ->  EQ .   (rule 265)

    $default	reduce using rule 265 (relation_operator)



state 250

    relation_operator  ->  GE .   (rule 260)

    $default	reduce using rule 260 (relation_operator)



state 251

    relation_operator  ->  LE .   (rule 261)

    $default	reduce using rule 261 (relation_operator)



state 252

    relation_operator  ->  GT .   (rule 263)

    $default	reduce using rule 263 (relation_operator)



state 253

    relation_operator  ->  LT .   (rule 264)

    $default	reduce using rule 264 (relation_operator)



state 254

    bi_operator  ->  LST .   (rule 190)

    $default	reduce using rule 190 (bi_operator)



state 255

    bi_operator  ->  RST .   (rule 191)

    $default	reduce using rule 191 (bi_operator)



state 256

    bi_operator  ->  MUL .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 257

    bi_operator  ->  DIV .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 258

    bi_operator  ->  MOD .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 259

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 172)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 437
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 260

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 164)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 438
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 261

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 8 (complexProposition)



state 262

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 6 (complexProposition)



state 263

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 7 (complexProposition)



state 264

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 5 (complexProposition)



state 265

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 4 (complexProposition)



state 266

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 350)

    CLOSE_PAR	shift, and go to state 439



state 267

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 257)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 440
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 268

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 256)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 441
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 269

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 219
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 269
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 270
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    bool_exp	go to state 271
    prime_bool_exp	go to state 133
    identifier	go to state 232
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 270

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    CLOSE_PAR	shift, and go to state 428
    NE  	shift, and go to state 273
    EQ  	shift, and go to state 274
    GE  	shift, and go to state 250
    LE  	shift, and go to state 251
    GT  	shift, and go to state 252
    LT  	shift, and go to state 253
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    CLOSE_PAR	[reduce using rule 249 (prime_bool_exp)]
    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 244
    relation_operator	go to state 275



state 271

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 245)

    CLOSE_PAR	shift, and go to state 442
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 272

    bool_exp  ->  NEGATION bool_exp .   (rule 242)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)


    $default	reduce using rule 242 (bool_exp)



state 273

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 259)
    relation_operator  ->  NE .   (rule 262)

    POINTERNULL	shift, and go to state 443
    STRLITERAL	shift, and go to state 130
    CHARLITERAL	shift, and go to state 96

    POINTERNULL	[reduce using rule 262 (relation_operator)]
    CHARLITERAL	[reduce using rule 262 (relation_operator)]
    $default	reduce using rule 262 (relation_operator)

    strliteral	go to state 444
    charliteral	go to state 445



state 274

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 258)
    relation_operator  ->  EQ .   (rule 265)

    POINTERNULL	shift, and go to state 446
    STRLITERAL	shift, and go to state 130
    CHARLITERAL	shift, and go to state 96

    POINTERNULL	[reduce using rule 265 (relation_operator)]
    CHARLITERAL	[reduce using rule 265 (relation_operator)]
    $default	reduce using rule 265 (relation_operator)

    strliteral	go to state 447
    charliteral	go to state 448



state 275

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 246)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 449
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 276

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 356)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 450



state 277

    bool_exp  ->  bool_exp OR . bool_exp   (rule 244)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 451
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 278

    bool_exp  ->  bool_exp AND . bool_exp   (rule 243)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 452
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 279

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 253)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 453
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 280

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 252)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 454
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 281

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    CLOSE_PAR	shift, and go to state 455
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 282

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 283

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 89)

    $default	reduce using rule 89 (declaration)



state 284

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 285

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 90)

    $default	reduce using rule 90 (declaration)



state 286

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 460



state 287

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)

    CLOSE_PAR	shift, and go to state 337



state 288

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA . error   (rule 310)

    error	shift, and go to state 461
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 462
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 463
    STRUCT_TYPE	shift, and go to state 464

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 465



state 289

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COLON	shift, and go to state 466



state 290

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 467

    $default	reduce using rule 331 (option_frame_identifier)

    option_frame_identifier	go to state 468



state 291

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 351
    STRUCT_TYPE	shift, and go to state 469



state 292

    type_define  ->  INTDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 293

    type_define  ->  CHARDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 415

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 294

    type_define  ->  VOIDDECLARATION .   (rule 99)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 416

    MUL 	[reduce using rule 99 (type_define)]
    $default	reduce using rule 99 (type_define)



state 295

    type_define  ->  FLOATDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 418

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 296

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 470
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 154
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_left	go to state 471
    leftaddrshift	go to state 71
    array	go to state 159
    point_exp	go to state 160
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 163
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 165



state 297

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 472
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 196
    identifier	go to state 197



state 298

    for_sta_init  ->  declaration .   (rule 344)

    $default	reduce using rule 344 (for_sta_init)



state 299

    for_sta_init  ->  ass_statement .   (rule 343)

    $default	reduce using rule 343 (for_sta_init)



state 300

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    COMMA	shift, and go to state 473



state 301

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 341)

    DO  	shift, and go to state 474



state 302

    bool_par  ->  error CLOSE_PAR .   (rule 323)

    $default	reduce using rule 323 (bool_par)



state 303

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 322)

    CLOSE_PAR	shift, and go to state 475
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 304

    statement_bpar  ->  error . CLOSE_BPAR   (rule 321)

    CLOSE_BPAR	shift, and go to state 476



state 305

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 320)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 477
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 306

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 340)

    $default	reduce using rule 340 (while_statement)



state 307

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 478
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 308

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 480
    rightaddrshift	go to state 313
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 481
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 482
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    strliteral	go to state 483
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 309

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 204)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 205)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 206)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 485
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 486
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 487
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 310

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 201)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 202)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 203)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 488
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 489
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 490
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 311

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 145)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 491
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 180
    point_exp	go to state 181
    identifier	go to state 182



state 312

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 359)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 360)

    COMMA	shift, and go to state 492
    CLOSE_PAR	shift, and go to state 493

    CLOSE_PAR	[reduce using rule 361 (option_output)]
    $default	reduce using rule 361 (option_output)

    option_output	go to state 494



state 313

    ass_right  ->  rightaddrshift .   (rule 144)

    $default	reduce using rule 144 (ass_right)



state 314

    ass_right  ->  ari_exp .   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 139 (ass_right)

    ari_operator	go to state 244



state 315

    ass_right  ->  array_exp .   (rule 140)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    CON 	shift, and go to state 495

    $default	reduce using rule 140 (ass_right)



state 316

    array_exp  ->  option_list_value .   (rule 198)

    $default	reduce using rule 198 (array_exp)



state 317

    array_exp  ->  option_struct_list_value .   (rule 199)

    $default	reduce using rule 199 (array_exp)



state 318

    ass_right  ->  strliteral .   (rule 141)

    $default	reduce using rule 141 (ass_right)



state 319

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 356)

    THEN	shift, and go to state 496
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 320

    struct_identifier  ->  STRUCT . ID   (rule 80)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 136
    STRUCT_TYPE	shift, and go to state 469



state 321

    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 497

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 322

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 498

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 323

    type_define  ->  FLOATDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 499

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 324

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 500
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 501
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 176
    type_define	go to state 68



state 325

    sign_declaration  ->  SIGNED . declaration   (rule 82)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 502
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 503
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 177
    type_define	go to state 68



state 326

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 339)

    CLOSE_PAR	shift, and go to state 504
    OR  	shift, and go to state 339
    AND 	shift, and go to state 340



state 327

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 178
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 180
    point_exp	go to state 181
    identifier	go to state 505



state 328

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 324)

    OPEN_MPAR	shift, and go to state 506

    $default	reduce using rule 324 (identifier)



state 329

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    point_exp  ->  MUL identifier .   (rule 156)

    CLOSE_PAR	shift, and go to state 507

    CLOSE_PAR	[reduce using rule 156 (point_exp)]
    $default	reduce using rule 156 (point_exp)



state 330

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 339)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 219
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 508
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 155
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 270
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 232
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 509
    struct_member_exp	go to state 233



state 331

    imply_pre  ->  NEGATION imply_pre .   (rule 336)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)


    $default	reduce using rule 336 (imply_pre)



state 332

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 65)

    $default	reduce using rule 65 (statement)



state 333

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 121)

    $default	reduce using rule 121 (ass_left)



state 334

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 152)

    $default	reduce using rule 152 (array)



state 335

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 162)

    OPEN_MPAR	shift, and go to state 510

    $default	reduce using rule 162 (point_exp)



state 336

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 383)

    IMPLY	shift, and go to state 511



state 337

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 325)

    $default	reduce using rule 325 (identifier)



state 338

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 512



state 339

    imply_pre  ->  imply_pre OR . imply_pre   (rule 338)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 330
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 155
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 513
    struct_member_exp	go to state 109



state 340

    imply_pre  ->  imply_pre AND . imply_pre   (rule 337)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 330
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 155
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 514
    struct_member_exp	go to state 109



state 341

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 387)

    $default	reduce using rule 387 (struct_member_exp)



state 342

    option_projection  ->  COMMA . statement option_projection   (rule 334)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 515
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 343

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 516



state 344

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 517



state 345

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    MUL 	shift, and go to state 518
    ID  	shift, and go to state 519



state 346

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    $default	reduce using rule 266 (sign_type_define)



state 347

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    $default	reduce using rule 267 (sign_type_define)



state 348

    function_define  ->  FUNCTION all_type_define MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  FUNCTION all_type_define MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    MUL 	shift, and go to state 520
    ID  	shift, and go to state 521



state 349

    function_define  ->  FUNCTION all_type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_PAR	shift, and go to state 522



state 350

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 77)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 373
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 523
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 351

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 282
    identifier	go to state 197



state 352

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 284
    identifier	go to state 197



state 353

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 524
    ID  	shift, and go to state 525

    identifier	go to state 526



state 354

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 161)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    CLOSE_PAR	shift, and go to state 527
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 355

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 160)

    MUL 	shift, and go to state 528



state 356

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 152
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 529
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 530
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 531
    OPEN_PAR	shift, and go to state 153
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 532
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 154
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 155
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 156
    function_define	go to state 62
    function	go to state 157
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 158
    leftaddrshift	go to state 71
    array	go to state 159
    point_exp	go to state 160
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 163
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 164
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 165



state 357

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 533
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 358

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    OPEN_PAR	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    $default	reduce using rule 119 (ass_left)



state 359

    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    CLOSE_PAR	shift, and go to state 335
    IMPLY	shift, and go to state 211

    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    $default	reduce using rule 120 (ass_left)



state 360

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)

    CLOSE_PAR	shift, and go to state 336



state 361

    ass_left  ->  identifier .   (rule 117)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 213

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    $default	reduce using rule 117 (ass_left)



state 362

    ass_left  ->  struct_member_exp .   (rule 118)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 341

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    $default	reduce using rule 118 (ass_left)



state 363

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 534
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 179

    ass_left	go to state 471
    leftaddrshift	go to state 71
    array	go to state 535
    point_exp	go to state 359
    address_exp	go to state 360
    identifier	go to state 361
    struct_member_exp	go to state 362



state 364

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    CLOSE_PAR	shift, and go to state 536
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 365

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 430
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 431
    point_exp	go to state 432
    address_exp	go to state 360
    identifier	go to state 434
    struct_member_exp	go to state 435



state 366

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 366)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    COMMA	shift, and go to state 537
    CLOSE_PAR	shift, and go to state 538
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 368 (option_input)]
    $default	reduce using rule 368 (option_input)

    option_input	go to state 539



state 367

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 363)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 364)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    COMMA	shift, and go to state 537
    CLOSE_PAR	shift, and go to state 540
    IMPLY	shift, and go to state 213

    CLOSE_PAR	[reduce using rule 368 (option_input)]
    $default	reduce using rule 368 (option_input)

    option_input	go to state 541



state 368

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 367)

    CLOSE_PAR	shift, and go to state 542



state 369

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 543
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 370

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 544
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 371

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 545
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 372

    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)
    option_function_identifier  ->  ADDRESS . error   (rule 315)

    error	shift, and go to state 546
    OPEN_PAR	shift, and go to state 234
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 235
    point_exp	go to state 236
    address_exp	go to state 237
    identifier	go to state 238
    struct_member_exp	go to state 239



state 373

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 547
    OPEN_MPAR	shift, and go to state 193

    $default	reduce using rule 324 (identifier)



state 374

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 548

    $default	reduce using rule 318 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 549



state 375

    option_function_identifier  ->  all_type_define .   (rule 313)

    $default	reduce using rule 313 (option_function_identifier)



state 376

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)

    CLOSE_PAR	shift, and go to state 550



state 377

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 552
    ari_operator	go to state 244



state 378

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 108)

    $default	reduce using rule 108 (option_identifier_array_declaration)



state 379

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    ASS_P	shift, and go to state 553



state 380

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 554
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 381

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 109)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 110)

    error	shift, and go to state 555
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 556
    identifier	go to state 197



state 382

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 103)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 557
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 383

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 384

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201

    $default	reduce using rule 32 (statement)



state 385

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    AND 	shift, and go to state 201

    $default	reduce using rule 31 (statement)



state 386

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

    AND 	shift, and go to state 201

    $default	reduce using rule 55 (statement)



state 387

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



state 388

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 79)

    CLOSE_BPAR	shift, and go to state 558



state 389

    option_struct_declaration  ->  sign_declaration .   (rule 66)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 67)

    AND 	shift, and go to state 559

    $default	reduce using rule 66 (option_struct_declaration)



state 390

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 116)

    $default	reduce using rule 116 (ass_statement)



state 391

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)

    OPEN_PAR	shift, and go to state 560
    ID  	shift, and go to state 179

    array	go to state 561
    identifier	go to state 287



state 392

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 564



state 393

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 565



state 394

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 78)

    CLOSE_PAR	shift, and go to state 566



state 395

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 567



state 396

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 568



state 397

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 569



state 398

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 570



state 399

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 571



state 400

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 572



state 401

    struct_member_exp  ->  identifier DOT function .   (rule 384)

    $default	reduce using rule 384 (struct_member_exp)



state 402

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 562
    OPEN_PAR	shift, and go to state 208
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 573



state 403

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 574



state 404

    struct_member_exp  ->  identifier IMPLY function .   (rule 385)

    $default	reduce using rule 385 (struct_member_exp)



state 405

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 562
    OPEN_PAR	shift, and go to state 208
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 575



state 406

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 576



state 407

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 408

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 216
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 577



state 409

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 578



state 410

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 579
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 411

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    MUL 	shift, and go to state 580



state 412

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 581
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 413

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 583
    MUL 	shift, and go to state 584



state 414

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 585
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 415

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 416

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 417

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 590
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 418

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 591
    MUL 	shift, and go to state 592



state 419

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 593



state 420

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 594



state 421

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 595



state 422

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597



state 423

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 598
    MUL 	shift, and go to state 599



state 424

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 601



state 425

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 602



state 426

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 603



state 427

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 604
    MUL 	shift, and go to state 605



state 428

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 429

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 383)

    IMPLY	shift, and go to state 511

    IMPLY	[reduce using rule 216 (address_exp)]
    $default	reduce using rule 216 (address_exp)



state 430

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    INTDECLARATION	shift, and go to state 606
    CHARDECLARATION	shift, and go to state 607
    FLOATDECLARATION	shift, and go to state 608
    OPEN_PAR	shift, and go to state 430
    UNSIGNED	shift, and go to state 609
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 179

    array	go to state 431
    point_exp	go to state 432
    address_exp	go to state 433
    identifier	go to state 434
    struct_member_exp	go to state 435



state 431

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209



state 432

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 210
    CLOSE_PAR	shift, and go to state 335
    IMPLY	shift, and go to state 211



state 433

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)

    CLOSE_PAR	shift, and go to state 429



state 434

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 213



state 435

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 341



state 436

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 165)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 245
    CON 	shift, and go to state 246
    ADDRESS	shift, and go to state 247
    LST 	shift, and go to state 254
    RST 	shift, and go to state 255
    MUL 	shift, and go to state 256
    DIV 	shift, and go to state 257
    MOD 	shift, and go to state 258

    INTER_OR	[reduce using rule 165 (ari_exp)]
    CON 	[reduce using rule 165 (ari_exp)]
    ADDRESS	[reduce using rule 165 (ari_exp)]
    LST 	[reduce using rule 165 (ari_exp)]
    RST 	[reduce using rule 165 (ari_exp)]
    MUL 	[reduce using rule 165 (ari_exp)]
    DIV 	[reduce using rule 165 (ari_exp)]
    MOD 	[reduce using rule 165 (ari_exp)]
    $default	reduce using rule 165 (ari_exp)

    bi_operator	go to state 259



state 437

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 172)

    $default	reduce using rule 172 (simple_ari_exp)



state 438

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 164)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ADD 	[reduce using rule 164 (ari_exp)]
    SUB 	[reduce using rule 164 (ari_exp)]
    $default	reduce using rule 164 (ari_exp)

    ari_operator	go to state 244



state 439

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 350)

    OPEN_BPAR	shift, and go to state 610



state 440

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 257)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 257 (prime_bool_exp)

    ari_operator	go to state 244



state 441

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 256)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 256 (prime_bool_exp)

    ari_operator	go to state 244



state 442

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 245)

    $default	reduce using rule 245 (bool_exp)



state 443

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 255)

    $default	reduce using rule 255 (prime_bool_exp)



state 444

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 251)

    $default	reduce using rule 251 (prime_bool_exp)



state 445

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 259)

    $default	reduce using rule 259 (prime_bool_exp)



state 446

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)



state 447

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 250)

    $default	reduce using rule 250 (prime_bool_exp)



state 448

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 258)

    $default	reduce using rule 258 (prime_bool_exp)



state 449

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 246)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 244



state 450

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 356)

    ELSE	shift, and go to state 611

    $default	reduce using rule 358 (option_else_statement)

    option_else_statement	go to state 612



state 451

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 244)

    AND 	shift, and go to state 278

    $default	reduce using rule 244 (bool_exp)



state 452

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)


    $default	reduce using rule 243 (bool_exp)



state 453

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 253)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 253 (prime_bool_exp)

    ari_operator	go to state 244



state 454

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 252)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 252 (prime_bool_exp)

    ari_operator	go to state 244



state 455

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 456

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    MUL 	shift, and go to state 613



state 457

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 614
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 615
    identifier	go to state 616



state 458

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 617
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 618
    identifier	go to state 619



state 459

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 620
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 621
    identifier	go to state 622



state 460

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 623



state 461

    inner_option_define_identifier  ->  COMMA error .   (rule 310)

    $default	reduce using rule 310 (inner_option_define_identifier)



state 462

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    MUL 	shift, and go to state 624



state 463

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 299)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 625



state 464

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 300)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 626
    ID  	shift, and go to state 142

    identifier	go to state 627



state 465

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 628
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 629
    identifier	go to state 630



state 466

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 631



state 467

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 330)
    option_frame_identifier  ->  COMMA . error   (rule 332)

    error	shift, and go to state 632
    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 633



state 468

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 634



state 469

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 635
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 283
    identifier	go to state 197



state 470

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 636
    CHARDECLARATION	shift, and go to state 637
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 638
    OPEN_PAR	shift, and go to state 470
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 639
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_left	go to state 471
    leftaddrshift	go to state 71
    array	go to state 159
    point_exp	go to state 160
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 163
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 165



state 471

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 333



state 472

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 604
    MUL 	shift, and go to state 640
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197



state 473

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 347 (for_sta_condition)

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 641
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_condition	go to state 642
    struct_member_exp	go to state 109



state 474

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 341)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 643



state 475

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 322)

    $default	reduce using rule 322 (bool_par)



state 476

    statement_bpar  ->  error CLOSE_BPAR .   (rule 321)

    $default	reduce using rule 321 (statement_bpar)



state 477

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 320)

    CLOSE_BPAR	shift, and go to state 644
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 478

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 645



state 479

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 480
    rightaddrshift	go to state 313
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 481
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 482
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    strliteral	go to state 483
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 480

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 143)

    CLOSE_PAR	shift, and go to state 646



state 481

    ass_right  ->  ari_exp .   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)

    CLOSE_PAR	shift, and go to state 428
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    CLOSE_PAR	[reduce using rule 139 (ass_right)]
    $default	reduce using rule 139 (ass_right)

    ari_operator	go to state 244



state 482

    ass_right  ->  array_exp .   (rule 140)
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 200)

    CLOSE_PAR	shift, and go to state 647
    CON 	shift, and go to state 495

    CLOSE_PAR	[reduce using rule 140 (ass_right)]
    $default	reduce using rule 140 (ass_right)



state 483

    ass_right  ->  strliteral .   (rule 141)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 648

    CLOSE_PAR	[reduce using rule 141 (ass_right)]
    $default	reduce using rule 141 (ass_right)



state 484

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 650
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 485

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 204)

    COMMA	shift, and go to state 651
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 244
    inner_option_list_value	go to state 652



state 486

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 206)

    COMMA	shift, and go to state 651
    CON 	shift, and go to state 495

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 653



state 487

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 205)

    COMMA	shift, and go to state 651

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 654



state 488

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 201)

    COMMA	shift, and go to state 651
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 244
    inner_option_list_value	go to state 655



state 489

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 203)

    COMMA	shift, and go to state 651
    CON 	shift, and go to state 495

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 656



state 490

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 202)

    COMMA	shift, and go to state 651

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 657



state 491

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 658
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    type_define	go to state 169
    leftaddrshift	go to state 659
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 354
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 355
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 492

    option_output  ->  COMMA . ass_right option_output   (rule 362)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 660
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 493

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (output_statement)



state 494

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 360)

    CLOSE_PAR	shift, and go to state 661



state 495

    array_exp  ->  array_exp CON . array_exp   (rule 197)

    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310

    array_exp	go to state 663
    option_list_value	go to state 316
    option_struct_list_value	go to state 317



state 496

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 356)

    error	shift, and go to state 304
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    OPEN_BPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 579
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    statement_bpar	go to state 450
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 497

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 664
    MUL 	shift, and go to state 584



state 498

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 665
    MUL 	shift, and go to state 587



state 499

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 666
    MUL 	shift, and go to state 592



state 500

    type_define  ->  INTDECLARATION .   (rule 95)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 598
    MUL 	shift, and go to state 667

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 501

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 668

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 502

    type_define  ->  INTDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 602

    $default	reduce using rule 95 (type_define)



state 503

    type_define  ->  CHARDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 603

    $default	reduce using rule 97 (type_define)



state 504

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 339)

    IMPLY	shift, and go to state 512

    $default	reduce using rule 339 (imply_pre)



state 505

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    point_exp  ->  MUL identifier .   (rule 156)

    CLOSE_PAR	shift, and go to state 669

    CLOSE_PAR	[reduce using rule 156 (point_exp)]
    $default	reduce using rule 156 (point_exp)



state 506

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 670
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 507

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    OPEN_PAR	shift, and go to state 671



state 508

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 339)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 219
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 508
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 155
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 270
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    prime_bool_exp	go to state 162
    identifier	go to state 232
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 509
    struct_member_exp	go to state 233



state 509

    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 339)

    CLOSE_PAR	shift, and go to state 672
    OR  	shift, and go to state 339
    AND 	shift, and go to state 340



state 510

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 159)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 673
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 511

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 383)

    OPEN_PAR	shift, and go to state 391
    ID  	shift, and go to state 179

    array	go to state 674
    identifier	go to state 675



state 512

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 676



state 513

    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 338)

    AND 	shift, and go to state 340

    $default	reduce using rule 338 (imply_pre)



state 514

    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)


    $default	reduce using rule 337 (imply_pre)



state 515

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 334)

    COMMA	shift, and go to state 342
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201

    $default	reduce using rule 333 (option_projection)

    option_projection	go to state 677



state 516

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 678



state 517

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 679



state 518

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    MUL 	shift, and go to state 680
    ID  	shift, and go to state 681



state 519

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_PAR	shift, and go to state 682



state 520

    function_define  ->  FUNCTION all_type_define MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    ID  	shift, and go to state 683



state 521

    function_define  ->  FUNCTION all_type_define MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_PAR	shift, and go to state 684



state 522

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 685



state 523

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 77)

    CLOSE_PAR	shift, and go to state 686



state 524

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 687



state 525

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    identifier  ->  ID .   (rule 324)

    OPEN_MPAR	shift, and go to state 688

    $default	reduce using rule 324 (identifier)



state 526

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 507



state 527

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 161)

    $default	reduce using rule 161 (point_exp)



state 528

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 689



state 529

    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 690

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 530

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 691

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 531

    type_define  ->  FLOATDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 692

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 532

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 693
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 694
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 176
    type_define	go to state 68



state 533

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 534

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    INTDECLARATION	shift, and go to state 695
    CHARDECLARATION	shift, and go to state 696
    FLOATDECLARATION	shift, and go to state 697
    OPEN_PAR	shift, and go to state 534
    UNSIGNED	shift, and go to state 698
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 179

    ass_left	go to state 471
    leftaddrshift	go to state 71
    array	go to state 535
    point_exp	go to state 359
    address_exp	go to state 433
    identifier	go to state 361
    struct_member_exp	go to state 362



state 535

    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    $default	reduce using rule 119 (ass_left)



state 536

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 537

    option_input  ->  COMMA . identifier option_input   (rule 369)
    option_input  ->  COMMA . array option_input   (rule 370)

    OPEN_PAR	shift, and go to state 391
    ID  	shift, and go to state 179

    array	go to state 699
    identifier	go to state 700



state 538

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 365)

    $default	reduce using rule 365 (input_statement)



state 539

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 366)

    CLOSE_PAR	shift, and go to state 701



state 540

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 363)

    $default	reduce using rule 363 (input_statement)



state 541

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 702



state 542

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 367)

    $default	reduce using rule 367 (input_statement)



state 543

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 544

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 545

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 546

    option_function_identifier  ->  ADDRESS error .   (rule 315)

    $default	reduce using rule 315 (option_function_identifier)



state 547

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 373
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 703
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 548

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 316)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 317)
    inner_option_function_identifier  ->  COMMA . error   (rule 319)

    error	shift, and go to state 704
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 705
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 706
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 549

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (option_function_identifier)



state 550

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)

    $default	reduce using rule 76 (function)



state 551

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 153)
    option_ari_exp  ->  COMMA . error   (rule 154)

    error	shift, and go to state 707
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 708
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 552

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 709



state 553

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    STRLITERAL	shift, and go to state 130

    array_exp	go to state 710
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    strliteral	go to state 711



state 554

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 712
    ari_operator	go to state 244



state 555

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 110)

    $default	reduce using rule 110 (inner_option_identifier_array_declaration)



state 556

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 109)

    $default	reduce using rule 109 (inner_option_identifier_array_declaration)



state 557

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 713



state 558

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 79)

    $default	reduce using rule 79 (struct_define_statement)



state 559

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 173
    UNION	shift, and go to state 174
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 175
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 714
    sign_declaration	go to state 389
    declaration	go to state 67
    type_define	go to state 68



state 560

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)

    INTDECLARATION	shift, and go to state 606
    CHARDECLARATION	shift, and go to state 607
    FLOATDECLARATION	shift, and go to state 608
    OPEN_PAR	shift, and go to state 560
    UNSIGNED	shift, and go to state 609
    ID  	shift, and go to state 179

    array	go to state 561
    identifier	go to state 287



state 561

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)

    CLOSE_PAR	shift, and go to state 334



state 562

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 389)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 390)
    option_struct_member_exp  ->  DOT . function   (rule 393)

    OPEN_PAR	shift, and go to state 391
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 715
    array	go to state 716
    identifier	go to state 717



state 563

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 391)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 392)
    option_struct_member_exp  ->  IMPLY . function   (rule 394)

    OPEN_PAR	shift, and go to state 391
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 718
    array	go to state 719
    identifier	go to state 720



state 564

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 565

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 566

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 78)

    $default	reduce using rule 78 (function)



state 567

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (struct_member_exp)



state 568

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 569

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 570

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 571

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 386)

    $default	reduce using rule 386 (struct_member_exp)



state 572

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 573

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 574

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 575

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)



state 576

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 577

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 578

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 721



state 579

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 166)

    ELSE	shift, and go to state 722
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ELSE	[reduce using rule 170 (option_exp_else_statement)]
    ADD 	[reduce using rule 170 (option_exp_else_statement)]
    SUB 	[reduce using rule 170 (option_exp_else_statement)]
    $default	reduce using rule 170 (option_exp_else_statement)

    option_exp_else_statement	go to state 723
    ari_operator	go to state 244



state 580

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725



state 581

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 582

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 167)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 245
    CON 	shift, and go to state 246
    ADDRESS	shift, and go to state 247
    LST 	shift, and go to state 254
    RST 	shift, and go to state 255
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
    MUL 	shift, and go to state 256
    DIV 	shift, and go to state 257
    MOD 	shift, and go to state 258

    INTER_OR	[reduce using rule 167 (type_cast_alg_exp)]
    CON 	[reduce using rule 167 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 167 (type_cast_alg_exp)]
    LST 	[reduce using rule 167 (type_cast_alg_exp)]
    RST 	[reduce using rule 167 (type_cast_alg_exp)]
    ADD 	[reduce using rule 167 (type_cast_alg_exp)]
    SUB 	[reduce using rule 167 (type_cast_alg_exp)]
    MUL 	[reduce using rule 167 (type_cast_alg_exp)]
    DIV 	[reduce using rule 167 (type_cast_alg_exp)]
    MOD 	[reduce using rule 167 (type_cast_alg_exp)]
    $default	reduce using rule 167 (type_cast_alg_exp)

    bi_operator	go to state 259
    ari_operator	go to state 726



state 583

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 584

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 729



state 585

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 586

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 587

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 731



state 588

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 732
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 589

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 733



state 590

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 591

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 734
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 592

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 735



state 593

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 736
    MUL 	shift, and go to state 584



state 594

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 737
    MUL 	shift, and go to state 587



state 595

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 738
    MUL 	shift, and go to state 592



state 596

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 598
    MUL 	shift, and go to state 667



state 597

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 739



state 598

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 740
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 599

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 741
    MUL 	shift, and go to state 742



state 600

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 743
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 601

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 744
    MUL 	shift, and go to state 745



state 602

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 220)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 746
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 603

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 221)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 747
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 604

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 748
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 605

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 749



state 606

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 750



state 607

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 751



state 608

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 752



state 609

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    INTDECLARATION	shift, and go to state 753
    CHARDECLARATION	shift, and go to state 754



state 610

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 350)

    CASE	shift, and go to state 755
    DEFAULT	shift, and go to state 756

    case_par	go to state 757



state 611

    option_else_statement  ->  ELSE . statement_bpar   (rule 357)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 758



state 612

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 356)

    $default	reduce using rule 356 (if_statement)



state 613

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 759



state 614

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 760
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 761
    identifier	go to state 762



state 615

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 616

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 279)

    ARRAY	shift, and go to state 763
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 764



state 617

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 765
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766
    identifier	go to state 767



state 618

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 619

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 275)

    ARRAY	shift, and go to state 768
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 769



state 620

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 770
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 771
    identifier	go to state 772



state 621

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 622

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)

    ARRAY	shift, and go to state 773
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 774



state 623

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 775



state 624

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 776



state 625

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 299)

    ARRAY	shift, and go to state 777
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778



state 626

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 779



state 627

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 300)

    ARRAY	shift, and go to state 780
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 781



state 628

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 782
    identifier	go to state 783



state 629

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 630

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)

    ARRAY	shift, and go to state 784
    COMMA	shift, and go to state 288
    OPEN_MPAR	shift, and go to state 785

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 786



state 631

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 64)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 787
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 632

    option_frame_identifier  ->  COMMA error .   (rule 332)

    $default	reduce using rule 332 (option_frame_identifier)



state 633

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 330)

    COMMA	shift, and go to state 467

    $default	reduce using rule 331 (option_frame_identifier)

    option_frame_identifier	go to state 788



state 634

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 789



state 635

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 790
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197



state 636

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 497



state 637

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 498



state 638

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 499



state 639

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 791



state 640

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 749
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197



state 641

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    for_sta_condition  ->  bool_exp .   (rule 346)

    OR  	shift, and go to state 277
    AND 	shift, and go to state 278

    $default	reduce using rule 346 (for_sta_condition)



state 642

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    COMMA	shift, and go to state 792



state 643

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 341)

    $default	reduce using rule 341 (for_statement)



state 644

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 320)

    $default	reduce using rule 320 (statement_bpar)



state 645

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 793



state 646

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 143)

    $default	reduce using rule 143 (ass_right)



state 647

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 200)

    $default	reduce using rule 200 (array_exp)



state 648

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    OPEN_PAR	shift, and go to state 794



state 649

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 650
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 650

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 200)

    CLOSE_PAR	shift, and go to state 647
    CON 	shift, and go to state 495



state 651

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 207)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 208)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 209)
    inner_option_list_value  ->  COMMA . error   (rule 211)

    error	shift, and go to state 795
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 796
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 797
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 798
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 652

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 204)

    CLOSE_BPAR	shift, and go to state 799



state 653

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 206)

    CLOSE_BPAR	shift, and go to state 800



state 654

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 205)

    CLOSE_BPAR	shift, and go to state 801



state 655

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 201)

    CLOSE_MPAR	shift, and go to state 802



state 656

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 203)

    CLOSE_MPAR	shift, and go to state 803



state 657

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 202)

    CLOSE_MPAR	shift, and go to state 804



state 658

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 805
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 659

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 145)

    CLOSE_PAR	shift, and go to state 806



state 660

    option_output  ->  COMMA ass_right . option_output   (rule 362)

    COMMA	shift, and go to state 492

    $default	reduce using rule 361 (option_output)

    option_output	go to state 807



state 661

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (output_statement)



state 662

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)

    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310

    array_exp	go to state 650
    option_list_value	go to state 316
    option_struct_list_value	go to state 317



state 663

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  array_exp CON array_exp .   (rule 197)


    $default	reduce using rule 197 (array_exp)



state 664

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 808
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 810
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 665

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 811
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 813
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 666

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 814
    INTLITERAL	shift, and go to state 815
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 734
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 667

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 816
    MUL 	shift, and go to state 742



state 668

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 817
    MUL 	shift, and go to state 745



state 669

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    OPEN_PAR	shift, and go to state 818



state 670

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 819
    ari_operator	go to state 244



state 671

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 91)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 820



state 672

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 339)

    $default	reduce using rule 339 (imply_pre)



state 673

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 821
    ari_operator	go to state 244



state 674

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 822



state 675

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 823



state 676

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 824
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 677

    option_projection  ->  COMMA statement option_projection .   (rule 334)

    $default	reduce using rule 334 (option_projection)



state 678

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 679

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 825



state 680

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    ID  	shift, and go to state 826



state 681

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    OPEN_PAR	shift, and go to state 827



state 682

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 828



state 683

    function_define  ->  FUNCTION all_type_define MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_PAR	shift, and go to state 829



state 684

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 830



state 685

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    CLOSE_PAR	shift, and go to state 831



state 686

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 77)

    $default	reduce using rule 77 (function)



state 687

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    CLOSE_PAR	shift, and go to state 669



state 688

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 832
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 689

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 160)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 833
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 690

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 834



state 691

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 835



state 692

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 836



state 693

    type_define  ->  INTDECLARATION .   (rule 95)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 837

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 694

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 838

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 695

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 690



state 696

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 691



state 697

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 692



state 698

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    INTDECLARATION	shift, and go to state 753
    CHARDECLARATION	shift, and go to state 839



state 699

    option_input  ->  COMMA array . option_input   (rule 370)

    COMMA	shift, and go to state 537

    $default	reduce using rule 368 (option_input)

    option_input	go to state 840



state 700

    option_input  ->  COMMA identifier . option_input   (rule 369)

    COMMA	shift, and go to state 537

    $default	reduce using rule 368 (option_input)

    option_input	go to state 841



state 701

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 366)

    $default	reduce using rule 366 (input_statement)



state 702

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 364)

    $default	reduce using rule 364 (input_statement)



state 703

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 312)

    CLOSE_PAR	shift, and go to state 842



state 704

    inner_option_function_identifier  ->  COMMA error .   (rule 319)

    $default	reduce using rule 319 (inner_option_function_identifier)



state 705

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 317)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 843
    OPEN_MPAR	shift, and go to state 193

    $default	reduce using rule 324 (identifier)



state 706

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 316)

    COMMA	shift, and go to state 548

    $default	reduce using rule 318 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 844



state 707

    option_ari_exp  ->  COMMA error .   (rule 154)

    $default	reduce using rule 154 (option_ari_exp)



state 708

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 845
    ari_operator	go to state 244



state 709

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 710

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 104)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    COMMA	shift, and go to state 381
    CON 	shift, and go to state 495

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 846



state 711

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 847



state 712

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    CLOSE_MPAR	shift, and go to state 848



state 713

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 714

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 67)

    $default	reduce using rule 67 (option_struct_declaration)



state 715

    option_struct_member_exp  ->  DOT function .   (rule 393)

    $default	reduce using rule 393 (option_struct_member_exp)



state 716

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 390)

    DOT 	shift, and go to state 562
    OPEN_PAR	shift, and go to state 208
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 849



state 717

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 389)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 850



state 718

    option_struct_member_exp  ->  IMPLY function .   (rule 394)

    $default	reduce using rule 394 (option_struct_member_exp)



state 719

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 392)

    DOT 	shift, and go to state 562
    OPEN_PAR	shift, and go to state 208
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 851



state 720

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 391)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563

    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)

    option_struct_member_exp	go to state 852



state 721

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 853



state 722

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 169)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 854
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 723

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 166)

    $default	reduce using rule 166 (ari_exp)



state 724

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 855
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 725

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 856



state 726

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 168)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    simple_ari_exp	go to state 857
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 727

    casted_element  ->  type_cast_alg_exp .   (rule 240)

    $default	reduce using rule 240 (casted_element)



state 728

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 729

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 858
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 730

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 731

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 859
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 732

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 733

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 860
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 734

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 735

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 861
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 736

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 737

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 738

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 814
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 734
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 739

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 862
    MUL 	shift, and go to state 745



state 740

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 741

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 863
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 742

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 864



state 743

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 744

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 745

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 866



state 746

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 747

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 748

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 749

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 867
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 750

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 868



state 751

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 869



state 752

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 870



state 753

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 837



state 754

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 871



state 755

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 351)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 872
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 756

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 352)

    COLON	shift, and go to state 873



state 757

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 350)

    CLOSE_BPAR	shift, and go to state 874



state 758

    option_else_statement  ->  ELSE statement_bpar .   (rule 357)

    $default	reduce using rule 357 (option_else_statement)



state 759

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    CLOSE_PAR	shift, and go to state 875



state 760

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 876
    identifier	go to state 877



state 761

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 762

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 878



state 763

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 879



state 764

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 765

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 880
    identifier	go to state 881



state 766

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 767

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 882



state 768

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 883



state 769

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 770

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 291)

    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142

    identifier	go to state 884



state 771

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (option_function_parameter_list)



state 772

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 289)

    ARRAY	shift, and go to state 885
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 886



state 773

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 288
    OPEN_MPAR	shift, and go to state 887

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 888



state 774

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 775

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 889



state 776

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    CLOSE_PAR	shift, and go to state 890



state 777

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 891



state 778

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 779

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 892



state 780

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 893



state 781

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 782

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_define_identifier)



state 783

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 308)

    ARRAY	shift, and go to state 894
    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 895



state 784

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)

    COMMA	shift, and go to state 288
    OPEN_MPAR	shift, and go to state 896

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 897



state 785

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 898
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 786

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 787

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 899
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 788

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 330)

    $default	reduce using rule 330 (option_frame_identifier)



state 789

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 900



state 790

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 856
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197



state 791

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 668



state 792

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    OPEN_PAR	shift, and go to state 363
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 184
    ID  	shift, and go to state 179

    $default	reduce using rule 349 (for_sta_control)

    ass_statement	go to state 901
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 186
    point_exp	go to state 73
    identifier	go to state 74
    for_sta_control	go to state 902
    struct_member_exp	go to state 82



state 793

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    OPEN_PAR	shift, and go to state 128
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 129
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 903
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 794

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 904



state 795

    inner_option_list_value  ->  COMMA error .   (rule 211)

    $default	reduce using rule 211 (inner_option_list_value)



state 796

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 207)

    COMMA	shift, and go to state 651
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 244
    inner_option_list_value	go to state 905



state 797

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 209)

    COMMA	shift, and go to state 651
    CON 	shift, and go to state 495

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 906



state 798

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 208)

    COMMA	shift, and go to state 651

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 907



state 799

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 204)

    $default	reduce using rule 204 (option_struct_list_value)



state 800

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 206)

    $default	reduce using rule 206 (option_struct_list_value)



state 801

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 205)

    $default	reduce using rule 205 (option_struct_list_value)



state 802

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 201)

    $default	reduce using rule 201 (option_list_value)



state 803

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 203)

    $default	reduce using rule 203 (option_list_value)



state 804

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 202)

    $default	reduce using rule 202 (option_list_value)



state 805

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 636
    CHARDECLARATION	shift, and go to state 637
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 638
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 639
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 806

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (rightaddrshift)



state 807

    option_output  ->  COMMA ass_right option_output .   (rule 362)

    $default	reduce using rule 362 (option_output)



state 808

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 908
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 809

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 192
    CLOSE_PAR	shift, and go to state 909
    OPEN_MPAR	shift, and go to state 193

    CLOSE_PAR	[reduce using rule 324 (identifier)]
    $default	reduce using rule 324 (identifier)



state 810

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 910

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 811

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 911
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 812

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 192
    CLOSE_PAR	shift, and go to state 912
    OPEN_MPAR	shift, and go to state 193

    CLOSE_PAR	[reduce using rule 324 (identifier)]
    $default	reduce using rule 324 (identifier)



state 813

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 913

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 814

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 192
    CLOSE_PAR	shift, and go to state 914
    OPEN_MPAR	shift, and go to state 193

    CLOSE_PAR	[reduce using rule 324 (identifier)]
    $default	reduce using rule 324 (identifier)



state 815

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 915

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 816

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 916
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 863
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 817

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 917
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 919
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 818

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 92)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 920



state 819

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 921



state 820

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 922



state 821

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 159)

    CLOSE_MPAR	shift, and go to state 923



state 822

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (struct_member_exp)



state 823

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 824

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 924
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 825

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 826

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    OPEN_PAR	shift, and go to state 925



state 827

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 926



state 828

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    CLOSE_PAR	shift, and go to state 927



state 829

    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 928



state 830

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    CLOSE_PAR	shift, and go to state 929



state 831

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 930



state 832

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 931
    ari_operator	go to state 244



state 833

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 160)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ADD 	[reduce using rule 160 (point_exp)]
    SUB 	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)

    ari_operator	go to state 244



state 834

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_PAR	shift, and go to state 932
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 934



state 835

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_PAR	shift, and go to state 935
    ID  	shift, and go to state 936
    INTLITERAL	shift, and go to state 937



state 836

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 938
    INTLITERAL	shift, and go to state 939



state 837

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 940



state 838

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 941



state 839

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 838



state 840

    option_input  ->  COMMA array option_input .   (rule 370)

    $default	reduce using rule 370 (option_input)



state 841

    option_input  ->  COMMA identifier option_input .   (rule 369)

    $default	reduce using rule 369 (option_input)



state 842

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 312)

    COMMA	shift, and go to state 548

    COMMA	[reduce using rule 76 (function)]
    CLOSE_PAR	reduce using rule 76 (function)
    CLOSE_PAR	[reduce using rule 318 (inner_option_function_identifier)]
    $default	reduce using rule 76 (function)

    inner_option_function_identifier	go to state 942



state 843

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 317)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 311
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 373
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 314
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 315
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 943
    identifier	go to state 105
    strliteral	go to state 318
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 844

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 316)

    $default	reduce using rule 316 (inner_option_function_identifier)



state 845

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 153)

    $default	reduce using rule 153 (option_ari_exp)



state 846

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)



state 847

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)



state 848

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 944

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 945



state 849

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 390)

    $default	reduce using rule 390 (option_struct_member_exp)



state 850

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 389)

    $default	reduce using rule 389 (option_struct_member_exp)



state 851

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 392)

    $default	reduce using rule 392 (option_struct_member_exp)



state 852

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 391)

    $default	reduce using rule 391 (option_struct_member_exp)



state 853

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 946
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



state 854

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 169)

    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ADD 	[reduce using rule 169 (option_exp_else_statement)]
    SUB 	[reduce using rule 169 (option_exp_else_statement)]
    $default	reduce using rule 169 (option_exp_else_statement)

    ari_operator	go to state 244



state 855

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 856

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 947
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 857

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 245
    CON 	shift, and go to state 246
    ADDRESS	shift, and go to state 247
    LST 	shift, and go to state 254
    RST 	shift, and go to state 255
    MUL 	shift, and go to state 256
    DIV 	shift, and go to state 257
    MOD 	shift, and go to state 258

    INTER_OR	[reduce using rule 168 (type_cast_alg_exp)]
    CON 	[reduce using rule 168 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 168 (type_cast_alg_exp)]
    LST 	[reduce using rule 168 (type_cast_alg_exp)]
    RST 	[reduce using rule 168 (type_cast_alg_exp)]
    MUL 	[reduce using rule 168 (type_cast_alg_exp)]
    DIV 	[reduce using rule 168 (type_cast_alg_exp)]
    MOD 	[reduce using rule 168 (type_cast_alg_exp)]
    $default	reduce using rule 168 (type_cast_alg_exp)

    bi_operator	go to state 259



state 858

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 859

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 860

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 861

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 862

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 863

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 864

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 948
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 865

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 866

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 949
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 867

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)



state 868

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    ID  	shift, and go to state 933



state 869

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    ID  	shift, and go to state 936



state 870

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 938



state 871

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 950



state 872

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 351)

    COLON	shift, and go to state 951



state 873

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 352)

    OPEN_PAR	shift, and go to state 952



state 874

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 350)

    $default	reduce using rule 350 (switch_statement)



state 875

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 953



state 876

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 877

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 954



state 878

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 879

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 880

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 881

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 955



state 882

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 883

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 884

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 956



state 885

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 957



state 886

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_parameter_list)



state 887

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 958
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 888

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 889

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 69 (empty_statement)

    statement	go to state 959
    empty_statement	go to state 960
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 890

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    OPEN_PAR	shift, and go to state 961



state 891

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 892

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 893

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 894

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 962



state 895

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 308)

    $default	reduce using rule 308 (inner_option_define_identifier)



state 896

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 963
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 897

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 898

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)

    COMMA	shift, and go to state 964
    CLOSE_MPAR	shift, and go to state 965
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 899

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 900

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 966
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 901

    for_sta_control  ->  ass_statement .   (rule 348)

    $default	reduce using rule 348 (for_sta_control)



state 902

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 342)

    CLOSE_PAR	shift, and go to state 967



state 903

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    CLOSE_PAR	shift, and go to state 968
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278



state 904

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 969



state 905

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 207)

    $default	reduce using rule 207 (inner_option_list_value)



state 906

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 209)

    $default	reduce using rule 209 (inner_option_list_value)



state 907

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 208)

    $default	reduce using rule 208 (inner_option_list_value)



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 970
    CHARDECLARATION	shift, and go to state 971
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 972
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 909

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_MPAR	shift, and go to state 973



state 910

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 974



state 911

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 975
    CHARDECLARATION	shift, and go to state 976
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 977
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 912

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_MPAR	shift, and go to state 978



state 913

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 979



state 914

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    OPEN_MPAR	shift, and go to state 980



state 915

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 981



state 916

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 192
    CLOSE_PAR	shift, and go to state 982
    OPEN_MPAR	shift, and go to state 193

    CLOSE_PAR	[reduce using rule 324 (identifier)]
    $default	reduce using rule 324 (identifier)



state 917

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 983
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 225
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 918

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 192
    CLOSE_PAR	shift, and go to state 984
    OPEN_MPAR	shift, and go to state 193

    CLOSE_PAR	[reduce using rule 324 (identifier)]
    $default	reduce using rule 324 (identifier)



state 919

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 985

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 920

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 92)

    CLOSE_PAR	shift, and go to state 986



state 921

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    CLOSE_PAR	shift, and go to state 987

    CLOSE_PAR	[reduce using rule 146 (array)]
    $default	reduce using rule 146 (array)



state 922

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 91)

    $default	reduce using rule 91 (declaration)



state 923

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 159)

    $default	reduce using rule 159 (point_exp)



state 924

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 925

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 988



state 926

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    CLOSE_PAR	shift, and go to state 989



state 927

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 990



state 928

    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 991



state 929

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_BPAR	shift, and go to state 992



state 930

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 993
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 931

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_MPAR	shift, and go to state 994



state 932

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_PAR	shift, and go to state 995



state 933

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 909



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 910



state 935

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_PAR	shift, and go to state 996



state 936

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 912



state 937

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 913



state 938

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 914



state 939

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 915



state 940

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    ID  	shift, and go to state 997



state 941

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_PAR	shift, and go to state 998
    ID  	shift, and go to state 999
    INTLITERAL	shift, and go to state 1000



state 942

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 312)

    $default	reduce using rule 312 (option_function_identifier)



state 943

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 317)

    CLOSE_PAR	shift, and go to state 1001



state 944

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    STRLITERAL	shift, and go to state 130

    array_exp	go to state 1002
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    strliteral	go to state 1003



state 945

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 946

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 947

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)



state 948

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 949

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 950

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    ID  	shift, and go to state 999



state 951

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 351)

    OPEN_PAR	shift, and go to state 1004



state 952

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 352)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1005
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 953

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1006



state 954

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 955

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 956

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (option_function_parameter_list)



state 957

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 958

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 288)

    CLOSE_MPAR	shift, and go to state 1007
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 959

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 68)

    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201

    $default	reduce using rule 68 (empty_statement)



state 960

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1008



state 961

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1009



state 962

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 963

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 307)

    CLOSE_MPAR	shift, and go to state 1010
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 964

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1011
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 965

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 305)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1012



state 966

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 1013
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 967

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 342)

    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 1014



state 968

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 969

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    OPEN_PAR	shift, and go to state 1015



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1016



state 971

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 1017



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 1018



state 973

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1019
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 974

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1020
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1021



state 976

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 1022



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 1023



state 978

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1024
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1025
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 980

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1026
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 981

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1027
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 982

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    OPEN_MPAR	shift, and go to state 1028



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 1029
    CHARDECLARATION	shift, and go to state 1030
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 1031
    SIGNED	shift, and go to state 226
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233



state 984

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 1032



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1033



state 986

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 92)

    $default	reduce using rule 92 (declaration)



state 987

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 1034



state 988

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    CLOSE_PAR	shift, and go to state 1035



state 989

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 1036



state 990

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 73)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1037
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 991

    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 1038



state 992

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 71)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1039
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 993

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 70)

    CLOSE_BPAR	shift, and go to state 1040
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 994

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_PAR	shift, and go to state 987



state 995

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTDECLARATION	shift, and go to state 1041
    CHARDECLARATION	shift, and go to state 1042
    UNSIGNED	shift, and go to state 1043



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTDECLARATION	shift, and go to state 1044
    CHARDECLARATION	shift, and go to state 1045
    UNSIGNED	shift, and go to state 1046



state 997

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 982



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_PAR	shift, and go to state 1047



state 999

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 984



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 985



state 1001

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 317)

    COMMA	shift, and go to state 548

    COMMA	[reduce using rule 76 (function)]
    CLOSE_PAR	reduce using rule 76 (function)
    CLOSE_PAR	[reduce using rule 318 (inner_option_function_identifier)]
    $default	reduce using rule 76 (function)

    inner_option_function_identifier	go to state 1048



state 1002

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 106)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    COMMA	shift, and go to state 381
    CON 	shift, and go to state 495

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1049



state 1003

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 107)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1050



state 1004

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 351)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1051
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 1005

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 352)

    CLOSE_PAR	shift, and go to state 1052
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1006

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 292)

    CLOSE_PAR	shift, and go to state 1053



state 1007

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1054



state 1008

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1009

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 303)

    CLOSE_PAR	shift, and go to state 1055



state 1010

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 307)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1056



state 1011

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 306)

    CLOSE_MPAR	shift, and go to state 1057
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    ari_operator	go to state 244



state 1012

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 1013

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



state 1014

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 342)

    $default	reduce using rule 342 (extend_for_statement)



state 1015

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 142)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1058



state 1016

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1059
    MUL 	shift, and go to state 584



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1060
    MUL 	shift, and go to state 587



state 1018

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 1061



state 1019

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1062
    ari_operator	go to state 244



state 1020

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1063
    ari_operator	go to state 244



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1064
    MUL 	shift, and go to state 584



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1065
    MUL 	shift, and go to state 587



state 1023

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 1066



state 1024

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1067
    ari_operator	go to state 244



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1068
    ari_operator	go to state 244



state 1026

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 149)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1069
    ari_operator	go to state 244



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1070
    ari_operator	go to state 244



state 1028

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1071
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1072



state 1030

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 1073



state 1031

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 1074



state 1032

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1075
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1076
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1034

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1077



state 1035

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    OPEN_BPAR	shift, and go to state 1078



state 1036

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 74)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1079
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 1037

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 1080
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1038

    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 72)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1081
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 1039

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 71)

    CLOSE_BPAR	shift, and go to state 1082
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1040

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)

    $default	reduce using rule 70 (function_define)



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1083



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1084



state 1043

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CHARDECLARATION	shift, and go to state 1085



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1086



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1087



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CHARDECLARATION	shift, and go to state 1088



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTDECLARATION	shift, and go to state 1089
    CHARDECLARATION	shift, and go to state 1090
    UNSIGNED	shift, and go to state 1091



state 1048

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 317)

    $default	reduce using rule 317 (inner_option_function_identifier)



state 1049

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (option_identifier_array_declaration)



state 1050

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (option_identifier_array_declaration)



state 1051

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 351)

    CLOSE_PAR	shift, and go to state 1092
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1052

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (case_par)



state 1053

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 292)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1093



state 1054

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)



state 1055

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1094



state 1056

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 307)

    $default	reduce using rule 307 (inner_option_define_identifier)



state 1057

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 306)

    COMMA	shift, and go to state 288

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1095



state 1058

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 1096



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 1097
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1098
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1099
    MUL 	shift, and go to state 745



state 1062

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 147)

    CLOSE_MPAR	shift, and go to state 1100



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1101



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 1102
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1103
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1104
    MUL 	shift, and go to state 745



state 1067

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 1105



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1106



state 1069

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 149)

    CLOSE_MPAR	shift, and go to state 1107



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1108



state 1071

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1109
    ari_operator	go to state 244



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1110
    MUL 	shift, and go to state 584



state 1073

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1111
    MUL 	shift, and go to state 587



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 1112



state 1075

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1113
    ari_operator	go to state 244



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1114
    ari_operator	go to state 244



state 1077

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_PAR	shift, and go to state 1115



state 1078

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 75)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1116
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 1079

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 74)

    CLOSE_BPAR	shift, and go to state 1117
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1080

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 73)

    $default	reduce using rule 73 (function_define)



state 1081

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 1118
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1082

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 71)

    $default	reduce using rule 71 (function_define)



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1119



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1120



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1121



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1122



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1123



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1124



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1125



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1126



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CHARDECLARATION	shift, and go to state 1127



state 1092

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 351)

    CASE	shift, and go to state 755
    BREAK	shift, and go to state 1128
    DEFAULT	shift, and go to state 756

    $default	reduce using rule 355 (init_case_par)

    case_par	go to state 1129
    init_case_par	go to state 1130



state 1093

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (option_function_parameter_list)



state 1094

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 1095

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 306)

    $default	reduce using rule 306 (inner_option_define_identifier)



state 1096

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 142)

    OPEN_PAR	shift, and go to state 1131
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1132

    function	go to state 1133
    array	go to state 1134



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1135

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1136

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 1137
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1100

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 147)

    $default	reduce using rule 147 (array)



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1138

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1139

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 1140
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1105

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    $default	reduce using rule 150 (array)



state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1107

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 149)

    $default	reduce using rule 149 (array)



state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1109

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 148)

    CLOSE_MPAR	shift, and go to state 1141



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 1142
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1143
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1144
    MUL 	shift, and go to state 745



state 1113

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

    CLOSE_MPAR	shift, and go to state 1145



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1146



state 1115

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 94)

    ASS_P	shift, and go to state 1147

    $default	reduce using rule 93 (declaration)



state 1116

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 75)

    CLOSE_BPAR	shift, and go to state 1148
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1117

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 74)

    $default	reduce using rule 74 (function_define)



state 1118

    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (function_define)



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTLITERAL	shift, and go to state 1149



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1150



state 1121

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1151



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1152



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1153



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1154



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1155



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1156



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1157



state 1128

    init_case_par  ->  BREAK . case_par   (rule 353)

    CASE	shift, and go to state 755
    DEFAULT	shift, and go to state 756

    case_par	go to state 1158



state 1129

    init_case_par  ->  case_par .   (rule 354)

    $default	reduce using rule 354 (init_case_par)



state 1130

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 351)

    $default	reduce using rule 351 (case_par)



state 1131

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)

    OPEN_PAR	shift, and go to state 1159
    ID  	shift, and go to state 1160

    array	go to state 561



state 1132

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_PAR	shift, and go to state 192
    OPEN_MPAR	shift, and go to state 193



state 1133

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 142)

    $default	reduce using rule 142 (ass_right)



state 1134

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)

    OPEN_PAR	shift, and go to state 208



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1161



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1162



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1163

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1164



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1165



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1166

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1141

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 148)

    $default	reduce using rule 148 (array)



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1167

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1168

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 1169
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1145

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    $default	reduce using rule 151 (array)



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1147

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310

    array_exp	go to state 1170
    option_list_value	go to state 316
    option_struct_list_value	go to state 317



state 1148

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 75)

    $default	reduce using rule 75 (function_define)



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1135



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1136



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1171



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1138



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1139



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1172



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1173



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1174



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1175



state 1158

    init_case_par  ->  BREAK case_par .   (rule 353)

    $default	reduce using rule 353 (init_case_par)



state 1159

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)

    INTDECLARATION	shift, and go to state 606
    CHARDECLARATION	shift, and go to state 607
    FLOATDECLARATION	shift, and go to state 608
    OPEN_PAR	shift, and go to state 1159
    UNSIGNED	shift, and go to state 609
    ID  	shift, and go to state 1160

    array	go to state 561



state 1160

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 193



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1176



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1177



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1178



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1179



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1180



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1181



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1182



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1183



state 1169

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1184

    CLOSE_PAR	[reduce using rule 327 (intliteral)]
    $default	reduce using rule 327 (intliteral)



state 1170

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 94)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    CON 	shift, and go to state 495

    $default	reduce using rule 94 (declaration)



state 1171

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1163



state 1172

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1166



state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1167



state 1174

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1168



state 1175

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    INTLITERAL	shift, and go to state 1185



state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1186
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1177

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1187
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1178

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1188



state 1179

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1189
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1180

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1190
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1181

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1191



state 1182

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1192



state 1183

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1193



state 1184

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1194



state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1184



state 1186

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1195
    ari_operator	go to state 244



state 1187

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1196
    ari_operator	go to state 244



state 1188

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1197
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1198
    ari_operator	go to state 244



state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1199
    ari_operator	go to state 244



state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1200
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1201
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1193

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1202
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1203



state 1195

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1204



state 1196

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1205



state 1197

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1206
    ari_operator	go to state 244



state 1198

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1207



state 1199

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1208



state 1200

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1209
    ari_operator	go to state 244



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1210
    ari_operator	go to state 244



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1211
    ari_operator	go to state 244



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1212
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1204

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1206

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1213



state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1208

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1214



state 1210

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1215



state 1211

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1216



state 1212

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1217
    ari_operator	go to state 244



state 1213

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1214

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1215

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1216

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1217

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1218



state 1218

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1219

    $   	go to state 1220



state 1220

    $   	go to state 1221



state 1221

    $default	accept
