Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

<<<<<<< HEAD
#105   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#106   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	;
#108   inner_option_array_declaration :	 COMMA error;


Conflict in state 82 between rule 13 and token CHOP resolved as reduce.
Conflict in state 82 between rule 13 and token IFF resolved as reduce.
Conflict in state 82 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 82 between rule 13 and token OR resolved as reduce.
Conflict in state 82 between rule 13 and token AND resolved as reduce.
Conflict in state 82 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 83 between rule 22 and token CHOP resolved as reduce.
Conflict in state 83 between rule 22 and token IFF resolved as reduce.
Conflict in state 83 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 83 between rule 22 and token OR resolved as reduce.
Conflict in state 83 between rule 22 and token AND resolved as reduce.
Conflict in state 83 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 106 between rule 21 and token CHOP resolved as reduce.
Conflict in state 106 between rule 21 and token IFF resolved as reduce.
Conflict in state 106 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 106 between rule 21 and token OR resolved as reduce.
Conflict in state 106 between rule 21 and token AND resolved as reduce.
Conflict in state 106 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 107 between rule 10 and token CHOP resolved as reduce.
Conflict in state 107 between rule 10 and token IFF resolved as reduce.
Conflict in state 107 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 107 between rule 10 and token OR resolved as reduce.
Conflict in state 107 between rule 10 and token AND resolved as reduce.
Conflict in state 107 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 108 between rule 9 and token CHOP resolved as reduce.
Conflict in state 108 between rule 9 and token IFF resolved as reduce.
Conflict in state 108 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 108 between rule 9 and token OR resolved as reduce.
Conflict in state 108 between rule 9 and token AND resolved as reduce.
Conflict in state 108 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 20 and token CHOP resolved as reduce.
Conflict in state 109 between rule 20 and token IFF resolved as reduce.
Conflict in state 109 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 20 and token OR resolved as reduce.
Conflict in state 109 between rule 20 and token AND resolved as reduce.
Conflict in state 109 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 12 and token CHOP resolved as reduce.
Conflict in state 110 between rule 12 and token IFF resolved as reduce.
Conflict in state 110 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 12 and token OR resolved as reduce.
Conflict in state 110 between rule 12 and token AND resolved as reduce.
Conflict in state 110 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 11 and token CHOP resolved as reduce.
Conflict in state 111 between rule 11 and token IFF resolved as reduce.
Conflict in state 111 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 11 and token OR resolved as reduce.
Conflict in state 111 between rule 11 and token AND resolved as reduce.
Conflict in state 111 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 227 between rule 206 and token IMPLY resolved as reduce.
Conflict in state 230 between rule 205 and token IMPLY resolved as reduce.
Conflict in state 253 between rule 8 and token CHOP resolved as reduce.
Conflict in state 253 between rule 8 and token IFF resolved as shift.
Conflict in state 253 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 253 between rule 8 and token OR resolved as shift.
Conflict in state 253 between rule 8 and token AND resolved as shift.
Conflict in state 253 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 254 between rule 6 and token CHOP resolved as reduce.
Conflict in state 254 between rule 6 and token IFF resolved as reduce.
Conflict in state 254 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 254 between rule 6 and token OR resolved as shift.
Conflict in state 254 between rule 6 and token AND resolved as shift.
Conflict in state 254 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 255 between rule 7 and token CHOP resolved as reduce.
Conflict in state 255 between rule 7 and token IFF resolved as reduce.
Conflict in state 255 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 255 between rule 7 and token OR resolved as shift.
Conflict in state 255 between rule 7 and token AND resolved as shift.
Conflict in state 255 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 256 between rule 5 and token CHOP resolved as reduce.
Conflict in state 256 between rule 5 and token IFF resolved as reduce.
Conflict in state 256 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 256 between rule 5 and token OR resolved as reduce.
Conflict in state 256 between rule 5 and token AND resolved as shift.
Conflict in state 256 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 4 and token CHOP resolved as reduce.
Conflict in state 257 between rule 4 and token IFF resolved as reduce.
Conflict in state 257 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 4 and token OR resolved as reduce.
Conflict in state 257 between rule 4 and token AND resolved as reduce.
Conflict in state 257 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 263 between rule 235 and token OR resolved as reduce.
Conflict in state 263 between rule 235 and token AND resolved as reduce.
Conflict in state 322 between rule 330 and token OR resolved as reduce.
Conflict in state 322 between rule 330 and token AND resolved as reduce.
Conflict in state 373 between rule 32 and token CHOP resolved as reduce.
Conflict in state 373 between rule 32 and token OR resolved as shift.
Conflict in state 373 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 373 between rule 32 and token AND resolved as shift.
Conflict in state 374 between rule 31 and token CHOP resolved as reduce.
Conflict in state 374 between rule 31 and token OR resolved as reduce.
Conflict in state 374 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 374 between rule 31 and token AND resolved as shift.
Conflict in state 375 between rule 53 and token CHOP resolved as reduce.
Conflict in state 375 between rule 53 and token OR resolved as reduce.
Conflict in state 375 between rule 53 and token PARALLEL resolved as reduce.
Conflict in state 375 between rule 53 and token AND resolved as shift.
Conflict in state 376 between rule 30 and token CHOP resolved as reduce.
Conflict in state 376 between rule 30 and token OR resolved as reduce.
Conflict in state 376 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 376 between rule 30 and token AND resolved as reduce.
Conflict in state 440 between rule 237 and token OR resolved as reduce.
Conflict in state 440 between rule 237 and token AND resolved as shift.
Conflict in state 441 between rule 236 and token OR resolved as reduce.
Conflict in state 441 between rule 236 and token AND resolved as reduce.
Conflict in state 502 between rule 332 and token OR resolved as reduce.
Conflict in state 502 between rule 332 and token AND resolved as shift.
Conflict in state 503 between rule 331 and token OR resolved as reduce.
Conflict in state 503 between rule 331 and token AND resolved as reduce.
Conflict in state 650 between rule 190 and token CON resolved as reduce.
State 94 contains 2 shift/reduce conflicts.
State 95 contains 2 shift/reduce conflicts.
State 97 contains 14 shift/reduce conflicts.
State 101 contains 2 shift/reduce conflicts.
State 119 contains 2 shift/reduce conflicts.
State 151 contains 3 reduce/reduce conflicts.
State 153 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 154 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 155 contains 1 shift/reduce conflict.
State 157 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict.
State 188 contains 1 shift/reduce conflict.
State 220 contains 1 shift/reduce conflict.
State 221 contains 1 shift/reduce conflict.
State 223 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 261 contains 1 shift/reduce conflict.
State 264 contains 2 shift/reduce conflicts.
State 265 contains 2 shift/reduce conflicts.
State 283 contains 1 shift/reduce conflict.
State 284 contains 1 shift/reduce conflict.
State 285 contains 1 shift/reduce conflict.
State 286 contains 1 shift/reduce conflict.
State 303 contains 1 shift/reduce conflict.
State 312 contains 1 shift/reduce conflict.
State 313 contains 1 shift/reduce conflict.
State 314 contains 1 shift/reduce conflict.
State 320 contains 1 shift/reduce conflict.
State 348 contains 1 shift/reduce conflict.
State 349 contains 1 shift/reduce conflict.
State 351 contains 1 shift/reduce conflict.
State 352 contains 1 shift/reduce conflict.
State 356 contains 1 shift/reduce conflict.
State 357 contains 1 shift/reduce conflict.
State 382 contains 2 shift/reduce conflicts.
State 383 contains 2 shift/reduce conflicts.
State 385 contains 2 shift/reduce conflicts.
State 386 contains 2 shift/reduce conflicts.
State 387 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 419 contains 1 shift/reduce conflict.
State 426 contains 8 shift/reduce conflicts.
State 428 contains 2 shift/reduce conflicts.
State 470 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 472 contains 1 shift/reduce conflict.
State 489 contains 1 shift/reduce conflict.
State 490 contains 1 shift/reduce conflict.
State 494 contains 1 shift/reduce conflict.
State 516 contains 1 shift/reduce conflict.
State 517 contains 1 shift/reduce conflict.
State 518 contains 1 shift/reduce conflict.
State 522 contains 1 shift/reduce conflict.
State 544 contains 1 shift/reduce conflict.
State 567 contains 3 shift/reduce conflicts.
State 570 contains 10 shift/reduce conflicts.
State 661 contains 2 shift/reduce conflicts.
State 662 contains 2 shift/reduce conflicts.
State 675 contains 1 shift/reduce conflict.
State 676 contains 1 shift/reduce conflict.
State 692 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 699 contains 2 shift/reduce conflicts.
State 700 contains 2 shift/reduce conflicts.
State 702 contains 2 shift/reduce conflicts.
State 703 contains 2 shift/reduce conflicts.
State 790 contains 1 shift/reduce conflict.
State 791 contains 1 shift/reduce conflict.
State 793 contains 1 shift/reduce conflict.
State 794 contains 1 shift/reduce conflict.
State 795 contains 1 shift/reduce conflict.
State 796 contains 1 shift/reduce conflict.
State 809 contains 2 shift/reduce conflicts.
State 818 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 824 contains 1 shift/reduce conflict.
State 831 contains 2 shift/reduce conflicts.
State 834 contains 8 shift/reduce conflicts.
State 891 contains 1 shift/reduce conflict.
State 893 contains 1 shift/reduce conflict.
State 894 contains 1 shift/reduce conflict.
State 896 contains 1 shift/reduce conflict.
State 967 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 968 contains 1 shift/reduce conflict.
State 969 contains 1 shift/reduce conflict.
State 1053 contains 1 shift/reduce conflict.
State 1054 contains 1 shift/reduce conflict.
State 1058 contains 1 shift/reduce conflict.
State 1059 contains 1 shift/reduce conflict.
State 1087 contains 1 shift/reduce conflict.
State 1090 contains 1 shift/reduce conflict.
State 1092 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1117 contains 1 shift/reduce conflict.
=======
#112   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#113   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#114   inner_option_array_declaration :	;
#115   inner_option_array_declaration :	 COMMA error;


Conflict in state 87 between rule 13 and token CHOP resolved as reduce.
Conflict in state 87 between rule 13 and token IFF resolved as reduce.
Conflict in state 87 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 87 between rule 13 and token OR resolved as reduce.
Conflict in state 87 between rule 13 and token AND resolved as reduce.
Conflict in state 87 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 88 between rule 22 and token CHOP resolved as reduce.
Conflict in state 88 between rule 22 and token IFF resolved as reduce.
Conflict in state 88 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 88 between rule 22 and token OR resolved as reduce.
Conflict in state 88 between rule 22 and token AND resolved as reduce.
Conflict in state 88 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 21 and token CHOP resolved as reduce.
Conflict in state 111 between rule 21 and token IFF resolved as reduce.
Conflict in state 111 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 21 and token OR resolved as reduce.
Conflict in state 111 between rule 21 and token AND resolved as reduce.
Conflict in state 111 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 10 and token CHOP resolved as reduce.
Conflict in state 112 between rule 10 and token IFF resolved as reduce.
Conflict in state 112 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 10 and token OR resolved as reduce.
Conflict in state 112 between rule 10 and token AND resolved as reduce.
Conflict in state 112 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 9 and token CHOP resolved as reduce.
Conflict in state 113 between rule 9 and token IFF resolved as reduce.
Conflict in state 113 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 9 and token OR resolved as reduce.
Conflict in state 113 between rule 9 and token AND resolved as reduce.
Conflict in state 113 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 20 and token CHOP resolved as reduce.
Conflict in state 114 between rule 20 and token IFF resolved as reduce.
Conflict in state 114 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 20 and token OR resolved as reduce.
Conflict in state 114 between rule 20 and token AND resolved as reduce.
Conflict in state 114 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 12 and token CHOP resolved as reduce.
Conflict in state 115 between rule 12 and token IFF resolved as reduce.
Conflict in state 115 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 12 and token OR resolved as reduce.
Conflict in state 115 between rule 12 and token AND resolved as reduce.
Conflict in state 115 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 116 between rule 11 and token CHOP resolved as reduce.
Conflict in state 116 between rule 11 and token IFF resolved as reduce.
Conflict in state 116 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 116 between rule 11 and token OR resolved as reduce.
Conflict in state 116 between rule 11 and token AND resolved as reduce.
Conflict in state 116 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 236 between rule 213 and token IMPLY resolved as reduce.
Conflict in state 239 between rule 212 and token IMPLY resolved as reduce.
Conflict in state 262 between rule 8 and token CHOP resolved as reduce.
Conflict in state 262 between rule 8 and token IFF resolved as shift.
Conflict in state 262 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 262 between rule 8 and token OR resolved as shift.
Conflict in state 262 between rule 8 and token AND resolved as shift.
Conflict in state 262 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 263 between rule 6 and token CHOP resolved as reduce.
Conflict in state 263 between rule 6 and token IFF resolved as reduce.
Conflict in state 263 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 263 between rule 6 and token OR resolved as shift.
Conflict in state 263 between rule 6 and token AND resolved as shift.
Conflict in state 263 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 264 between rule 7 and token CHOP resolved as reduce.
Conflict in state 264 between rule 7 and token IFF resolved as reduce.
Conflict in state 264 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 264 between rule 7 and token OR resolved as shift.
Conflict in state 264 between rule 7 and token AND resolved as shift.
Conflict in state 264 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 265 between rule 5 and token CHOP resolved as reduce.
Conflict in state 265 between rule 5 and token IFF resolved as reduce.
Conflict in state 265 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 265 between rule 5 and token OR resolved as reduce.
Conflict in state 265 between rule 5 and token AND resolved as shift.
Conflict in state 265 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 266 between rule 4 and token CHOP resolved as reduce.
Conflict in state 266 between rule 4 and token IFF resolved as reduce.
Conflict in state 266 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 266 between rule 4 and token OR resolved as reduce.
Conflict in state 266 between rule 4 and token AND resolved as reduce.
Conflict in state 266 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 273 between rule 242 and token OR resolved as reduce.
Conflict in state 273 between rule 242 and token AND resolved as reduce.
Conflict in state 334 between rule 337 and token OR resolved as reduce.
Conflict in state 334 between rule 337 and token AND resolved as reduce.
Conflict in state 384 between rule 32 and token CHOP resolved as reduce.
Conflict in state 384 between rule 32 and token OR resolved as shift.
Conflict in state 384 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 384 between rule 32 and token AND resolved as shift.
Conflict in state 385 between rule 31 and token CHOP resolved as reduce.
Conflict in state 385 between rule 31 and token OR resolved as reduce.
Conflict in state 385 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 385 between rule 31 and token AND resolved as shift.
Conflict in state 386 between rule 55 and token CHOP resolved as reduce.
Conflict in state 386 between rule 55 and token OR resolved as reduce.
Conflict in state 386 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 386 between rule 55 and token AND resolved as shift.
Conflict in state 387 between rule 30 and token CHOP resolved as reduce.
Conflict in state 387 between rule 30 and token OR resolved as reduce.
Conflict in state 387 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 387 between rule 30 and token AND resolved as reduce.
Conflict in state 455 between rule 244 and token OR resolved as reduce.
Conflict in state 455 between rule 244 and token AND resolved as shift.
Conflict in state 456 between rule 243 and token OR resolved as reduce.
Conflict in state 456 between rule 243 and token AND resolved as reduce.
Conflict in state 521 between rule 339 and token OR resolved as reduce.
Conflict in state 521 between rule 339 and token AND resolved as shift.
Conflict in state 522 between rule 338 and token OR resolved as reduce.
Conflict in state 522 between rule 338 and token AND resolved as reduce.
Conflict in state 674 between rule 197 and token CON resolved as reduce.
State 67 contains 2 shift/reduce conflicts.
State 99 contains 2 shift/reduce conflicts.
State 100 contains 2 shift/reduce conflicts.
State 102 contains 14 shift/reduce conflicts.
State 106 contains 2 shift/reduce conflicts.
State 126 contains 2 shift/reduce conflicts.
State 158 contains 3 reduce/reduce conflicts.
State 160 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 161 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 162 contains 1 shift/reduce conflict.
State 164 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 166 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 167 contains 1 shift/reduce conflict.
State 171 contains 2 reduce/reduce conflicts.
State 172 contains 2 reduce/reduce conflicts.
State 196 contains 1 shift/reduce conflict.
State 229 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 232 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 234 contains 1 shift/reduce conflict.
State 236 contains 1 shift/reduce conflict.
State 239 contains 1 shift/reduce conflict.
State 271 contains 1 shift/reduce conflict.
State 274 contains 2 shift/reduce conflicts.
State 275 contains 2 shift/reduce conflicts.
State 295 contains 1 shift/reduce conflict.
State 296 contains 1 shift/reduce conflict.
State 297 contains 1 shift/reduce conflict.
State 298 contains 1 shift/reduce conflict.
State 315 contains 1 shift/reduce conflict.
State 324 contains 1 shift/reduce conflict.
State 325 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 332 contains 1 shift/reduce conflict.
State 359 contains 1 shift/reduce conflict.
State 360 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 363 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
State 368 contains 1 shift/reduce conflict.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 397 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
State 400 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 407 contains 2 shift/reduce conflicts.
State 409 contains 2 shift/reduce conflicts.
State 410 contains 2 shift/reduce conflicts.
State 433 contains 1 shift/reduce conflict.
State 440 contains 8 shift/reduce conflicts.
State 442 contains 2 shift/reduce conflicts.
State 488 contains 1 shift/reduce conflict.
State 489 contains 1 shift/reduce conflict.
State 490 contains 1 shift/reduce conflict.
State 508 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 509 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 513 contains 1 shift/reduce conflict.
State 534 contains 1 shift/reduce conflict.
State 535 contains 1 shift/reduce conflict.
State 536 contains 1 shift/reduce conflict.
State 540 contains 1 shift/reduce conflict.
State 562 contains 1 shift/reduce conflict.
State 587 contains 3 shift/reduce conflicts.
State 590 contains 10 shift/reduce conflicts.
State 686 contains 2 shift/reduce conflicts.
State 687 contains 2 shift/reduce conflicts.
State 699 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 700 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 716 contains 1 shift/reduce conflict.
State 717 contains 1 shift/reduce conflict.
State 722 contains 2 shift/reduce conflicts.
State 723 contains 2 shift/reduce conflicts.
State 725 contains 2 shift/reduce conflicts.
State 726 contains 2 shift/reduce conflicts.
State 823 contains 1 shift/reduce conflict.
State 824 contains 1 shift/reduce conflict.
State 826 contains 1 shift/reduce conflict.
State 827 contains 1 shift/reduce conflict.
State 828 contains 1 shift/reduce conflict.
State 829 contains 1 shift/reduce conflict.
State 841 contains 2 shift/reduce conflicts.
State 850 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 856 contains 1 shift/reduce conflict.
State 865 contains 2 shift/reduce conflicts.
State 868 contains 8 shift/reduce conflicts.
State 931 contains 1 shift/reduce conflict.
State 933 contains 1 shift/reduce conflict.
State 934 contains 1 shift/reduce conflict.
State 936 contains 1 shift/reduce conflict.
State 1012 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1013 contains 1 shift/reduce conflict.
State 1014 contains 1 shift/reduce conflict.
State 1113 contains 1 shift/reduce conflict.
State 1114 contains 1 shift/reduce conflict.
State 1118 contains 1 shift/reduce conflict.
State 1119 contains 1 shift/reduce conflict.
State 1150 contains 1 shift/reduce conflict.
State 1153 contains 1 shift/reduce conflict.
State 1155 contains 1 shift/reduce conflict.
State 1156 contains 1 shift/reduce conflict.
State 1181 contains 1 shift/reduce conflict.
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
<<<<<<< HEAD
rule 35   statement -> if_statement
rule 36   statement -> while_statement
rule 37   statement -> for_statement
rule 38   statement -> extend_for_statement
rule 39   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 40   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 41   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 42   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 43   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> SKIP
rule 45   statement -> EMPTY
rule 46   statement -> MORE
rule 47   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 48   statement -> input_statement
rule 49   statement -> output_statement
rule 50   statement -> TRUE
rule 51   statement -> FALSE
rule 52   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 53   statement -> statement PARALLEL statement
rule 54   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 55   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 56   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 57   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 59   statement -> type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 60   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function
rule 63   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 64   statement -> OPEN_PAR statement CLOSE_PAR
rule 65   option_struct_declaration -> sign_declaration
rule 66   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 67   empty_statement -> statement
rule 68   empty_statement ->		/* empty */
rule 69   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 70   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 73   struct_identifier -> STRUCT ID
rule 74   struct_identifier -> UNION ID
rule 75   sign_declaration -> SIGNED declaration
rule 76   sign_declaration -> UNSIGNED declaration
rule 77   sign_declaration -> declaration
rule 78   declaration -> type_define option_identifier_array_declaration
rule 79   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 80   declaration -> STRUCT ID option_identifier_array_declaration
rule 81   declaration -> UNION ID option_identifier_array_declaration
rule 82   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 83   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 85   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 88   type_define -> INTDECLARATION
rule 89   type_define -> FLOATDECLARATION
rule 90   type_define -> CHARDECLARATION
rule 91   type_define -> STRDECLARATION
rule 92   type_define -> VOIDDECLARATION
rule 93   type_define -> FILEDECLARATION
rule 94   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 95   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 102  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA error
rule 104  inner_option_identifier_array_declaration ->		/* empty */
rule 109  ass_statement -> ass_left assign_operator ass_right
rule 110  ass_left -> identifier
rule 111  ass_left -> struct_member_exp
rule 112  ass_left -> array
rule 113  ass_left -> point_exp
rule 114  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 115  ass_left -> NEXT ass_left
rule 116  ass_left -> leftaddrshift
rule 117  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  assign_operator -> ASS_P
rule 131  assign_operator -> ASS_N
rule 132  ass_right -> ari_exp
rule 133  ass_right -> array_exp
rule 134  ass_right -> strliteral
rule 135  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 136  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 137  ass_right -> rightaddrshift
rule 138  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 139  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR array CLOSE_PAR
rule 146  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 147  option_ari_exp -> COMMA error
rule 148  option_ari_exp ->		/* empty */
rule 149  point_exp -> MUL identifier
rule 150  point_exp -> MUL point_exp
rule 151  point_exp -> MUL array
rule 152  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 154  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 155  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 156  ari_exp -> simple_ari_exp
rule 157  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 158  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 159  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 160  type_cast_alg_exp -> simple_ari_exp
rule 161  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 162  option_exp_else_statement -> ELSE ari_exp
rule 163  option_exp_else_statement ->		/* empty */
rule 164  simple_ari_exp -> member_in_exp
rule 165  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 166  member_in_exp -> intliteral
rule 167  member_in_exp -> SUB member_in_exp
rule 168  member_in_exp -> BNE member_in_exp
rule 169  member_in_exp -> POINTERNULL
rule 170  member_in_exp -> floatliteral
rule 171  member_in_exp -> identifier
rule 172  member_in_exp -> array
rule 173  member_in_exp -> point_exp
rule 174  member_in_exp -> function
rule 175  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 176  member_in_exp -> charliteral
rule 177  member_in_exp -> address_exp
rule 178  member_in_exp -> type_cast
rule 179  member_in_exp -> struct_member_exp
rule 180  bi_operator -> MUL
rule 181  bi_operator -> DIV
rule 182  bi_operator -> MOD
rule 183  bi_operator -> LST
rule 184  bi_operator -> RST
rule 185  bi_operator -> ADDRESS
rule 186  bi_operator -> INTER_OR
rule 187  bi_operator -> CON
rule 188  ari_operator -> ADD
rule 189  ari_operator -> SUB
rule 190  array_exp -> array_exp CON array_exp
rule 191  array_exp -> option_list_value
rule 192  array_exp -> option_struct_list_value
rule 193  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 194  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 195  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 197  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 198  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 200  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 201  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 202  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 203  inner_option_list_value ->		/* empty */
rule 204  inner_option_list_value -> COMMA error
rule 205  address_exp -> ADDRESS identifier
rule 206  address_exp -> ADDRESS array
rule 207  address_exp -> ADDRESS struct_member_exp
rule 208  address_exp -> ADDRESS address_exp
rule 209  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 210  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 211  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 218  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  casted_element -> type_cast_alg_exp
rule 234  bool_exp -> prime_bool_exp
rule 235  bool_exp -> NEGATION bool_exp
rule 236  bool_exp -> bool_exp AND bool_exp
rule 237  bool_exp -> bool_exp OR bool_exp
rule 238  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 239  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 240  prime_bool_exp -> MY_TRUE
rule 241  prime_bool_exp -> MY_FALSE
rule 242  prime_bool_exp -> ari_exp
rule 243  prime_bool_exp -> ari_exp EQ strliteral
rule 244  prime_bool_exp -> ari_exp NE strliteral
rule 245  prime_bool_exp -> strliteral EQ ari_exp
rule 246  prime_bool_exp -> strliteral NE ari_exp
rule 247  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 248  prime_bool_exp -> ari_exp NE POINTERNULL
rule 249  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 250  prime_bool_exp -> POINTERNULL NE ari_exp
rule 251  prime_bool_exp -> ari_exp EQ charliteral
rule 252  prime_bool_exp -> ari_exp NE charliteral
rule 253  relation_operator -> GE
rule 254  relation_operator -> LE
rule 255  relation_operator -> NE
rule 256  relation_operator -> GT
rule 257  relation_operator -> LT
rule 258  relation_operator -> EQ
rule 259  sign_type_define -> UNSIGNED INTDECLARATION
rule 260  sign_type_define -> UNSIGNED CHARDECLARATION
rule 261  all_type_define -> sign_type_define
rule 262  all_type_define -> type_define
rule 263  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 264  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 265  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 269  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> ID inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 288  option_function_parameter_list ->		/* empty */
rule 289  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 299  inner_option_define_identifier ->		/* empty */
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA error
rule 306  option_function_identifier -> ass_right inner_option_function_identifier
rule 307  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 308  option_function_identifier ->		/* empty */
rule 309  option_function_identifier -> ADDRESS error
rule 310  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 311  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 312  inner_option_function_identifier ->		/* empty */
rule 313  inner_option_function_identifier -> COMMA error
rule 314  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 315  statement_bpar -> error CLOSE_BPAR
rule 316  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 317  bool_par -> error CLOSE_PAR
rule 318  identifier -> ID
rule 319  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 320  strliteral -> STRLITERAL
rule 321  intliteral -> INTLITERAL
rule 322  charliteral -> CHARLITERAL
rule 323  floatliteral -> FLOATLITERAL
rule 324  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 325  option_frame_identifier ->		/* empty */
rule 326  option_frame_identifier -> COMMA error
rule 327  option_projection ->		/* empty */
rule 328  option_projection -> COMMA statement option_projection
rule 329  imply_pre -> prime_bool_exp
rule 330  imply_pre -> NEGATION imply_pre
rule 331  imply_pre -> imply_pre AND imply_pre
rule 332  imply_pre -> imply_pre OR imply_pre
rule 333  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 334  while_statement -> WHILE bool_par statement_bpar
rule 335  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 336  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 337  for_sta_init -> ass_statement
rule 338  for_sta_init -> declaration
rule 339  for_sta_init ->		/* empty */
rule 340  for_sta_condition -> bool_exp
rule 341  for_sta_condition ->		/* empty */
rule 342  for_sta_control -> ass_statement
rule 343  for_sta_control ->		/* empty */
rule 344  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 345  option_else_statement -> ELSE statement_bpar
rule 346  option_else_statement ->		/* empty */
rule 347  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 348  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 349  option_output ->		/* empty */
rule 350  option_output -> COMMA ass_right option_output
rule 351  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 352  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 353  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 354  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 355  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 356  option_input ->		/* empty */
rule 357  option_input -> COMMA identifier option_input
rule 358  option_input -> COMMA array option_input
rule 359  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 360  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 361  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 362  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 363  struct_member_exp -> array DOT array option_struct_member_exp
rule 364  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 365  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 366  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 367  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 368  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 369  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 370  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 371  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 372  struct_member_exp -> identifier DOT function
rule 373  struct_member_exp -> identifier IMPLY function
rule 374  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 376  option_struct_member_exp ->		/* empty */
rule 377  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 378  option_struct_member_exp -> DOT array option_struct_member_exp
rule 379  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 380  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 381  option_struct_member_exp -> DOT function
rule 382  option_struct_member_exp -> IMPLY function
=======
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function_define
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
rule 70   function_define -> all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function_define -> all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 72   function_define -> all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function_define -> STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 74   function_define -> STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 75   function_define -> STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 76   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 77   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 78   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 79   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 80   struct_identifier -> STRUCT ID
rule 81   struct_identifier -> UNION ID
rule 82   sign_declaration -> SIGNED declaration
rule 83   sign_declaration -> UNSIGNED declaration
rule 84   sign_declaration -> declaration
rule 85   declaration -> type_define option_identifier_array_declaration
rule 86   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 87   declaration -> STRUCT ID option_identifier_array_declaration
rule 88   declaration -> UNION ID option_identifier_array_declaration
rule 89   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 90   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 91   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 93   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 94   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 95   type_define -> INTDECLARATION
rule 96   type_define -> FLOATDECLARATION
rule 97   type_define -> CHARDECLARATION
rule 98   type_define -> STRDECLARATION
rule 99   type_define -> VOIDDECLARATION
rule 100  type_define -> FILEDECLARATION
rule 101  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 107  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 108  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 109  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 110  inner_option_identifier_array_declaration -> COMMA error
rule 111  inner_option_identifier_array_declaration ->		/* empty */
rule 116  ass_statement -> ass_left assign_operator ass_right
rule 117  ass_left -> identifier
rule 118  ass_left -> struct_member_exp
rule 119  ass_left -> array
rule 120  ass_left -> point_exp
rule 121  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 122  ass_left -> NEXT ass_left
rule 123  ass_left -> leftaddrshift
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  assign_operator -> ASS_P
rule 138  assign_operator -> ASS_N
rule 139  ass_right -> ari_exp
rule 140  ass_right -> array_exp
rule 141  ass_right -> strliteral
rule 142  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 143  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 144  ass_right -> rightaddrshift
rule 145  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 146  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 148  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 149  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 150  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 151  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR array CLOSE_PAR
rule 153  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 154  option_ari_exp -> COMMA error
rule 155  option_ari_exp ->		/* empty */
rule 156  point_exp -> MUL identifier
rule 157  point_exp -> MUL point_exp
rule 158  point_exp -> MUL array
rule 159  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 160  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 161  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 162  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 163  ari_exp -> simple_ari_exp
rule 164  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 165  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 166  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 167  type_cast_alg_exp -> simple_ari_exp
rule 168  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 169  option_exp_else_statement -> ELSE ari_exp
rule 170  option_exp_else_statement ->		/* empty */
rule 171  simple_ari_exp -> member_in_exp
rule 172  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 173  member_in_exp -> intliteral
rule 174  member_in_exp -> SUB member_in_exp
rule 175  member_in_exp -> BNE member_in_exp
rule 176  member_in_exp -> POINTERNULL
rule 177  member_in_exp -> floatliteral
rule 178  member_in_exp -> identifier
rule 179  member_in_exp -> array
rule 180  member_in_exp -> point_exp
rule 181  member_in_exp -> function
rule 182  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 183  member_in_exp -> charliteral
rule 184  member_in_exp -> address_exp
rule 185  member_in_exp -> type_cast
rule 186  member_in_exp -> struct_member_exp
rule 187  bi_operator -> MUL
rule 188  bi_operator -> DIV
rule 189  bi_operator -> MOD
rule 190  bi_operator -> LST
rule 191  bi_operator -> RST
rule 192  bi_operator -> ADDRESS
rule 193  bi_operator -> INTER_OR
rule 194  bi_operator -> CON
rule 195  ari_operator -> ADD
rule 196  ari_operator -> SUB
rule 197  array_exp -> array_exp CON array_exp
rule 198  array_exp -> option_list_value
rule 199  array_exp -> option_struct_list_value
rule 200  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 201  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 202  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 203  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 204  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 205  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 206  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 207  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 208  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 209  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 210  inner_option_list_value ->		/* empty */
rule 211  inner_option_list_value -> COMMA error
rule 212  address_exp -> ADDRESS identifier
rule 213  address_exp -> ADDRESS array
rule 214  address_exp -> ADDRESS struct_member_exp
rule 215  address_exp -> ADDRESS address_exp
rule 216  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 217  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 222  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 240  casted_element -> type_cast_alg_exp
rule 241  bool_exp -> prime_bool_exp
rule 242  bool_exp -> NEGATION bool_exp
rule 243  bool_exp -> bool_exp AND bool_exp
rule 244  bool_exp -> bool_exp OR bool_exp
rule 245  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 246  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 247  prime_bool_exp -> MY_TRUE
rule 248  prime_bool_exp -> MY_FALSE
rule 249  prime_bool_exp -> ari_exp
rule 250  prime_bool_exp -> ari_exp EQ strliteral
rule 251  prime_bool_exp -> ari_exp NE strliteral
rule 252  prime_bool_exp -> strliteral EQ ari_exp
rule 253  prime_bool_exp -> strliteral NE ari_exp
rule 254  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 255  prime_bool_exp -> ari_exp NE POINTERNULL
rule 256  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 257  prime_bool_exp -> POINTERNULL NE ari_exp
rule 258  prime_bool_exp -> ari_exp EQ charliteral
rule 259  prime_bool_exp -> ari_exp NE charliteral
rule 260  relation_operator -> GE
rule 261  relation_operator -> LE
rule 262  relation_operator -> NE
rule 263  relation_operator -> GT
rule 264  relation_operator -> LT
rule 265  relation_operator -> EQ
rule 266  sign_type_define -> UNSIGNED INTDECLARATION
rule 267  sign_type_define -> UNSIGNED CHARDECLARATION
rule 268  all_type_define -> sign_type_define
rule 269  all_type_define -> type_define
rule 270  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 272  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 276  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 279  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 281  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 282  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 283  option_function_parameter_list -> ID inner_option_define_identifier
rule 284  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 289  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 290  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 291  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 292  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 293  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 294  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 295  option_function_parameter_list ->		/* empty */
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 306  inner_option_define_identifier ->		/* empty */
rule 307  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 308  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 309  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 310  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 311  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 312  inner_option_define_identifier -> COMMA error
rule 313  option_function_identifier -> ass_right inner_option_function_identifier
rule 314  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 315  option_function_identifier ->		/* empty */
rule 316  option_function_identifier -> ADDRESS error
rule 317  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 318  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 319  inner_option_function_identifier ->		/* empty */
rule 320  inner_option_function_identifier -> COMMA error
rule 321  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 322  statement_bpar -> error CLOSE_BPAR
rule 323  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 324  bool_par -> error CLOSE_PAR
rule 325  identifier -> ID
rule 326  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 327  strliteral -> STRLITERAL
rule 328  intliteral -> INTLITERAL
rule 329  charliteral -> CHARLITERAL
rule 330  floatliteral -> FLOATLITERAL
rule 331  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 332  option_frame_identifier ->		/* empty */
rule 333  option_frame_identifier -> COMMA error
rule 334  option_projection ->		/* empty */
rule 335  option_projection -> COMMA statement option_projection
rule 336  imply_pre -> prime_bool_exp
rule 337  imply_pre -> NEGATION imply_pre
rule 338  imply_pre -> imply_pre AND imply_pre
rule 339  imply_pre -> imply_pre OR imply_pre
rule 340  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 341  while_statement -> WHILE bool_par statement_bpar
rule 342  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 343  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 344  for_sta_init -> ass_statement
rule 345  for_sta_init -> declaration
rule 346  for_sta_init ->		/* empty */
rule 347  for_sta_condition -> bool_exp
rule 348  for_sta_condition ->		/* empty */
rule 349  for_sta_control -> ass_statement
rule 350  for_sta_control ->		/* empty */
rule 351  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 352  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 353  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 354  init_case_par -> BREAK case_par
rule 355  init_case_par -> case_par
rule 356  init_case_par ->		/* empty */
rule 357  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 358  option_else_statement -> ELSE statement_bpar
rule 359  option_else_statement ->		/* empty */
rule 360  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 361  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 362  option_output ->		/* empty */
rule 363  option_output -> COMMA ass_right option_output
rule 364  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 365  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 366  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 367  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 368  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 369  option_input ->		/* empty */
rule 370  option_input -> COMMA identifier option_input
rule 371  option_input -> COMMA array option_input
rule 372  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 373  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 374  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 375  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 376  struct_member_exp -> array DOT array option_struct_member_exp
rule 377  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 378  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 379  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 380  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 381  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 382  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 383  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 384  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 385  struct_member_exp -> identifier DOT function
rule 386  struct_member_exp -> identifier IMPLY function
rule 387  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 388  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 389  option_struct_member_exp ->		/* empty */
rule 390  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 391  option_struct_member_exp -> DOT array option_struct_member_exp
rule 392  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 393  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 394  option_struct_member_exp -> DOT function
rule 395  option_struct_member_exp -> IMPLY function
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

Terminals, with rules where they appear

$ (-1)
<<<<<<< HEAD
error (256) 103 108 147 204 305 309 313 315 317 326
IF (258) 159 344
ELSE (259) 162 345
EMPTY (260) 18 45
AWAIT (261) 42
PROJECTION (262) 23 56 57
PBEGIN (263) 2
PEND (264) 2
POINTERNULL (265) 169 247 248 249 250
ARRAY (266) 97 98 268 272 279 280 283 294 295 296 297 302
STRUCT (267) 73 80 82 229 231
DOT (268) 359 360 361 362 363 364 372 377 378 381
UNION (269) 74 81 83
FILEDECLARATION (270) 93
MORE (271) 19 46
DEFINE (272) 25 58
MY_TRUE (273) 15 240
MY_FALSE (274) 16 241
EXIST (275) 63
FRAME (276) 55
FOR (277) 335 336
WHILE (278) 334
DO (279) 335
TRUE (280) 50
FALSE (281) 51
REPEAT (282) 43
UNTIL (283) 43
DISPLAY (284) 347 348
SKIP (285) 14 44
THEN (286) 159 344
COMMA (287) 28 102 103 106 108 146 147 200 201 202 204 282 289 290
    291 292 293 294 295 296 297 298 300 301 302 303 304 305 310 311
    313 324 326 328 336 350 357 358
COLON (288) 25 63
INTDECLARATION (289) 88 119 123 126 127 128 129 140 141 210 213 215
    217 218 223 224 259
STRDECLARATION (290) 91
POINTERDECLARATION (291)
CHARDECLARATION (292) 90 117 118 121 122 123 124 125 126 127 128 143
    144 212 214 216 220 221 226 227 260
VOIDDECLARATION (293) 92 222 228
FLOATDECLARATION (294) 89 120 142 211 219 225
LISTDECLARATION (295)
OPEN_PAR (296) 27 39 40 41 42 43 47 52 54 55 58 59 60 64 69 70 71 84
    85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129
    135 136 138 140 141 142 143 144 145 152 153 154 155 175 193 209
    210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 238 287 298 307 311 316 319 333 336
    347 348 351 352 353 354 355 367 371 375
CLOSE_PAR (297) 27 39 40 41 42 43 47 52 54 55 58 59 60 64 69 70 71
    84 85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128
    129 135 136 138 140 141 142 143 144 145 152 153 154 155 175 193
    209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224
    225 226 227 228 229 230 231 232 238 287 298 307 311 316 317 319
    333 336 347 348 351 352 353 354 355 367 371 375
TIMES (298) 335
OPEN_BPAR (299) 23 43 56 57 58 59 60 63 72 197 198 199 314
CLOSE_BPAR (300) 23 43 56 57 58 59 60 63 72 197 198 199 314 315
OPEN_MPAR (301) 54 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 140 141 142 143 144 152 194 195
    196 281 282 283 300 301 302
CLOSE_MPAR (302) 54 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 140 141 142 143 144 152 194 195
    196 281 282 283 300 301 302
FUNCTION (303)
OVER (304)
CYLINDER (305)
OVEREP (306)
INTER_OR (307) 186
NON_DETERMINED (308)
SEND (309)
RECEIVE (310)
PROCESS (311) 60
CHANNEL (312)
PUT (313)
GET (314)
ERROR_TOKEN (315)
STRFUNCHEAD (316)
STRFUNCTAIL (317)
STRFUNCCAT (318)
STRFUNCCMP (319)
STRFUNCCPY (320)
STRFUNCLEN (321)
EXTERN (322) 70
UNSIGNED (323) 76 118 122 124 125 126 128 141 144 215 216 218 221 224
    227 259 260
SIGNED (324) 75 213 214
CHOP (325) 8 32
IMPLY (326) 54 365 366 367 368 369 370 371 373 374 379 380 382
IFF (327) 6
PROPIMPLY (328) 7
OR (329) 5 31 237 332
PARALLEL (330) 53
AND (331) 4 30 55 66 236 331
ASS_P (332) 58 60 87 96 97 98 99 100 130
ASS_N (333) 131
CON (334) 187 190
ADDRESS (335) 185 205 206 207 208 309
NE (336) 244 246 248 250 252 255
EQ (337) 243 245 247 249 251 258
GE (338) 253
LE (339) 254
GT (340) 256
LT (341) 257
LST (342) 183
RST (343) 184
ADD (344) 188
SUB (345) 167 189
MUL (346) 84 85 86 87 101 117 118 119 120 121 122 123 124 125 126 127
    128 129 138 140 141 142 143 144 149 150 151 153 154 180 217 218
    219 220 221 222 223 224 225 226 227 228 229 230 231 232 266 267
    270 271 274 275 277 278 280 284 285 286 287 293 297 298 303 304
DIV (347) 181
MOD (348) 182
BNE (349) 168
CHOPSTAR (350) 26
NEXT (351) 13 39 115
NEGATION (352) 22 235 330
LENGTH (353) 17 47
REQUEST (354) 351 352 353 354 355
FINAL (355) 21 52
KEEP (356) 10 40
ALWAYS (357) 9 41
HALT (358) 20
W_NEXT (359) 12
PREFIX (360)
SOMETIMES (361) 11
ID (362) 24 25 58 59 60 69 70 73 74 80 81 86 87 95 97 98 99 100 105
    106 139 140 141 142 143 144 269 270 271 272 276 277 278 291 294
    307 311 318
STRLITERAL (363) 320
STRUCT_TYPE (364) 79 82 83 229 230 231 232 265 266 267 268 273 274
    275 292 293 295
INTLITERAL (365) 117 118 119 120 121 122 123 124 125 126 127 128 129
    321
FLOATLITERAL (366) 323
CHARLITERAL (367) 322
=======
error (256) 110 115 154 211 312 316 320 322 324 333
SWITCH (258) 351
CASE (259) 352
BREAK (260) 354
DEFAULT (261) 353
RETURN (262) 36
IF (263) 166 357
ELSE (264) 169 358
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 176 254 255 256 257
ARRAY (271) 104 105 275 279 286 287 290 301 302 303 304 309
STRUCT (272) 73 74 75 80 87 89 236 238
DOT (273) 372 373 374 375 376 377 385 390 391 394
UNION (274) 81 88 90
FILEDECLARATION (275) 100
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 247
MY_FALSE (279) 16 248
EXIST (280) 64
FRAME (281) 57
FOR (282) 342 343
WHILE (283) 341
DO (284) 342
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 360 361
SKIP (290) 14 46
THEN (291) 166 357
COMMA (292) 28 109 110 113 115 153 154 207 208 209 211 289 296 297
    298 299 300 301 302 303 304 305 307 308 309 310 311 312 317 318
    320 331 333 335 343 363 370 371
COLON (293) 25 64 352 353
INTDECLARATION (294) 95 126 130 133 134 135 136 147 148 217 220 222
    224 225 230 231 266
STRDECLARATION (295) 98
POINTERDECLARATION (296)
CHARDECLARATION (297) 97 124 125 128 129 130 131 132 133 134 135 150
    151 219 221 223 227 228 233 234 267
VOIDDECLARATION (298) 99 229 235
FLOATDECLARATION (299) 96 127 149 218 226 232
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74 75
    76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132 133
    134 135 136 142 143 145 147 148 149 150 151 152 159 160 161 162
    182 200 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 245 294 305 314 318 323
    326 340 343 351 352 353 360 361 364 365 366 367 368 380 384 388
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74
    75 76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132
    133 134 135 136 142 143 145 147 148 149 150 151 152 159 160 161
    162 182 200 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 235 236 237 238 239 245 294 305 314 318
    323 324 326 340 343 351 352 353 360 361 364 365 366 367 368 380
    384 388
TIMES (303) 342
OPEN_BPAR (304) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    321 351
CLOSE_BPAR (305) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    321 322 351
OPEN_MPAR (306) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 289 290 307 308 309
CLOSE_MPAR (307) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 289 290 307 308 309
FUNCTION (308)
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 193
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 77
UNSIGNED (328) 83 125 129 131 132 133 135 148 151 222 223 225 228 231
    234 266 267
SIGNED (329) 82 220 221
CHOP (330) 8 32
IMPLY (331) 56 378 379 380 381 382 383 384 386 387 392 393 395
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 244 339
PARALLEL (335) 55
AND (336) 4 30 57 67 243 338
ASS_P (337) 60 94 103 104 105 106 107 137
ASS_N (338) 138
CON (339) 194 197
ADDRESS (340) 192 212 213 214 215 316
NE (341) 251 253 255 257 259 262
EQ (342) 250 252 254 256 258 265
GE (343) 260
LE (344) 261
GT (345) 263
LT (346) 264
LST (347) 190
RST (348) 191
ADD (349) 195
SUB (350) 174 196
MUL (351) 71 72 74 75 91 92 93 94 108 124 125 126 127 128 129 130 131
    132 133 134 135 136 145 147 148 149 150 151 156 157 158 160 161
    187 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
    239 273 274 277 278 281 282 284 285 287 291 292 293 294 300 304
    305 310 311
DIV (352) 188
MOD (353) 189
BNE (354) 175
CHOPSTAR (355) 26
NEXT (356) 13 41 122
NEGATION (357) 22 242 337
LENGTH (358) 17 49
REQUEST (359) 364 365 366 367 368
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 70 71 72 73 74 75 76 77 80 81 87 88 93 94 102
    104 105 106 107 112 113 146 147 148 149 150 151 276 277 278 279
    283 284 285 298 301 314 318 325
STRLITERAL (368) 327
STRUCT_TYPE (369) 73 74 75 86 89 90 236 237 238 239 272 273 274 275
    280 281 282 299 300 302
INTLITERAL (370) 124 125 126 127 128 129 130 131 132 133 134 135 136
    328
FLOATLITERAL (371) 330
CHARLITERAL (372) 329
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

Nonterminals, with rules where they appear

program (113)
    on left: 1
gComplexProposition (114)
    on left: 2 3, on right: 1
complexProposition (115)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (116)
    on left: 28 29, on right: 23 28
statement (117)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
<<<<<<< HEAD
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 1 30 31 32 39 40 41 43 52 53 54 55 56 57 59 63 64 67
    314 328
option_struct_declaration (118)
    on left: 65 66, on right: 66 72
empty_statement (119)
    on left: 67 68, on right: 58 60
function (120)
    on left: 69 70 71, on right: 62 135 174 372 373 381 382
struct_define_statement (121)
    on left: 72, on right: 61
struct_identifier (122)
    on left: 73 74, on right: 72
sign_declaration (123)
    on left: 75 76 77, on right: 34 65 66
declaration (124)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 75 76 77 338
type_define (125)
    on left: 88 89 90 91 92 93, on right: 59 78 135 262
option_identifier_array_declaration (126)
    on left: 94 95 96 97 98 99 100 101, on right: 78 79 80 81 82 83
    101 102
inner_option_identifier_array_declaration (127)
    on left: 102 103 104, on right: 94 95 96 97 98 99 100
ass_statement (128)
    on left: 109, on right: 33 337 342
ass_left (129)
    on left: 110 111 112 113 114 115 116, on right: 109 114 115
leftaddrshift (130)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129,
    on right: 116 138
assign_operator (131)
    on left: 130 131, on right: 109
ass_right (132)
    on left: 132 133 134 135 136 137, on right: 96 109 136 306 310
    347 348 350
rightaddrshift (133)
    on left: 138, on right: 137
array (134)
    on left: 139 140 141 142 143 144 145, on right: 71 112 145 151
    172 206 353 354 358 360 362 363 364 366 369 370 371 374 378 380
option_ari_exp (135)
    on left: 146 147 148, on right: 86 87 95 99 100 105 106 117 118
    119 120 121 122 123 124 125 126 127 128 129 139 140 141 142 143
    144 146 152
point_exp (136)
    on left: 149 150 151 152 153 154 155, on right: 113 150 152 155
    173 361 364 368 374
ari_exp (137)
    on left: 156 157 158 159, on right: 17 47 86 87 95 99 100 105 106
    117 118 119 120 121 122 123 124 125 126 127 128 129 132 139 140
    141 142 143 144 146 152 153 154 157 158 159 162 175 194 197 200
    239 242 243 244 245 246 247 248 249 250 251 252 281 282 283 300
    301 302 335
type_cast_alg_exp (138)
    on left: 160 161, on right: 210 211 212 213 214 215 216 233
option_exp_else_statement (139)
    on left: 162 163, on right: 159
simple_ari_exp (140)
    on left: 164 165, on right: 156 157 158 160 161 165
member_in_exp (141)
    on left: 166 167 168 169 170 171 172 173 174 175 176 177 178 179
   , on right: 164 165 167 168
bi_operator (142)
    on left: 180 181 182 183 184 185 186 187, on right: 165
ari_operator (143)
    on left: 188 189, on right: 158 161
array_exp (144)
    on left: 190 191 192 193, on right: 87 97 99 133 190 193 196 199
    202
option_list_value (145)
    on left: 194 195 196, on right: 191
option_struct_list_value (146)
    on left: 197 198 199, on right: 192
inner_option_list_value (147)
    on left: 200 201 202 203 204, on right: 194 195 196 197 198 199
    200 201 202
address_exp (148)
    on left: 205 206 207 208 209, on right: 177 208 209 367 371
type_cast (149)
    on left: 210 211 212 213 214 215 216 217 218 219 220 221 222 223
    224 225 226 227 228 229 230 231 232, on right: 178
casted_element (150)
    on left: 233, on right: 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232
bool_exp (151)
    on left: 234 235 236 237 238, on right: 42 43 159 235 236 237 238
    316 340 344
prime_bool_exp (152)
    on left: 239 240 241 242 243 244 245 246 247 248 249 250 251 252
   , on right: 25 234 329
relation_operator (153)
    on left: 253 254 255 256 257 258, on right: 157 239
sign_type_define (154)
    on left: 259 260, on right: 261
all_type_define (155)
    on left: 261 262, on right: 153 263 264 279 280 281 282 283 284
    285 286 289 290 296 297 300 301 302 303 304
option_function_parameter_list (156)
    on left: 263 264 265 266 267 268 269 270 271 272 273 274 275 276
    277 278 279 280 281 282 283 284 285 286 287 288,
    on right: 58 59 60 84 85 86 87 135 287 298
inner_option_define_identifier (157)
    on left: 289 290 291 292 293 294 295 296 297 298 299 300 301 302
    303 304 305, on right: 63 263 264 265 266 267 268 269 270 271 272
    273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 289
    290 291 292 293 294 295 296 297 298 300 301 302 303 304
option_function_identifier (158)
    on left: 306 307 308 309, on right: 69 70 71 307 311
inner_option_function_identifier (159)
    on left: 310 311 312 313, on right: 306 307 310 311
statement_bpar (160)
    on left: 314 315, on right: 56 57 334 335 336 344 345
bool_par (161)
    on left: 316 317, on right: 334
identifier (162)
    on left: 318 319, on right: 55 63 84 85 94 96 110 149 171 205 263
    265 266 267 268 269 270 271 272 279 280 281 282 283 284 286 287
    289 291 292 293 294 295 296 297 298 300 301 302 303 319 324 351
    352 357 359 360 361 362 365 366 367 368 369 372 373 377 379
strliteral (163)
    on left: 320, on right: 98 100 134 135 195 198 201 243 244 245
    246
intliteral (164)
    on left: 321, on right: 166
charliteral (165)
    on left: 322, on right: 176 251 252
floatliteral (166)
    on left: 323, on right: 170
option_frame_identifier (167)
    on left: 324 325 326, on right: 55 324
option_projection (168)
    on left: 327 328, on right: 56 328
imply_pre (169)
    on left: 329 330 331 332 333, on right: 54 330 331 332 333
while_statement (170)
    on left: 334, on right: 36
for_statement (171)
    on left: 335, on right: 37
extend_for_statement (172)
    on left: 336, on right: 38
for_sta_init (173)
    on left: 337 338 339, on right: 336
for_sta_condition (174)
    on left: 340 341, on right: 336
for_sta_control (175)
    on left: 342 343, on right: 336
if_statement (176)
    on left: 344, on right: 35
option_else_statement (177)
    on left: 345 346, on right: 344
output_statement (178)
    on left: 347 348, on right: 49
option_output (179)
    on left: 349 350, on right: 348 350
input_statement (180)
    on left: 351 352 353 354 355, on right: 48
option_input (181)
    on left: 356 357 358, on right: 352 354 357 358
struct_member_exp (182)
    on left: 359 360 361 362 363 364 365 366 367 368 369 370 371 372
    373 374 375, on right: 111 179 207 355 375
option_struct_member_exp (183)
    on left: 376 377 378 379 380 381 382, on right: 359 360 361 362
    363 364 365 366 367 368 369 370 371 374 377 378 379 380
=======
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 64 65 68 70
    71 72 73 74 75 321 335 352 353
option_struct_declaration (123)
    on left: 66 67, on right: 67 79
empty_statement (124)
    on left: 68 69, on right: 60
function_define (125)
    on left: 70 71 72 73 74 75, on right: 62
function (126)
    on left: 76 77 78, on right: 63 142 181 385 386 394 395
struct_define_statement (127)
    on left: 79, on right: 61
struct_identifier (128)
    on left: 80 81, on right: 79
sign_declaration (129)
    on left: 82 83 84, on right: 34 66 67
declaration (130)
    on left: 85 86 87 88 89 90 91 92 93 94, on right: 82 83 84 345
type_define (131)
    on left: 95 96 97 98 99 100, on right: 85 142 269
option_identifier_array_declaration (132)
    on left: 101 102 103 104 105 106 107 108, on right: 85 86 87 88
    89 90 108 109
inner_option_identifier_array_declaration (133)
    on left: 109 110 111, on right: 101 102 103 104 105 106 107
ass_statement (134)
    on left: 116, on right: 33 344 349
ass_left (135)
    on left: 117 118 119 120 121 122 123, on right: 116 121 122
leftaddrshift (136)
    on left: 124 125 126 127 128 129 130 131 132 133 134 135 136,
    on right: 123 145
assign_operator (137)
    on left: 137 138, on right: 116
ass_right (138)
    on left: 139 140 141 142 143 144, on right: 103 116 143 313 317
    360 361 363
rightaddrshift (139)
    on left: 145, on right: 144
array (140)
    on left: 146 147 148 149 150 151 152, on right: 78 119 152 158
    179 213 366 367 371 373 375 376 377 379 382 383 384 387 391 393
option_ari_exp (141)
    on left: 153 154 155, on right: 93 94 102 106 107 112 113 124 125
    126 127 128 129 130 131 132 133 134 135 136 146 147 148 149 150
    151 153 159
point_exp (142)
    on left: 156 157 158 159 160 161 162, on right: 120 157 159 162
    180 374 377 381 387
ari_exp (143)
    on left: 163 164 165 166, on right: 17 49 93 94 102 106 107 112
    113 124 125 126 127 128 129 130 131 132 133 134 135 136 139 146
    147 148 149 150 151 153 159 160 161 164 165 166 169 182 201 204
    207 246 249 250 251 252 253 254 255 256 257 258 259 288 289 290
    307 308 309 342
type_cast_alg_exp (144)
    on left: 167 168, on right: 217 218 219 220 221 222 223 240
option_exp_else_statement (145)
    on left: 169 170, on right: 166
simple_ari_exp (146)
    on left: 171 172, on right: 163 164 165 167 168 172
member_in_exp (147)
    on left: 173 174 175 176 177 178 179 180 181 182 183 184 185 186
   , on right: 171 172 174 175 351 352
bi_operator (148)
    on left: 187 188 189 190 191 192 193 194, on right: 172
ari_operator (149)
    on left: 195 196, on right: 165 168
array_exp (150)
    on left: 197 198 199 200, on right: 94 104 106 140 197 200 203
    206 209
option_list_value (151)
    on left: 201 202 203, on right: 198
option_struct_list_value (152)
    on left: 204 205 206, on right: 199
inner_option_list_value (153)
    on left: 207 208 209 210 211, on right: 201 202 203 204 205 206
    207 208 209
address_exp (154)
    on left: 212 213 214 215 216, on right: 184 215 216 380 384
type_cast (155)
    on left: 217 218 219 220 221 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239, on right: 185
casted_element (156)
    on left: 240, on right: 224 225 226 227 228 229 230 231 232 233
    234 235 236 237 238 239
bool_exp (157)
    on left: 241 242 243 244 245, on right: 44 45 166 242 243 244 245
    323 347 357
prime_bool_exp (158)
    on left: 246 247 248 249 250 251 252 253 254 255 256 257 258 259
   , on right: 25 241 336
relation_operator (159)
    on left: 260 261 262 263 264 265, on right: 164 246
sign_type_define (160)
    on left: 266 267, on right: 268
all_type_define (161)
    on left: 268 269, on right: 70 71 72 160 270 271 286 287 288 289
    290 291 292 293 296 297 303 304 307 308 309 310 311
option_function_parameter_list (162)
    on left: 270 271 272 273 274 275 276 277 278 279 280 281 282 283
    284 285 286 287 288 289 290 291 292 293 294 295,
    on right: 60 70 71 72 73 74 75 91 92 93 94 142 294 305
inner_option_define_identifier (163)
    on left: 296 297 298 299 300 301 302 303 304 305 306 307 308 309
    310 311 312, on right: 64 270 271 272 273 274 275 276 277 278 279
    280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 296
    297 298 299 300 301 302 303 304 305 307 308 309 310 311
option_function_identifier (164)
    on left: 313 314 315 316, on right: 76 77 78 314 318
inner_option_function_identifier (165)
    on left: 317 318 319 320, on right: 313 314 317 318
statement_bpar (166)
    on left: 321 322, on right: 58 59 341 342 343 357 358
bool_par (167)
    on left: 323 324, on right: 341
identifier (168)
    on left: 325 326, on right: 57 64 91 92 101 103 117 156 178 212
    270 272 273 274 275 276 277 278 279 286 287 288 289 290 291 293
    294 296 298 299 300 301 302 303 304 305 307 308 309 310 326 331
    364 365 370 372 373 374 375 378 379 380 381 382 385 386 390 392
strliteral (169)
    on left: 327, on right: 105 107 141 142 202 205 208 250 251 252
    253
intliteral (170)
    on left: 328, on right: 173
charliteral (171)
    on left: 329, on right: 183 258 259
floatliteral (172)
    on left: 330, on right: 177
option_frame_identifier (173)
    on left: 331 332 333, on right: 57 331
option_projection (174)
    on left: 334 335, on right: 58 335
imply_pre (175)
    on left: 336 337 338 339 340, on right: 56 337 338 339 340
while_statement (176)
    on left: 341, on right: 38
for_statement (177)
    on left: 342, on right: 39
extend_for_statement (178)
    on left: 343, on right: 40
for_sta_init (179)
    on left: 344 345 346, on right: 343
for_sta_condition (180)
    on left: 347 348, on right: 343
for_sta_control (181)
    on left: 349 350, on right: 343
switch_statement (182)
    on left: 351, on right: 35
case_par (183)
    on left: 352 353, on right: 351 354 355
init_case_par (184)
    on left: 354 355 356, on right: 352
if_statement (185)
    on left: 357, on right: 37
option_else_statement (186)
    on left: 358 359, on right: 357
output_statement (187)
    on left: 360 361, on right: 51
option_output (188)
    on left: 362 363, on right: 361 363
input_statement (189)
    on left: 364 365 366 367 368, on right: 50
option_input (190)
    on left: 369 370 371, on right: 365 367 370 371
struct_member_exp (191)
    on left: 372 373 374 375 376 377 378 379 380 381 382 383 384 385
    386 387 388, on right: 118 186 214 368 388
option_struct_member_exp (192)
    on left: 389 390 391 392 393 394 395, on right: 372 373 374 375
    376 377 378 379 380 381 382 383 384 387 390 391 392 393
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

<<<<<<< HEAD
    program	go to state 1167
=======
    program	go to state 1231
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

<<<<<<< HEAD
    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 60
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

<<<<<<< HEAD
    ID  	shift, and go to state 79
=======
    ID  	shift, and go to state 84
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 80
=======
    complexProposition	go to state 85
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 81
=======
    complexProposition	go to state 86
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 82
=======
    complexProposition	go to state 87
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 83
=======
    complexProposition	go to state 88
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

<<<<<<< HEAD
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 96
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 101
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 106
=======
    complexProposition	go to state 111
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 107
=======
    complexProposition	go to state 112
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 108
=======
    complexProposition	go to state 113
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 109
=======
    complexProposition	go to state 114
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 110
=======
    complexProposition	go to state 115
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 111
=======
    complexProposition	go to state 116
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    PEND	shift, and go to state 112
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118
=======
    PEND	shift, and go to state 117
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 22

<<<<<<< HEAD
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 344)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 126
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    OPEN_PAR	shift, and go to state 124
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 23

    statement  ->  EMPTY .   (rule 45)

<<<<<<< HEAD
    $default	reduce using rule 45 (statement)
=======
    ID  	shift, and go to state 125
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 24

<<<<<<< HEAD
    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 129
=======
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 357)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 133
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 25

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 131



state 26

    struct_identifier  ->  UNION . ID   (rule 74)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

<<<<<<< HEAD
    ID  	shift, and go to state 132
    STRUCT_TYPE	shift, and go to state 133
=======
    OPEN_PAR	shift, and go to state 136
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 27

<<<<<<< HEAD
    type_define  ->  FILEDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)
=======
    function_define  ->  STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    struct_identifier  ->  STRUCT . ID   (rule 80)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 138
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 28

<<<<<<< HEAD
    statement  ->  MORE .   (rule 46)

    $default	reduce using rule 46 (statement)
=======
    struct_identifier  ->  UNION . ID   (rule 81)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 88)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 90)

    ID  	shift, and go to state 139
    STRUCT_TYPE	shift, and go to state 140
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 29

<<<<<<< HEAD
    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    ID  	shift, and go to state 134
=======
    type_define  ->  FILEDECLARATION .   (rule 100)

    $default	reduce using rule 100 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 30

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 137



state 31

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 138
=======
    ID  	shift, and go to state 141
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 32

<<<<<<< HEAD
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 335)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 140
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 144
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 33

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 334)

    error	shift, and go to state 141
    OPEN_PAR	shift, and go to state 142

<<<<<<< HEAD
    bool_par	go to state 143
=======
    OPEN_PAR	shift, and go to state 145
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 34

<<<<<<< HEAD
    statement  ->  TRUE .   (rule 50)
=======
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 342)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 146
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 147
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 50 (statement)



<<<<<<< HEAD
state 35

    statement  ->  FALSE .   (rule 51)

    $default	reduce using rule 51 (statement)
=======
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 341)

    error	shift, and go to state 148
    OPEN_PAR	shift, and go to state 149

    bool_par	go to state 150
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 36

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_BPAR	shift, and go to state 144



state 37

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 347)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 348)

    OPEN_PAR	shift, and go to state 145



state 38

    statement  ->  SKIP .   (rule 44)

<<<<<<< HEAD
    $default	reduce using rule 44 (statement)
=======
    OPEN_BPAR	shift, and go to state 151
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 39

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)

    $default	reduce using rule 88 (type_define)
=======
    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 360)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 361)

    OPEN_PAR	shift, and go to state 152
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 40

    type_define  ->  STRDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 41

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
=======
    type_define  ->  INTDECLARATION .   (rule 95)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 95 (type_define)



state 42

<<<<<<< HEAD
    type_define  ->  VOIDDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)
=======
    type_define  ->  STRDECLARATION .   (rule 98)

    $default	reduce using rule 98 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 43

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)
=======
    type_define  ->  CHARDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 44

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 146
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 147
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 51
    NEGATION	shift, and go to state 149
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 58
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    statement	go to state 150
    function	go to state 151
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 155
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 157
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 158
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 159
=======
    type_define  ->  VOIDDECLARATION .   (rule 99)

    $default	reduce using rule 99 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 45

<<<<<<< HEAD
    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 56)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 160
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    type_define  ->  FLOATDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 46

<<<<<<< HEAD
    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 161
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 153
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 154
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 156
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    statement	go to state 157
    function_define	go to state 61
    function	go to state 158
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 162
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 164
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 165
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 47

<<<<<<< HEAD
    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    ID  	shift, and go to state 162
=======
    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 167
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 48

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 166
    type_define	go to state 167
=======
    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 77)

    ID  	shift, and go to state 168
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 49

<<<<<<< HEAD
    sign_declaration  ->  SIGNED . declaration   (rule 75)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 168
    type_define	go to state 167



state 50

    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 173
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 171
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 172
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 50

<<<<<<< HEAD
    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 39)
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 176
    leftaddrshift	go to state 68
    array	go to state 177
    point_exp	go to state 70
    identifier	go to state 71
    struct_member_exp	go to state 78
=======
    sign_declaration  ->  SIGNED . declaration   (rule 82)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 176
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 51

<<<<<<< HEAD
    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 47)

    OPEN_PAR	shift, and go to state 178
=======
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 181
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 52

<<<<<<< HEAD
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 351)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 352)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 353)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 354)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 355)

    OPEN_PAR	shift, and go to state 179
=======
    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 122)

    OPEN_PAR	shift, and go to state 182
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 184
    leftaddrshift	go to state 70
    array	go to state 185
    point_exp	go to state 72
    identifier	go to state 75
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 53

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 52)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 180
=======
    OPEN_PAR	shift, and go to state 186
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 54

<<<<<<< HEAD
    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 40)

    OPEN_PAR	shift, and go to state 181
=======
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 367)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 368)

    OPEN_PAR	shift, and go to state 187
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 55

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 41)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 182
=======
    OPEN_PAR	shift, and go to state 188
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 56

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 183
    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)
=======
    OPEN_PAR	shift, and go to state 189
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 57

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 187
    identifier	go to state 188
=======
    OPEN_PAR	shift, and go to state 190
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 58

<<<<<<< HEAD
    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 1 (program)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 59

<<<<<<< HEAD
    statement  ->  function .   (rule 62)

    $default	reduce using rule 62 (statement)
=======
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 195
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 60

<<<<<<< HEAD
    statement  ->  struct_define_statement .   (rule 61)
=======
    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 61 (statement)



state 61

    statement  ->  function_define .   (rule 62)

    $default	reduce using rule 62 (statement)



state 62

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 193
=======
    statement  ->  function .   (rule 63)

    $default	reduce using rule 63 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 63

<<<<<<< HEAD
    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)
=======
    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 64

<<<<<<< HEAD
    sign_declaration  ->  declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)
=======
    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 79)

    OPEN_BPAR	shift, and go to state 201
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 65

    statement  ->  type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)
    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 195
    identifier	go to state 188



state 66

<<<<<<< HEAD
    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)
=======
    sign_declaration  ->  declaration .   (rule 84)

    $default	reduce using rule 84 (sign_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 67

<<<<<<< HEAD
    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)

    ASS_P	shift, and go to state 196
    ASS_N	shift, and go to state 197

    assign_operator	go to state 198
=======
    declaration  ->  type_define . option_identifier_array_declaration   (rule 85)
    all_type_define  ->  type_define .   (rule 269)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    MUL 	[reduce using rule 269 (all_type_define)]
    ID  	[reduce using rule 269 (all_type_define)]
    $default	reduce using rule 269 (all_type_define)

    option_identifier_array_declaration	go to state 202
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 68

    ass_left  ->  leftaddrshift .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 69

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 201

    $default	reduce using rule 112 (ass_left)
=======
    ass_statement  ->  ass_left . assign_operator ass_right   (rule 116)

    ASS_P	shift, and go to state 203
    ASS_N	shift, and go to state 204

    assign_operator	go to state 205
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 70

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 113)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 203

    $default	reduce using rule 113 (ass_left)
=======
    ass_left  ->  leftaddrshift .   (rule 123)

    $default	reduce using rule 123 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 71

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 110)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    $default	reduce using rule 110 (ass_left)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 208

    $default	reduce using rule 119 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 72

<<<<<<< HEAD
    statement  ->  while_statement .   (rule 36)

    $default	reduce using rule 36 (statement)
=======
    ass_left  ->  point_exp .   (rule 120)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

    $default	reduce using rule 120 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 73

<<<<<<< HEAD
    statement  ->  for_statement .   (rule 37)

    $default	reduce using rule 37 (statement)
=======
    all_type_define  ->  sign_type_define .   (rule 268)

    $default	reduce using rule 268 (all_type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 74

<<<<<<< HEAD
    statement  ->  extend_for_statement .   (rule 38)
=======
    function_define  ->  all_type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)
    function_define  ->  all_type_define . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  all_type_define . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    MUL 	shift, and go to state 211
    ID  	shift, and go to state 212



state 75

    ass_left  ->  identifier .   (rule 117)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    IMPLY	shift, and go to state 214

    $default	reduce using rule 117 (ass_left)



state 76

    statement  ->  while_statement .   (rule 38)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 38 (statement)



state 77

    statement  ->  if_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 78

    statement  ->  output_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 79

    statement  ->  input_statement .   (rule 48)

    $default	reduce using rule 48 (statement)



state 80

    ass_left  ->  struct_member_exp .   (rule 111)

    $default	reduce using rule 111 (ass_left)



state 81

<<<<<<< HEAD
    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 206



state 80
=======
    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 82

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 83

    ass_left  ->  struct_member_exp .   (rule 118)

    $default	reduce using rule 118 (ass_left)



state 84

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 215



state 85
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 207
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118



state 81
=======
    CLOSE_PAR	shift, and go to state 216
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123



state 86
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    COMMA	shift, and go to state 208
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 209



state 82
=======
    COMMA	shift, and go to state 217
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 218



state 87
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



<<<<<<< HEAD
state 83
=======
state 88
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



<<<<<<< HEAD
state 84

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 159)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 210
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 85

    member_in_exp  ->  POINTERNULL .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 86
=======
state 89

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 219
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



<<<<<<< HEAD
state 87

    address_exp  ->  ADDRESS . identifier   (rule 205)
    address_exp  ->  ADDRESS . array   (rule 206)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 207)
    address_exp  ->  ADDRESS . address_exp   (rule 208)

    OPEN_PAR	shift, and go to state 226
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170
=======
    member_in_exp  ->  POINTERNULL .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array	go to state 227
    point_exp	go to state 228
    address_exp	go to state 229
    identifier	go to state 230
    struct_member_exp	go to state 231



<<<<<<< HEAD
state 88
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    member_in_exp  ->  SUB . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    member_in_exp	go to state 232
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



<<<<<<< HEAD
state 89

    member_in_exp  ->  BNE . member_in_exp   (rule 168)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    member_in_exp	go to state 233
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 90

    intliteral  ->  INTLITERAL .   (rule 321)
=======
    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)

    OPEN_PAR	shift, and go to state 235
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 236
    point_exp	go to state 237
    address_exp	go to state 238
    identifier	go to state 239
    struct_member_exp	go to state 240



state 93

    member_in_exp  ->  SUB . member_in_exp   (rule 174)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 241
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 321 (intliteral)



<<<<<<< HEAD
state 91

    floatliteral  ->  FLOATLITERAL .   (rule 323)
=======
    member_in_exp  ->  BNE . member_in_exp   (rule 175)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 242
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 323 (floatliteral)



<<<<<<< HEAD
state 92

    charliteral  ->  CHARLITERAL .   (rule 322)
=======
    intliteral  ->  INTLITERAL .   (rule 328)

    $default	reduce using rule 328 (intliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 322 (charliteral)



<<<<<<< HEAD
state 93

    member_in_exp  ->  function .   (rule 174)
=======
    floatliteral  ->  FLOATLITERAL .   (rule 330)

    $default	reduce using rule 330 (floatliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 174 (member_in_exp)



<<<<<<< HEAD
state 94

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 201

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)
=======
    charliteral  ->  CHARLITERAL .   (rule 329)

    $default	reduce using rule 329 (charliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 95

<<<<<<< HEAD
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 203

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
=======
    member_in_exp  ->  function .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 96

<<<<<<< HEAD
    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 208

<<<<<<< HEAD
    ari_operator	go to state 236



state 97

    ari_exp  ->  simple_ari_exp .   (rule 156)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 157)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    NE  	shift, and go to state 240
    EQ  	shift, and go to state 241
    GE  	shift, and go to state 242
    LE  	shift, and go to state 243
    GT  	shift, and go to state 244
    LT  	shift, and go to state 245
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 156 (ari_exp)]
    CON 	[reduce using rule 156 (ari_exp)]
    ADDRESS	[reduce using rule 156 (ari_exp)]
    NE  	[reduce using rule 156 (ari_exp)]
    EQ  	[reduce using rule 156 (ari_exp)]
    GE  	[reduce using rule 156 (ari_exp)]
    LE  	[reduce using rule 156 (ari_exp)]
    GT  	[reduce using rule 156 (ari_exp)]
    LT  	[reduce using rule 156 (ari_exp)]
    LST 	[reduce using rule 156 (ari_exp)]
    RST 	[reduce using rule 156 (ari_exp)]
    MUL 	[reduce using rule 156 (ari_exp)]
    DIV 	[reduce using rule 156 (ari_exp)]
    MOD 	[reduce using rule 156 (ari_exp)]
    $default	reduce using rule 156 (ari_exp)

    bi_operator	go to state 251
    relation_operator	go to state 252
=======
    DOT 	[reduce using rule 179 (member_in_exp)]
    IMPLY	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 100

    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

    DOT 	[reduce using rule 180 (member_in_exp)]
    IMPLY	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 98

<<<<<<< HEAD
    simple_ari_exp  ->  member_in_exp .   (rule 164)

    $default	reduce using rule 164 (simple_ari_exp)
=======
    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 245

<<<<<<< HEAD
state 99

    member_in_exp  ->  address_exp .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)
=======


state 102

    ari_exp  ->  simple_ari_exp .   (rule 163)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 164)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    NE  	shift, and go to state 249
    EQ  	shift, and go to state 250
    GE  	shift, and go to state 251
    LE  	shift, and go to state 252
    GT  	shift, and go to state 253
    LT  	shift, and go to state 254
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 163 (ari_exp)]
    CON 	[reduce using rule 163 (ari_exp)]
    ADDRESS	[reduce using rule 163 (ari_exp)]
    NE  	[reduce using rule 163 (ari_exp)]
    EQ  	[reduce using rule 163 (ari_exp)]
    GE  	[reduce using rule 163 (ari_exp)]
    LE  	[reduce using rule 163 (ari_exp)]
    GT  	[reduce using rule 163 (ari_exp)]
    LT  	[reduce using rule 163 (ari_exp)]
    LST 	[reduce using rule 163 (ari_exp)]
    RST 	[reduce using rule 163 (ari_exp)]
    MUL 	[reduce using rule 163 (ari_exp)]
    DIV 	[reduce using rule 163 (ari_exp)]
    MOD 	[reduce using rule 163 (ari_exp)]
    $default	reduce using rule 163 (ari_exp)

    bi_operator	go to state 260
    relation_operator	go to state 261
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 100

<<<<<<< HEAD
    member_in_exp  ->  type_cast .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)
=======
    simple_ari_exp  ->  member_in_exp .   (rule 171)

    $default	reduce using rule 171 (simple_ari_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 101

<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    DOT 	[reduce using rule 171 (member_in_exp)]
    IMPLY	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)
=======
    member_in_exp  ->  address_exp .   (rule 184)

    $default	reduce using rule 184 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 102

<<<<<<< HEAD
    member_in_exp  ->  intliteral .   (rule 166)

    $default	reduce using rule 166 (member_in_exp)
=======
    member_in_exp  ->  type_cast .   (rule 185)

    $default	reduce using rule 185 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 103

<<<<<<< HEAD
    member_in_exp  ->  charliteral .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)
=======
    member_in_exp  ->  identifier .   (rule 178)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    IMPLY	shift, and go to state 214

    DOT 	[reduce using rule 178 (member_in_exp)]
    IMPLY	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 104

<<<<<<< HEAD
    member_in_exp  ->  floatliteral .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)
=======
    member_in_exp  ->  intliteral .   (rule 173)

    $default	reduce using rule 173 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 105

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)
=======
    member_in_exp  ->  charliteral .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 106

    member_in_exp  ->  floatliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 110

    member_in_exp  ->  struct_member_exp .   (rule 186)

    $default	reduce using rule 186 (member_in_exp)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



<<<<<<< HEAD
state 107
=======
state 112
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



<<<<<<< HEAD
state 108
=======
state 113
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



<<<<<<< HEAD
state 109
=======
state 114
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



<<<<<<< HEAD
state 110
=======
state 115
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



<<<<<<< HEAD
state 111
=======
state 116
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



<<<<<<< HEAD
state 112
=======
state 117
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



<<<<<<< HEAD
state 113
=======
state 118
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 253



state 114
=======
    complexProposition	go to state 262



state 119
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 254



state 115
=======
    complexProposition	go to state 263



state 120
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 255



state 116
=======
    complexProposition	go to state 264



state 121
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 256



state 117
=======
    complexProposition	go to state 265



state 122
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 257



state 118
=======
    complexProposition	go to state 266



state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



<<<<<<< HEAD
state 119

    member_in_exp  ->  POINTERNULL .   (rule 169)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 249)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 250)

    NE  	shift, and go to state 258
    EQ  	shift, and go to state 259

    NE  	[reduce using rule 169 (member_in_exp)]
    EQ  	[reduce using rule 169 (member_in_exp)]
    $default	reduce using rule 169 (member_in_exp)



state 120

    prime_bool_exp  ->  MY_TRUE .   (rule 240)

    $default	reduce using rule 240 (prime_bool_exp)



state 121

    prime_bool_exp  ->  MY_FALSE .   (rule 241)
=======
state 124

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 267
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 241 (prime_bool_exp)



<<<<<<< HEAD
state 122

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 238)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 260
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    bool_exp	go to state 262
    prime_bool_exp	go to state 127
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 123

<<<<<<< HEAD
    bool_exp  ->  NEGATION . bool_exp   (rule 235)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 263
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    member_in_exp  ->  POINTERNULL .   (rule 176)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 256)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 257)

    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269

    NE  	[reduce using rule 176 (member_in_exp)]
    EQ  	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 124

<<<<<<< HEAD
    strliteral  ->  STRLITERAL .   (rule 320)
=======
    prime_bool_exp  ->  MY_TRUE .   (rule 247)

    $default	reduce using rule 247 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 320 (strliteral)



<<<<<<< HEAD
state 125
=======
    prime_bool_exp  ->  MY_FALSE .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 239)
    prime_bool_exp  ->  ari_exp .   (rule 242)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 252)

    NE  	shift, and go to state 264
    EQ  	shift, and go to state 265
    GE  	shift, and go to state 242
    LE  	shift, and go to state 243
    GT  	shift, and go to state 244
    LT  	shift, and go to state 245
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 242 (prime_bool_exp)

<<<<<<< HEAD
    ari_operator	go to state 236
    relation_operator	go to state 266

=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 270
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    bool_exp	go to state 272
    prime_bool_exp	go to state 134
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 126

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 344)

    THEN	shift, and go to state 267
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 127

    bool_exp  ->  prime_bool_exp .   (rule 234)

    $default	reduce using rule 234 (bool_exp)

<<<<<<< HEAD


state 128

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 245)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 246)

    NE  	shift, and go to state 270
    EQ  	shift, and go to state 271



state 129

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 42)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 272
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 130

    struct_identifier  ->  STRUCT ID .   (rule 73)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    $default	reduce using rule 73 (struct_identifier)

    option_identifier_array_declaration	go to state 273
    identifier	go to state 188
=======
    bool_exp  ->  NEGATION . bool_exp   (rule 242)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 273
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 131

<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 274
    identifier	go to state 188
=======
    strliteral  ->  STRLITERAL .   (rule 327)

    $default	reduce using rule 327 (strliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 132

<<<<<<< HEAD
    struct_identifier  ->  UNION ID .   (rule 74)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 275
    identifier	go to state 188
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275
    GE  	shift, and go to state 251
    LE  	shift, and go to state 252
    GT  	shift, and go to state 253
    LT  	shift, and go to state 254
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 245
    relation_operator	go to state 276
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 133

<<<<<<< HEAD
    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 276
    identifier	go to state 188
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 357)

    THEN	shift, and go to state 277
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 134

<<<<<<< HEAD
    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)
=======
    bool_exp  ->  prime_bool_exp .   (rule 241)

    $default	reduce using rule 241 (bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 277



<<<<<<< HEAD
state 135

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 278
=======
    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 252)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 253)

    NE  	shift, and go to state 280
    EQ  	shift, and go to state 281
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 136

<<<<<<< HEAD
    identifier  ->  ID .   (rule 318)

    $default	reduce using rule 318 (identifier)
=======
    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 282
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 137

<<<<<<< HEAD
    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 280
=======
    struct_identifier  ->  STRUCT ID .   (rule 80)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 80 (struct_identifier)

    option_identifier_array_declaration	go to state 283
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 138

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 281
=======
    function_define  ->  STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 284
    ID  	shift, and go to state 285

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 139

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 282
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 283
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 287
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 288
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 339 (for_sta_init)

    function	go to state 93
    declaration	go to state 289
    type_define	go to state 167
    ass_statement	go to state 290
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 157
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    for_sta_init	go to state 291
    struct_member_exp	go to state 159
=======
    struct_identifier  ->  UNION ID .   (rule 81)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 81 (struct_identifier)

    option_identifier_array_declaration	go to state 287
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 140

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 335)

    TIMES	shift, and go to state 292
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 90)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 288
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 141

<<<<<<< HEAD
    bool_par  ->  error . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 293
=======
    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 289
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 142

<<<<<<< HEAD
    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 316)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 294
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 290
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 143

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par . statement_bpar   (rule 334)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 297
=======
    identifier  ->  ID .   (rule 325)

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 144

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 298
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 292

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 347)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 348)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 303
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======


state 145

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 293


<<<<<<< HEAD
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 159)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 344)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 310
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======

state 146

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 294
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 295
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 296
    VOIDDECLARATION	shift, and go to state 297
    FLOATDECLARATION	shift, and go to state 298
    OPEN_PAR	shift, and go to state 299
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 300
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 346 (for_sta_init)

    function	go to state 98
    declaration	go to state 301
    type_define	go to state 175
    ass_statement	go to state 302
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 164
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    for_sta_init	go to state 303
    struct_member_exp	go to state 166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 147

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 146
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 311
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 312
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 313
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 314
    OPEN_PAR	shift, and go to state 147
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 315
    SIGNED	shift, and go to state 316
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 51
    NEGATION	shift, and go to state 149
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 288
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    statement	go to state 150
    function	go to state 151
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 157
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 317
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 159
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 342)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    TIMES	shift, and go to state 304
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 318
    ID  	shift, and go to state 319

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 320
=======
state 148

    bool_par  ->  error . CLOSE_PAR   (rule 324)

    CLOSE_PAR	shift, and go to state 305
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 149

<<<<<<< HEAD
    imply_pre  ->  NEGATION . imply_pre   (rule 330)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 321
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 322
    struct_member_exp	go to state 105
=======
    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 323)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 306
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 150

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 341)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 309



state 151

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 310
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 152

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 323
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 360)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 361)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 315
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 153

<<<<<<< HEAD
    statement  ->  function .   (rule 62)
    member_in_exp  ->  function .   (rule 174)

    CLOSE_PAR	reduce using rule 62 (statement)
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    CHOP	reduce using rule 62 (statement)
    OR  	reduce using rule 62 (statement)
    OR  	[reduce using rule 174 (member_in_exp)]
    PARALLEL	reduce using rule 62 (statement)
    AND 	reduce using rule 62 (statement)
    AND 	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)
=======
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 357)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 322
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 154

<<<<<<< HEAD
    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 324
    ASS_P	shift, and go to state 196
    ASS_N	shift, and go to state 197

    assign_operator	go to state 198
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 340)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 153
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 323
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 324
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 297
    FLOATDECLARATION	shift, and go to state 326
    OPEN_PAR	shift, and go to state 154
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 327
    SIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 156
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 300
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    statement	go to state 157
    function_define	go to state 61
    function	go to state 158
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 164
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 329
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 155

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 172 (member_in_exp)
=======
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 330
    ID  	shift, and go to state 331

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 332
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 156

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 173 (member_in_exp)
=======
    imply_pre  ->  NEGATION . imply_pre   (rule 337)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 333
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 334
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 157

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 177)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 327

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 65)

    CLOSE_PAR	shift, and go to state 335
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 158

<<<<<<< HEAD
    imply_pre  ->  prime_bool_exp .   (rule 329)

    $default	reduce using rule 329 (imply_pre)
=======
    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 181)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 181 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 110)
    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    ASS_P	reduce using rule 110 (ass_left)
    ASS_N	reduce using rule 110 (ass_left)
    $default	reduce using rule 171 (member_in_exp)
=======
state 159

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 116)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 336
    ASS_P	shift, and go to state 203
    ASS_N	shift, and go to state 204
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    assign_operator	go to state 205



<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)

    CLOSE_PAR	shift, and go to state 329
    OR  	shift, and go to state 330
    AND 	shift, and go to state 331
=======
state 160
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 119 (ass_left)
    ASS_N	reduce using rule 119 (ass_left)
    $default	reduce using rule 179 (member_in_exp)


<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 111)
    member_in_exp  ->  struct_member_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 179 (member_in_exp)
=======

state 161
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 120 (ass_left)
    ASS_N	reduce using rule 120 (ass_left)
    $default	reduce using rule 180 (member_in_exp)

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 56)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    COMMA	shift, and go to state 333
    CLOSE_BPAR	shift, and go to state 334
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    CLOSE_BPAR	[reduce using rule 327 (option_projection)]
    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 335
=======


state 162
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    member_in_exp  ->  address_exp .   (rule 184)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 339

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)

<<<<<<< HEAD
    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 336
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 163

    imply_pre  ->  prime_bool_exp .   (rule 336)

    $default	reduce using rule 336 (imply_pre)

<<<<<<< HEAD
    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    OPEN_PAR	shift, and go to state 337
=======


state 164

    ass_left  ->  identifier .   (rule 117)
    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    ASS_P	reduce using rule 117 (ass_left)
    ASS_N	reduce using rule 117 (ass_left)
    $default	reduce using rule 178 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 165

<<<<<<< HEAD
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 338
    STRUCT_TYPE	shift, and go to state 131
=======
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)

    CLOSE_PAR	shift, and go to state 341
    OR  	shift, and go to state 342
    AND 	shift, and go to state 343
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 166

<<<<<<< HEAD
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 339
    STRUCT_TYPE	shift, and go to state 133
=======
    ass_left  ->  struct_member_exp .   (rule 118)
    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    ASS_P	reduce using rule 118 (ass_left)
    ASS_N	reduce using rule 118 (ass_left)
    $default	reduce using rule 186 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 167

<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    MUL 	shift, and go to state 340
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 345
    CLOSE_BPAR	shift, and go to state 346
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    CLOSE_BPAR	[reduce using rule 334 (option_projection)]
    $default	reduce using rule 334 (option_projection)

    option_projection	go to state 347
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 168

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)
=======
    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 77)

    OPEN_PAR	shift, and go to state 348
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 169

<<<<<<< HEAD
    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 195
    identifier	go to state 188
=======
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 349
    STRUCT_TYPE	shift, and go to state 350
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 170

<<<<<<< HEAD
    sign_declaration  ->  SIGNED declaration .   (rule 75)

    $default	reduce using rule 75 (sign_declaration)
=======
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 88)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 90)

    ID  	shift, and go to state 351
    STRUCT_TYPE	shift, and go to state 140
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 171

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 341
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    type_define	go to state 342
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 343
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    sign_type_define	go to state 344
    all_type_define	go to state 345
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    MUL 	reduce using rule 95 (type_define)
    MUL 	[reduce using rule 266 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 266 (sign_type_define)]
    $default	reduce using rule 95 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 172

<<<<<<< HEAD
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)
=======
    type_define  ->  CHARDECLARATION .   (rule 97)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    MUL 	reduce using rule 97 (type_define)
    MUL 	[reduce using rule 267 (sign_type_define)]
    ID  	reduce using rule 97 (type_define)
    ID  	[reduce using rule 267 (sign_type_define)]
    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 173

<<<<<<< HEAD
    point_exp  ->  MUL array .   (rule 151)

    $default	reduce using rule 151 (point_exp)
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    MUL 	shift, and go to state 352
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 174

    sign_declaration  ->  UNSIGNED declaration .   (rule 83)

<<<<<<< HEAD
    point_exp  ->  MUL point_exp .   (rule 150)

    $default	reduce using rule 150 (point_exp)
=======
    $default	reduce using rule 83 (sign_declaration)


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 175

    declaration  ->  type_define . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

<<<<<<< HEAD
    point_exp  ->  MUL identifier .   (rule 149)

    $default	reduce using rule 149 (point_exp)
=======
    option_identifier_array_declaration	go to state 202
    identifier	go to state 196

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 176

    sign_declaration  ->  SIGNED declaration .   (rule 82)

<<<<<<< HEAD
    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 39)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 346
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 347
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 348
    point_exp	go to state 349
    address_exp	go to state 350
    identifier	go to state 351
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 352
=======
    $default	reduce using rule 82 (sign_declaration)



state 177

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 353
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    type_define	go to state 354
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 355
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    sign_type_define	go to state 73
    all_type_define	go to state 356
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 178

<<<<<<< HEAD
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 353
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 176
    leftaddrshift	go to state 68
    array	go to state 177
    point_exp	go to state 70
    identifier	go to state 71
    struct_member_exp	go to state 78
=======
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 325)

    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 179

<<<<<<< HEAD
    ass_left  ->  NEXT ass_left .   (rule 115)

    $default	reduce using rule 115 (ass_left)
=======
    point_exp  ->  MUL array .   (rule 158)

    $default	reduce using rule 158 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 180

<<<<<<< HEAD
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    IMPLY	shift, and go to state 201

    $default	reduce using rule 112 (ass_left)
=======
    point_exp  ->  MUL point_exp .   (rule 157)

    $default	reduce using rule 157 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 181

<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 47)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 354
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    point_exp  ->  MUL identifier .   (rule 156)

    $default	reduce using rule 156 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 182

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 351)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 352)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 353)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 354)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 355)

    OPEN_PAR	shift, and go to state 355
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 356
    point_exp	go to state 228
    identifier	go to state 357
    struct_member_exp	go to state 358
=======
    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 358
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 359
    point_exp	go to state 360
    address_exp	go to state 361
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 362
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 363
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 183

<<<<<<< HEAD
    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 52)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 359
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    ass_left  ->  NEXT . ass_left   (rule 122)

    OPEN_PAR	shift, and go to state 364
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 184
    leftaddrshift	go to state 70
    array	go to state 185
    point_exp	go to state 72
    identifier	go to state 75
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 184

<<<<<<< HEAD
    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 40)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 360
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    ass_left  ->  NEXT ass_left .   (rule 122)

    $default	reduce using rule 122 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 185

<<<<<<< HEAD
    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 41)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 361
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78


=======
    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    IMPLY	shift, and go to state 208

    $default	reduce using rule 119 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 183

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

<<<<<<< HEAD
    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 365
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 186

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 365
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 187

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 366
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105


=======
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 367)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 368)

    OPEN_PAR	shift, and go to state 366
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 367
    point_exp	go to state 237
    identifier	go to state 368
    struct_member_exp	go to state 369
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 185

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188
=======
state 188

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 370
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 189

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 318)

    ARRAY	shift, and go to state 368
    OPEN_MPAR	shift, and go to state 369

    $default	reduce using rule 318 (identifier)
=======
    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 371
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 190

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)
=======
    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 372
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 191

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 94)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 96)
=======
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 376
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 370
    ASS_P	shift, and go to state 371

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 372

=======
state 192

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 377
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 189

<<<<<<< HEAD
    statement  ->  statement CHOP . statement   (rule 32)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 373
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 190
=======
state 193

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    statement  ->  statement OR . statement   (rule 31)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 374
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78

<<<<<<< HEAD


state 191

    statement  ->  statement PARALLEL . statement   (rule 53)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 375
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
state 194

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 195

<<<<<<< HEAD
    statement  ->  statement AND . statement   (rule 30)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 376
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 196

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 72)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    STRUCT_TYPE	shift, and go to state 58

    option_struct_declaration	go to state 377
    sign_declaration	go to state 378
    declaration	go to state 64
    type_define	go to state 167
=======
    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 382

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 383
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 197

    statement  ->  type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 318)

<<<<<<< HEAD
    ARRAY	shift, and go to state 368
    OPEN_PAR	shift, and go to state 379
    OPEN_MPAR	shift, and go to state 369

    $default	reduce using rule 318 (identifier)
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 384
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 198

    declaration  ->  type_define option_identifier_array_declaration .   (rule 78)

<<<<<<< HEAD
    $default	reduce using rule 78 (declaration)
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 385
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 199

<<<<<<< HEAD
    assign_operator  ->  ASS_P .   (rule 130)

    $default	reduce using rule 130 (assign_operator)
=======
    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 386
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 200

    assign_operator  ->  ASS_N .   (rule 131)

<<<<<<< HEAD
    $default	reduce using rule 131 (assign_operator)
=======
    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 387
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 201

<<<<<<< HEAD
    ass_statement  ->  ass_left assign_operator . ass_right   (rule 109)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 380
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 79)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    UNSIGNED	shift, and go to state 388
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 389
    sign_declaration	go to state 390
    declaration	go to state 66
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 202

<<<<<<< HEAD
    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 363)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 382
    identifier	go to state 383
=======
    declaration  ->  type_define option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 203

    assign_operator  ->  ASS_P .   (rule 137)

<<<<<<< HEAD
    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 384
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    $default	reduce using rule 137 (assign_operator)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 204

    assign_operator  ->  ASS_N .   (rule 138)

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 370)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 385
    identifier	go to state 386
=======
    $default	reduce using rule 138 (assign_operator)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 205

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 116)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 391
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 364)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 387
    identifier	go to state 388
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 206

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 374)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 389
    identifier	go to state 390
=======
    array	go to state 393
    identifier	go to state 394
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 207

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier DOT . function   (rule 372)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 391
    array	go to state 392
    identifier	go to state 393
=======
    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 78)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 395
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 208

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 383)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier IMPLY . function   (rule 373)
=======
    array	go to state 396
    identifier	go to state 397
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 394
    array	go to state 395
    identifier	go to state 396

<<<<<<< HEAD


state 206

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 397
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 209

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 377)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 398
    identifier	go to state 399
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 210

<<<<<<< HEAD
    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)
=======
    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 387)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 400
    identifier	go to state 401
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 211

<<<<<<< HEAD
    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 398
=======
    function_define  ->  all_type_define MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  all_type_define MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    MUL 	shift, and go to state 402
    ID  	shift, and go to state 403

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 212

    function_define  ->  all_type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 399
=======
    OPEN_PAR	shift, and go to state 404


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 213

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier DOT . function   (rule 385)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 405
    array	go to state 406
    identifier	go to state 407

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 159)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    THEN	shift, and go to state 400
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269
=======


state 214
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier IMPLY . function   (rule 386)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 408
    array	go to state 409
    identifier	go to state 410



state 215

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 401
=======
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 411
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 216

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 403



state 217

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 405
=======
    complexProposition	go to state 412
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 218

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    MUL 	shift, and go to state 406
=======
    CLOSE_BPAR	shift, and go to state 413
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 219

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408
=======
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    THEN	shift, and go to state 414
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 220

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    STRUCT_TYPE	shift, and go to state 415
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 221

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 413
    CHARDECLARATION	shift, and go to state 414
=======
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 417
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 222

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)

    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 419
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 223

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 417
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 420
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 224

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 422
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 225

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 226

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 418
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 227

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 177)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 419

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    INTDECLARATION	shift, and go to state 429
    CHARDECLARATION	shift, and go to state 430
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 228

<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    MUL 	shift, and go to state 431
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 229

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 230

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 420
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 421
    point_exp	go to state 422
    address_exp	go to state 423
    identifier	go to state 424
    struct_member_exp	go to state 425
=======
    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 231

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)

<<<<<<< HEAD
    address_exp  ->  ADDRESS array .   (rule 206)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199

    DOT 	[reduce using rule 206 (address_exp)]
    $default	reduce using rule 206 (address_exp)
=======
    CLOSE_PAR	shift, and go to state 432
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 232

    member_in_exp  ->  address_exp .   (rule 184)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

<<<<<<< HEAD
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 203
=======
    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 233

    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

<<<<<<< HEAD
    address_exp  ->  ADDRESS address_exp .   (rule 208)

    $default	reduce using rule 208 (address_exp)
=======
    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 234

    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

<<<<<<< HEAD
    address_exp  ->  ADDRESS identifier .   (rule 205)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204

    DOT 	[reduce using rule 205 (address_exp)]
    $default	reduce using rule 205 (address_exp)



state 231

    address_exp  ->  ADDRESS struct_member_exp .   (rule 207)

    $default	reduce using rule 207 (address_exp)



state 232

    member_in_exp  ->  SUB member_in_exp .   (rule 167)

    $default	reduce using rule 167 (member_in_exp)



state 233

    member_in_exp  ->  BNE member_in_exp .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 234

    ari_operator  ->  ADD .   (rule 188)

    $default	reduce using rule 188 (ari_operator)
=======
    CLOSE_PAR	shift, and go to state 344

    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 235

<<<<<<< HEAD
    ari_operator  ->  SUB .   (rule 189)

    $default	reduce using rule 189 (ari_operator)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 434
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 435
    point_exp	go to state 436
    address_exp	go to state 437
    identifier	go to state 438
    struct_member_exp	go to state 439
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 236

<<<<<<< HEAD
    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 158)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    simple_ari_exp	go to state 426
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    address_exp  ->  ADDRESS array .   (rule 213)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206

    DOT 	[reduce using rule 213 (address_exp)]
    $default	reduce using rule 213 (address_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 237

<<<<<<< HEAD
    bi_operator  ->  INTER_OR .   (rule 186)

    $default	reduce using rule 186 (bi_operator)
=======
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 238

<<<<<<< HEAD
    bi_operator  ->  CON .   (rule 187)

    $default	reduce using rule 187 (bi_operator)
=======
    address_exp  ->  ADDRESS address_exp .   (rule 215)

    $default	reduce using rule 215 (address_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 239

<<<<<<< HEAD
    bi_operator  ->  ADDRESS .   (rule 185)

    $default	reduce using rule 185 (bi_operator)
=======
    address_exp  ->  ADDRESS identifier .   (rule 212)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213

    DOT 	[reduce using rule 212 (address_exp)]
    $default	reduce using rule 212 (address_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 240

<<<<<<< HEAD
    relation_operator  ->  NE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)
=======
    address_exp  ->  ADDRESS struct_member_exp .   (rule 214)

    $default	reduce using rule 214 (address_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 241

<<<<<<< HEAD
    relation_operator  ->  EQ .   (rule 258)

    $default	reduce using rule 258 (relation_operator)
=======
    member_in_exp  ->  SUB member_in_exp .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 242

<<<<<<< HEAD
    relation_operator  ->  GE .   (rule 253)

    $default	reduce using rule 253 (relation_operator)
=======
    member_in_exp  ->  BNE member_in_exp .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 243

<<<<<<< HEAD
    relation_operator  ->  LE .   (rule 254)

    $default	reduce using rule 254 (relation_operator)
=======
    ari_operator  ->  ADD .   (rule 195)

    $default	reduce using rule 195 (ari_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 244

<<<<<<< HEAD
    relation_operator  ->  GT .   (rule 256)

    $default	reduce using rule 256 (relation_operator)
=======
    ari_operator  ->  SUB .   (rule 196)

    $default	reduce using rule 196 (ari_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 245

<<<<<<< HEAD
    relation_operator  ->  LT .   (rule 257)

    $default	reduce using rule 257 (relation_operator)
=======
    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 165)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    simple_ari_exp	go to state 440
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 246

<<<<<<< HEAD
    bi_operator  ->  LST .   (rule 183)

    $default	reduce using rule 183 (bi_operator)
=======
    bi_operator  ->  INTER_OR .   (rule 193)

    $default	reduce using rule 193 (bi_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 247

<<<<<<< HEAD
    bi_operator  ->  RST .   (rule 184)

    $default	reduce using rule 184 (bi_operator)
=======
    bi_operator  ->  CON .   (rule 194)

    $default	reduce using rule 194 (bi_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 248

<<<<<<< HEAD
    bi_operator  ->  MUL .   (rule 180)

    $default	reduce using rule 180 (bi_operator)
=======
    bi_operator  ->  ADDRESS .   (rule 192)

    $default	reduce using rule 192 (bi_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 249

<<<<<<< HEAD
    bi_operator  ->  DIV .   (rule 181)

    $default	reduce using rule 181 (bi_operator)
=======
    relation_operator  ->  NE .   (rule 262)

    $default	reduce using rule 262 (relation_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 250

<<<<<<< HEAD
    bi_operator  ->  MOD .   (rule 182)

    $default	reduce using rule 182 (bi_operator)
=======
    relation_operator  ->  EQ .   (rule 265)

    $default	reduce using rule 265 (relation_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 251

<<<<<<< HEAD
    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 165)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    member_in_exp	go to state 427
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    relation_operator  ->  GE .   (rule 260)

    $default	reduce using rule 260 (relation_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 252

<<<<<<< HEAD
    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 157)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 428
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    relation_operator  ->  LE .   (rule 261)

    $default	reduce using rule 261 (relation_operator)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 253

<<<<<<< HEAD
=======
    relation_operator  ->  GT .   (rule 263)

    $default	reduce using rule 263 (relation_operator)



state 254

    relation_operator  ->  LT .   (rule 264)

    $default	reduce using rule 264 (relation_operator)



state 255

    bi_operator  ->  LST .   (rule 190)

    $default	reduce using rule 190 (bi_operator)



state 256

    bi_operator  ->  RST .   (rule 191)

    $default	reduce using rule 191 (bi_operator)



state 257

    bi_operator  ->  MUL .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 258

    bi_operator  ->  DIV .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 259

    bi_operator  ->  MOD .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 260

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 172)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 441
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 261

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 164)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 442
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 262

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118
=======
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 8 (complexProposition)



<<<<<<< HEAD
state 254
=======
state 263
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118
=======
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 6 (complexProposition)



<<<<<<< HEAD
state 255
=======
state 264
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118
=======
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 7 (complexProposition)



<<<<<<< HEAD
state 256
=======
state 265
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118
=======
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 5 (complexProposition)



<<<<<<< HEAD
state 257
=======
state 266
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    CHOPSTAR	shift, and go to state 118
=======
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 4 (complexProposition)



<<<<<<< HEAD
state 258

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 250)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 429
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 259

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 249)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 430
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 260

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 238)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 260
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    bool_exp	go to state 262
    prime_bool_exp	go to state 127
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 261

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 239)
    prime_bool_exp  ->  ari_exp .   (rule 242)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 252)

    CLOSE_PAR	shift, and go to state 418
    NE  	shift, and go to state 264
    EQ  	shift, and go to state 265
    GE  	shift, and go to state 242
    LE  	shift, and go to state 243
    GT  	shift, and go to state 244
    LT  	shift, and go to state 245
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    CLOSE_PAR	[reduce using rule 242 (prime_bool_exp)]
    $default	reduce using rule 242 (prime_bool_exp)

    ari_operator	go to state 236
    relation_operator	go to state 266



state 262

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 238)

    CLOSE_PAR	shift, and go to state 431
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 263

    bool_exp  ->  NEGATION bool_exp .   (rule 235)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)


    $default	reduce using rule 235 (bool_exp)
=======
state 267

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    CLOSE_PAR	shift, and go to state 443
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 268

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 252)
    relation_operator  ->  NE .   (rule 255)
=======
    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 257)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 444
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    POINTERNULL	shift, and go to state 432
    STRLITERAL	shift, and go to state 124
    CHARLITERAL	shift, and go to state 92

    POINTERNULL	[reduce using rule 255 (relation_operator)]
    CHARLITERAL	[reduce using rule 255 (relation_operator)]
    $default	reduce using rule 255 (relation_operator)

<<<<<<< HEAD
    strliteral	go to state 433
    charliteral	go to state 434

=======
state 269

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 256)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 445
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 265

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 251)
    relation_operator  ->  EQ .   (rule 258)

    POINTERNULL	shift, and go to state 435
    STRLITERAL	shift, and go to state 124
    CHARLITERAL	shift, and go to state 92
=======
state 270

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 270
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    bool_exp	go to state 272
    prime_bool_exp	go to state 134
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    POINTERNULL	[reduce using rule 258 (relation_operator)]
    CHARLITERAL	[reduce using rule 258 (relation_operator)]
    $default	reduce using rule 258 (relation_operator)

    strliteral	go to state 436
    charliteral	go to state 437

<<<<<<< HEAD


state 266

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 239)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 438
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 271

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    CLOSE_PAR	shift, and go to state 432
    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275
    GE  	shift, and go to state 251
    LE  	shift, and go to state 252
    GT  	shift, and go to state 253
    LT  	shift, and go to state 254
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    CLOSE_PAR	[reduce using rule 249 (prime_bool_exp)]
    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 245
    relation_operator	go to state 276



state 272
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 245)

<<<<<<< HEAD

state 267

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 344)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 439


=======
    CLOSE_PAR	shift, and go to state 446
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 273

    bool_exp  ->  NEGATION bool_exp .   (rule 242)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)


    $default	reduce using rule 242 (bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 268

<<<<<<< HEAD
    bool_exp  ->  bool_exp OR . bool_exp   (rule 237)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 440
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======

state 274
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 259)
    relation_operator  ->  NE .   (rule 262)

<<<<<<< HEAD

state 269

    bool_exp  ->  bool_exp AND . bool_exp   (rule 236)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 441
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    POINTERNULL	shift, and go to state 447
    STRLITERAL	shift, and go to state 131
    CHARLITERAL	shift, and go to state 97

    POINTERNULL	[reduce using rule 262 (relation_operator)]
    CHARLITERAL	[reduce using rule 262 (relation_operator)]
    $default	reduce using rule 262 (relation_operator)

    strliteral	go to state 448
    charliteral	go to state 449

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 275

<<<<<<< HEAD
state 270

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 246)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 442
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 271

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 245)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 443
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 258)
    relation_operator  ->  EQ .   (rule 265)

    POINTERNULL	shift, and go to state 450
    STRLITERAL	shift, and go to state 131
    CHARLITERAL	shift, and go to state 97

    POINTERNULL	[reduce using rule 265 (relation_operator)]
    CHARLITERAL	[reduce using rule 265 (relation_operator)]
    $default	reduce using rule 265 (relation_operator)

    strliteral	go to state 451
    charliteral	go to state 452


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 276

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 246)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 453
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 42)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    CLOSE_PAR	shift, and go to state 444
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269
=======

state 277
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 357)

<<<<<<< HEAD

state 273

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)
=======
    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 454


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 278

    bool_exp  ->  bool_exp OR . bool_exp   (rule 244)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 455
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 279

    bool_exp  ->  bool_exp AND . bool_exp   (rule 243)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 456
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 280

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 253)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 457
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 281

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 252)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 458
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 449
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 282

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    CLOSE_PAR	shift, and go to state 459
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)

    CLOSE_PAR	shift, and go to state 328
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 283

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . error   (rule 305)

    error	shift, and go to state 450
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 454
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 284

    function_define  ->  STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 460
    ID  	shift, and go to state 461

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COLON	shift, and go to state 455
=======
    option_identifier_array_declaration	go to state 378
    identifier	go to state 196

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 285

    function_define  ->  STRUCT STRUCT_TYPE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    COMMA	shift, and go to state 456

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 457
=======
    ARRAY	shift, and go to state 379
    OPEN_PAR	shift, and go to state 462
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 286

<<<<<<< HEAD
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    ID  	shift, and go to state 338
    STRUCT_TYPE	shift, and go to state 458
=======
    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 89)

    $default	reduce using rule 89 (declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 287

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 288

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 90)

    $default	reduce using rule 90 (declaration)



state 289

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 403

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 467
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 290

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 405

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)

    CLOSE_PAR	shift, and go to state 340
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 291

<<<<<<< HEAD
    type_define  ->  VOIDDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
=======
    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 310)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 311)
    inner_option_define_identifier  ->  COMMA . error   (rule 312)

    error	shift, and go to state 468
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 469
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 470
    STRUCT_TYPE	shift, and go to state 471

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 472
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    MUL 	shift, and go to state 406

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)

<<<<<<< HEAD


state 286
=======
state 292

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COLON	shift, and go to state 473
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    type_define  ->  FLOATDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408

<<<<<<< HEAD
    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)
=======
state 293
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


<<<<<<< HEAD

state 287

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 459
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 157
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 159
=======
    COMMA	shift, and go to state 474

    $default	reduce using rule 332 (option_frame_identifier)

    option_frame_identifier	go to state 475
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 294

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 461
    ID  	shift, and go to state 186
=======
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 349
    STRUCT_TYPE	shift, and go to state 476
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_identifier_array_declaration	go to state 187
    identifier	go to state 188


<<<<<<< HEAD

state 289

    for_sta_init  ->  declaration .   (rule 338)

    $default	reduce using rule 338 (for_sta_init)
=======
state 295

    type_define  ->  INTDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 417

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 296

<<<<<<< HEAD
    for_sta_init  ->  ass_statement .   (rule 337)

    $default	reduce using rule 337 (for_sta_init)
=======
    type_define  ->  CHARDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 419

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 297

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 462
=======
    type_define  ->  VOIDDECLARATION .   (rule 99)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 420

    MUL 	[reduce using rule 99 (type_define)]
    $default	reduce using rule 99 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 298

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 335)

    DO  	shift, and go to state 463
=======
    type_define  ->  FLOATDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 422

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 299

<<<<<<< HEAD
    bool_par  ->  error CLOSE_PAR .   (rule 317)
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 477
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 164
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 317 (bool_par)


<<<<<<< HEAD

state 294

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 464
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269
=======
state 300

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 479
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 195
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 301

<<<<<<< HEAD
    statement_bpar  ->  error . CLOSE_BPAR   (rule 315)

    CLOSE_BPAR	shift, and go to state 465
=======
    for_sta_init  ->  declaration .   (rule 345)

    $default	reduce using rule 345 (for_sta_init)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 302

<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 314)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 466
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    for_sta_init  ->  ass_statement .   (rule 344)

    $default	reduce using rule 344 (for_sta_init)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 303

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 334)

    $default	reduce using rule 334 (while_statement)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    COMMA	shift, and go to state 480
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 304

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_BPAR	shift, and go to state 467
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 342)

    DO  	shift, and go to state 481
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 305

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 468
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 469
    rightaddrshift	go to state 304
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 470
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 471
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    strliteral	go to state 472
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    bool_par  ->  error CLOSE_PAR .   (rule 324)

    $default	reduce using rule 324 (bool_par)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 306

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 198)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 199)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 473
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 474
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 475
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 476
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 323)

    CLOSE_PAR	shift, and go to state 482
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 307

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 194)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 195)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 196)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 473
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 477
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 478
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 479
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    statement_bpar  ->  error . CLOSE_BPAR   (rule 322)

    CLOSE_BPAR	shift, and go to state 483
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 308

<<<<<<< HEAD
    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 138)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 480
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 173
=======
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 321)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 484
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 309

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 347)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 348)

    COMMA	shift, and go to state 481
    CLOSE_PAR	shift, and go to state 482

    CLOSE_PAR	[reduce using rule 349 (option_output)]
    $default	reduce using rule 349 (option_output)

    option_output	go to state 483
=======
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 341)

    $default	reduce using rule 341 (while_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 310

    ass_right  ->  rightaddrshift .   (rule 137)

<<<<<<< HEAD
    $default	reduce using rule 137 (ass_right)
=======
    CLOSE_BPAR	shift, and go to state 485
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 311

<<<<<<< HEAD
    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 236
=======
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 486
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 487
    rightaddrshift	go to state 316
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 488
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 489
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    strliteral	go to state 490
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 312

<<<<<<< HEAD
    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    CON 	shift, and go to state 484

    $default	reduce using rule 133 (ass_right)
=======
    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 204)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 205)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 206)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 491
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 492
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 493
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 494
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 313

<<<<<<< HEAD
    array_exp  ->  option_list_value .   (rule 191)

    $default	reduce using rule 191 (array_exp)
=======
    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 201)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 202)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 203)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 491
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 495
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 496
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 497
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 314

<<<<<<< HEAD
    array_exp  ->  option_struct_list_value .   (rule 192)

    $default	reduce using rule 192 (array_exp)
=======
    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 145)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 498
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 181
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 315

<<<<<<< HEAD
    ass_right  ->  strliteral .   (rule 134)

    $default	reduce using rule 134 (ass_right)
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 360)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 361)

    COMMA	shift, and go to state 499
    CLOSE_PAR	shift, and go to state 500

    CLOSE_PAR	[reduce using rule 362 (option_output)]
    $default	reduce using rule 362 (option_output)

    option_output	go to state 501
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 316

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 159)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 344)

    THEN	shift, and go to state 485
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269
=======
    ass_right  ->  rightaddrshift .   (rule 144)

    $default	reduce using rule 144 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 317

<<<<<<< HEAD
    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    ID  	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 458
=======
    ass_right  ->  ari_exp .   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 139 (ass_right)

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 318

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 486

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)
=======
    ass_right  ->  array_exp .   (rule 140)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    CON 	shift, and go to state 502

    $default	reduce using rule 140 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 319

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 487

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
=======
    array_exp  ->  option_list_value .   (rule 198)

    $default	reduce using rule 198 (array_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 320

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 488
=======
    array_exp  ->  option_struct_list_value .   (rule 199)

    $default	reduce using rule 199 (array_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)


<<<<<<< HEAD

state 315

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 489
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 490
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 166
    type_define	go to state 167
=======
state 321

    ass_right  ->  strliteral .   (rule 141)

    $default	reduce using rule 141 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 322

<<<<<<< HEAD
    sign_declaration  ->  SIGNED . declaration   (rule 75)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 491
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 492
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 168
    type_define	go to state 167
=======
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 357)

    THEN	shift, and go to state 503
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 323

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 493
    OR  	shift, and go to state 330
    AND 	shift, and go to state 331
=======
    function_define  ->  STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    struct_identifier  ->  STRUCT . ID   (rule 80)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 504
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 324

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 494
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 505

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 325

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 495

    $default	reduce using rule 318 (identifier)
=======
    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 506

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 326

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 496

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)
=======
    type_define  ->  FLOATDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 507

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 327

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 497
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 498
    struct_member_exp	go to state 225
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 508
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 509
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 328

<<<<<<< HEAD
    imply_pre  ->  NEGATION imply_pre .   (rule 330)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 330 (imply_pre)
=======
    sign_declaration  ->  SIGNED . declaration   (rule 82)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 510
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 511
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 176
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 329

<<<<<<< HEAD
    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)
=======
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 340)

    CLOSE_PAR	shift, and go to state 512
    OR  	shift, and go to state 342
    AND 	shift, and go to state 343
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 330

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (ass_left)
=======
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 513
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 331

<<<<<<< HEAD
    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (array)
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 325)

    OPEN_MPAR	shift, and go to state 514

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 332

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 155)

    OPEN_MPAR	shift, and go to state 499

    $default	reduce using rule 155 (point_exp)
=======
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    point_exp  ->  MUL identifier .   (rule 156)

    CLOSE_PAR	shift, and go to state 515

    CLOSE_PAR	[reduce using rule 156 (point_exp)]
    $default	reduce using rule 156 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 333

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 371)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 340)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 516
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 517
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    IMPLY	shift, and go to state 500


<<<<<<< HEAD

state 328
=======
state 334

    imply_pre  ->  NEGATION imply_pre .   (rule 337)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 319)

<<<<<<< HEAD
    $default	reduce using rule 319 (identifier)
=======
    $default	reduce using rule 337 (imply_pre)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 335

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)

    IMPLY	shift, and go to state 501
=======
    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 65)

    $default	reduce using rule 65 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 336

<<<<<<< HEAD
    imply_pre  ->  imply_pre OR . imply_pre   (rule 332)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 321
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 502
    struct_member_exp	go to state 105
=======
    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 121)

    $default	reduce using rule 121 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 337

<<<<<<< HEAD
    imply_pre  ->  imply_pre AND . imply_pre   (rule 331)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 321
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 503
    struct_member_exp	go to state 105
=======
    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 152)

    $default	reduce using rule 152 (array)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 338

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)
=======
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 162)

    OPEN_MPAR	shift, and go to state 518

    $default	reduce using rule 162 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 339

<<<<<<< HEAD
    option_projection  ->  COMMA . statement option_projection   (rule 328)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 504
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 384)

    IMPLY	shift, and go to state 519
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 340

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 505
=======
    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 326)

    $default	reduce using rule 326 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 341

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 56)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 506
=======
    IMPLY	shift, and go to state 520
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 342

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 507
=======
    imply_pre  ->  imply_pre OR . imply_pre   (rule 339)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 333
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 521
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 343

<<<<<<< HEAD
    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 508
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    imply_pre  ->  imply_pre AND . imply_pre   (rule 338)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 333
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 522
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 344

<<<<<<< HEAD
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 273
    identifier	go to state 188
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 388)

    $default	reduce using rule 388 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 345

<<<<<<< HEAD
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 275
    identifier	go to state 188
=======
    option_projection  ->  COMMA . statement option_projection   (rule 335)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 523
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 346

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 509
    ID  	shift, and go to state 510

    identifier	go to state 511
=======
    PROJECTION	shift, and go to state 524
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 347

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 259)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 260)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 512
    CHARDECLARATION	shift, and go to state 513



state 342

    all_type_define  ->  type_define .   (rule 262)

    $default	reduce using rule 262 (all_type_define)

=======
    CLOSE_BPAR	shift, and go to state 525
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 343

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    CLOSE_PAR	shift, and go to state 514
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
state 348

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 77)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 526
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 349

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 87)

<<<<<<< HEAD
    all_type_define  ->  sign_type_define .   (rule 261)

    $default	reduce using rule 261 (all_type_define)
=======
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 283
    identifier	go to state 196

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 350

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 153)

    MUL 	shift, and go to state 515
=======
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 351

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 88)

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 146
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 516
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 517
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 518
    OPEN_PAR	shift, and go to state 147
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 519
    SIGNED	shift, and go to state 49
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 51
    NEGATION	shift, and go to state 149
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 58
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    statement	go to state 150
    function	go to state 151
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 157
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 158
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 159
=======
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 287
    identifier	go to state 196

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 352

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 39)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 520
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 527
    ID  	shift, and go to state 528

    identifier	go to state 529
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 353

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)
=======
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    INTDECLARATION	shift, and go to state 530
    CHARDECLARATION	shift, and go to state 531
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 354

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)
=======
    all_type_define  ->  type_define .   (rule 269)

    $default	reduce using rule 269 (all_type_define)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 355

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 161)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 327
=======
    CLOSE_PAR	shift, and go to state 532
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 356

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 110)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    $default	reduce using rule 110 (ass_left)
=======
    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 160)

    MUL 	shift, and go to state 533
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 357

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 111)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 153
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 534
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 535
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 536
    OPEN_PAR	shift, and go to state 154
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 537
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 156
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    statement	go to state 157
    function_define	go to state 61
    function	go to state 158
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 164
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 165
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)

<<<<<<< HEAD
=======
state 358
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


<<<<<<< HEAD
state 353

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 521
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 522
    point_exp	go to state 349
    address_exp	go to state 350
    identifier	go to state 351
    struct_member_exp	go to state 352

=======
    CLOSE_PAR	shift, and go to state 538
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 47)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    CLOSE_PAR	shift, and go to state 523
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
state 359

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    $default	reduce using rule 119 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 360

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 420
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 421
    point_exp	go to state 422
    address_exp	go to state 350
    identifier	go to state 424
    struct_member_exp	go to state 425
=======
    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    $default	reduce using rule 120 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 361

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 353)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 354)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    COMMA	shift, and go to state 524
    CLOSE_PAR	shift, and go to state 525
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 356 (option_input)]
    $default	reduce using rule 356 (option_input)

    option_input	go to state 526
=======
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 339
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 362

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 351)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 352)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    COMMA	shift, and go to state 524
    CLOSE_PAR	shift, and go to state 527
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 356 (option_input)]
    $default	reduce using rule 356 (option_input)

    option_input	go to state 528
=======
    ass_left  ->  identifier .   (rule 117)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    $default	reduce using rule 117 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 363

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 355)

    CLOSE_PAR	shift, and go to state 529
=======
    ass_left  ->  struct_member_exp .   (rule 118)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    $default	reduce using rule 118 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 364

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 52)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 530
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 539
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 540
    point_exp	go to state 360
    address_exp	go to state 361
    identifier	go to state 362
    struct_member_exp	go to state 363
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 365

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 531
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    CLOSE_PAR	shift, and go to state 541
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 366

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 532
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 434
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 435
    point_exp	go to state 436
    address_exp	go to state 361
    identifier	go to state 438
    struct_member_exp	go to state 439
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 367

<<<<<<< HEAD
    address_exp  ->  ADDRESS . identifier   (rule 205)
    address_exp  ->  ADDRESS . array   (rule 206)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 207)
    address_exp  ->  ADDRESS . address_exp   (rule 208)
    option_function_identifier  ->  ADDRESS . error   (rule 309)

    error	shift, and go to state 533
    OPEN_PAR	shift, and go to state 226
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 227
    point_exp	go to state 228
    address_exp	go to state 229
    identifier	go to state 230
    struct_member_exp	go to state 231
=======
    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 367)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    COMMA	shift, and go to state 542
    CLOSE_PAR	shift, and go to state 543
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 369 (option_input)]
    $default	reduce using rule 369 (option_input)

    option_input	go to state 544
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 368

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 534
    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 365)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    COMMA	shift, and go to state 542
    CLOSE_PAR	shift, and go to state 545
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 369 (option_input)]
    $default	reduce using rule 369 (option_input)

    option_input	go to state 546
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 369

<<<<<<< HEAD
    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 306)

    COMMA	shift, and go to state 535

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 536
=======
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 368)

    CLOSE_PAR	shift, and go to state 547
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 370

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 537
=======
    CLOSE_PAR	shift, and go to state 548
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 371

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

<<<<<<< HEAD
    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 539
    ari_operator	go to state 236
=======
    CLOSE_PAR	shift, and go to state 549
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 372

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 101)

<<<<<<< HEAD
    $default	reduce using rule 101 (option_identifier_array_declaration)
=======
    CLOSE_PAR	shift, and go to state 550
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 373

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)

    ASS_P	shift, and go to state 540
=======
    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)
    option_function_identifier  ->  ADDRESS . error   (rule 316)

    error	shift, and go to state 551
    OPEN_PAR	shift, and go to state 235
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 236
    point_exp	go to state 237
    address_exp	go to state 238
    identifier	go to state 239
    struct_member_exp	go to state 240
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 374

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 541
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 314)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 552
    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 375

<<<<<<< HEAD
    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 102)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 103)

    error	shift, and go to state 542
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 543
    identifier	go to state 188
=======
    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 313)

    COMMA	shift, and go to state 553

    $default	reduce using rule 319 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 554
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 376

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 96)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 544
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)

    CLOSE_PAR	shift, and go to state 555
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 377

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 94)

    $default	reduce using rule 94 (option_identifier_array_declaration)
=======
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 557
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 378

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 32 (statement)
=======
    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 108)

    $default	reduce using rule 108 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 379

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    AND 	shift, and go to state 192

    $default	reduce using rule 31 (statement)
=======
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    ASS_P	shift, and go to state 558
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 380

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  statement PARALLEL statement .   (rule 53)

    AND 	shift, and go to state 192

    $default	reduce using rule 53 (statement)
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 559
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 381

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)


    $default	reduce using rule 30 (statement)
=======
    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 109)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 110)

    error	shift, and go to state 560
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 561
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 382

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 545
=======
    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 103)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 562
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 383

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration .   (rule 65)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 66)

    AND 	shift, and go to state 546

    $default	reduce using rule 65 (option_struct_declaration)
=======
    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 384

    statement  ->  type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447
=======
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 547


<<<<<<< HEAD
=======
state 385
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 380

<<<<<<< HEAD
    ass_statement  ->  ass_left assign_operator ass_right .   (rule 109)
=======
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 109 (ass_statement)



state 386

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 548
    ID  	shift, and go to state 170
=======
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array	go to state 549
    identifier	go to state 278



state 387

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 552



<<<<<<< HEAD
state 383

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 360)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 553



state 384

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 554



state 385

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 555



state 386

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 556



state 387

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 364)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 557



state 388

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 361)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 558
=======
state 388

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 389

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 559
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 79)

    CLOSE_BPAR	shift, and go to state 563
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 390

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 560
=======
    option_struct_declaration  ->  sign_declaration .   (rule 66)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 67)

    AND 	shift, and go to state 564

    $default	reduce using rule 66 (option_struct_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 391

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT function .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)
=======
    ass_statement  ->  ass_left assign_operator ass_right .   (rule 116)

    $default	reduce using rule 116 (ass_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 392

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 362)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 561
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    OPEN_PAR	shift, and go to state 565
    ID  	shift, and go to state 178

    array	go to state 566
    identifier	go to state 290
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 393

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 562
=======
    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 569
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 394

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY function .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)
=======
    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 570
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 395

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 563
=======
    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 78)

    CLOSE_PAR	shift, and go to state 571
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 396

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 564
=======
    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 572
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 397

<<<<<<< HEAD
    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)
=======
    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 573
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 398

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 208
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 565
=======
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 574
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 399

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 566
=======
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 575
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 400

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 159)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 567
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 576


<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 231)

    MUL 	shift, and go to state 568
=======

state 401

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 577


<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 210)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 569
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======

state 402

    function_define  ->  all_type_define MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    ID  	shift, and go to state 578
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 403

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 571
    MUL 	shift, and go to state 572
=======
    function_define  ->  all_type_define MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_PAR	shift, and go to state 579
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 404

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 573
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function_define  ->  all_type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 580
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 405

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 574
    MUL 	shift, and go to state 575
=======
    struct_member_exp  ->  identifier DOT function .   (rule 385)

    $default	reduce using rule 385 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 406

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 581
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 576
    MUL 	shift, and go to state 577



<<<<<<< HEAD
state 407

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 211)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 578
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 582
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 408

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 579
    MUL 	shift, and go to state 580
=======
    struct_member_exp  ->  identifier IMPLY function .   (rule 386)

    $default	reduce using rule 386 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 409

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 581
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 583
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 410

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 582
=======
    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 584
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 411

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 583
=======
    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 412

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 585
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 217
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 585
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 413

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    PROJECTION	shift, and go to state 586



<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589
=======
state 414

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 587
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 415

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)

    CLOSE_PAR	shift, and go to state 590
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    MUL 	shift, and go to state 588
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 416

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 591
=======
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 589
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 417

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 593
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 591
    MUL 	shift, and go to state 592
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 418

<<<<<<< HEAD
    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 219)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 593
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 419

<<<<<<< HEAD
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 371)

    IMPLY	shift, and go to state 500
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 595
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    IMPLY	[reduce using rule 209 (address_exp)]
    $default	reduce using rule 209 (address_exp)



<<<<<<< HEAD
state 420

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 420
    UNSIGNED	shift, and go to state 597
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 421
    point_exp	go to state 422
    address_exp	go to state 423
    identifier	go to state 424
    struct_member_exp	go to state 425
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 596
    MUL 	shift, and go to state 597
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 421

<<<<<<< HEAD
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 598
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 422

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 423

<<<<<<< HEAD
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 419
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 601
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 424

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 602
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 425

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 603
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 426

<<<<<<< HEAD
    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 158)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    bi_operator	go to state 251
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 605
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 427

<<<<<<< HEAD
    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 165)

    $default	reduce using rule 165 (simple_ari_exp)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 607
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 428

<<<<<<< HEAD
    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 157)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ADD 	[reduce using rule 157 (ari_exp)]
    SUB 	[reduce using rule 157 (ari_exp)]
    $default	reduce using rule 157 (ari_exp)

    ari_operator	go to state 236
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 609
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 429

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 250)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 250 (prime_bool_exp)

    ari_operator	go to state 236
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 610
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 430

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 249)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 611
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 236


<<<<<<< HEAD

state 431
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 612
    MUL 	shift, and go to state 613
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 238)

    $default	reduce using rule 238 (bool_exp)


<<<<<<< HEAD

state 432

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)
=======
    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 433

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 244)

    $default	reduce using rule 244 (prime_bool_exp)

=======
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 384)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    IMPLY	shift, and go to state 519

    IMPLY	[reduce using rule 216 (address_exp)]
    $default	reduce using rule 216 (address_exp)

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 252)

    $default	reduce using rule 252 (prime_bool_exp)
=======


state 434

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 434
    UNSIGNED	shift, and go to state 617
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 435
    point_exp	go to state 436
    address_exp	go to state 437
    identifier	go to state 438
    struct_member_exp	go to state 439
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 435

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 247)

    $default	reduce using rule 247 (prime_bool_exp)
=======
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 436

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)
=======
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 437

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 251)

    $default	reduce using rule 251 (prime_bool_exp)

=======
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 433

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 438

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 239)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 239 (prime_bool_exp)

    ari_operator	go to state 236
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 439

<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 344)

    ELSE	shift, and go to state 598

    $default	reduce using rule 346 (option_else_statement)

    option_else_statement	go to state 599
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 440

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 237)

    AND 	shift, and go to state 269

    $default	reduce using rule 237 (bool_exp)
=======
    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 165)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 165 (ari_exp)]
    CON 	[reduce using rule 165 (ari_exp)]
    ADDRESS	[reduce using rule 165 (ari_exp)]
    LST 	[reduce using rule 165 (ari_exp)]
    RST 	[reduce using rule 165 (ari_exp)]
    MUL 	[reduce using rule 165 (ari_exp)]
    DIV 	[reduce using rule 165 (ari_exp)]
    MOD 	[reduce using rule 165 (ari_exp)]
    $default	reduce using rule 165 (ari_exp)

    bi_operator	go to state 260
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 441

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)


    $default	reduce using rule 236 (bool_exp)
=======
    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 172)

    $default	reduce using rule 172 (simple_ari_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 442

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 246)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 236
=======
    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 164)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ADD 	[reduce using rule 164 (ari_exp)]
    SUB 	[reduce using rule 164 (ari_exp)]
    $default	reduce using rule 164 (ari_exp)

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 443

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 245)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 351)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_BPAR	shift, and go to state 618

    ari_operator	go to state 236



state 444

<<<<<<< HEAD
    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 257)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 257 (prime_bool_exp)

    ari_operator	go to state 245


<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    MUL 	shift, and go to state 600
=======

state 445

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 256)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 256 (prime_bool_exp)

    ari_operator	go to state 245


<<<<<<< HEAD
    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 601
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 602
    identifier	go to state 603
=======

state 446

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 245)

    $default	reduce using rule 245 (bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 447

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 604
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 605
    identifier	go to state 606
=======
    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 255)

    $default	reduce using rule 255 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 448

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 607
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 608
    identifier	go to state 609
=======
    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 251)

    $default	reduce using rule 251 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 449

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    CLOSE_PAR	shift, and go to state 610
=======
    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 259)

    $default	reduce using rule 259 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 450

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA error .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)
=======
    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 451

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    MUL 	shift, and go to state 611
=======
    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 250)

    $default	reduce using rule 250 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 452

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136
=======
    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 258)

    $default	reduce using rule 258 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    identifier	go to state 612



<<<<<<< HEAD
state 453

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 295)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 613
    ID  	shift, and go to state 136

    identifier	go to state 614
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 246)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 454

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 615
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 616
    identifier	go to state 617
=======
    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 357)

    ELSE	shift, and go to state 619

    $default	reduce using rule 359 (option_else_statement)

    option_else_statement	go to state 620
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 455

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_BPAR	shift, and go to state 618
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 244)

    AND 	shift, and go to state 279

    $default	reduce using rule 244 (bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 456

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 324)
    option_frame_identifier  ->  COMMA . error   (rule 326)

    error	shift, and go to state 619
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 620
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)


    $default	reduce using rule 243 (bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 457

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    CLOSE_PAR	shift, and go to state 621
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 253)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 253 (prime_bool_exp)

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 458

<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 622
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 274
    identifier	go to state 188
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 252)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 252 (prime_bool_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ari_operator	go to state 245

<<<<<<< HEAD

state 459

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 623
    CHARDECLARATION	shift, and go to state 624
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 625
    OPEN_PAR	shift, and go to state 459
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 626
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 157
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 159
=======


state 459

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 460

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 324
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 621

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 461

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 627
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_PAR	shift, and go to state 622
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 462

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 341 (for_sta_condition)

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 628
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    for_sta_condition	go to state 629
    struct_member_exp	go to state 105
=======
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 623



<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 335)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 630
=======
state 463

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    MUL 	shift, and go to state 624
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 464

<<<<<<< HEAD
    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 316)

    $default	reduce using rule 316 (bool_par)
=======
    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 625
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 626
    identifier	go to state 627
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 465

<<<<<<< HEAD
    statement_bpar  ->  error CLOSE_BPAR .   (rule 315)

    $default	reduce using rule 315 (statement_bpar)
=======
    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 628
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 629
    identifier	go to state 630
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 466

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 314)

    CLOSE_BPAR	shift, and go to state 631
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 631
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 632
    identifier	go to state 633
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 467

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    UNTIL	shift, and go to state 632
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 634
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 468

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 468
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 469
    rightaddrshift	go to state 304
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 470
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 471
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    strliteral	go to state 472
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    inner_option_define_identifier  ->  COMMA error .   (rule 312)

    $default	reduce using rule 312 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 469

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 136)

    CLOSE_PAR	shift, and go to state 633
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    MUL 	shift, and go to state 635
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 470

<<<<<<< HEAD
    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 418
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    CLOSE_PAR	[reduce using rule 132 (ass_right)]
    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 236
=======
    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 301)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 636
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 471

<<<<<<< HEAD
    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 193)

    CLOSE_PAR	shift, and go to state 634
    CON 	shift, and go to state 484

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 302)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 637
    ID  	shift, and go to state 143

    identifier	go to state 638
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 472

<<<<<<< HEAD
    ass_right  ->  strliteral .   (rule 134)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 635
=======
    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 310)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 311)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 639
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 640
    identifier	go to state 641
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)



<<<<<<< HEAD
state 473

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 636
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 637
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 642
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 474

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 197)

    COMMA	shift, and go to state 638
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 236
    inner_option_list_value	go to state 639
=======
    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 331)
    option_frame_identifier  ->  COMMA . error   (rule 333)

    error	shift, and go to state 643
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    identifier	go to state 644



<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 638
    CON 	shift, and go to state 484

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 640
=======
state 475
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 645


<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 198)

    COMMA	shift, and go to state 638

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 641
=======

state 476
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 646
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 194)

    COMMA	shift, and go to state 638
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 236
    inner_option_list_value	go to state 642
=======


state 477

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 647
    CHARDECLARATION	shift, and go to state 648
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 649
    OPEN_PAR	shift, and go to state 477
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 650
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 164
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 478

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 638
    CON 	shift, and go to state 484

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 643
=======
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 336
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 479

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 195)

    COMMA	shift, and go to state 638

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 644
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 612
    MUL 	shift, and go to state 651
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 480

<<<<<<< HEAD
    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 645
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 341
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    type_define	go to state 342
    leftaddrshift	go to state 646
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 343
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    sign_type_define	go to state 344
    all_type_define	go to state 345
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 348 (for_sta_condition)

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 652
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    for_sta_condition	go to state 653
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 481

<<<<<<< HEAD
    option_output  ->  COMMA . ass_right option_output   (rule 350)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 647
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 342)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 654
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 482

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 347)

    $default	reduce using rule 347 (output_statement)
=======
    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 323)

    $default	reduce using rule 323 (bool_par)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 483

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 348)

    CLOSE_PAR	shift, and go to state 648
=======
    statement_bpar  ->  error CLOSE_BPAR .   (rule 322)

    $default	reduce using rule 322 (statement_bpar)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 484

<<<<<<< HEAD
    array_exp  ->  array_exp CON . array_exp   (rule 190)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301

    array_exp	go to state 650
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 321)

    CLOSE_BPAR	shift, and go to state 655
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 485

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 159)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 344)

    error	shift, and go to state 295
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    OPEN_BPAR	shift, and go to state 296
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 567
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    statement_bpar	go to state 439
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 656
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 486

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 651
    MUL 	shift, and go to state 572
=======
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 486
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 487
    rightaddrshift	go to state 316
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 488
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 489
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    strliteral	go to state 490
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 487
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 143)

    CLOSE_PAR	shift, and go to state 657


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 652
    MUL 	shift, and go to state 575
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 488

    ass_right  ->  ari_exp .   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)

    CLOSE_PAR	shift, and go to state 432
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    CLOSE_PAR	[reduce using rule 139 (ass_right)]
    $default	reduce using rule 139 (ass_right)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 653
    MUL 	shift, and go to state 580
=======
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 489

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 654

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)
=======
    ass_right  ->  array_exp .   (rule 140)
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 200)

    CLOSE_PAR	shift, and go to state 658
    CON 	shift, and go to state 502

    CLOSE_PAR	[reduce using rule 140 (ass_right)]
    $default	reduce using rule 140 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 490

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 655

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
=======
    ass_right  ->  strliteral .   (rule 141)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 659

    CLOSE_PAR	[reduce using rule 141 (ass_right)]
    $default	reduce using rule 141 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 491

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)

    CLOSE_PAR	shift, and go to state 590

    $default	reduce using rule 88 (type_define)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 660
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 661
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 492

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 204)

    COMMA	shift, and go to state 662
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 591

    $default	reduce using rule 90 (type_define)
=======
    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 245
    inner_option_list_value	go to state 663
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 493

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    IMPLY	shift, and go to state 501

    $default	reduce using rule 333 (imply_pre)
=======
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 206)

    COMMA	shift, and go to state 662
    CON 	shift, and go to state 502

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 664
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 494

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 656
=======
    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 205)

    COMMA	shift, and go to state 662

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 665
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



<<<<<<< HEAD
state 495

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 657
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 201)

    COMMA	shift, and go to state 662
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 245
    inner_option_list_value	go to state 666


<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    OPEN_PAR	shift, and go to state 658
=======

state 496

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 203)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 662
    CON 	shift, and go to state 502

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 667

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 497
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 498
    struct_member_exp	go to state 225
=======


state 497
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 202)

    COMMA	shift, and go to state 662

    $default	reduce using rule 210 (inner_option_list_value)

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 659
    OR  	shift, and go to state 330
    AND 	shift, and go to state 331
=======
    inner_option_list_value	go to state 668


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 498

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 669
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 353
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    type_define	go to state 354
    leftaddrshift	go to state 670
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 355
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    sign_type_define	go to state 73
    all_type_define	go to state 356
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 660
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======

state 499

    option_output  ->  COMMA . ass_right option_output   (rule 363)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 671
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 500

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 371)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 661
    identifier	go to state 662
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (output_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 501

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 54)

    OPEN_MPAR	shift, and go to state 663
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 361)

    CLOSE_PAR	shift, and go to state 672
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 502

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 332)

    AND 	shift, and go to state 331

    $default	reduce using rule 332 (imply_pre)
=======
    array_exp  ->  array_exp CON . array_exp   (rule 197)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313

    array_exp	go to state 674
    option_list_value	go to state 319
    option_struct_list_value	go to state 320


<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 331 (imply_pre)
=======

state 503

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 357)

    error	shift, and go to state 307
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    OPEN_BPAR	shift, and go to state 308
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 587
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    statement_bpar	go to state 454
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 504

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    option_projection  ->  COMMA statement . option_projection   (rule 328)

    COMMA	shift, and go to state 333
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 664
=======
    function_define  ->  STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 675
    ID  	shift, and go to state 285

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 505

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 665
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 676
    MUL 	shift, and go to state 592
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 506

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 56)

    PROJECTION	shift, and go to state 666
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 677
    MUL 	shift, and go to state 595
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 507

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 667
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 678
    MUL 	shift, and go to state 600
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 508

<<<<<<< HEAD
    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 668
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 679

    MUL 	[reduce using rule 95 (type_define)]
    MUL 	[reduce using rule 266 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 266 (sign_type_define)]
    $default	reduce using rule 95 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 509

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 669
=======
    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 680

    MUL 	[reduce using rule 97 (type_define)]
    MUL 	[reduce using rule 267 (sign_type_define)]
    ID  	reduce using rule 97 (type_define)
    ID  	[reduce using rule 267 (sign_type_define)]
    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 510

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 670

    $default	reduce using rule 318 (identifier)
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 610

    $default	reduce using rule 95 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 511

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 496
=======
    type_define  ->  CHARDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 611

    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 512

<<<<<<< HEAD
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 259)

    $default	reduce using rule 259 (sign_type_define)
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 340)

    IMPLY	shift, and go to state 520

    $default	reduce using rule 340 (imply_pre)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 513

<<<<<<< HEAD
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 260)

    $default	reduce using rule 260 (sign_type_define)
=======
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    point_exp  ->  MUL identifier .   (rule 156)

    CLOSE_PAR	shift, and go to state 681
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 156 (point_exp)]
    $default	reduce using rule 156 (point_exp)



<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)
=======
state 514

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 682
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 515

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 153)

    CLOSE_PAR	shift, and go to state 671
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    OPEN_PAR	shift, and go to state 683
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 516

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 672

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 340)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 516
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 517
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 517

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 673

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 340)

    CLOSE_PAR	shift, and go to state 684
    OR  	shift, and go to state 342
    AND 	shift, and go to state 343
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 518

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 674

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)
=======
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 159)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 685
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 519

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 675
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 676
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 166
    type_define	go to state 167
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 384)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 686
    identifier	go to state 687
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 520

<<<<<<< HEAD
    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 39)

    $default	reduce using rule 39 (statement)
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 688
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 521

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    INTDECLARATION	shift, and go to state 677
    CHARDECLARATION	shift, and go to state 678
    FLOATDECLARATION	shift, and go to state 679
    OPEN_PAR	shift, and go to state 521
    UNSIGNED	shift, and go to state 680
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 522
    point_exp	go to state 349
    address_exp	go to state 423
    identifier	go to state 351
    struct_member_exp	go to state 352
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 339)

    AND 	shift, and go to state 343

    $default	reduce using rule 339 (imply_pre)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 522

<<<<<<< HEAD
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)


    $default	reduce using rule 338 (imply_pre)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



<<<<<<< HEAD
state 523

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 47)

    $default	reduce using rule 47 (statement)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 335)

    COMMA	shift, and go to state 345
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    $default	reduce using rule 334 (option_projection)

    option_projection	go to state 689
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 524

<<<<<<< HEAD
    option_input  ->  COMMA . identifier option_input   (rule 357)
    option_input  ->  COMMA . array option_input   (rule 358)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 681
    identifier	go to state 682
=======
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 690
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 525

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (input_statement)
=======
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 691
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 526

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 354)

    CLOSE_PAR	shift, and go to state 683
=======
    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 77)

    CLOSE_PAR	shift, and go to state 692
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 527

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 351)

    $default	reduce using rule 351 (input_statement)
=======
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 693
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 528

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 352)

    CLOSE_PAR	shift, and go to state 684
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    identifier  ->  ID .   (rule 325)

    OPEN_MPAR	shift, and go to state 694
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 325 (identifier)


<<<<<<< HEAD
state 529

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (input_statement)
=======

state 529

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 515
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 530

<<<<<<< HEAD
    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 52)

    $default	reduce using rule 52 (statement)
=======
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    $default	reduce using rule 266 (sign_type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 531

<<<<<<< HEAD
    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)
=======
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    $default	reduce using rule 267 (sign_type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 532

<<<<<<< HEAD
    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)
=======
    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 161)

    $default	reduce using rule 161 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 533

<<<<<<< HEAD
    option_function_identifier  ->  ADDRESS error .   (rule 309)

    $default	reduce using rule 309 (option_function_identifier)
=======
    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 695
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 534

<<<<<<< HEAD
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 685
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 696

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 535

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 310)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)
    inner_option_function_identifier  ->  COMMA . error   (rule 313)

    error	shift, and go to state 686
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 687
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 688
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 697

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 536

<<<<<<< HEAD
    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)
=======
    type_define  ->  FLOATDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 698

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 537

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (function)
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 699
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 700
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 538

<<<<<<< HEAD
    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 146)
    option_ari_exp  ->  COMMA . error   (rule 147)

    error	shift, and go to state 689
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 690
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 539

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 691
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    INTDECLARATION	shift, and go to state 701
    CHARDECLARATION	shift, and go to state 702
    FLOATDECLARATION	shift, and go to state 703
    OPEN_PAR	shift, and go to state 539
    UNSIGNED	shift, and go to state 704
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 540
    point_exp	go to state 360
    address_exp	go to state 437
    identifier	go to state 362
    struct_member_exp	go to state 363
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 540

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    STRLITERAL	shift, and go to state 124

    array_exp	go to state 692
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    strliteral	go to state 693
=======
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    $default	reduce using rule 119 (ass_left)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 541

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 694
    ari_operator	go to state 236
=======
    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 542

<<<<<<< HEAD
    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)
=======
    option_input  ->  COMMA . identifier option_input   (rule 370)
    option_input  ->  COMMA . array option_input   (rule 371)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 705
    identifier	go to state 706
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 543

<<<<<<< HEAD
    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (inner_option_identifier_array_declaration)
=======
    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 366)

    $default	reduce using rule 366 (input_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 544

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 370

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 695
=======
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 367)

    CLOSE_PAR	shift, and go to state 707
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 545

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (struct_define_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 364)

    $default	reduce using rule 364 (input_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 546

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 66)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    STRUCT_TYPE	shift, and go to state 58
=======
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 365)

    CLOSE_PAR	shift, and go to state 708
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_struct_declaration	go to state 696
    sign_declaration	go to state 378
    declaration	go to state 64
    type_define	go to state 167



<<<<<<< HEAD
state 547

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 697
=======
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 368)

    $default	reduce using rule 368 (input_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 548

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 548
    UNSIGNED	shift, and go to state 597
    ID  	shift, and go to state 170

    array	go to state 549
    identifier	go to state 278
=======
    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 549

<<<<<<< HEAD
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)

    CLOSE_PAR	shift, and go to state 325
=======
    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 550

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 377)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 378)
    option_struct_member_exp  ->  DOT . function   (rule 381)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57
=======
    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    function	go to state 698
    array	go to state 699
    identifier	go to state 700



<<<<<<< HEAD
state 551

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 379)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 380)
    option_struct_member_exp  ->  IMPLY . function   (rule 382)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 701
    array	go to state 702
    identifier	go to state 703
=======
    option_function_identifier  ->  ADDRESS error .   (rule 316)

    $default	reduce using rule 316 (option_function_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 552

<<<<<<< HEAD
    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 363)

    $default	reduce using rule 363 (struct_member_exp)
=======
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 314)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 709
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 553

<<<<<<< HEAD
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 360)

    $default	reduce using rule 360 (struct_member_exp)
=======
    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 317)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 318)
    inner_option_function_identifier  ->  COMMA . error   (rule 320)

    error	shift, and go to state 710
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 711
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 712
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 554

<<<<<<< HEAD
    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)
=======
    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 313)

    $default	reduce using rule 313 (option_function_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 555

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)
=======
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)

    $default	reduce using rule 76 (function)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 556

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)
=======
    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 153)
    option_ari_exp  ->  COMMA . error   (rule 154)

    error	shift, and go to state 713
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 714
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 557

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)
=======
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 715
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 558

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 361)

    $default	reduce using rule 361 (struct_member_exp)
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    STRLITERAL	shift, and go to state 131

    array_exp	go to state 716
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    strliteral	go to state 717
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 559

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 718
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 560

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 368)
=======
    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 110)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 110 (inner_option_identifier_array_declaration)



state 561

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 362)

    $default	reduce using rule 362 (struct_member_exp)
=======
    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 109)

    $default	reduce using rule 109 (inner_option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 562

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 359)

    $default	reduce using rule 359 (struct_member_exp)
=======
    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 719
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 563

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 79)

    $default	reduce using rule 79 (struct_define_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 564

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)
=======
    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    UNSIGNED	shift, and go to state 388
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 720
    sign_declaration	go to state 390
    declaration	go to state 66
    type_define	go to state 175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 565

<<<<<<< HEAD
    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 565
    UNSIGNED	shift, and go to state 617
    ID  	shift, and go to state 178

    array	go to state 566
    identifier	go to state 290
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 566

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 704
=======
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)

    CLOSE_PAR	shift, and go to state 337
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 567

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 159)

    ELSE	shift, and go to state 705
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ELSE	[reduce using rule 163 (option_exp_else_statement)]
    ADD 	[reduce using rule 163 (option_exp_else_statement)]
    SUB 	[reduce using rule 163 (option_exp_else_statement)]
    $default	reduce using rule 163 (option_exp_else_statement)

    option_exp_else_statement	go to state 706
    ari_operator	go to state 236
=======
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 390)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 391)
    option_struct_member_exp  ->  DOT . function   (rule 394)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 721
    array	go to state 722
    identifier	go to state 723
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 568

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 708
=======
    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 392)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 393)
    option_struct_member_exp  ->  IMPLY . function   (rule 395)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 724
    array	go to state 725
    identifier	go to state 726
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 569

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 210)

    $default	reduce using rule 210 (type_cast)
=======
    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 570

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp .   (rule 160)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 161)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 160 (type_cast_alg_exp)]
    CON 	[reduce using rule 160 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 160 (type_cast_alg_exp)]
    LST 	[reduce using rule 160 (type_cast_alg_exp)]
    RST 	[reduce using rule 160 (type_cast_alg_exp)]
    ADD 	[reduce using rule 160 (type_cast_alg_exp)]
    SUB 	[reduce using rule 160 (type_cast_alg_exp)]
    MUL 	[reduce using rule 160 (type_cast_alg_exp)]
    DIV 	[reduce using rule 160 (type_cast_alg_exp)]
    MOD 	[reduce using rule 160 (type_cast_alg_exp)]
    $default	reduce using rule 160 (type_cast_alg_exp)

    bi_operator	go to state 251
    ari_operator	go to state 709
=======
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 571

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 78)

    $default	reduce using rule 78 (function)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 572

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 712
=======
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 573

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)
=======
    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 574

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 575

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 714
=======
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 576

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 715
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 387)

    $default	reduce using rule 387 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 577

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 716
=======
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 578

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 211)
=======
    function_define  ->  all_type_define MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_PAR	shift, and go to state 727
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 211 (type_cast)



<<<<<<< HEAD
state 579

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 717
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function_define  ->  all_type_define MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 728
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 580

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 718
=======
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    CLOSE_PAR	shift, and go to state 729
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 581

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 572
=======
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 582

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 575
=======
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 583

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 580
=======
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 584

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 654
=======
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 585

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 722
=======
    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 586

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 723
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 730
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 587

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 166)

    ELSE	shift, and go to state 731
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ELSE	[reduce using rule 170 (option_exp_else_statement)]
    ADD 	[reduce using rule 170 (option_exp_else_statement)]
    SUB 	[reduce using rule 170 (option_exp_else_statement)]
    $default	reduce using rule 170 (option_exp_else_statement)

    option_exp_else_statement	go to state 732
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 588

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 726
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 734
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 589

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 728
=======
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 590

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 729
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_cast_alg_exp  ->  simple_ari_exp .   (rule 167)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 167 (type_cast_alg_exp)]
    CON 	[reduce using rule 167 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 167 (type_cast_alg_exp)]
    LST 	[reduce using rule 167 (type_cast_alg_exp)]
    RST 	[reduce using rule 167 (type_cast_alg_exp)]
    ADD 	[reduce using rule 167 (type_cast_alg_exp)]
    SUB 	[reduce using rule 167 (type_cast_alg_exp)]
    MUL 	[reduce using rule 167 (type_cast_alg_exp)]
    DIV 	[reduce using rule 167 (type_cast_alg_exp)]
    MOD 	[reduce using rule 167 (type_cast_alg_exp)]
    $default	reduce using rule 167 (type_cast_alg_exp)

    bi_operator	go to state 260
    ari_operator	go to state 735
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 591

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 730
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 592

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 731
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 738
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 593

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 732
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 219)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 219 (type_cast)



<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 733
=======
state 594

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 595

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 734
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 233)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 740



<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 735
=======
state 596

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 741
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 597

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 737
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 742
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 598

<<<<<<< HEAD
    option_else_statement  ->  ELSE . statement_bpar   (rule 345)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 738
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 599

<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 344)

    $default	reduce using rule 344 (if_statement)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 743
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 600

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 739
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 744
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 601

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 740
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 741
    identifier	go to state 742
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 745
    MUL 	shift, and go to state 592
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 602

<<<<<<< HEAD
    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 746
    MUL 	shift, and go to state 595
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 603

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 272)

    ARRAY	shift, and go to state 743
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 744
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 747
    MUL 	shift, and go to state 600
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 604

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 745
    ID  	shift, and go to state 136
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 679
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 746
    identifier	go to state 747


<<<<<<< HEAD

state 605

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 748
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 606

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 268)

    ARRAY	shift, and go to state 748
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 749
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 222)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 749
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 607

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 750
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 750
    MUL 	shift, and go to state 751
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    inner_option_define_identifier	go to state 751
    identifier	go to state 752



<<<<<<< HEAD
state 608

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 264)

    $default	reduce using rule 264 (option_function_parameter_list)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 223)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 752
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 609

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    ARRAY	shift, and go to state 753
    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 754

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 755
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 753
    MUL 	shift, and go to state 754
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 610

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    ASS_P	shift, and go to state 756
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 220)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 755
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 611

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 757
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 221)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 756
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 612

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 758
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 759
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 757
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 613

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 760
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 758
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 614

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 295)

    ARRAY	shift, and go to state 761
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 762
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 759
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 615

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 763
    identifier	go to state 764
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 760
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 616

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 761
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 617

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 765
    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 766

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 767
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    INTDECLARATION	shift, and go to state 762
    CHARDECLARATION	shift, and go to state 763
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 618

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 63)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 768
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 351)

    CASE	shift, and go to state 764
    DEFAULT	shift, and go to state 765

    case_par	go to state 766
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 619

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA error .   (rule 326)

    $default	reduce using rule 326 (option_frame_identifier)
=======
    option_else_statement  ->  ELSE . statement_bpar   (rule 358)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 767
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 620

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 324)

    COMMA	shift, and go to state 456

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 769
=======
    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 357)

    $default	reduce using rule 357 (if_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 621

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    AND 	shift, and go to state 770
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_PAR	shift, and go to state 768
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 622

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 771
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 769
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 623

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 486
=======
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    CLOSE_PAR	shift, and go to state 770
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 624

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 487
=======
    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 771
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 625

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 488
=======
    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 772
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 773
    identifier	go to state 774
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 626

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 772
=======
    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 627

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186
=======
    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 279)

    ARRAY	shift, and go to state 775
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 776
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188



<<<<<<< HEAD
state 628

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    for_sta_condition  ->  bool_exp .   (rule 340)

    OR  	shift, and go to state 268
    AND 	shift, and go to state 269

    $default	reduce using rule 340 (for_sta_condition)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778
    identifier	go to state 779
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 629

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 773
=======
    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 630

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 335)

    $default	reduce using rule 335 (for_statement)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 275)

    ARRAY	shift, and go to state 780
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 781
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 631

<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 314)

    $default	reduce using rule 314 (statement_bpar)
=======
    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 782
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 783
    identifier	go to state 784
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 632

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 774
=======
    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 633

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 136)

    $default	reduce using rule 136 (ass_right)
=======
    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)

    ARRAY	shift, and go to state 785
    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 786

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 787
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 634

<<<<<<< HEAD
    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 193)

    $default	reduce using rule 193 (array_exp)
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 788
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 635

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 775
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 789
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 636

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 636
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 637
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 301)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ARRAY	shift, and go to state 790
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

<<<<<<< HEAD
state 637

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 193)

    CLOSE_PAR	shift, and go to state 634
    CON 	shift, and go to state 484

=======
    inner_option_define_identifier	go to state 791
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



<<<<<<< HEAD
    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 200)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 201)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . error   (rule 204)

    error	shift, and go to state 776
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 473
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 777
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 778
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 779
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 637

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 300)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 792


<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 197)

    CLOSE_BPAR	shift, and go to state 780
=======

state 638
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 793
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 781
=======
    inner_option_define_identifier	go to state 794

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 639

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 310)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 311)

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 198)

    CLOSE_BPAR	shift, and go to state 782
=======
    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    inner_option_define_identifier	go to state 795
    identifier	go to state 796



<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 194)

    CLOSE_MPAR	shift, and go to state 783
=======
state 640

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 297)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 297 (inner_option_define_identifier)



<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 784
=======
state 641

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ARRAY	shift, and go to state 797
    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 798

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 799

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 195)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_MPAR	shift, and go to state 785

state 642

<<<<<<< HEAD

state 645

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 786
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 64)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 800
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 643

    option_frame_identifier  ->  COMMA error .   (rule 333)

    $default	reduce using rule 333 (option_frame_identifier)



state 644

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 331)

    COMMA	shift, and go to state 474

    $default	reduce using rule 332 (option_frame_identifier)

    option_frame_identifier	go to state 801



state 645

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 802
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 646

<<<<<<< HEAD
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 787
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 803
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 647

<<<<<<< HEAD
    option_output  ->  COMMA ass_right . option_output   (rule 350)

    COMMA	shift, and go to state 481

    $default	reduce using rule 349 (option_output)

    option_output	go to state 788
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 505
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 648

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 348)

    $default	reduce using rule 348 (output_statement)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 506
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 649

<<<<<<< HEAD
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301

    array_exp	go to state 637
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 507
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 650

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  array_exp CON array_exp .   (rule 190)

=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 804
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 190 (array_exp)



<<<<<<< HEAD
state 651

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 789
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 791
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 758
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 652

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 792
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 794
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    for_sta_condition  ->  bool_exp .   (rule 347)

    OR  	shift, and go to state 278
    AND 	shift, and go to state 279

    $default	reduce using rule 347 (for_sta_condition)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 653

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 796
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 717
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    COMMA	shift, and go to state 805
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 654

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 797
    MUL 	shift, and go to state 725
=======
    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 342)

    $default	reduce using rule 342 (for_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 655

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 798
    MUL 	shift, and go to state 728
=======
    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 321)

    $default	reduce using rule 321 (statement_bpar)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 656

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 799
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 806
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 657

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 800
    ari_operator	go to state 236
=======
    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 143)

    $default	reduce using rule 143 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 658

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 84)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 801
=======
    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 200)

    $default	reduce using rule 200 (array_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 659

<<<<<<< HEAD
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    $default	reduce using rule 333 (imply_pre)
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    OPEN_PAR	shift, and go to state 807
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 660

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 802
    ari_operator	go to state 236
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 660
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 661
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 661

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 803
=======
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 200)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 658
    CON 	shift, and go to state 502



<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551
=======
state 662

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 207)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 208)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 209)
    inner_option_list_value  ->  COMMA . error   (rule 211)

    error	shift, and go to state 808
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 491
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 809
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 810
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 811
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 804



<<<<<<< HEAD
state 663

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 54)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 805
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 204)

    CLOSE_BPAR	shift, and go to state 812
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 664

<<<<<<< HEAD
    option_projection  ->  COMMA statement option_projection .   (rule 328)

    $default	reduce using rule 328 (option_projection)
=======
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 206)

    CLOSE_BPAR	shift, and go to state 813
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 665

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)
=======
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 205)

    CLOSE_BPAR	shift, and go to state 814
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 666

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 56)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 806
=======
    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 201)

    CLOSE_MPAR	shift, and go to state 815
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 667

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 807
=======
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 203)

    CLOSE_MPAR	shift, and go to state 816
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 668

<<<<<<< HEAD
    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)
=======
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 202)

    CLOSE_MPAR	shift, and go to state 817
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 669

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 656
=======
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 818
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 670

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 808
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 145)

    CLOSE_PAR	shift, and go to state 819


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 671

    option_output  ->  COMMA ass_right . option_output   (rule 363)

    COMMA	shift, and go to state 499

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 153)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 809
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    $default	reduce using rule 362 (option_output)

    option_output	go to state 820
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 672

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 810
=======
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 361)

    $default	reduce using rule 361 (output_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 673

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 811
=======
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313

    array_exp	go to state 661
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 674

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 812
=======
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  array_exp CON array_exp .   (rule 197)


    $default	reduce using rule 197 (array_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 675

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 88)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 813

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 821
    ID  	shift, and go to state 461
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 814

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
=======
state 676

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 822
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 824
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 677

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 672
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 825
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 827
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 678

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 673
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 828
    INTLITERAL	shift, and go to state 829
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 743
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 679

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 674
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 830
    MUL 	shift, and go to state 751
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 680

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 815
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 831
    MUL 	shift, and go to state 754
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 681

<<<<<<< HEAD
    option_input  ->  COMMA array . option_input   (rule 358)

    COMMA	shift, and go to state 524

    $default	reduce using rule 356 (option_input)

    option_input	go to state 816
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    OPEN_PAR	shift, and go to state 832
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 682

<<<<<<< HEAD
    option_input  ->  COMMA identifier . option_input   (rule 357)

    COMMA	shift, and go to state 524
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 833
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 356 (option_input)

    option_input	go to state 817


<<<<<<< HEAD

state 683

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 354)
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 91)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 834
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 354 (input_statement)



<<<<<<< HEAD
state 684

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (input_statement)
=======
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 340)

    $default	reduce using rule 340 (imply_pre)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 685

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 307)

    CLOSE_PAR	shift, and go to state 818
=======
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 835
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 686

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA error .   (rule 313)

    $default	reduce using rule 313 (inner_option_function_identifier)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 836


<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 819
    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)
=======

state 687
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 310)

    COMMA	shift, and go to state 535
=======
    option_struct_member_exp	go to state 837

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 312 (inner_option_function_identifier)

<<<<<<< HEAD
    inner_option_function_identifier	go to state 820



state 689

    option_ari_exp  ->  COMMA error .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)
=======
state 688

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 838
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 689
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_projection  ->  COMMA statement option_projection .   (rule 335)

    $default	reduce using rule 335 (option_projection)


<<<<<<< HEAD
    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 821
    ari_operator	go to state 236
=======

state 690

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 691

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (array)
=======
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 839
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 692

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 97)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    COMMA	shift, and go to state 370
    CON 	shift, and go to state 484

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 822
=======
    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 77)

    $default	reduce using rule 77 (function)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 693

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 370

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 823
=======
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    CLOSE_PAR	shift, and go to state 681
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 694

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    CLOSE_MPAR	shift, and go to state 824
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 840
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 695

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)
=======
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 160)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 841
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 696

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 66)

    $default	reduce using rule 66 (option_struct_declaration)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 842
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 697

<<<<<<< HEAD
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 825
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 843
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 698

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT function .   (rule 381)

    $default	reduce using rule 381 (option_struct_member_exp)


=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 844
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 699

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

<<<<<<< HEAD
    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 826
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    MUL 	shift, and go to state 845
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    MUL 	[reduce using rule 95 (type_define)]
    MUL 	[reduce using rule 266 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 266 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 827
=======
state 700

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    MUL 	shift, and go to state 846

    MUL 	[reduce using rule 97 (type_define)]
    MUL 	[reduce using rule 267 (sign_type_define)]
    ID  	reduce using rule 97 (type_define)
    ID  	[reduce using rule 267 (sign_type_define)]
    $default	reduce using rule 97 (type_define)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 701

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY function .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)


=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 696
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 702

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

<<<<<<< HEAD
    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 828
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 697
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 703

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 829
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 698
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 704

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 830
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    INTDECLARATION	shift, and go to state 762
    CHARDECLARATION	shift, and go to state 847
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 705

<<<<<<< HEAD
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 162)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 831
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_input  ->  COMMA array . option_input   (rule 371)

    COMMA	shift, and go to state 542
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 369 (option_input)

    option_input	go to state 848


<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 159)

    $default	reduce using rule 159 (ari_exp)
=======

state 706
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_input  ->  COMMA identifier . option_input   (rule 370)

    COMMA	shift, and go to state 542

    $default	reduce using rule 369 (option_input)

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 832
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_input	go to state 849



state 707
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 367)

    $default	reduce using rule 367 (input_statement)


<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 833
=======

state 708

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 365)

    $default	reduce using rule 365 (input_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 709

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 161)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    simple_ari_exp	go to state 834
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 314)

    CLOSE_PAR	shift, and go to state 850
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 710

<<<<<<< HEAD
    casted_element  ->  type_cast_alg_exp .   (rule 233)

    $default	reduce using rule 233 (casted_element)
=======
    inner_option_function_identifier  ->  COMMA error .   (rule 320)

    $default	reduce using rule 320 (inner_option_function_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 711

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 217)

    $default	reduce using rule 217 (type_cast)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 318)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 851
    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 712

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 835
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 317)

    COMMA	shift, and go to state 553

    $default	reduce using rule 319 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 852
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 713

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)
=======
    option_ari_exp  ->  COMMA error .   (rule 154)

    $default	reduce using rule 154 (option_ari_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 714

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 836
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 853
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 715

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)
=======
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 222 (type_cast)



<<<<<<< HEAD
state 716

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 837
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 104)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    COMMA	shift, and go to state 381
    CON 	shift, and go to state 502

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 854
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 717

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 855
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 718

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 838
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    CLOSE_MPAR	shift, and go to state 856
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 719

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 720

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 67)

    $default	reduce using rule 67 (option_struct_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 721

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 717
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_struct_member_exp  ->  DOT function .   (rule 394)

    $default	reduce using rule 394 (option_struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 722

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 839
    MUL 	shift, and go to state 728
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 391)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 857
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 723

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)
=======
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 390)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 858
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 724

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 840
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    option_struct_member_exp  ->  IMPLY function .   (rule 395)

    $default	reduce using rule 395 (option_struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 725

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 841
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 393)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 859
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 726

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)
=======
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 392)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 860
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 727

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function_define  ->  all_type_define MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 861
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 728

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 843
=======
    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    CLOSE_PAR	shift, and go to state 862
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 729

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)
=======
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 863
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 730

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    complexProposition	go to state 864



<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)
=======
state 731

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 169)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 865
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 732

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 844
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 166)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 166 (ari_exp)



<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 845
=======
state 733

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 866
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 734

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 846
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 867
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 735

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 847
=======
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 168)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    simple_ari_exp	go to state 868
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 736

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 813
=======
    casted_element  ->  type_cast_alg_exp .   (rule 240)

    $default	reduce using rule 240 (casted_element)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 737

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 848
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 738

<<<<<<< HEAD
    option_else_statement  ->  ELSE statement_bpar .   (rule 345)

    $default	reduce using rule 345 (option_else_statement)
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 869
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 739

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 849
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 740

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 850
    identifier	go to state 851
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 870
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 741

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 742

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 852
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 871
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 743

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 853
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 744

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 872
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 745

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 854
    identifier	go to state 855
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 746

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 747

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 856
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 828
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 743
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 748

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 857
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 873
    MUL 	shift, and go to state 754
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 749

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 222)

    $default	reduce using rule 222 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 750

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 858
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 874
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 751

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)


=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 875
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 752

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 284)

    ARRAY	shift, and go to state 859
    COMMA	shift, and go to state 279

<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 860
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 223)

    $default	reduce using rule 223 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 753

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 861

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 862
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 754

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 863
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 877
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 755

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 263)

    $default	reduce using rule 263 (option_function_parameter_list)
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 220)

    $default	reduce using rule 220 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 756

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    OPEN_BPAR	shift, and go to state 864
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 221)

    $default	reduce using rule 221 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 757

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 865
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 758

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 878
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 759

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)


=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 879
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 760

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 279

<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 880
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 761

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 881
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 762

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 845
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 763

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 882
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 764

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 303)

    ARRAY	shift, and go to state 869
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870
=======
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 352)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 883
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 765

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
=======
    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 353)

    COLON	shift, and go to state 884
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 871

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 872

<<<<<<< HEAD


state 766

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 873
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 351)

    CLOSE_BPAR	shift, and go to state 885
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 767

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (inner_option_define_identifier)
=======
    option_else_statement  ->  ELSE statement_bpar .   (rule 358)

    $default	reduce using rule 358 (option_else_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 768

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 63)

    CLOSE_BPAR	shift, and go to state 874
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 886


<<<<<<< HEAD
    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 324)

    $default	reduce using rule 324 (option_frame_identifier)
=======

state 769

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    CLOSE_PAR	shift, and go to state 887
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 770

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 875
=======
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 888
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 771

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 833
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    CLOSE_PAR	shift, and go to state 889
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 772

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 655


=======
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 890
    identifier	go to state 891
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 773

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    OPEN_PAR	shift, and go to state 353
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

<<<<<<< HEAD
    $default	reduce using rule 343 (for_sta_control)

    ass_statement	go to state 876
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 177
    point_exp	go to state 70
    identifier	go to state 71
    for_sta_control	go to state 877
    struct_member_exp	go to state 78
=======
    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 774

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)
=======
    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 291
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 878
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105

    inner_option_define_identifier	go to state 892



state 775

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43

    type_define	go to state 879
=======
    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 893
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 776

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA error .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



state 777

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 200)

    COMMA	shift, and go to state 638
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 236
    inner_option_list_value	go to state 880
=======
    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 777

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 894
    identifier	go to state 895
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 778

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 638
    CON 	shift, and go to state 484

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 881
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 779

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 201)

    COMMA	shift, and go to state 638

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 882
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 896
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 780

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 197)

    $default	reduce using rule 197 (option_struct_list_value)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 897
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 781

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 782

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 198)

    $default	reduce using rule 198 (option_struct_list_value)
=======
    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 898
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 783

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 194)

    $default	reduce using rule 194 (option_list_value)
=======
    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 784

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)
=======
    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 291)

    ARRAY	shift, and go to state 899
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 900
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 785

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 195)

    $default	reduce using rule 195 (option_list_value)
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)

    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 901

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 902
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 786

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 623
    CHARDECLARATION	shift, and go to state 624
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 625
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 626
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 903
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 787

<<<<<<< HEAD
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (rightaddrshift)
=======
    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 788

<<<<<<< HEAD
    option_output  ->  COMMA ass_right option_output .   (rule 350)

    $default	reduce using rule 350 (option_output)
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 904
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 789

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 883
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    CLOSE_PAR	shift, and go to state 905
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 790

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 884
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)
=======
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 906
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 791

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 885
=======
    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



<<<<<<< HEAD
state 792

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 886
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 907
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 793

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 887
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 908
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 794

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 888

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 795

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 889
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)
=======
    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 796

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 890

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 310)

    ARRAY	shift, and go to state 909
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 910
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 797

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 891
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 840
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 911

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 912

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 892
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 894
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======


state 798

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 913
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 799

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 895
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 800

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 896
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 914
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 801

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 897
=======
    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 331)

    $default	reduce using rule 331 (option_frame_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 802

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 898
=======
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 915
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 803

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 867
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196


<<<<<<< HEAD
state 804

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)
=======

state 804

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 680
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 805

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 54)

    CLOSE_MPAR	shift, and go to state 899
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    OPEN_PAR	shift, and go to state 364
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    $default	reduce using rule 350 (for_sta_control)

    ass_statement	go to state 916
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 185
    point_exp	go to state 72
    identifier	go to state 75
    for_sta_control	go to state 917
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 806

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 56)

    $default	reduce using rule 56 (statement)
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 918
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 807

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 900
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 919
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 808

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 901
    ari_operator	go to state 236
=======
    inner_option_list_value  ->  COMMA error .   (rule 211)

    $default	reduce using rule 211 (inner_option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 809

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 207)

    COMMA	shift, and go to state 662
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 245
    inner_option_list_value	go to state 920
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ADD 	[reduce using rule 153 (point_exp)]
    SUB 	[reduce using rule 153 (point_exp)]
    $default	reduce using rule 153 (point_exp)

    ari_operator	go to state 236


<<<<<<< HEAD

state 810

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 902
    ID  	shift, and go to state 903
    INTLITERAL	shift, and go to state 904
=======
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 209)

    COMMA	shift, and go to state 662
    CON 	shift, and go to state 502

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 921
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 811

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_PAR	shift, and go to state 905
    ID  	shift, and go to state 906
    INTLITERAL	shift, and go to state 907
=======
    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 208)

    COMMA	shift, and go to state 662

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 922
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 812

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 908
    INTLITERAL	shift, and go to state 909
=======
    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 204)

    $default	reduce using rule 204 (option_struct_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 813

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 910
=======
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 206)

    $default	reduce using rule 206 (option_struct_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 814

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 911
=======
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 205)

    $default	reduce using rule 205 (option_struct_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 815

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 814
=======
    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 201)

    $default	reduce using rule 201 (option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 816

<<<<<<< HEAD
    option_input  ->  COMMA array option_input .   (rule 358)

    $default	reduce using rule 358 (option_input)
=======
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 203)

    $default	reduce using rule 203 (option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 817

<<<<<<< HEAD
    option_input  ->  COMMA identifier option_input .   (rule 357)

    $default	reduce using rule 357 (option_input)
=======
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 202)

    $default	reduce using rule 202 (option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 818

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 307)

    COMMA	shift, and go to state 535
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 647
    CHARDECLARATION	shift, and go to state 648
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 649
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 650
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	[reduce using rule 69 (function)]
    CLOSE_PAR	reduce using rule 69 (function)
    CLOSE_PAR	[reduce using rule 312 (inner_option_function_identifier)]
    $default	reduce using rule 69 (function)

    inner_option_function_identifier	go to state 912

<<<<<<< HEAD


state 819

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92
=======
state 819

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (rightaddrshift)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 913
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105


<<<<<<< HEAD

state 820

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 310)

    $default	reduce using rule 310 (inner_option_function_identifier)
=======
    option_output  ->  COMMA ass_right option_output .   (rule 363)

    $default	reduce using rule 363 (option_output)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 821

<<<<<<< HEAD
    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 146)

    $default	reduce using rule 146 (option_ari_exp)
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 867
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 621
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)
=======
state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 923
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 823

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 924
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 824

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 370
    ASS_P	shift, and go to state 914

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 915
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 925

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 825

<<<<<<< HEAD
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 59)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 916
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 926
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 826

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (option_struct_member_exp)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 927
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 827

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (option_struct_member_exp)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 928

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 828

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (option_struct_member_exp)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 929
    OPEN_MPAR	shift, and go to state 192
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (option_struct_member_exp)
=======
state 829

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 930

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 830

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 917
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 931
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 874
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 831

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 162)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ADD 	[reduce using rule 162 (option_exp_else_statement)]
    SUB 	[reduce using rule 162 (option_exp_else_statement)]
    $default	reduce using rule 162 (option_exp_else_statement)

    ari_operator	go to state 236
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 932
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 934
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 832

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 92)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 935
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 833

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 918
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 936
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 834

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 161)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 937
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    INTER_OR	[reduce using rule 161 (type_cast_alg_exp)]
    CON 	[reduce using rule 161 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 161 (type_cast_alg_exp)]
    LST 	[reduce using rule 161 (type_cast_alg_exp)]
    RST 	[reduce using rule 161 (type_cast_alg_exp)]
    MUL 	[reduce using rule 161 (type_cast_alg_exp)]
    DIV 	[reduce using rule 161 (type_cast_alg_exp)]
    MOD 	[reduce using rule 161 (type_cast_alg_exp)]
    $default	reduce using rule 161 (type_cast_alg_exp)

    bi_operator	go to state 251


<<<<<<< HEAD

state 835

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)
=======
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 159)

    CLOSE_MPAR	shift, and go to state 938
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 836

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 837

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 838

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 939
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 839

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 840

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 218)

    $default	reduce using rule 218 (type_cast)
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 940
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 841

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 919
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 160)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ADD 	[reduce using rule 160 (point_exp)]
    SUB 	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)

    ari_operator	go to state 245


<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)
=======

state 842

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_PAR	shift, and go to state 941
    ID  	shift, and go to state 942
    INTLITERAL	shift, and go to state 943
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 843

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 920
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_PAR	shift, and go to state 944
    ID  	shift, and go to state 945
    INTLITERAL	shift, and go to state 946
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 844

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 947
    INTLITERAL	shift, and go to state 948
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 845

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    ID  	shift, and go to state 903
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 949
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 846

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 906
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 950
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 847

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 908
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 846
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 848

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 921
=======
    option_input  ->  COMMA array option_input .   (rule 371)

    $default	reduce using rule 371 (option_input)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 849

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 922
=======
    option_input  ->  COMMA identifier option_input .   (rule 370)

    $default	reduce using rule 370 (option_input)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 850

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)
=======
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 314)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 553

    COMMA	[reduce using rule 76 (function)]
    CLOSE_PAR	reduce using rule 76 (function)
    CLOSE_PAR	[reduce using rule 319 (inner_option_function_identifier)]
    $default	reduce using rule 76 (function)

    inner_option_function_identifier	go to state 951

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 271)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 923
=======


state 851

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 318)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 952
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 852

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)
=======
    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 317)

    $default	reduce using rule 317 (inner_option_function_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 853

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)
=======
    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 153)

    $default	reduce using rule 153 (option_ari_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 854

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 855

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 267)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 924
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 856

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 953

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 954
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 857

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)
=======
    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 391)

    $default	reduce using rule 391 (option_struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 858

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 925
=======
    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 390)

    $default	reduce using rule 390 (option_struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 859

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 926
=======
    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 393)

    $default	reduce using rule 393 (option_struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 860

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)
=======
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 392)

    $default	reduce using rule 392 (option_struct_member_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 861

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 927
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 955
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 862

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)
=======
    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_BPAR	shift, and go to state 956
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 863

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 928
    CLOSE_MPAR	shift, and go to state 929
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 957
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 864

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 58)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 930
    empty_statement	go to state 931
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 958
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 865

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 932
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 169)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ADD 	[reduce using rule 169 (option_exp_else_statement)]
    SUB 	[reduce using rule 169 (option_exp_else_statement)]
    $default	reduce using rule 169 (option_exp_else_statement)

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 866

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 867

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 959
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 868

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)
=======
    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    INTER_OR	[reduce using rule 168 (type_cast_alg_exp)]
    CON 	[reduce using rule 168 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 168 (type_cast_alg_exp)]
    LST 	[reduce using rule 168 (type_cast_alg_exp)]
    RST 	[reduce using rule 168 (type_cast_alg_exp)]
    MUL 	[reduce using rule 168 (type_cast_alg_exp)]
    DIV 	[reduce using rule 168 (type_cast_alg_exp)]
    MOD 	[reduce using rule 168 (type_cast_alg_exp)]
    $default	reduce using rule 168 (type_cast_alg_exp)

    bi_operator	go to state 260


<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 933
=======

state 869

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 870

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 871

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 934
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 872

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 873

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 935
    CLOSE_MPAR	shift, and go to state 936
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 874

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 63)

    $default	reduce using rule 63 (statement)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 875

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 55)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 937
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 960
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 876

<<<<<<< HEAD
    for_sta_control  ->  ass_statement .   (rule 342)

    $default	reduce using rule 342 (for_sta_control)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 877

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 336)

    CLOSE_PAR	shift, and go to state 938
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 961
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 878

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    CLOSE_PAR	shift, and go to state 939
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 879

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 940
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    ID  	shift, and go to state 942
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 880

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 200)

    $default	reduce using rule 200 (inner_option_list_value)
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    ID  	shift, and go to state 945
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 881

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 947
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 882

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 201)

    $default	reduce using rule 201 (inner_option_list_value)
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 962
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 883

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 941
    CHARDECLARATION	shift, and go to state 942
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 943
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 352)

    COLON	shift, and go to state 963
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 884

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 944
=======
    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 353)

    OPEN_PAR	shift, and go to state 964
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 885

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 351)

    $default	reduce using rule 351 (switch_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_MPAR	shift, and go to state 945



<<<<<<< HEAD
state 886

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 946
    CHARDECLARATION	shift, and go to state 947
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 948
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    CLOSE_PAR	shift, and go to state 965
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 887

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 949
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 966
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 888

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    OPEN_MPAR	shift, and go to state 950
=======
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 73)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 967
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 889

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 951
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 968
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 890

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 952
=======
    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 891

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 953
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)
=======
    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 969
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 892

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 954
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 893

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 955
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)
=======
    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 894

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 956

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 895

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 957
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 970
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 896

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    CLOSE_PAR	shift, and go to state 958

    CLOSE_PAR	[reduce using rule 139 (array)]
    $default	reduce using rule 139 (array)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 897

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (declaration)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 898

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (point_exp)
=======
    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 971
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 899

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 54)

    $default	reduce using rule 54 (statement)
=======
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 972
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 900

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 930
    empty_statement	go to state 959
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78
=======
    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 291)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 291 (option_function_parameter_list)



<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_MPAR	shift, and go to state 960
=======
state 901

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 973
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 902

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 961
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 903

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 884
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)

    COMMA	shift, and go to state 974
    CLOSE_MPAR	shift, and go to state 975
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 904

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 885
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 69 (empty_statement)

    statement	go to state 976
    empty_statement	go to state 977
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 905

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 962
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    OPEN_PAR	shift, and go to state 978
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 906

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
=======
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 887



<<<<<<< HEAD
state 907

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    CLOSE_PAR	shift, and go to state 888
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 908

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 889
=======
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 909

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 890
=======
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 291
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 979


<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    ID  	shift, and go to state 963
=======

state 910

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 310)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 310 (inner_option_define_identifier)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_PAR	shift, and go to state 964
    ID  	shift, and go to state 965
    INTLITERAL	shift, and go to state 966
=======
state 911

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 980
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 912

<<<<<<< HEAD
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 307)

    $default	reduce using rule 307 (option_function_identifier)
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 913

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 311)

    CLOSE_PAR	shift, and go to state 967
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)

    COMMA	shift, and go to state 981
    CLOSE_MPAR	shift, and go to state 982
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 914

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    STRLITERAL	shift, and go to state 124

    array_exp	go to state 968
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    strliteral	go to state 969
=======
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 915

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)
=======
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 983
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 916

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 970
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    for_sta_control  ->  ass_statement .   (rule 349)

    $default	reduce using rule 349 (for_sta_control)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 917

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 343)

    CLOSE_PAR	shift, and go to state 984
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 918

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    CLOSE_PAR	shift, and go to state 985
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 919

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 986
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 920

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)
=======
    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 207)

    $default	reduce using rule 207 (inner_option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 921

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 965
=======
    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 209)

    $default	reduce using rule 209 (inner_option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 922

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 971
=======
    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 208)

    $default	reduce using rule 208 (inner_option_list_value)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 923

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 987
    CHARDECLARATION	shift, and go to state 988
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 989
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 924

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_MPAR	shift, and go to state 990
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 925

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 991
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 926

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 992
    CHARDECLARATION	shift, and go to state 993
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 994
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 927

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)

    CLOSE_MPAR	shift, and go to state 972
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_MPAR	shift, and go to state 995
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 928

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 973
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105


=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 996
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 929

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 279

<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 974
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    OPEN_MPAR	shift, and go to state 997
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 930

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    empty_statement  ->  statement .   (rule 67)

    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 67 (empty_statement)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 998
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 931

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 58)

    CLOSE_BPAR	shift, and go to state 975
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 999
    OPEN_MPAR	shift, and go to state 192
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 976
=======
state 932

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 1000
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 933

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 1001
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 934

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)

    CLOSE_MPAR	shift, and go to state 977
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1002

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ari_operator	go to state 236



<<<<<<< HEAD
state 935

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 978
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 92)

    CLOSE_PAR	shift, and go to state 1003
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 936

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 979
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    CLOSE_PAR	shift, and go to state 1004

    CLOSE_PAR	[reduce using rule 146 (array)]
    $default	reduce using rule 146 (array)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 937

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 55)

    CLOSE_PAR	shift, and go to state 980
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 91)

    $default	reduce using rule 91 (declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 938

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 336)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 981
=======
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 159)

    $default	reduce using rule 159 (point_exp)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 939

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 940

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 982
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_MPAR	shift, and go to state 1005
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 941

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 983
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_PAR	shift, and go to state 1006
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 942

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 984
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 924
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 943

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 985
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 925
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 944

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 986
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105

=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 1007


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 987
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======

state 945

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 927
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 946

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 988
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 928
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 947

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 989
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 929
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 948

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 990
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 930
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 949

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 991
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    ID  	shift, and go to state 1008
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 950

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 992
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_PAR	shift, and go to state 1009
    ID  	shift, and go to state 1010
    INTLITERAL	shift, and go to state 1011
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 951

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 993
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105

=======
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 314)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 314 (option_function_identifier)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 994
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======

state 952

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 318)

    CLOSE_PAR	shift, and go to state 1012
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 953

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 995
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    STRLITERAL	shift, and go to state 131
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array_exp	go to state 1013
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    strliteral	go to state 1014



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 996
    CHARDECLARATION	shift, and go to state 997
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 998
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225
=======
state 954

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 955

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 999
=======
    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 1015
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 956

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 1000
=======
    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 71)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1016
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 957

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 70)

    CLOSE_BPAR	shift, and go to state 1017
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 958

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 1001
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 959

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1002
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 960

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 958
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 961

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTDECLARATION	shift, and go to state 1003
    CHARDECLARATION	shift, and go to state 1004
    UNSIGNED	shift, and go to state 1005
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 962

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTDECLARATION	shift, and go to state 1006
    CHARDECLARATION	shift, and go to state 1007
    UNSIGNED	shift, and go to state 1008
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    ID  	shift, and go to state 1010
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 963

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 953
=======
    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 352)

    OPEN_PAR	shift, and go to state 1018
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 964

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 1009
=======
    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 353)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1019
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 965

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 955
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    OPEN_BPAR	shift, and go to state 1020
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 966

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 956
=======
    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 74)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1021
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 967

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 535

    COMMA	[reduce using rule 69 (function)]
    CLOSE_PAR	reduce using rule 69 (function)
    CLOSE_PAR	[reduce using rule 312 (inner_option_function_identifier)]
    $default	reduce using rule 69 (function)

    inner_option_function_identifier	go to state 1010
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 1022
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 968

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    COMMA	shift, and go to state 370
    CON 	shift, and go to state 484

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1011
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1023
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 969

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 370

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1012
=======
    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 970

<<<<<<< HEAD
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 971

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 1013
=======
    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 972

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1014
=======
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 973

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 282)

    CLOSE_MPAR	shift, and go to state 1015
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 290)

    CLOSE_MPAR	shift, and go to state 1024
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ari_operator	go to state 245



<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)
=======
state 974

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1025
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 975

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 58)

    $default	reduce using rule 58 (statement)
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1026
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 976

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 1016
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 68)

    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    $default	reduce using rule 68 (empty_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 977

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1017
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1027
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 978

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

    CLOSE_MPAR	shift, and go to state 1018
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1028
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 979

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)
=======
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 980

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 55)

    $default	reduce using rule 55 (statement)
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 309)

    CLOSE_MPAR	shift, and go to state 1029
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ari_operator	go to state 245



<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 336)

    $default	reduce using rule 336 (extend_for_statement)
=======
state 981

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1030
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 982

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 1019
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 307)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1031
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 983

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1020
    MUL 	shift, and go to state 572
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 1032
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 984

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 575
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 343)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 1033
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 985

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1022


=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 986

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1023
    ari_operator	go to state 236
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    OPEN_PAR	shift, and go to state 1034
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 987

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1024
    ari_operator	go to state 236
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 1035



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 1036



state 989

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1037



state 990

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1038
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 991

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1039
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 1040



state 993

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 1041



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1042



state 995

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1043
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1044
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 997

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1045
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1046
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 999

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    OPEN_MPAR	shift, and go to state 1047



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 1048
    CHARDECLARATION	shift, and go to state 1049
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 1050
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 1001

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 1051



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1052



state 1003

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 92)

    $default	reduce using rule 92 (declaration)



state 1004

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 1053



state 1005

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_PAR	shift, and go to state 1004



state 1006

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTDECLARATION	shift, and go to state 1054
    CHARDECLARATION	shift, and go to state 1055
    UNSIGNED	shift, and go to state 1056



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTDECLARATION	shift, and go to state 1057
    CHARDECLARATION	shift, and go to state 1058
    UNSIGNED	shift, and go to state 1059



state 1008

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 999



state 1009

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_PAR	shift, and go to state 1060



state 1010

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 1001



state 1011

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1002



state 1012

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 318)

    COMMA	shift, and go to state 553

    COMMA	[reduce using rule 76 (function)]
    CLOSE_PAR	reduce using rule 76 (function)
    CLOSE_PAR	[reduce using rule 319 (inner_option_function_identifier)]
    $default	reduce using rule 76 (function)

    inner_option_function_identifier	go to state 1061



state 1013

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 106)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    COMMA	shift, and go to state 381
    CON 	shift, and go to state 502

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1062



state 1014

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 107)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1063



state 1015

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 72)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1064
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1016

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1025
    MUL 	shift, and go to state 572
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 71)

    CLOSE_BPAR	shift, and go to state 1065
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1017

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)

    $default	reduce using rule 70 (function_define)



state 1018

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 352)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1066
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 1019

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 353)

    CLOSE_PAR	shift, and go to state 1067
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1020

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 75)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1068
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 1021

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 74)

    CLOSE_BPAR	shift, and go to state 1069
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1022

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 73)

    $default	reduce using rule 73 (function_define)



state 1023

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 1026
    MUL 	shift, and go to state 575
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 294)

    CLOSE_PAR	shift, and go to state 1070
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1024

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1027
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 290)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1071
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1025

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1028
    ari_operator	go to state 236
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 289)

    CLOSE_MPAR	shift, and go to state 1072
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1026

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 117)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1029
    ari_operator	go to state 236
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1027

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1030
    ari_operator	go to state 236


<<<<<<< HEAD

state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
state 1028

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 305)

    CLOSE_PAR	shift, and go to state 1073
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1031
    ari_operator	go to state 236



state 995

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1032
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1029

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1074
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1030

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 1033
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 308)

    CLOSE_MPAR	shift, and go to state 1075
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1031

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 1034
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 307)

    $default	reduce using rule 307 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 1035



state 1033

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1036
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 343)

    $default	reduce using rule 343 (extend_for_statement)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1034

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1037
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105


=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 142)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1076
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1001

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 1038
=======
state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1077
    MUL 	shift, and go to state 592
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1036

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1078
    MUL 	shift, and go to state 595
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1037

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1039
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1079
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1038

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1040
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1080
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1039

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CHARDECLARATION	shift, and go to state 1041
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1081
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1040

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1042
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1082
    MUL 	shift, and go to state 592
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1041

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    MUL 	shift, and go to state 1043
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1083
    MUL 	shift, and go to state 595
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1042

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CHARDECLARATION	shift, and go to state 1044
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1084
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1043

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTDECLARATION	shift, and go to state 1045
    CHARDECLARATION	shift, and go to state 1046
    UNSIGNED	shift, and go to state 1047
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1085
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1044

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1086
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1045

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 149)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1087
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1046

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)


=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1088
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1013

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 287)

<<<<<<< HEAD
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1048
=======
state 1047

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1089
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1048

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 1090
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1049

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1049
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 1091
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1050

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1050
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1092



<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)
=======
state 1051

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1093
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1052

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 279
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1094
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1051

<<<<<<< HEAD


state 1019

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 1052
=======
state 1053

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1095
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1054

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 1053
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1096
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1055

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1054
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1097
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1056

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1055
    MUL 	shift, and go to state 728
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CHARDECLARATION	shift, and go to state 1098
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1057

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1056
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1099
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1058

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1057
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1100
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1059

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 1058
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CHARDECLARATION	shift, and go to state 1101
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1060

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1059
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTDECLARATION	shift, and go to state 1102
    CHARDECLARATION	shift, and go to state 1103
    UNSIGNED	shift, and go to state 1104
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1061

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1060
    MUL 	shift, and go to state 728
=======
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 318)

    $default	reduce using rule 318 (inner_option_function_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1062

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1061
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1063

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 117)

    CLOSE_MPAR	shift, and go to state 1062
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (option_identifier_array_declaration)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1064

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1063
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 1105
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1065

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 71)

    $default	reduce using rule 71 (function_define)



state 1066

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1064
=======
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 352)

    CLOSE_PAR	shift, and go to state 1106
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1067

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (case_par)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1065
    ari_operator	go to state 236

<<<<<<< HEAD


state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1066
    MUL 	shift, and go to state 572
=======
state 1068

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 75)

    CLOSE_BPAR	shift, and go to state 1107
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1069

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 74)

    $default	reduce using rule 74 (function_define)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 1067
    MUL 	shift, and go to state 575
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1070

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 291

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1068
=======
    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1108


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1071

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (option_function_parameter_list)

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1069
    ari_operator	go to state 236
=======


state 1072

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 289)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1109

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1070
    ari_operator	go to state 236



state 1038

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 1071
=======


state 1073

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 305)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1110


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1074

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_define_identifier)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1072
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1075

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 308)

    COMMA	shift, and go to state 291

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1073
=======
    $default	reduce using rule 306 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    inner_option_define_identifier	go to state 1111



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1074
=======
state 1076
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 1112


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1075
=======

state 1077
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 1113
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1076
=======
state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 1114
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1079

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 1077
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1115
    MUL 	shift, and go to state 754
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1080

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1078
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 147)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_MPAR	shift, and go to state 1116



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1079
=======
state 1081
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1117


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CHARDECLARATION	shift, and go to state 1080
=======

state 1082
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 1118
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)
=======
state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 1119
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1084

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1120
    MUL 	shift, and go to state 754
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1085

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 1121
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1086

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1122
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1087

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 135)

    OPEN_PAR	shift, and go to state 1081
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 1082

    function	go to state 1083
    array	go to state 1084
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 149)

    CLOSE_MPAR	shift, and go to state 1123


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1124

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1085

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1089

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1086
=======
    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1125
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)


<<<<<<< HEAD

state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 1087
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1126
    MUL 	shift, and go to state 592
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1091

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1127
    MUL 	shift, and go to state 595


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1128

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)
=======


state 1093

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1129
    ari_operator	go to state 245

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1088

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1089

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1130
    ari_operator	go to state 245
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1095

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 1090
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_PAR	shift, and go to state 1131
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1096

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1132
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1097

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 117)

    $default	reduce using rule 117 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1133
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1098

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1134
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1099

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1135
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1100

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1091
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1136
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1101

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 1092
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1137
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1102

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1093
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1138
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1139



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CHARDECLARATION	shift, and go to state 1140



state 1105

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (function_define)



state 1106

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 352)

    CASE	shift, and go to state 764
    BREAK	shift, and go to state 1141
    DEFAULT	shift, and go to state 765

    $default	reduce using rule 356 (init_case_par)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1094
    MUL 	shift, and go to state 728
=======
    case_par	go to state 1142
    init_case_par	go to state 1143



state 1107

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 75)

    $default	reduce using rule 75 (function_define)



state 1108

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (option_function_parameter_list)



state 1109

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_parameter_list)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1110

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1095
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1111

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 1096
=======
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 308)

    $default	reduce using rule 308 (inner_option_define_identifier)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1112

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 87)

    ASS_P	shift, and go to state 1097

    $default	reduce using rule 86 (declaration)
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 142)

    OPEN_PAR	shift, and go to state 1144
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 1145
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    function	go to state 1146
    array	go to state 1147



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1098
=======
state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 328)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1148

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1099
=======

state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 328)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1149

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1100
=======

state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 1150
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1116

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1101
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 147)

    $default	reduce using rule 147 (array)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    INTLITERAL	shift, and go to state 1102
=======
    $default	reduce using rule 126 (leftaddrshift)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1118

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1103
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1151
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1104
=======
state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 328)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1152

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1105
=======

state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 1153
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1121

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1106
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    $default	reduce using rule 150 (array)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)

    OPEN_PAR	shift, and go to state 1107
    ID  	shift, and go to state 1108

    array	go to state 549
=======
    $default	reduce using rule 124 (leftaddrshift)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1123

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_PAR	shift, and go to state 183
    OPEN_MPAR	shift, and go to state 184
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 149)

    $default	reduce using rule 149 (array)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1124

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 135)

    $default	reduce using rule 135 (ass_right)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1125

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 200
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 148)

    CLOSE_MPAR	shift, and go to state 1154
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1126

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1109
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 1155
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 1156
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1110
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1157
    MUL 	shift, and go to state 754

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1111

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1129

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1112
=======
    CLOSE_MPAR	shift, and go to state 1158
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1130

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1113
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1159
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1131

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1114

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 94)

    ASS_P	shift, and go to state 1160
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 93 (declaration)



<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)
=======
state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    INTLITERAL	shift, and go to state 1161



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1115

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1162
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1134

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1116
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1163
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)


<<<<<<< HEAD

state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 1117
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1164
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1136

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1165
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1137

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1166
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1138

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301

    array_exp	go to state 1118
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1167
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1139

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1085
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1168
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1140

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1086
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1169
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1141

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1119
=======
    init_case_par  ->  BREAK . case_par   (rule 354)

    CASE	shift, and go to state 764
    DEFAULT	shift, and go to state 765
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    case_par	go to state 1170



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1088
=======
state 1142

    init_case_par  ->  case_par .   (rule 355)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 355 (init_case_par)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1089
=======
state 1143

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 352)

    $default	reduce using rule 352 (case_par)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1144

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 1120
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)

    OPEN_PAR	shift, and go to state 1171
    ID  	shift, and go to state 1172
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array	go to state 566



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1121
=======
state 1145

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_PAR	shift, and go to state 191
    OPEN_MPAR	shift, and go to state 192



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1122
=======
state 1146

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 142)

    $default	reduce using rule 142 (ass_right)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1147

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1123
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)

    OPEN_PAR	shift, and go to state 207
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1148

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 1107
    UNSIGNED	shift, and go to state 597
    ID  	shift, and go to state 1108

    array	go to state 549
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1173
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1149

<<<<<<< HEAD
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 184
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1174
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1150

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1124
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1175
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1125
=======
state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1176



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1126
=======
state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1177
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1153

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1127
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1178
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 1128
=======
state 1154

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 148)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 148 (array)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1129
=======
state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1179
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1130
=======
state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 328)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1180

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1131
=======

state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 1181
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1158

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1132

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    $default	reduce using rule 151 (array)

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 87)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    CON 	shift, and go to state 484

    $default	reduce using rule 87 (declaration)
=======
    $default	reduce using rule 125 (leftaddrshift)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1160

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1111
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array_exp	go to state 1182
    option_list_value	go to state 319
    option_struct_list_value	go to state 320



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1114
=======
state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1148



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1115
=======
state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1149
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1163

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1116
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1183
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1164

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1133
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1151
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1165

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1134
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1152
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1166

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1135
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1184
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1167

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1136
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1185
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1168

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1137
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1186
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1169

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1138
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1187
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1170

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1139
=======
    init_case_par  ->  BREAK case_par .   (rule 354)

    $default	reduce using rule 354 (init_case_par)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1171

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1140
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 1171
    UNSIGNED	shift, and go to state 617
    ID  	shift, and go to state 1172
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    array	go to state 566



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1141
=======
state 1172

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    OPEN_MPAR	shift, and go to state 192



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1142
=======
state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1188
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1174

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1132
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1189
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1175

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1143
    ari_operator	go to state 236
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1190
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1176

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1191
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1144
    ari_operator	go to state 236

<<<<<<< HEAD


state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1145
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1177

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1192
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1178

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1146
    ari_operator	go to state 236
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1193
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1179

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1194
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    option_ari_exp	go to state 1147
    ari_operator	go to state 236


<<<<<<< HEAD

state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1148
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1180

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1195
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1181

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1149
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1150
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1182

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 94)
    array_exp  ->  array_exp . CON array_exp   (rule 197)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CON 	shift, and go to state 502

    $default	reduce using rule 94 (declaration)


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1151
=======

state 1183

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    CLOSE_PAR	shift, and go to state 1175



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1152
=======
state 1184

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1178
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1185

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1153
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1179
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1186

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1154
    ari_operator	go to state 236
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1180
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1187

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1155
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    INTLITERAL	shift, and go to state 1197
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1188

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1198
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1199
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1157
    ari_operator	go to state 236
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1200

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1158
    ari_operator	go to state 236
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1201
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

<<<<<<< HEAD
    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1159
    ari_operator	go to state 236



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1160
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105
=======
state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1202
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1193

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1203

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)
=======
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)
=======
    OPEN_MPAR	shift, and go to state 1204
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1195

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1161
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1205
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1196

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1206
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1197

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1196
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1198

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1162
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1207
    ari_operator	go to state 245


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1163
=======

state 1199
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1164
=======
    option_ari_exp	go to state 1208
    ari_operator	go to state 245



state 1200
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1209
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1165
    ari_operator	go to state 236
=======


state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1210
    ari_operator	go to state 245

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)
=======


state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1211
    ari_operator	go to state 245

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff


state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)
=======
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1212
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1204

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)
=======
    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1213
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff



state 1205

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1166
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1214
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)
=======

state 1206
>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

<<<<<<< HEAD

state 1167

    $   	go to state 1168
=======
    OPEN_MPAR	shift, and go to state 1215


>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1216

<<<<<<< HEAD
    $   	go to state 1169
=======

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff

state 1208

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1217

<<<<<<< HEAD
=======


state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1218
    ari_operator	go to state 245



state 1210

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1219



state 1211

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1220



state 1212

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1221
    ari_operator	go to state 245



state 1213

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1222
    ari_operator	go to state 245



state 1214

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1223
    ari_operator	go to state 245



state 1215

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1224
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1216

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)



state 1217

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1218

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1225



state 1219

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1220

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1221

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1226



state 1222

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1227



state 1223

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1228



state 1224

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1229
    ari_operator	go to state 245



state 1225

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1226

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1228

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1229

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1230



state 1230

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1231

    $   	go to state 1232



state 1232

    $   	go to state 1233



state 1233

>>>>>>> 4c3410759b45c5af26fc012576bab802c4ed1aff
    $default	accept
