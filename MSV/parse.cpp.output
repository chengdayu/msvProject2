Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#107   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#109   inner_option_array_declaration :	;
#110   inner_option_array_declaration :	 COMMA error;


Conflict in state 86 between rule 13 and token CHOP resolved as reduce.
Conflict in state 86 between rule 13 and token IFF resolved as reduce.
Conflict in state 86 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 13 and token OR resolved as reduce.
Conflict in state 86 between rule 13 and token AND resolved as reduce.
Conflict in state 86 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 87 between rule 22 and token CHOP resolved as reduce.
Conflict in state 87 between rule 22 and token IFF resolved as reduce.
Conflict in state 87 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 87 between rule 22 and token OR resolved as reduce.
Conflict in state 87 between rule 22 and token AND resolved as reduce.
Conflict in state 87 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 21 and token CHOP resolved as reduce.
Conflict in state 110 between rule 21 and token IFF resolved as reduce.
Conflict in state 110 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 21 and token OR resolved as reduce.
Conflict in state 110 between rule 21 and token AND resolved as reduce.
Conflict in state 110 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 10 and token CHOP resolved as reduce.
Conflict in state 111 between rule 10 and token IFF resolved as reduce.
Conflict in state 111 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 10 and token OR resolved as reduce.
Conflict in state 111 between rule 10 and token AND resolved as reduce.
Conflict in state 111 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 9 and token CHOP resolved as reduce.
Conflict in state 112 between rule 9 and token IFF resolved as reduce.
Conflict in state 112 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 9 and token OR resolved as reduce.
Conflict in state 112 between rule 9 and token AND resolved as reduce.
Conflict in state 112 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 20 and token CHOP resolved as reduce.
Conflict in state 113 between rule 20 and token IFF resolved as reduce.
Conflict in state 113 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 20 and token OR resolved as reduce.
Conflict in state 113 between rule 20 and token AND resolved as reduce.
Conflict in state 113 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 12 and token CHOP resolved as reduce.
Conflict in state 114 between rule 12 and token IFF resolved as reduce.
Conflict in state 114 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 12 and token OR resolved as reduce.
Conflict in state 114 between rule 12 and token AND resolved as reduce.
Conflict in state 114 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 11 and token CHOP resolved as reduce.
Conflict in state 115 between rule 11 and token IFF resolved as reduce.
Conflict in state 115 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 11 and token OR resolved as reduce.
Conflict in state 115 between rule 11 and token AND resolved as reduce.
Conflict in state 115 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 241 between rule 208 and token IMPLY resolved as reduce.
Conflict in state 244 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 267 between rule 8 and token CHOP resolved as reduce.
Conflict in state 267 between rule 8 and token IFF resolved as shift.
Conflict in state 267 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 267 between rule 8 and token OR resolved as shift.
Conflict in state 267 between rule 8 and token AND resolved as shift.
Conflict in state 267 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 268 between rule 6 and token CHOP resolved as reduce.
Conflict in state 268 between rule 6 and token IFF resolved as reduce.
Conflict in state 268 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 268 between rule 6 and token OR resolved as shift.
Conflict in state 268 between rule 6 and token AND resolved as shift.
Conflict in state 268 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 269 between rule 7 and token CHOP resolved as reduce.
Conflict in state 269 between rule 7 and token IFF resolved as reduce.
Conflict in state 269 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 269 between rule 7 and token OR resolved as shift.
Conflict in state 269 between rule 7 and token AND resolved as shift.
Conflict in state 269 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 270 between rule 5 and token CHOP resolved as reduce.
Conflict in state 270 between rule 5 and token IFF resolved as reduce.
Conflict in state 270 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 270 between rule 5 and token OR resolved as reduce.
Conflict in state 270 between rule 5 and token AND resolved as shift.
Conflict in state 270 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 271 between rule 4 and token CHOP resolved as reduce.
Conflict in state 271 between rule 4 and token IFF resolved as reduce.
Conflict in state 271 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 271 between rule 4 and token OR resolved as reduce.
Conflict in state 271 between rule 4 and token AND resolved as reduce.
Conflict in state 271 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 292 between rule 237 and token OR resolved as reduce.
Conflict in state 292 between rule 237 and token AND resolved as reduce.
Conflict in state 341 between rule 331 and token OR resolved as reduce.
Conflict in state 341 between rule 331 and token AND resolved as reduce.
Conflict in state 393 between rule 32 and token CHOP resolved as reduce.
Conflict in state 393 between rule 32 and token OR resolved as shift.
Conflict in state 393 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 393 between rule 32 and token AND resolved as shift.
Conflict in state 394 between rule 31 and token CHOP resolved as reduce.
Conflict in state 394 between rule 31 and token OR resolved as reduce.
Conflict in state 394 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 394 between rule 31 and token AND resolved as shift.
Conflict in state 395 between rule 55 and token CHOP resolved as reduce.
Conflict in state 395 between rule 55 and token OR resolved as reduce.
Conflict in state 395 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 395 between rule 55 and token AND resolved as shift.
Conflict in state 396 between rule 30 and token CHOP resolved as reduce.
Conflict in state 396 between rule 30 and token OR resolved as reduce.
Conflict in state 396 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 396 between rule 30 and token AND resolved as reduce.
Conflict in state 464 between rule 192 and token CON resolved as reduce.
Conflict in state 476 between rule 239 and token OR resolved as reduce.
Conflict in state 476 between rule 239 and token AND resolved as shift.
Conflict in state 477 between rule 238 and token OR resolved as reduce.
Conflict in state 477 between rule 238 and token AND resolved as reduce.
Conflict in state 524 between rule 333 and token OR resolved as reduce.
Conflict in state 524 between rule 333 and token AND resolved as shift.
Conflict in state 525 between rule 332 and token OR resolved as reduce.
Conflict in state 525 between rule 332 and token AND resolved as reduce.
State 98 contains 2 shift/reduce conflicts.
State 99 contains 2 shift/reduce conflicts.
State 101 contains 14 shift/reduce conflicts.
State 105 contains 2 shift/reduce conflicts.
State 136 contains 2 shift/reduce conflicts.
State 167 contains 3 reduce/reduce conflicts.
State 169 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 170 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 171 contains 1 shift/reduce conflict.
State 173 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 175 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 176 contains 1 shift/reduce conflict.
State 203 contains 1 shift/reduce conflict.
State 234 contains 1 shift/reduce conflict.
State 235 contains 1 shift/reduce conflict.
State 237 contains 1 shift/reduce conflict.
State 238 contains 1 shift/reduce conflict.
State 239 contains 1 shift/reduce conflict.
State 241 contains 1 shift/reduce conflict.
State 244 contains 1 shift/reduce conflict.
State 275 contains 1 shift/reduce conflict.
State 276 contains 1 shift/reduce conflict.
State 277 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 293 contains 2 shift/reduce conflicts.
State 294 contains 2 shift/reduce conflicts.
State 312 contains 1 shift/reduce conflict.
State 313 contains 1 shift/reduce conflict.
State 314 contains 1 shift/reduce conflict.
State 315 contains 1 shift/reduce conflict.
State 328 contains 1 shift/reduce conflict.
State 331 contains 1 shift/reduce conflict.
State 332 contains 1 shift/reduce conflict.
State 333 contains 1 shift/reduce conflict.
State 339 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
State 368 contains 1 shift/reduce conflict.
State 370 contains 1 shift/reduce conflict.
State 371 contains 1 shift/reduce conflict.
State 375 contains 1 shift/reduce conflict.
State 376 contains 1 shift/reduce conflict.
State 401 contains 2 shift/reduce conflicts.
State 402 contains 2 shift/reduce conflicts.
State 404 contains 2 shift/reduce conflicts.
State 405 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 407 contains 2 shift/reduce conflicts.
State 408 contains 2 shift/reduce conflicts.
State 409 contains 2 shift/reduce conflicts.
State 411 contains 2 shift/reduce conflicts.
State 412 contains 2 shift/reduce conflicts.
State 414 contains 2 shift/reduce conflicts.
State 415 contains 2 shift/reduce conflicts.
State 438 contains 1 shift/reduce conflict.
State 445 contains 8 shift/reduce conflicts.
State 447 contains 2 shift/reduce conflicts.
State 511 contains 1 shift/reduce conflict.
State 512 contains 1 shift/reduce conflict.
State 516 contains 1 shift/reduce conflict.
State 538 contains 1 shift/reduce conflict.
State 539 contains 1 shift/reduce conflict.
State 540 contains 1 shift/reduce conflict.
State 544 contains 1 shift/reduce conflict.
State 566 contains 1 shift/reduce conflict.
State 588 contains 3 shift/reduce conflicts.
State 591 contains 10 shift/reduce conflicts.
State 680 contains 2 shift/reduce conflicts.
State 681 contains 2 shift/reduce conflicts.
State 694 contains 1 shift/reduce conflict.
State 695 contains 1 shift/reduce conflict.
State 711 contains 1 shift/reduce conflict.
State 712 contains 1 shift/reduce conflict.
State 717 contains 2 shift/reduce conflicts.
State 718 contains 2 shift/reduce conflicts.
State 720 contains 2 shift/reduce conflicts.
State 721 contains 2 shift/reduce conflicts.
State 801 contains 1 shift/reduce conflict.
State 802 contains 1 shift/reduce conflict.
State 804 contains 1 shift/reduce conflict.
State 805 contains 1 shift/reduce conflict.
State 806 contains 1 shift/reduce conflict.
State 807 contains 1 shift/reduce conflict.
State 820 contains 2 shift/reduce conflicts.
State 829 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 835 contains 1 shift/reduce conflict.
State 841 contains 2 shift/reduce conflicts.
State 844 contains 8 shift/reduce conflicts.
State 900 contains 1 shift/reduce conflict.
State 902 contains 1 shift/reduce conflict.
State 903 contains 1 shift/reduce conflict.
State 905 contains 1 shift/reduce conflict.
State 975 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 976 contains 1 shift/reduce conflict.
State 977 contains 1 shift/reduce conflict.
State 1063 contains 1 shift/reduce conflict.
State 1064 contains 1 shift/reduce conflict.
State 1068 contains 1 shift/reduce conflict.
State 1069 contains 1 shift/reduce conflict.
State 1098 contains 1 shift/reduce conflict.
State 1101 contains 1 shift/reduce conflict.
State 1103 contains 1 shift/reduce conflict.
State 1104 contains 1 shift/reduce conflict.
State 1127 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ass_right
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function_define
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
rule 70   function_define -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 75   struct_identifier -> STRUCT ID
rule 76   struct_identifier -> UNION ID
rule 77   sign_declaration -> SIGNED declaration
rule 78   sign_declaration -> UNSIGNED declaration
rule 79   sign_declaration -> declaration
rule 80   declaration -> type_define option_identifier_array_declaration
rule 81   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 82   declaration -> STRUCT ID option_identifier_array_declaration
rule 83   declaration -> UNION ID option_identifier_array_declaration
rule 84   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 86   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 89   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 90   type_define -> INTDECLARATION
rule 91   type_define -> FLOATDECLARATION
rule 92   type_define -> CHARDECLARATION
rule 93   type_define -> STRDECLARATION
rule 94   type_define -> VOIDDECLARATION
rule 95   type_define -> FILEDECLARATION
rule 96   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 105  inner_option_identifier_array_declaration -> COMMA error
rule 106  inner_option_identifier_array_declaration ->		/* empty */
rule 111  ass_statement -> ass_left assign_operator ass_right
rule 112  ass_left -> identifier
rule 113  ass_left -> struct_member_exp
rule 114  ass_left -> array
rule 115  ass_left -> point_exp
rule 116  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 117  ass_left -> NEXT ass_left
rule 118  ass_left -> leftaddrshift
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  assign_operator -> ASS_P
rule 133  assign_operator -> ASS_N
rule 134  ass_right -> ari_exp
rule 135  ass_right -> array_exp
rule 136  ass_right -> strliteral
rule 137  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 138  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 139  ass_right -> rightaddrshift
rule 140  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 141  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR array CLOSE_PAR
rule 148  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 149  option_ari_exp -> COMMA error
rule 150  option_ari_exp ->		/* empty */
rule 151  point_exp -> MUL identifier
rule 152  point_exp -> MUL point_exp
rule 153  point_exp -> MUL array
rule 154  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 156  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 157  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 158  ari_exp -> simple_ari_exp
rule 159  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 160  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 161  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 162  type_cast_alg_exp -> simple_ari_exp
rule 163  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 164  option_exp_else_statement -> ELSE ari_exp
rule 165  option_exp_else_statement ->		/* empty */
rule 166  simple_ari_exp -> member_in_exp
rule 167  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 168  member_in_exp -> intliteral
rule 169  member_in_exp -> SUB member_in_exp
rule 170  member_in_exp -> BNE member_in_exp
rule 171  member_in_exp -> POINTERNULL
rule 172  member_in_exp -> floatliteral
rule 173  member_in_exp -> identifier
rule 174  member_in_exp -> array
rule 175  member_in_exp -> point_exp
rule 176  member_in_exp -> function
rule 177  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 178  member_in_exp -> charliteral
rule 179  member_in_exp -> address_exp
rule 180  member_in_exp -> type_cast
rule 181  member_in_exp -> struct_member_exp
rule 182  bi_operator -> MUL
rule 183  bi_operator -> DIV
rule 184  bi_operator -> MOD
rule 185  bi_operator -> LST
rule 186  bi_operator -> RST
rule 187  bi_operator -> ADDRESS
rule 188  bi_operator -> INTER_OR
rule 189  bi_operator -> CON
rule 190  ari_operator -> ADD
rule 191  ari_operator -> SUB
rule 192  array_exp -> array_exp CON array_exp
rule 193  array_exp -> option_list_value
rule 194  array_exp -> option_struct_list_value
rule 195  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 196  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 198  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 199  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 201  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 202  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 203  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 204  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 205  inner_option_list_value ->		/* empty */
rule 206  inner_option_list_value -> COMMA error
rule 207  address_exp -> ADDRESS identifier
rule 208  address_exp -> ADDRESS array
rule 209  address_exp -> ADDRESS struct_member_exp
rule 210  address_exp -> ADDRESS address_exp
rule 211  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 212  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 235  casted_element -> type_cast_alg_exp
rule 236  bool_exp -> prime_bool_exp
rule 237  bool_exp -> NEGATION bool_exp
rule 238  bool_exp -> bool_exp AND bool_exp
rule 239  bool_exp -> bool_exp OR bool_exp
rule 240  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 241  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 242  prime_bool_exp -> MY_TRUE
rule 243  prime_bool_exp -> MY_FALSE
rule 244  prime_bool_exp -> ari_exp
rule 245  prime_bool_exp -> ari_exp EQ strliteral
rule 246  prime_bool_exp -> ari_exp NE strliteral
rule 247  prime_bool_exp -> strliteral EQ ari_exp
rule 248  prime_bool_exp -> strliteral NE ari_exp
rule 249  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 250  prime_bool_exp -> ari_exp NE POINTERNULL
rule 251  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 252  prime_bool_exp -> POINTERNULL NE ari_exp
rule 253  prime_bool_exp -> ari_exp EQ charliteral
rule 254  prime_bool_exp -> ari_exp NE charliteral
rule 255  relation_operator -> GE
rule 256  relation_operator -> LE
rule 257  relation_operator -> NE
rule 258  relation_operator -> GT
rule 259  relation_operator -> LT
rule 260  relation_operator -> EQ
rule 261  sign_type_define -> UNSIGNED INTDECLARATION
rule 262  sign_type_define -> UNSIGNED CHARDECLARATION
rule 263  all_type_define -> sign_type_define
rule 264  all_type_define -> type_define
rule 265  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 271  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 288  option_function_parameter_list ->		/* empty */
rule 289  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 299  inner_option_define_identifier ->		/* empty */
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA error
rule 306  option_function_identifier -> ass_right inner_option_function_identifier
rule 307  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 308  option_function_identifier -> all_type_define
rule 309  option_function_identifier ->		/* empty */
rule 310  option_function_identifier -> ADDRESS error
rule 311  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 312  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 313  inner_option_function_identifier ->		/* empty */
rule 314  inner_option_function_identifier -> COMMA error
rule 315  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 316  statement_bpar -> error CLOSE_BPAR
rule 317  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 318  bool_par -> error CLOSE_PAR
rule 319  identifier -> ID
rule 320  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 321  strliteral -> STRLITERAL
rule 322  intliteral -> INTLITERAL
rule 323  charliteral -> CHARLITERAL
rule 324  floatliteral -> FLOATLITERAL
rule 325  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 326  option_frame_identifier ->		/* empty */
rule 327  option_frame_identifier -> COMMA error
rule 328  option_projection ->		/* empty */
rule 329  option_projection -> COMMA statement option_projection
rule 330  imply_pre -> prime_bool_exp
rule 331  imply_pre -> NEGATION imply_pre
rule 332  imply_pre -> imply_pre AND imply_pre
rule 333  imply_pre -> imply_pre OR imply_pre
rule 334  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 335  while_statement -> WHILE bool_par statement_bpar
rule 336  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 337  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 338  for_sta_init -> ass_statement
rule 339  for_sta_init -> declaration
rule 340  for_sta_init ->		/* empty */
rule 341  for_sta_condition -> bool_exp
rule 342  for_sta_condition ->		/* empty */
rule 343  for_sta_control -> ass_statement
rule 344  for_sta_control ->		/* empty */
rule 345  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 346  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 347  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 348  init_case_par -> BREAK case_par
rule 349  init_case_par -> case_par
rule 350  init_case_par ->		/* empty */
rule 351  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 352  option_else_statement -> ELSE statement_bpar
rule 353  option_else_statement ->		/* empty */
rule 354  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 355  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 356  option_output ->		/* empty */
rule 357  option_output -> COMMA ass_right option_output
rule 358  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 361  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 362  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 363  option_input ->		/* empty */
rule 364  option_input -> COMMA identifier option_input
rule 365  option_input -> COMMA array option_input
rule 366  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 367  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 368  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 369  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 370  struct_member_exp -> array DOT array option_struct_member_exp
rule 371  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 372  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 375  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 376  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 377  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 378  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 379  struct_member_exp -> identifier DOT function
rule 380  struct_member_exp -> identifier IMPLY function
rule 381  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 382  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 383  option_struct_member_exp ->		/* empty */
rule 384  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 385  option_struct_member_exp -> DOT array option_struct_member_exp
rule 386  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 387  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 388  option_struct_member_exp -> DOT function
rule 389  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 105 110 149 206 305 310 314 316 318 327
SWITCH (258) 345
CASE (259) 346
BREAK (260) 348
DEFAULT (261) 347
RETURN (262) 36
IF (263) 161 351
ELSE (264) 164 352
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 171 249 250 251 252
ARRAY (271) 99 100 270 274 281 282 283 294 295 296 297 302
STRUCT (272) 75 82 84 231 233
DOT (273) 366 367 368 369 370 371 379 384 385 388
UNION (274) 76 83 85
FILEDECLARATION (275) 95
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 242
MY_FALSE (279) 16 243
EXIST (280) 64
FRAME (281) 57
FOR (282) 336 337
WHILE (283) 335
DO (284) 336
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 354 355
SKIP (290) 14 46
THEN (291) 161 351
COMMA (292) 28 104 105 108 110 148 149 202 203 204 206 289 290 291
    292 293 294 295 296 297 298 300 301 302 303 304 305 311 312 314
    325 327 329 337 357 364 365
COLON (293) 25 64 346 347
INTDECLARATION (294) 90 121 125 128 129 130 131 142 143 212 215 217
    219 220 225 226 261
STRDECLARATION (295) 93
POINTERDECLARATION (296)
CHARDECLARATION (297) 92 119 120 123 124 125 126 127 128 129 130 145
    146 214 216 218 222 223 228 229 262
VOIDDECLARATION (298) 94 224 230
FLOATDECLARATION (299) 91 122 144 213 221 227
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 86 87
    88 89 116 119 120 121 122 123 124 125 126 127 128 129 130 131 137
    138 140 142 143 144 145 146 147 154 155 156 157 177 195 211 212
    213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 240 287 298 307 312 317 320 334 337 345
    346 347 354 355 358 359 360 361 362 374 378 382
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 86
    87 88 89 116 119 120 121 122 123 124 125 126 127 128 129 130 131
    137 138 140 142 143 144 145 146 147 154 155 156 157 177 195 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 240 287 298 307 312 317 318 320 334
    337 345 346 347 354 355 358 359 360 361 362 374 378 382
TIMES (303) 336
OPEN_BPAR (304) 23 45 58 59 60 64 70 74 199 200 201 315 345
CLOSE_BPAR (305) 23 45 58 59 60 64 70 74 199 200 201 315 316 345
OPEN_MPAR (306) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 300 301 302
CLOSE_MPAR (307) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 300 301 302
FUNCTION (308) 70
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 188
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 72
UNSIGNED (328) 78 120 124 126 127 128 130 143 146 217 218 220 223 226
    229 261 262
SIGNED (329) 77 215 216
CHOP (330) 8 32
IMPLY (331) 56 372 373 374 375 376 377 378 380 381 386 387 389
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 239 333
PARALLEL (335) 55
AND (336) 4 30 57 67 238 332
ASS_P (337) 60 89 98 99 100 101 102 132
ASS_N (338) 133
CON (339) 189 192
ADDRESS (340) 187 207 208 209 210 310
NE (341) 246 248 250 252 254 257
EQ (342) 245 247 249 251 253 260
GE (343) 255
LE (344) 256
GT (345) 258
LT (346) 259
LST (347) 185
RST (348) 186
ADD (349) 190
SUB (350) 169 191
MUL (351) 86 87 88 89 103 119 120 121 122 123 124 125 126 127 128 129
    130 131 140 142 143 144 145 146 151 152 153 155 156 182 219 220
    221 222 223 224 225 226 227 228 229 230 231 232 233 234 268 269
    272 273 276 277 279 280 282 284 285 286 287 293 297 298 303 304
DIV (352) 183
MOD (353) 184
BNE (354) 170
CHOPSTAR (355) 26
NEXT (356) 13 41 117
NEGATION (357) 22 237 331
LENGTH (358) 17 49
REQUEST (359) 358 359 360 361 362
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 60 70 71 72 75 76 82 83 88 89 97 99 100 101 102 107
    108 141 142 143 144 145 146 271 272 273 274 278 279 280 291 294
    307 312 319
STRLITERAL (368) 321
STRUCT_TYPE (369) 81 84 85 231 232 233 234 267 268 269 270 275 276
    277 292 293 295
INTLITERAL (370) 119 120 121 122 123 124 125 126 127 128 129 130 131
    322
FLOATLITERAL (371) 324
CHARLITERAL (372) 323

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 64 65 68 70
    315 329 346 347
option_struct_declaration (123)
    on left: 66 67, on right: 67 74
empty_statement (124)
    on left: 68 69, on right: 60
function_define (125)
    on left: 70, on right: 62
function (126)
    on left: 71 72 73, on right: 63 137 176 379 380 388 389
struct_define_statement (127)
    on left: 74, on right: 61
struct_identifier (128)
    on left: 75 76, on right: 74
sign_declaration (129)
    on left: 77 78 79, on right: 34 66 67
declaration (130)
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 77 78 79 339
type_define (131)
    on left: 90 91 92 93 94 95, on right: 80 137 264
option_identifier_array_declaration (132)
    on left: 96 97 98 99 100 101 102 103, on right: 80 81 82 83 84
    85 103 104
inner_option_identifier_array_declaration (133)
    on left: 104 105 106, on right: 96 97 98 99 100 101 102
ass_statement (134)
    on left: 111, on right: 33 338 343
ass_left (135)
    on left: 112 113 114 115 116 117 118, on right: 111 116 117
leftaddrshift (136)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131,
    on right: 118 140
assign_operator (137)
    on left: 132 133, on right: 111
ass_right (138)
    on left: 134 135 136 137 138 139, on right: 36 98 111 138 306 311
    354 355 357
rightaddrshift (139)
    on left: 140, on right: 139
array (140)
    on left: 141 142 143 144 145 146 147, on right: 73 114 147 153
    174 208 360 361 365 367 369 370 371 373 376 377 378 381 385 387
option_ari_exp (141)
    on left: 148 149 150, on right: 88 89 97 101 102 107 108 119 120
    121 122 123 124 125 126 127 128 129 130 131 141 142 143 144 145
    146 148 154
point_exp (142)
    on left: 151 152 153 154 155 156 157, on right: 115 152 154 157
    175 368 371 375 381
ari_exp (143)
    on left: 158 159 160 161, on right: 17 49 88 89 97 101 102 107
    108 119 120 121 122 123 124 125 126 127 128 129 130 131 134 141
    142 143 144 145 146 148 154 155 156 159 160 161 164 177 196 199
    202 241 244 245 246 247 248 249 250 251 252 253 254 283 300 301
    302 336
type_cast_alg_exp (144)
    on left: 162 163, on right: 212 213 214 215 216 217 218 235
option_exp_else_statement (145)
    on left: 164 165, on right: 161
simple_ari_exp (146)
    on left: 166 167, on right: 158 159 160 162 163 167
member_in_exp (147)
    on left: 168 169 170 171 172 173 174 175 176 177 178 179 180 181
   , on right: 166 167 169 170 345 346
bi_operator (148)
    on left: 182 183 184 185 186 187 188 189, on right: 167
ari_operator (149)
    on left: 190 191, on right: 160 163
array_exp (150)
    on left: 192 193 194 195, on right: 89 99 101 135 192 195 198 201
    204
option_list_value (151)
    on left: 196 197 198, on right: 193
option_struct_list_value (152)
    on left: 199 200 201, on right: 194
inner_option_list_value (153)
    on left: 202 203 204 205 206, on right: 196 197 198 199 200 201
    202 203 204
address_exp (154)
    on left: 207 208 209 210 211, on right: 179 210 211 374 378
type_cast (155)
    on left: 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 233 234, on right: 180
casted_element (156)
    on left: 235, on right: 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234
bool_exp (157)
    on left: 236 237 238 239 240, on right: 44 45 161 237 238 239 240
    317 341 351
prime_bool_exp (158)
    on left: 241 242 243 244 245 246 247 248 249 250 251 252 253 254
   , on right: 25 236 330
relation_operator (159)
    on left: 255 256 257 258 259 260, on right: 159 241
sign_type_define (160)
    on left: 261 262, on right: 263
all_type_define (161)
    on left: 263 264, on right: 155 265 266 281 282 283 284 285 286
    289 290 296 297 300 301 302 303 304 308
option_function_parameter_list (162)
    on left: 265 266 267 268 269 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 287 288, on right: 60 70 86 87
    88 89 137 287 298
inner_option_define_identifier (163)
    on left: 289 290 291 292 293 294 295 296 297 298 299 300 301 302
    303 304 305, on right: 64 265 266 267 268 269 270 271 272 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287 289 290 291
    292 293 294 295 296 297 298 300 301 302 303 304
option_function_identifier (164)
    on left: 306 307 308 309 310, on right: 71 72 73 307 312
inner_option_function_identifier (165)
    on left: 311 312 313 314, on right: 306 307 311 312
statement_bpar (166)
    on left: 315 316, on right: 58 59 335 336 337 351 352
bool_par (167)
    on left: 317 318, on right: 335
identifier (168)
    on left: 319 320, on right: 57 64 86 87 96 98 112 151 173 207 265
    267 268 269 270 271 272 273 274 281 282 283 284 286 287 289 291
    292 293 294 295 296 297 298 300 301 302 303 320 325 358 359 364
    366 367 368 369 372 373 374 375 376 379 380 384 386
strliteral (169)
    on left: 321, on right: 100 102 136 137 197 200 203 245 246 247
    248
intliteral (170)
    on left: 322, on right: 168
charliteral (171)
    on left: 323, on right: 178 253 254
floatliteral (172)
    on left: 324, on right: 172
option_frame_identifier (173)
    on left: 325 326 327, on right: 57 325
option_projection (174)
    on left: 328 329, on right: 58 329
imply_pre (175)
    on left: 330 331 332 333 334, on right: 56 331 332 333 334
while_statement (176)
    on left: 335, on right: 38
for_statement (177)
    on left: 336, on right: 39
extend_for_statement (178)
    on left: 337, on right: 40
for_sta_init (179)
    on left: 338 339 340, on right: 337
for_sta_condition (180)
    on left: 341 342, on right: 337
for_sta_control (181)
    on left: 343 344, on right: 337
switch_statement (182)
    on left: 345, on right: 35
case_par (183)
    on left: 346 347, on right: 345 348 349
init_case_par (184)
    on left: 348 349 350, on right: 346
if_statement (185)
    on left: 351, on right: 37
option_else_statement (186)
    on left: 352 353, on right: 351
output_statement (187)
    on left: 354 355, on right: 51
option_output (188)
    on left: 356 357, on right: 355 357
input_statement (189)
    on left: 358 359 360 361 362, on right: 50
option_input (190)
    on left: 363 364 365, on right: 359 361 364 365
struct_member_exp (191)
    on left: 366 367 368 369 370 371 372 373 374 375 376 377 378 379
    380 381 382, on right: 113 181 209 362 382
option_struct_member_exp (192)
    on left: 383 384 385 386 387 388 389, on right: 366 367 368 369
    370 371 372 373 374 375 376 377 378 381 384 385 386 387


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1177
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 61
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 83



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 86



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 87



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 100
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 115



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 116
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 345)

    OPEN_PAR	shift, and go to state 123



state 23

    statement  ->  RETURN . ass_right   (rule 36)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 129
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 24

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 351)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 142
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 145



state 27

    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 146
    STRUCT_TYPE	shift, and go to state 147



state 28

    struct_identifier  ->  UNION . ID   (rule 76)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 148
    STRUCT_TYPE	shift, and go to state 149



state 29

    type_define  ->  FILEDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 30

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 150



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 153



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 154



state 34

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 336)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 337)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 155
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 156
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 35

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 335)

    error	shift, and go to state 157
    OPEN_PAR	shift, and go to state 158

    bool_par	go to state 159



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 38

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 160



state 39

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 354)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 355)

    OPEN_PAR	shift, and go to state 161



state 40

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

    type_define  ->  INTDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 42

    type_define  ->  STRDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 43

    type_define  ->  CHARDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  VOIDDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 45

    type_define  ->  FLOATDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 162
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 163
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 165
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 166
    function_define	go to state 62
    function	go to state 167
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 171
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 173
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 174
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 175



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 176
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 48

    function_define  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    ID  	shift, and go to state 177



state 49

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    ID  	shift, and go to state 178



state 50

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 182
    type_define	go to state 68



state 51

    sign_declaration  ->  SIGNED . declaration   (rule 77)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 183
    type_define	go to state 68



state 52

    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 184
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 188



state 53

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 189
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    ass_left	go to state 191
    leftaddrshift	go to state 71
    array	go to state 192
    point_exp	go to state 73
    identifier	go to state 74
    struct_member_exp	go to state 82



state 54

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 193



state 55

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 362)

    OPEN_PAR	shift, and go to state 194



state 56

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 195



state 57

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 196



state 58

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 197



state 59

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 198
    OPEN_MPAR	shift, and go to state 199

    $default	reduce using rule 319 (identifier)



state 60

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 202
    identifier	go to state 203



state 61

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

    $default	reduce using rule 1 (program)



state 62

    statement  ->  function_define .   (rule 62)

    $default	reduce using rule 62 (statement)



state 63

    statement  ->  function .   (rule 63)

    $default	reduce using rule 63 (statement)



state 64

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 65

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 208



state 66

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 67

    sign_declaration  ->  declaration .   (rule 79)

    $default	reduce using rule 79 (sign_declaration)



state 68

    declaration  ->  type_define . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 209
    identifier	go to state 203



state 69

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 70

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)

    ASS_P	shift, and go to state 210
    ASS_N	shift, and go to state 211

    assign_operator	go to state 212



state 71

    ass_left  ->  leftaddrshift .   (rule 118)

    $default	reduce using rule 118 (ass_left)



state 72

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 215

    $default	reduce using rule 114 (ass_left)



state 73

    ass_left  ->  point_exp .   (rule 115)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    IMPLY	shift, and go to state 217

    $default	reduce using rule 115 (ass_left)



state 74

    ass_left  ->  identifier .   (rule 112)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    IMPLY	shift, and go to state 219

    $default	reduce using rule 112 (ass_left)



state 75

    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 76

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 77

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 78

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 79

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 80

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 81

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 82

    ass_left  ->  struct_member_exp .   (rule 113)

    $default	reduce using rule 113 (ass_left)



state 83

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 220



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 221
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 222
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 223



state 86

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 87

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 88

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 224
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 89

    member_in_exp  ->  POINTERNULL .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)



state 90

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 91

    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)

    OPEN_PAR	shift, and go to state 240
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 241
    point_exp	go to state 242
    address_exp	go to state 243
    identifier	go to state 244
    struct_member_exp	go to state 245



state 92

    member_in_exp  ->  SUB . member_in_exp   (rule 169)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 246
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 93

    member_in_exp  ->  BNE . member_in_exp   (rule 170)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 247
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 94

    intliteral  ->  INTLITERAL .   (rule 322)

    $default	reduce using rule 322 (intliteral)



state 95

    floatliteral  ->  FLOATLITERAL .   (rule 324)

    $default	reduce using rule 324 (floatliteral)



state 96

    charliteral  ->  CHARLITERAL .   (rule 323)

    $default	reduce using rule 323 (charliteral)



state 97

    member_in_exp  ->  function .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 98

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 215

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 99

    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    IMPLY	shift, and go to state 217

    DOT 	[reduce using rule 175 (member_in_exp)]
    IMPLY	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 100

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 250



state 101

    ari_exp  ->  simple_ari_exp .   (rule 158)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    NE  	shift, and go to state 254
    EQ  	shift, and go to state 255
    GE  	shift, and go to state 256
    LE  	shift, and go to state 257
    GT  	shift, and go to state 258
    LT  	shift, and go to state 259
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    NE  	[reduce using rule 158 (ari_exp)]
    EQ  	[reduce using rule 158 (ari_exp)]
    GE  	[reduce using rule 158 (ari_exp)]
    LE  	[reduce using rule 158 (ari_exp)]
    GT  	[reduce using rule 158 (ari_exp)]
    LT  	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    bi_operator	go to state 265
    relation_operator	go to state 266



state 102

    simple_ari_exp  ->  member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)



state 103

    member_in_exp  ->  address_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 104

    member_in_exp  ->  type_cast .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 105

    member_in_exp  ->  identifier .   (rule 173)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    IMPLY	shift, and go to state 219

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 106

    member_in_exp  ->  intliteral .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 107

    member_in_exp  ->  charliteral .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 108

    member_in_exp  ->  floatliteral .   (rule 172)

    $default	reduce using rule 172 (member_in_exp)



state 109

    member_in_exp  ->  struct_member_exp .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 115

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 116

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 117

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 267



state 118

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 268



state 119

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 269



state 120

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 270



state 121

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 271



state 122

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 123

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 345)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 272
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 124

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 273
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 274
    rightaddrshift	go to state 130
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 275
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 276
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    strliteral	go to state 277
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 125

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 200)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 201)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 278
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 279
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 280
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 281
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 126

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 197)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 198)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 278
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 282
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 283
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 284
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 127

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 140)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 285
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 188



state 128

    strliteral  ->  STRLITERAL .   (rule 321)

    $default	reduce using rule 321 (strliteral)



state 129

    statement  ->  RETURN ass_right .   (rule 36)

    $default	reduce using rule 36 (statement)



state 130

    ass_right  ->  rightaddrshift .   (rule 139)

    $default	reduce using rule 139 (ass_right)



state 131

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 134 (ass_right)

    ari_operator	go to state 250



state 132

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 286

    $default	reduce using rule 135 (ass_right)



state 133

    array_exp  ->  option_list_value .   (rule 193)

    $default	reduce using rule 193 (array_exp)



state 134

    array_exp  ->  option_struct_list_value .   (rule 194)

    $default	reduce using rule 194 (array_exp)



state 135

    ass_right  ->  strliteral .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 136

    member_in_exp  ->  POINTERNULL .   (rule 171)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 251)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 252)

    NE  	shift, and go to state 287
    EQ  	shift, and go to state 288

    NE  	[reduce using rule 171 (member_in_exp)]
    EQ  	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 137

    prime_bool_exp  ->  MY_TRUE .   (rule 242)

    $default	reduce using rule 242 (prime_bool_exp)



state 138

    prime_bool_exp  ->  MY_FALSE .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)



state 139

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 289
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    bool_exp	go to state 291
    prime_bool_exp	go to state 143
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 140

    bool_exp  ->  NEGATION . bool_exp   (rule 237)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 292
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 141

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    NE  	shift, and go to state 293
    EQ  	shift, and go to state 294
    GE  	shift, and go to state 256
    LE  	shift, and go to state 257
    GT  	shift, and go to state 258
    LT  	shift, and go to state 259
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 250
    relation_operator	go to state 295



state 142

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 351)

    THEN	shift, and go to state 296
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 143

    bool_exp  ->  prime_bool_exp .   (rule 236)

    $default	reduce using rule 236 (bool_exp)



state 144

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 247)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 248)

    NE  	shift, and go to state 299
    EQ  	shift, and go to state 300



state 145

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 301
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 146

    struct_identifier  ->  STRUCT ID .   (rule 75)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    $default	reduce using rule 75 (struct_identifier)

    option_identifier_array_declaration	go to state 302
    identifier	go to state 203



state 147

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 303
    identifier	go to state 203



state 148

    struct_identifier  ->  UNION ID .   (rule 76)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    $default	reduce using rule 76 (struct_identifier)

    option_identifier_array_declaration	go to state 304
    identifier	go to state 203



state 149

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 305
    identifier	go to state 203



state 150

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 306



state 151

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 307



state 152

    identifier  ->  ID .   (rule 319)

    $default	reduce using rule 319 (identifier)



state 153

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 309



state 154

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 310



state 155

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 337)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 311
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 312
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 313
    VOIDDECLARATION	shift, and go to state 314
    FLOATDECLARATION	shift, and go to state 315
    OPEN_PAR	shift, and go to state 316
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 317
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 340 (for_sta_init)

    function	go to state 97
    declaration	go to state 318
    type_define	go to state 68
    ass_statement	go to state 319
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 173
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_init	go to state 320
    struct_member_exp	go to state 175



state 156

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 336)

    TIMES	shift, and go to state 321
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 157

    bool_par  ->  error . CLOSE_PAR   (rule 318)

    CLOSE_PAR	shift, and go to state 322



state 158

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 323
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 159

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 335)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 326



state 160

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 327
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 161

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 354)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 355)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 328
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 162

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 351)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 329
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 163

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 334)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 162
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 330
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 331
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 332
    VOIDDECLARATION	shift, and go to state 314
    FLOATDECLARATION	shift, and go to state 333
    OPEN_PAR	shift, and go to state 163
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 334
    SIGNED	shift, and go to state 335
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 165
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 317
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 166
    function_define	go to state 62
    function	go to state 167
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 173
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 336
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 175



state 164

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 184
    MUL 	shift, and go to state 337
    ID  	shift, and go to state 338

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 339



state 165

    imply_pre  ->  NEGATION . imply_pre   (rule 331)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 340
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 341
    struct_member_exp	go to state 109



state 166

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 65)

    CLOSE_PAR	shift, and go to state 342
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 167

    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 176)

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 176 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 176 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 168

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 343
    ASS_P	shift, and go to state 210
    ASS_N	shift, and go to state 211

    assign_operator	go to state 212



state 169

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 114 (ass_left)
    ASS_N	reduce using rule 114 (ass_left)
    $default	reduce using rule 174 (member_in_exp)



state 170

    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    ASS_P	reduce using rule 115 (ass_left)
    ASS_N	reduce using rule 115 (ass_left)
    $default	reduce using rule 175 (member_in_exp)



state 171

    member_in_exp  ->  address_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)

    CLOSE_PAR	shift, and go to state 346

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 172

    imply_pre  ->  prime_bool_exp .   (rule 330)

    $default	reduce using rule 330 (imply_pre)



state 173

    ass_left  ->  identifier .   (rule 112)
    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 320)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 174

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 332)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 333)

    CLOSE_PAR	shift, and go to state 348
    OR  	shift, and go to state 349
    AND 	shift, and go to state 350



state 175

    ass_left  ->  struct_member_exp .   (rule 113)
    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 382)

    CLOSE_PAR	shift, and go to state 351

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 181 (member_in_exp)



state 176

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 352
    CLOSE_BPAR	shift, and go to state 353
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

    CLOSE_BPAR	[reduce using rule 328 (option_projection)]
    $default	reduce using rule 328 (option_projection)

    option_projection	go to state 354



state 177

    function_define  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_PAR	shift, and go to state 355



state 178

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 356



state 179

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 357
    STRUCT_TYPE	shift, and go to state 147



state 180

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 358
    STRUCT_TYPE	shift, and go to state 149



state 181

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    MUL 	shift, and go to state 359



state 182

    sign_declaration  ->  UNSIGNED declaration .   (rule 78)

    $default	reduce using rule 78 (sign_declaration)



state 183

    sign_declaration  ->  SIGNED declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 184

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    type_define	go to state 361
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 362
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 364
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 185

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 319)

    OPEN_MPAR	shift, and go to state 199

    $default	reduce using rule 319 (identifier)



state 186

    point_exp  ->  MUL array .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 187

    point_exp  ->  MUL point_exp .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 188

    point_exp  ->  MUL identifier .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 189

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 365
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 366
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 367
    point_exp	go to state 368
    address_exp	go to state 369
    identifier	go to state 370
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 371



state 190

    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 372
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    ass_left	go to state 191
    leftaddrshift	go to state 71
    array	go to state 192
    point_exp	go to state 73
    identifier	go to state 74
    struct_member_exp	go to state 82



state 191

    ass_left  ->  NEXT ass_left .   (rule 117)

    $default	reduce using rule 117 (ass_left)



state 192

    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    IMPLY	shift, and go to state 215

    $default	reduce using rule 114 (ass_left)



state 193

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 373
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 194

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 361)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 362)

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 375
    point_exp	go to state 242
    identifier	go to state 376
    struct_member_exp	go to state 377



state 195

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 378
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 196

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 379
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 197

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 380
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 198

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 381
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 97
    type_define	go to state 361
    ass_right	go to state 383
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 384
    option_function_identifier	go to state 385
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 199

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 386
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 200

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 387
    identifier	go to state 203



state 201

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    identifier  ->  ID .   (rule 319)

    ARRAY	shift, and go to state 388
    OPEN_MPAR	shift, and go to state 389

    $default	reduce using rule 319 (identifier)



state 202

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 203

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 390
    ASS_P	shift, and go to state 391

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 392



state 204

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 393
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 205

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 394
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 206

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 395
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 207

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 396
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 208

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 74)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 397
    sign_declaration	go to state 398
    declaration	go to state 67
    type_define	go to state 68



state 209

    declaration  ->  type_define option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 210

    assign_operator  ->  ASS_P .   (rule 132)

    $default	reduce using rule 132 (assign_operator)



state 211

    assign_operator  ->  ASS_N .   (rule 133)

    $default	reduce using rule 133 (assign_operator)



state 212

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 111)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 399
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 213

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 370)

    OPEN_PAR	shift, and go to state 400
    ID  	shift, and go to state 185

    array	go to state 401
    identifier	go to state 402



state 214

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 381
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 97
    type_define	go to state 361
    ass_right	go to state 383
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 384
    option_function_identifier	go to state 403
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 215

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 377)

    OPEN_PAR	shift, and go to state 400
    ID  	shift, and go to state 185

    array	go to state 404
    identifier	go to state 405



state 216

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 371)

    OPEN_PAR	shift, and go to state 400
    ID  	shift, and go to state 185

    array	go to state 406
    identifier	go to state 407



state 217

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 381)

    OPEN_PAR	shift, and go to state 400
    ID  	shift, and go to state 185

    array	go to state 408
    identifier	go to state 409



state 218

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier DOT . function   (rule 379)

    OPEN_PAR	shift, and go to state 400
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 410
    array	go to state 411
    identifier	go to state 412



state 219

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier IMPLY . function   (rule 380)

    OPEN_PAR	shift, and go to state 400
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 413
    array	go to state 414
    identifier	go to state 415



state 220

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 416
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 221

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 222

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 417



state 223

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 418



state 224

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    THEN	shift, and go to state 419
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 225

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    STRUCT_TYPE	shift, and go to state 420



state 226

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 422



state 227

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 424



state 228

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 425



state 229

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 426
    MUL 	shift, and go to state 427



state 230

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 231

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 432
    CHARDECLARATION	shift, and go to state 433



state 232

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    INTDECLARATION	shift, and go to state 434
    CHARDECLARATION	shift, and go to state 435



state 233

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

    MUL 	shift, and go to state 436



state 234

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 235

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 236

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 437
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 237

    member_in_exp  ->  address_exp .   (rule 179)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)

    CLOSE_PAR	shift, and go to state 438

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 238

    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 320)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 239

    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 382)

    CLOSE_PAR	shift, and go to state 351

    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



state 240

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    OPEN_PAR	shift, and go to state 439
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 440
    point_exp	go to state 441
    address_exp	go to state 442
    identifier	go to state 443
    struct_member_exp	go to state 444



state 241

    address_exp  ->  ADDRESS array .   (rule 208)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213

    DOT 	[reduce using rule 208 (address_exp)]
    $default	reduce using rule 208 (address_exp)



state 242

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    IMPLY	shift, and go to state 217



state 243

    address_exp  ->  ADDRESS address_exp .   (rule 210)

    $default	reduce using rule 210 (address_exp)



state 244

    address_exp  ->  ADDRESS identifier .   (rule 207)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)



state 245

    address_exp  ->  ADDRESS struct_member_exp .   (rule 209)

    $default	reduce using rule 209 (address_exp)



state 246

    member_in_exp  ->  SUB member_in_exp .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 247

    member_in_exp  ->  BNE member_in_exp .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 248

    ari_operator  ->  ADD .   (rule 190)

    $default	reduce using rule 190 (ari_operator)



state 249

    ari_operator  ->  SUB .   (rule 191)

    $default	reduce using rule 191 (ari_operator)



state 250

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 160)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    simple_ari_exp	go to state 445
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 251

    bi_operator  ->  INTER_OR .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 252

    bi_operator  ->  CON .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 253

    bi_operator  ->  ADDRESS .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 254

    relation_operator  ->  NE .   (rule 257)

    $default	reduce using rule 257 (relation_operator)



state 255

    relation_operator  ->  EQ .   (rule 260)

    $default	reduce using rule 260 (relation_operator)



state 256

    relation_operator  ->  GE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



state 257

    relation_operator  ->  LE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



state 258

    relation_operator  ->  GT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 259

    relation_operator  ->  LT .   (rule 259)

    $default	reduce using rule 259 (relation_operator)



state 260

    bi_operator  ->  LST .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 261

    bi_operator  ->  RST .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 262

    bi_operator  ->  MUL .   (rule 182)

    $default	reduce using rule 182 (bi_operator)



state 263

    bi_operator  ->  DIV .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 264

    bi_operator  ->  MOD .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 265

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 446
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 266

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 159)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 447
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 267

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 8 (complexProposition)



state 268

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 6 (complexProposition)



state 269

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 7 (complexProposition)



state 270

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 5 (complexProposition)



state 271

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 4 (complexProposition)



state 272

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 345)

    CLOSE_PAR	shift, and go to state 448



state 273

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 273
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 274
    rightaddrshift	go to state 130
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 275
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 276
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    strliteral	go to state 277
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 274

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 449



state 275

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 437
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)

    ari_operator	go to state 250



state 276

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 450
    CON 	shift, and go to state 286

    CLOSE_PAR	[reduce using rule 135 (ass_right)]
    $default	reduce using rule 135 (ass_right)



state 277

    ass_right  ->  strliteral .   (rule 136)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 451

    CLOSE_PAR	[reduce using rule 136 (ass_right)]
    $default	reduce using rule 136 (ass_right)



state 278

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 452
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 453
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 279

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 454
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 250
    inner_option_list_value	go to state 455



state 280

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 201)

    COMMA	shift, and go to state 454
    CON 	shift, and go to state 286

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 456



state 281

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 454

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 457



state 282

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 454
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 250
    inner_option_list_value	go to state 458



state 283

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 198)

    COMMA	shift, and go to state 454
    CON 	shift, and go to state 286

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 459



state 284

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 197)

    COMMA	shift, and go to state 454

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 460



state 285

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 461
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    type_define	go to state 361
    leftaddrshift	go to state 462
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 362
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 364
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 286

    array_exp  ->  array_exp CON . array_exp   (rule 192)

    OPEN_PAR	shift, and go to state 463
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126

    array_exp	go to state 464
    option_list_value	go to state 133
    option_struct_list_value	go to state 134



state 287

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 252)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 465
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 288

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 251)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 466
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 289

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 289
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    bool_exp	go to state 291
    prime_bool_exp	go to state 143
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 290

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    CLOSE_PAR	shift, and go to state 437
    NE  	shift, and go to state 293
    EQ  	shift, and go to state 294
    GE  	shift, and go to state 256
    LE  	shift, and go to state 257
    GT  	shift, and go to state 258
    LT  	shift, and go to state 259
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 244 (prime_bool_exp)]
    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 250
    relation_operator	go to state 295



state 291

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 240)

    CLOSE_PAR	shift, and go to state 467
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 292

    bool_exp  ->  NEGATION bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 237 (bool_exp)



state 293

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 254)
    relation_operator  ->  NE .   (rule 257)

    POINTERNULL	shift, and go to state 468
    STRLITERAL	shift, and go to state 128
    CHARLITERAL	shift, and go to state 96

    POINTERNULL	[reduce using rule 257 (relation_operator)]
    CHARLITERAL	[reduce using rule 257 (relation_operator)]
    $default	reduce using rule 257 (relation_operator)

    strliteral	go to state 469
    charliteral	go to state 470



state 294

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 253)
    relation_operator  ->  EQ .   (rule 260)

    POINTERNULL	shift, and go to state 471
    STRLITERAL	shift, and go to state 128
    CHARLITERAL	shift, and go to state 96

    POINTERNULL	[reduce using rule 260 (relation_operator)]
    CHARLITERAL	[reduce using rule 260 (relation_operator)]
    $default	reduce using rule 260 (relation_operator)

    strliteral	go to state 472
    charliteral	go to state 473



state 295

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 241)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 474
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 296

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 351)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 475



state 297

    bool_exp  ->  bool_exp OR . bool_exp   (rule 239)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 476
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 298

    bool_exp  ->  bool_exp AND . bool_exp   (rule 238)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 477
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 299

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 248)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 478
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 300

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 247)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 479
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 301

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 480
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 302

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 303

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 304

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 305

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 306

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 485



state 307

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 320)

    CLOSE_PAR	shift, and go to state 347



state 308

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . error   (rule 305)

    error	shift, and go to state 486
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 487
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 488
    STRUCT_TYPE	shift, and go to state 489

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 490



state 309

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COLON	shift, and go to state 491



state 310

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 492

    $default	reduce using rule 326 (option_frame_identifier)

    option_frame_identifier	go to state 493



state 311

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 357
    STRUCT_TYPE	shift, and go to state 494



state 312

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 422

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 313

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 424

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 314

    type_define  ->  VOIDDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 425

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 315

    type_define  ->  FLOATDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 426
    MUL 	shift, and go to state 427

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 316

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 495
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_left	go to state 496
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 173
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 175



state 317

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 497
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 202
    identifier	go to state 203



state 318

    for_sta_init  ->  declaration .   (rule 339)

    $default	reduce using rule 339 (for_sta_init)



state 319

    for_sta_init  ->  ass_statement .   (rule 338)

    $default	reduce using rule 338 (for_sta_init)



state 320

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 337)

    COMMA	shift, and go to state 498



state 321

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 336)

    DO  	shift, and go to state 499



state 322

    bool_par  ->  error CLOSE_PAR .   (rule 318)

    $default	reduce using rule 318 (bool_par)



state 323

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 500
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 324

    statement_bpar  ->  error . CLOSE_BPAR   (rule 316)

    CLOSE_BPAR	shift, and go to state 501



state 325

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 315)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 502
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 326

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 335)

    $default	reduce using rule 335 (while_statement)



state 327

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 503
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 328

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 354)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 355)

    COMMA	shift, and go to state 504
    CLOSE_PAR	shift, and go to state 505

    CLOSE_PAR	[reduce using rule 356 (option_output)]
    $default	reduce using rule 356 (option_output)

    option_output	go to state 506



state 329

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 351)

    THEN	shift, and go to state 507
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 330

    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 146
    STRUCT_TYPE	shift, and go to state 494



state 331

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 508

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 332

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 509

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 333

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 426
    MUL 	shift, and go to state 510

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 334

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 511
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 512
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 182
    type_define	go to state 68



state 335

    sign_declaration  ->  SIGNED . declaration   (rule 77)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 513
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 514
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 183
    type_define	go to state 68



state 336

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 332)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 333)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 334)

    CLOSE_PAR	shift, and go to state 515
    OR  	shift, and go to state 349
    AND 	shift, and go to state 350



state 337

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 184
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 516



state 338

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 319)

    OPEN_MPAR	shift, and go to state 517

    $default	reduce using rule 319 (identifier)



state 339

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL identifier .   (rule 151)

    CLOSE_PAR	shift, and go to state 518

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



state 340

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 334)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 519
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 520
    struct_member_exp	go to state 239



state 341

    imply_pre  ->  NEGATION imply_pre .   (rule 331)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 332)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 333)


    $default	reduce using rule 331 (imply_pre)



state 342

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 65)

    $default	reduce using rule 65 (statement)



state 343

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 344

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 147)

    $default	reduce using rule 147 (array)



state 345

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 157)

    OPEN_MPAR	shift, and go to state 521

    $default	reduce using rule 157 (point_exp)



state 346

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 378)

    IMPLY	shift, and go to state 522



state 347

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 320)

    $default	reduce using rule 320 (identifier)



state 348

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 523



state 349

    imply_pre  ->  imply_pre OR . imply_pre   (rule 333)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 340
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 524
    struct_member_exp	go to state 109



state 350

    imply_pre  ->  imply_pre AND . imply_pre   (rule 332)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 340
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 525
    struct_member_exp	go to state 109



state 351

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 382)

    $default	reduce using rule 382 (struct_member_exp)



state 352

    option_projection  ->  COMMA . statement option_projection   (rule 329)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 526
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 353

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 527



state 354

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 528



state 355

    function_define  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 529



state 356

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 381
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 97
    type_define	go to state 361
    ass_right	go to state 383
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 384
    option_function_identifier	go to state 530
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 357

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 302
    identifier	go to state 203



state 358

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 304
    identifier	go to state 203



state 359

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 531
    ID  	shift, and go to state 532

    identifier	go to state 533



state 360

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 261)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 262)

    INTDECLARATION	shift, and go to state 534
    CHARDECLARATION	shift, and go to state 535



state 361

    all_type_define  ->  type_define .   (rule 264)

    $default	reduce using rule 264 (all_type_define)



state 362

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 156)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 536
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 363

    all_type_define  ->  sign_type_define .   (rule 263)

    $default	reduce using rule 263 (all_type_define)



state 364

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 155)

    MUL 	shift, and go to state 537



state 365

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 162
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 538
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 539
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 540
    OPEN_PAR	shift, and go to state 163
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 541
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 165
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 166
    function_define	go to state 62
    function	go to state 167
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 173
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 174
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 175



state 366

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 542
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 367

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 368

    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    $default	reduce using rule 115 (ass_left)



state 369

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)

    CLOSE_PAR	shift, and go to state 346



state 370

    ass_left  ->  identifier .   (rule 112)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 320)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 371

    ass_left  ->  struct_member_exp .   (rule 113)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 382)

    CLOSE_PAR	shift, and go to state 351

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 372

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    OPEN_PAR	shift, and go to state 543
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    ass_left	go to state 496
    leftaddrshift	go to state 71
    array	go to state 544
    point_exp	go to state 368
    address_exp	go to state 369
    identifier	go to state 370
    struct_member_exp	go to state 371



state 373

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 545
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 374

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    OPEN_PAR	shift, and go to state 439
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 440
    point_exp	go to state 441
    address_exp	go to state 369
    identifier	go to state 443
    struct_member_exp	go to state 444



state 375

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 361)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    COMMA	shift, and go to state 546
    CLOSE_PAR	shift, and go to state 547
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 363 (option_input)]
    $default	reduce using rule 363 (option_input)

    option_input	go to state 548



state 376

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 359)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    COMMA	shift, and go to state 546
    CLOSE_PAR	shift, and go to state 549
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 363 (option_input)]
    $default	reduce using rule 363 (option_input)

    option_input	go to state 550



state 377

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 362)

    CLOSE_PAR	shift, and go to state 551



state 378

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 552
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 379

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 553
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 380

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 554
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 381

    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)
    option_function_identifier  ->  ADDRESS . error   (rule 310)

    error	shift, and go to state 555
    OPEN_PAR	shift, and go to state 240
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 241
    point_exp	go to state 242
    address_exp	go to state 243
    identifier	go to state 244
    struct_member_exp	go to state 245



state 382

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 556
    OPEN_MPAR	shift, and go to state 199

    $default	reduce using rule 319 (identifier)



state 383

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 306)

    COMMA	shift, and go to state 557

    $default	reduce using rule 313 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 558



state 384

    option_function_identifier  ->  all_type_define .   (rule 308)

    $default	reduce using rule 308 (option_function_identifier)



state 385

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 559



state 386

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 561
    ari_operator	go to state 250



state 387

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 388

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    ASS_P	shift, and go to state 562



state 389

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 563
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 390

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 104)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 105)

    error	shift, and go to state 564
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 565
    identifier	go to state 203



state 391

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 98)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 566
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 392

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 393

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

    $default	reduce using rule 32 (statement)



state 394

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    AND 	shift, and go to state 207

    $default	reduce using rule 31 (statement)



state 395

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

    AND 	shift, and go to state 207

    $default	reduce using rule 55 (statement)



state 396

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



state 397

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 74)

    CLOSE_BPAR	shift, and go to state 567



state 398

    option_struct_declaration  ->  sign_declaration .   (rule 66)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 67)

    AND 	shift, and go to state 568

    $default	reduce using rule 66 (option_struct_declaration)



state 399

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 111)

    $default	reduce using rule 111 (ass_statement)



state 400

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)

    OPEN_PAR	shift, and go to state 569
    ID  	shift, and go to state 185

    array	go to state 570
    identifier	go to state 307



state 401

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 573



state 402

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 574



state 403

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 575



state 404

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 576



state 405

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 577



state 406

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 578



state 407

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 579



state 408

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 580



state 409

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 581



state 410

    struct_member_exp  ->  identifier DOT function .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 411

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 571
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 582



state 412

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 583



state 413

    struct_member_exp  ->  identifier IMPLY function .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 414

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 571
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 584



state 415

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 585



state 416

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 417

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 222
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 586



state 418

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 587



state 419

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 588
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 420

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 589



state 421

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 590
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 422

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 593



state 423

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 594
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 424

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 596



state 425

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 597
    MUL 	shift, and go to state 598



state 426

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 599
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 427

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 601



state 428

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 602



state 429

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 603



state 430

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 426
    MUL 	shift, and go to state 604



state 431

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 605
    CHARDECLARATION	shift, and go to state 606



state 432

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 607
    MUL 	shift, and go to state 608



state 433

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 610



state 434

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 611



state 435

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 612



state 436

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 613
    MUL 	shift, and go to state 614



state 437

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 438

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 378)

    IMPLY	shift, and go to state 522

    IMPLY	[reduce using rule 211 (address_exp)]
    $default	reduce using rule 211 (address_exp)



state 439

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    INTDECLARATION	shift, and go to state 615
    CHARDECLARATION	shift, and go to state 616
    FLOATDECLARATION	shift, and go to state 617
    OPEN_PAR	shift, and go to state 439
    UNSIGNED	shift, and go to state 618
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 440
    point_exp	go to state 441
    address_exp	go to state 442
    identifier	go to state 443
    struct_member_exp	go to state 444



state 440

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215



state 441

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 375)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217



state 442

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)

    CLOSE_PAR	shift, and go to state 438



state 443

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 320)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  identifier . DOT function   (rule 379)
    struct_member_exp  ->  identifier . IMPLY function   (rule 380)

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219



state 444

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 382)

    CLOSE_PAR	shift, and go to state 351



state 445

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 160)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 160 (ari_exp)]
    CON 	[reduce using rule 160 (ari_exp)]
    ADDRESS	[reduce using rule 160 (ari_exp)]
    LST 	[reduce using rule 160 (ari_exp)]
    RST 	[reduce using rule 160 (ari_exp)]
    MUL 	[reduce using rule 160 (ari_exp)]
    DIV 	[reduce using rule 160 (ari_exp)]
    MOD 	[reduce using rule 160 (ari_exp)]
    $default	reduce using rule 160 (ari_exp)

    bi_operator	go to state 265



state 446

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 167)

    $default	reduce using rule 167 (simple_ari_exp)



state 447

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ADD 	[reduce using rule 159 (ari_exp)]
    SUB 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)

    ari_operator	go to state 250



state 448

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 345)

    OPEN_BPAR	shift, and go to state 619



state 449

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (ass_right)



state 450

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 195)

    $default	reduce using rule 195 (array_exp)



state 451

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    OPEN_PAR	shift, and go to state 620



state 452

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 452
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 453
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 453

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 450
    CON 	shift, and go to state 286



state 454

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 204)
    inner_option_list_value  ->  COMMA . error   (rule 206)

    error	shift, and go to state 621
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 278
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 622
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 623
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 624
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 455

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 625



state 456

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 201)

    CLOSE_BPAR	shift, and go to state 626



state 457

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 627



state 458

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 628



state 459

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 198)

    CLOSE_MPAR	shift, and go to state 629



state 460

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 630



state 461

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 631
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 462

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 140)

    CLOSE_PAR	shift, and go to state 632



state 463

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)

    OPEN_PAR	shift, and go to state 463
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126

    array_exp	go to state 453
    option_list_value	go to state 133
    option_struct_list_value	go to state 134



state 464

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  array_exp CON array_exp .   (rule 192)


    $default	reduce using rule 192 (array_exp)



state 465

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 252)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 252 (prime_bool_exp)

    ari_operator	go to state 250



state 466

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 251)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 250



state 467

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 240)

    $default	reduce using rule 240 (bool_exp)



state 468

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 250)

    $default	reduce using rule 250 (prime_bool_exp)



state 469

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 246)

    $default	reduce using rule 246 (prime_bool_exp)



state 470

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)



state 471

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 249)

    $default	reduce using rule 249 (prime_bool_exp)



state 472

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 245)

    $default	reduce using rule 245 (prime_bool_exp)



state 473

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 474

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 241)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 241 (prime_bool_exp)

    ari_operator	go to state 250



state 475

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 351)

    ELSE	shift, and go to state 633

    $default	reduce using rule 353 (option_else_statement)

    option_else_statement	go to state 634



state 476

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 239)

    AND 	shift, and go to state 298

    $default	reduce using rule 239 (bool_exp)



state 477

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 238 (bool_exp)



state 478

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 248)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 248 (prime_bool_exp)

    ari_operator	go to state 250



state 479

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 247)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 250



state 480

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 481

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    MUL 	shift, and go to state 635



state 482

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 636
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 637
    identifier	go to state 638



state 483

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 639
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 640
    identifier	go to state 641



state 484

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 642
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 643
    identifier	go to state 644



state 485

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 645



state 486

    inner_option_define_identifier  ->  COMMA error .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 487

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    MUL 	shift, and go to state 646



state 488

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 647



state 489

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 295)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 648
    ID  	shift, and go to state 152

    identifier	go to state 649



state 490

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 650
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 651
    identifier	go to state 652



state 491

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 653



state 492

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 325)
    option_frame_identifier  ->  COMMA . error   (rule 327)

    error	shift, and go to state 654
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 655



state 493

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 656



state 494

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 657
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 303
    identifier	go to state 203



state 495

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 658
    CHARDECLARATION	shift, and go to state 659
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 660
    OPEN_PAR	shift, and go to state 495
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 661
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_left	go to state 496
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 173
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 175



state 496

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 343



state 497

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 613
    MUL 	shift, and go to state 662
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 387
    identifier	go to state 203



state 498

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 337)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 342 (for_sta_condition)

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 663
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_condition	go to state 664
    struct_member_exp	go to state 109



state 499

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 336)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 665



state 500

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (bool_par)



state 501

    statement_bpar  ->  error CLOSE_BPAR .   (rule 316)

    $default	reduce using rule 316 (statement_bpar)



state 502

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 315)

    CLOSE_BPAR	shift, and go to state 666
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 503

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 667



state 504

    option_output  ->  COMMA . ass_right option_output   (rule 357)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 668
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 505

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 354)

    $default	reduce using rule 354 (output_statement)



state 506

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 355)

    CLOSE_PAR	shift, and go to state 669



state 507

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 351)

    error	shift, and go to state 324
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    OPEN_BPAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 588
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    statement_bpar	go to state 475
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 508

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 670
    MUL 	shift, and go to state 593



state 509

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 671
    MUL 	shift, and go to state 596



state 510

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 672
    MUL 	shift, and go to state 601



state 511

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 607
    MUL 	shift, and go to state 673

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 512

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 674

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 513

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 611

    $default	reduce using rule 90 (type_define)



state 514

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 612

    $default	reduce using rule 92 (type_define)



state 515

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 334)

    IMPLY	shift, and go to state 523

    $default	reduce using rule 334 (imply_pre)



state 516

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL identifier .   (rule 151)

    CLOSE_PAR	shift, and go to state 675

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



state 517

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 676
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 518

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 677



state 519

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 334)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 428
    CHARDECLARATION	shift, and go to state 429
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 519
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 431
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 520
    struct_member_exp	go to state 239



state 520

    imply_pre  ->  imply_pre . AND imply_pre   (rule 332)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 333)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 334)

    CLOSE_PAR	shift, and go to state 678
    OR  	shift, and go to state 349
    AND 	shift, and go to state 350



state 521

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 679
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 522

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 378)

    OPEN_PAR	shift, and go to state 400
    ID  	shift, and go to state 185

    array	go to state 680
    identifier	go to state 681



state 523

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 682



state 524

    imply_pre  ->  imply_pre . AND imply_pre   (rule 332)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 333)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 333)

    AND 	shift, and go to state 350

    $default	reduce using rule 333 (imply_pre)



state 525

    imply_pre  ->  imply_pre . AND imply_pre   (rule 332)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 332)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 333)


    $default	reduce using rule 332 (imply_pre)



state 526

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 329)

    COMMA	shift, and go to state 352
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

    $default	reduce using rule 328 (option_projection)

    option_projection	go to state 683



state 527

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 684



state 528

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 685



state 529

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    CLOSE_PAR	shift, and go to state 686



state 530

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 687



state 531

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 688



state 532

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    identifier  ->  ID .   (rule 319)

    OPEN_MPAR	shift, and go to state 689

    $default	reduce using rule 319 (identifier)



state 533

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 518



state 534

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



state 535

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 262)

    $default	reduce using rule 262 (sign_type_define)



state 536

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 156)

    $default	reduce using rule 156 (point_exp)



state 537

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 155)

    CLOSE_PAR	shift, and go to state 690



state 538

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 691

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 539

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 692

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 540

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 693

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 541

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 694
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 695
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 182
    type_define	go to state 68



state 542

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 543

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    INTDECLARATION	shift, and go to state 696
    CHARDECLARATION	shift, and go to state 697
    FLOATDECLARATION	shift, and go to state 698
    OPEN_PAR	shift, and go to state 543
    UNSIGNED	shift, and go to state 699
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    ass_left	go to state 496
    leftaddrshift	go to state 71
    array	go to state 544
    point_exp	go to state 368
    address_exp	go to state 442
    identifier	go to state 370
    struct_member_exp	go to state 371



state 544

    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 545

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 546

    option_input  ->  COMMA . identifier option_input   (rule 364)
    option_input  ->  COMMA . array option_input   (rule 365)

    OPEN_PAR	shift, and go to state 400
    ID  	shift, and go to state 185

    array	go to state 700
    identifier	go to state 701



state 547

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)



state 548

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 361)

    CLOSE_PAR	shift, and go to state 702



state 549

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)



state 550

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 703



state 551

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 362)

    $default	reduce using rule 362 (input_statement)



state 552

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 553

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 554

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 555

    option_function_identifier  ->  ADDRESS error .   (rule 310)

    $default	reduce using rule 310 (option_function_identifier)



state 556

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 381
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 97
    type_define	go to state 361
    ass_right	go to state 383
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 384
    option_function_identifier	go to state 704
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 557

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 311)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)
    inner_option_function_identifier  ->  COMMA . error   (rule 314)

    error	shift, and go to state 705
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 706
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 707
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 558

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)



state 559

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 560

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 148)
    option_ari_exp  ->  COMMA . error   (rule 149)

    error	shift, and go to state 708
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 709
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 561

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 710



state 562

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 463
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    STRLITERAL	shift, and go to state 128

    array_exp	go to state 711
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    strliteral	go to state 712



state 563

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 713
    ari_operator	go to state 250



state 564

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 105)

    $default	reduce using rule 105 (inner_option_identifier_array_declaration)



state 565

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (inner_option_identifier_array_declaration)



state 566

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 390

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 714



state 567

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 74)

    $default	reduce using rule 74 (struct_define_statement)



state 568

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 715
    sign_declaration	go to state 398
    declaration	go to state 67
    type_define	go to state 68



state 569

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)

    INTDECLARATION	shift, and go to state 615
    CHARDECLARATION	shift, and go to state 616
    FLOATDECLARATION	shift, and go to state 617
    OPEN_PAR	shift, and go to state 569
    UNSIGNED	shift, and go to state 618
    ID  	shift, and go to state 185

    array	go to state 570
    identifier	go to state 307



state 570

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)

    CLOSE_PAR	shift, and go to state 344



state 571

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  DOT . function   (rule 388)

    OPEN_PAR	shift, and go to state 400
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 716
    array	go to state 717
    identifier	go to state 718



state 572

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 386)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 387)
    option_struct_member_exp  ->  IMPLY . function   (rule 389)

    OPEN_PAR	shift, and go to state 400
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 719
    array	go to state 720
    identifier	go to state 721



state 573

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 574

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 575

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)



state 576

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 577

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 578

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 579

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 580

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)



state 581

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 582

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 583

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)



state 584

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 585

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 586

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 587

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 722



state 588

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 161)

    ELSE	shift, and go to state 723
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ELSE	[reduce using rule 165 (option_exp_else_statement)]
    ADD 	[reduce using rule 165 (option_exp_else_statement)]
    SUB 	[reduce using rule 165 (option_exp_else_statement)]
    $default	reduce using rule 165 (option_exp_else_statement)

    option_exp_else_statement	go to state 724
    ari_operator	go to state 250



state 589

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 726



state 590

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



state 591

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 162)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    ADD 	[reduce using rule 162 (type_cast_alg_exp)]
    SUB 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 265
    ari_operator	go to state 727



state 592

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 729
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 593

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 730



state 594

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



state 595

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 731
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 596

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 732



state 597

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 733
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 598

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 734



state 599

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



state 600

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 735
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 601

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 736



state 602

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 737
    MUL 	shift, and go to state 593



state 603

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 738
    MUL 	shift, and go to state 596



state 604

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 739
    MUL 	shift, and go to state 601



state 605

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 607
    MUL 	shift, and go to state 673



state 606

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 740



state 607

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 741
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 608

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 742
    MUL 	shift, and go to state 743



state 609

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 744
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 610

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 745
    MUL 	shift, and go to state 746



state 611

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 747
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 612

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 748
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 613

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 749
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 614

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 750



state 615

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 751



state 616

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 752



state 617

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 753



state 618

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 755



state 619

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 345)

    CASE	shift, and go to state 756
    DEFAULT	shift, and go to state 757

    case_par	go to state 758



state 620

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 759



state 621

    inner_option_list_value  ->  COMMA error .   (rule 206)

    $default	reduce using rule 206 (inner_option_list_value)



state 622

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 454
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 250
    inner_option_list_value	go to state 760



state 623

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 204)

    COMMA	shift, and go to state 454
    CON 	shift, and go to state 286

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 761



state 624

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 203)

    COMMA	shift, and go to state 454

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 762



state 625

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)



state 626

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 201)

    $default	reduce using rule 201 (option_struct_list_value)



state 627

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 200)

    $default	reduce using rule 200 (option_struct_list_value)



state 628

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 629

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 198)

    $default	reduce using rule 198 (option_list_value)



state 630

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 197)

    $default	reduce using rule 197 (option_list_value)



state 631

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 658
    CHARDECLARATION	shift, and go to state 659
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 660
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 661
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 632

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 140)

    $default	reduce using rule 140 (rightaddrshift)



state 633

    option_else_statement  ->  ELSE . statement_bpar   (rule 352)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 763



state 634

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 351)

    $default	reduce using rule 351 (if_statement)



state 635

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 764



state 636

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 765
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766
    identifier	go to state 767



state 637

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 638

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 274)

    ARRAY	shift, and go to state 768
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 769



state 639

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 770
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 771
    identifier	go to state 772



state 640

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 641

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 270)

    ARRAY	shift, and go to state 773
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 774



state 642

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 775
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 776
    identifier	go to state 777



state 643

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 644

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    ARRAY	shift, and go to state 778
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 779



state 645

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 780



state 646

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 781



state 647

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 782
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 783



state 648

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 784



state 649

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 295)

    ARRAY	shift, and go to state 785
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 786



state 650

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 787
    identifier	go to state 788



state 651

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)



state 652

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 789
    COMMA	shift, and go to state 308
    OPEN_MPAR	shift, and go to state 790

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 791



state 653

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 64)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 792
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 654

    option_frame_identifier  ->  COMMA error .   (rule 327)

    $default	reduce using rule 327 (option_frame_identifier)



state 655

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 325)

    COMMA	shift, and go to state 492

    $default	reduce using rule 326 (option_frame_identifier)

    option_frame_identifier	go to state 793



state 656

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 794



state 657

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 795
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 387
    identifier	go to state 203



state 658

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 508



state 659

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 509



state 660

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 426
    MUL 	shift, and go to state 510



state 661

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 605
    CHARDECLARATION	shift, and go to state 796



state 662

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 750
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 387
    identifier	go to state 203



state 663

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    for_sta_condition  ->  bool_exp .   (rule 341)

    OR  	shift, and go to state 297
    AND 	shift, and go to state 298

    $default	reduce using rule 341 (for_sta_condition)



state 664

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 337)

    COMMA	shift, and go to state 797



state 665

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 336)

    $default	reduce using rule 336 (for_statement)



state 666

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 315)

    $default	reduce using rule 315 (statement_bpar)



state 667

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 798



state 668

    option_output  ->  COMMA ass_right . option_output   (rule 357)

    COMMA	shift, and go to state 504

    $default	reduce using rule 356 (option_output)

    option_output	go to state 799



state 669

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (output_statement)



state 670

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 800
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 802
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 729
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 671

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 803
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 805
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 731
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 672

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 806
    INTLITERAL	shift, and go to state 807
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 735
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 673

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 808
    MUL 	shift, and go to state 743



state 674

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 809
    MUL 	shift, and go to state 746



state 675

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    OPEN_PAR	shift, and go to state 810



state 676

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 811
    ari_operator	go to state 250



state 677

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 812



state 678

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 334)

    $default	reduce using rule 334 (imply_pre)



state 679

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 813
    ari_operator	go to state 250



state 680

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 814



state 681

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 815



state 682

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 816
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 683

    option_projection  ->  COMMA statement option_projection .   (rule 329)

    $default	reduce using rule 329 (option_projection)



state 684

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 685

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 817



state 686

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 818



state 687

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)



state 688

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    CLOSE_PAR	shift, and go to state 675



state 689

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 819
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 690

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 155)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 820
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 691

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 821



state 692

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 822



state 693

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 823



state 694

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 824

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 695

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 825

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 696

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 691



state 697

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 692



state 698

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 693



state 699

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 826



state 700

    option_input  ->  COMMA array . option_input   (rule 365)

    COMMA	shift, and go to state 546

    $default	reduce using rule 363 (option_input)

    option_input	go to state 827



state 701

    option_input  ->  COMMA identifier . option_input   (rule 364)

    COMMA	shift, and go to state 546

    $default	reduce using rule 363 (option_input)

    option_input	go to state 828



state 702

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 361)

    $default	reduce using rule 361 (input_statement)



state 703

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)



state 704

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 307)

    CLOSE_PAR	shift, and go to state 829



state 705

    inner_option_function_identifier  ->  COMMA error .   (rule 314)

    $default	reduce using rule 314 (inner_option_function_identifier)



state 706

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 830
    OPEN_MPAR	shift, and go to state 199

    $default	reduce using rule 319 (identifier)



state 707

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 557

    $default	reduce using rule 313 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 831



state 708

    option_ari_exp  ->  COMMA error .   (rule 149)

    $default	reduce using rule 149 (option_ari_exp)



state 709

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 832
    ari_operator	go to state 250



state 710

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)



state 711

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 390
    CON 	shift, and go to state 286

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 833



state 712

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 390

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 834



state 713

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    CLOSE_MPAR	shift, and go to state 835



state 714

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 715

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 67)

    $default	reduce using rule 67 (option_struct_declaration)



state 716

    option_struct_member_exp  ->  DOT function .   (rule 388)

    $default	reduce using rule 388 (option_struct_member_exp)



state 717

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 571
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 836



state 718

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 837



state 719

    option_struct_member_exp  ->  IMPLY function .   (rule 389)

    $default	reduce using rule 389 (option_struct_member_exp)



state 720

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 571
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 838



state 721

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 571
    IMPLY	shift, and go to state 572

    DOT 	[reduce using rule 383 (option_struct_member_exp)]
    IMPLY	[reduce using rule 383 (option_struct_member_exp)]
    $default	reduce using rule 383 (option_struct_member_exp)

    option_struct_member_exp	go to state 839



state 722

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 840



state 723

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 164)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 841
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 724

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 161)

    $default	reduce using rule 161 (ari_exp)



state 725

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 842
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 726

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 843



state 727

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 163)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    simple_ari_exp	go to state 844
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 728

    casted_element  ->  type_cast_alg_exp .   (rule 235)

    $default	reduce using rule 235 (casted_element)



state 729

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 730

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 845
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 731

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 732

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 846
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 733

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 734

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 847
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 735

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 736

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 848
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 737

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 729
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 738

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 731
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 739

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 806
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 735
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 740

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 849
    MUL 	shift, and go to state 746



state 741

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 742

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 850
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 743

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 851



state 744

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 745

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 852
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 746

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 853



state 747

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 748

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 749

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 750

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 854
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 751

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 855



state 752

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 856



state 753

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 857



state 754

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 824



state 755

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 858



state 756

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 346)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 859
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 757

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 347)

    COLON	shift, and go to state 860



state 758

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 345)

    CLOSE_BPAR	shift, and go to state 861



state 759

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 862



state 760

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)



state 761

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



state 762

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 203)

    $default	reduce using rule 203 (inner_option_list_value)



state 763

    option_else_statement  ->  ELSE statement_bpar .   (rule 352)

    $default	reduce using rule 352 (option_else_statement)



state 764

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 863



state 765

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 864
    identifier	go to state 865



state 766

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 767

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866



state 768

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867



state 769

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 770

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868
    identifier	go to state 869



state 771

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 772

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870



state 773

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 871



state 774

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 775

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 872



state 776

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 777

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 284)

    ARRAY	shift, and go to state 873
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 874



state 778

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 308
    OPEN_MPAR	shift, and go to state 875

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 876



state 779

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 780

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 877



state 781

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 878



state 782

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 879



state 783

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)



state 784

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 880



state 785

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 881



state 786

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



state 787

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)



state 788

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 303)

    ARRAY	shift, and go to state 882
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 883



state 789

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 308
    OPEN_MPAR	shift, and go to state 884

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 885



state 790

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 886
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 791

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (inner_option_define_identifier)



state 792

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 887
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 793

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 325)

    $default	reduce using rule 325 (option_frame_identifier)



state 794

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 888



state 795

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 843
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 387
    identifier	go to state 203



state 796

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 674



state 797

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 337)

    OPEN_PAR	shift, and go to state 372
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    $default	reduce using rule 344 (for_sta_control)

    ass_statement	go to state 889
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 192
    point_exp	go to state 73
    identifier	go to state 74
    for_sta_control	go to state 890
    struct_member_exp	go to state 82



state 798

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 891
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 799

    option_output  ->  COMMA ass_right option_output .   (rule 357)

    $default	reduce using rule 357 (option_output)



state 800

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 892
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 801

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 893
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 319 (identifier)]
    $default	reduce using rule 319 (identifier)



state 802

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 894

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 803

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 895
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 804

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 896
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 319 (identifier)]
    $default	reduce using rule 319 (identifier)



state 805

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 897

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 806

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 898
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 319 (identifier)]
    $default	reduce using rule 319 (identifier)



state 807

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 899

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 808

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 900
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 850
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 809

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 901
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 902
    INTLITERAL	shift, and go to state 903
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 852
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 810

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 87)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 904



state 811

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 905



state 812

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 906



state 813

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 907



state 814

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 815

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 816

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 908
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 817

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 818

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 909
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 819

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 910
    ari_operator	go to state 250



state 820

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ADD 	[reduce using rule 155 (point_exp)]
    SUB 	[reduce using rule 155 (point_exp)]
    $default	reduce using rule 155 (point_exp)

    ari_operator	go to state 250



state 821

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_PAR	shift, and go to state 911
    ID  	shift, and go to state 912
    INTLITERAL	shift, and go to state 913



state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_PAR	shift, and go to state 914
    ID  	shift, and go to state 915
    INTLITERAL	shift, and go to state 916



state 823

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 917
    INTLITERAL	shift, and go to state 918



state 824

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 919



state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 920



state 826

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 825



state 827

    option_input  ->  COMMA array option_input .   (rule 365)

    $default	reduce using rule 365 (option_input)



state 828

    option_input  ->  COMMA identifier option_input .   (rule 364)

    $default	reduce using rule 364 (option_input)



state 829

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 307)

    COMMA	shift, and go to state 557

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 313 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 921



state 830

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 381
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 97
    type_define	go to state 361
    ass_right	go to state 383
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 384
    option_function_identifier	go to state 922
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 831

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)



state 832

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)



state 833

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 834

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 835

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 390
    ASS_P	shift, and go to state 923

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 924



state 836

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 837

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)



state 838

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 387)

    $default	reduce using rule 387 (option_struct_member_exp)



state 839

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 840

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 925
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



state 841

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 164)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    ari_operator	go to state 250



state 842

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 843

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 926
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 844

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 163 (type_cast_alg_exp)]
    CON 	[reduce using rule 163 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 163 (type_cast_alg_exp)]
    LST 	[reduce using rule 163 (type_cast_alg_exp)]
    RST 	[reduce using rule 163 (type_cast_alg_exp)]
    MUL 	[reduce using rule 163 (type_cast_alg_exp)]
    DIV 	[reduce using rule 163 (type_cast_alg_exp)]
    MOD 	[reduce using rule 163 (type_cast_alg_exp)]
    $default	reduce using rule 163 (type_cast_alg_exp)

    bi_operator	go to state 265



state 845

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 846

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 847

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 848

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 849

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 902
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 852
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 850

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 851

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 927
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 852

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 853

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 928
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 854

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 855

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 912



state 856

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    ID  	shift, and go to state 915



state 857

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 917



state 858

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 929



state 859

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 346)

    COLON	shift, and go to state 930



state 860

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 347)

    OPEN_PAR	shift, and go to state 931



state 861

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 345)

    $default	reduce using rule 345 (switch_statement)



state 862

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

    OPEN_PAR	shift, and go to state 932



state 863

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 933



state 864

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 865

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 934



state 866

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 867

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 868

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 869

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 935



state 870

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 871

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 872

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 936



state 873

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 937



state 874

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 875

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 938
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 876

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 877

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 69 (empty_statement)

    statement	go to state 939
    empty_statement	go to state 940
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 878

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 941



state 879

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 880

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 881

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 882

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 942



state 883

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 884

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 943
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 885

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 886

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 944
    CLOSE_MPAR	shift, and go to state 945
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 887

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 888

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 946
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 889

    for_sta_control  ->  ass_statement .   (rule 343)

    $default	reduce using rule 343 (for_sta_control)



state 890

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 337)

    CLOSE_PAR	shift, and go to state 947



state 891

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 948
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 892

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 949
    CHARDECLARATION	shift, and go to state 950
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 951
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 893

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 952



state 894

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 953



state 895

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 954
    CHARDECLARATION	shift, and go to state 955
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 956
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 896

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 957



state 897

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 958



state 898

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 959



state 899

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 960



state 900

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 961
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 319 (identifier)]
    $default	reduce using rule 319 (identifier)



state 901

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 962
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 902

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 319)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 963
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 319 (identifier)]
    $default	reduce using rule 319 (identifier)



state 903

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 964

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 904

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 87)

    CLOSE_PAR	shift, and go to state 965



state 905

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    CLOSE_PAR	shift, and go to state 966

    CLOSE_PAR	[reduce using rule 141 (array)]
    $default	reduce using rule 141 (array)



state 906

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 907

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 908

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 909

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 70)

    CLOSE_BPAR	shift, and go to state 967
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 910

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_MPAR	shift, and go to state 968



state 911

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_PAR	shift, and go to state 969



state 912

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 893



state 913

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 894



state 914

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_PAR	shift, and go to state 970



state 915

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 896



state 916

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 897



state 917

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 898



state 918

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 899



state 919

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 971



state 920

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_PAR	shift, and go to state 972
    ID  	shift, and go to state 973
    INTLITERAL	shift, and go to state 974



state 921

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 307)

    $default	reduce using rule 307 (option_function_identifier)



state 922

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 312)

    CLOSE_PAR	shift, and go to state 975



state 923

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 463
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    STRLITERAL	shift, and go to state 128

    array_exp	go to state 976
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    strliteral	go to state 977



state 924

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 925

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 926

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 927

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 928

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 929

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    ID  	shift, and go to state 973



state 930

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 346)

    OPEN_PAR	shift, and go to state 978



state 931

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 347)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 979
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 932

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 137)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 980



state 933

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 981



state 934

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 935

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 936

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 937

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 938

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)

    CLOSE_MPAR	shift, and go to state 982
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 939

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 68)

    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

    $default	reduce using rule 68 (empty_statement)



state 940

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 983



state 941

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 984



state 942

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 943

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)

    CLOSE_MPAR	shift, and go to state 985
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 944

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 986
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 945

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 987



state 946

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 988
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 947

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 337)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 989



state 948

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 949

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 990



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 991



state 951

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 605
    CHARDECLARATION	shift, and go to state 992



state 952

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 993
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 953

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 994
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 954

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 995



state 955

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 996



state 956

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 605
    CHARDECLARATION	shift, and go to state 997



state 957

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 998
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 958

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 999
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 959

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1000
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 960

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1001
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 961

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 1002



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 320)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 378)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 382)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 1003
    CHARDECLARATION	shift, and go to state 1004
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 430
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 1005
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 963

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 1006



state 964

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 1007



state 965

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 966

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 1008



state 967

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)

    $default	reduce using rule 70 (function_define)



state 968

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_PAR	shift, and go to state 966



state 969

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTDECLARATION	shift, and go to state 1009
    CHARDECLARATION	shift, and go to state 1010
    UNSIGNED	shift, and go to state 1011



state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTDECLARATION	shift, and go to state 1012
    CHARDECLARATION	shift, and go to state 1013
    UNSIGNED	shift, and go to state 1014



state 971

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 961



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_PAR	shift, and go to state 1015



state 973

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 963



state 974

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 964



state 975

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 312)

    COMMA	shift, and go to state 557

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 313 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 1016



state 976

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 101)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 390
    CON 	shift, and go to state 286

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1017



state 977

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 390

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1018



state 978

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 346)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1019
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 979

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 347)

    CLOSE_PAR	shift, and go to state 1020
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 980

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 1021



state 981

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 1022



state 982

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1023



state 983

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 984

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 1024



state 985

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1025



state 986

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

    CLOSE_MPAR	shift, and go to state 1026
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 987

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 988

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



state 989

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 337)

    $default	reduce using rule 337 (extend_for_statement)



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1027
    MUL 	shift, and go to state 593



state 991

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1028
    MUL 	shift, and go to state 596



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 1029



state 993

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1030
    ari_operator	go to state 250



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1031
    ari_operator	go to state 250



state 995

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1032
    MUL 	shift, and go to state 593



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1033
    MUL 	shift, and go to state 596



state 997

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 1034



state 998

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1035
    ari_operator	go to state 250



state 999

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1036
    ari_operator	go to state 250



state 1000

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1037
    ari_operator	go to state 250



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1038
    ari_operator	go to state 250



state 1002

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1039
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 1040



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 423
    MUL 	shift, and go to state 1041



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 605
    CHARDECLARATION	shift, and go to state 1042



state 1006

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1043
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1044
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1008

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 481
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 482
    STRUCT_TYPE	shift, and go to state 483

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 484
    option_function_parameter_list	go to state 1045



state 1009

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1046



state 1010

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1047



state 1011

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CHARDECLARATION	shift, and go to state 1048



state 1012

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1049



state 1013

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1050



state 1014

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CHARDECLARATION	shift, and go to state 1051



state 1015

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTDECLARATION	shift, and go to state 1052
    CHARDECLARATION	shift, and go to state 1053
    UNSIGNED	shift, and go to state 1054



state 1016

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 312)

    $default	reduce using rule 312 (inner_option_function_identifier)



state 1017

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 1018

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 1019

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 346)

    CLOSE_PAR	shift, and go to state 1055
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 1020

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 347)

    $default	reduce using rule 347 (case_par)



state 1021

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 137)

    OPEN_PAR	shift, and go to state 1056
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1057

    function	go to state 1058
    array	go to state 1059



state 1022

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1060



state 1023

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 1024

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1061



state 1025

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 1026

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1062



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1063
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 729
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1064
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 731
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1065
    MUL 	shift, and go to state 746



state 1030

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1066



state 1031

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1067



state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1068
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 729
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1069
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 731
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1070
    MUL 	shift, and go to state 746



state 1035

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1071



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1072



state 1037

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1073



state 1038

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1074



state 1039

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1075
    ari_operator	go to state 250



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1076
    MUL 	shift, and go to state 593



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1077
    MUL 	shift, and go to state 596



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 609
    MUL 	shift, and go to state 1078



state 1043

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1079
    ari_operator	go to state 250



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1080
    ari_operator	go to state 250



state 1045

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 89)

    CLOSE_PAR	shift, and go to state 1081



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1082



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1083



state 1048

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1084



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1085



state 1050

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1086



state 1051

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1087



state 1052

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1088



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1089



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CHARDECLARATION	shift, and go to state 1090



state 1055

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 346)

    CASE	shift, and go to state 756
    BREAK	shift, and go to state 1091
    DEFAULT	shift, and go to state 757

    $default	reduce using rule 350 (init_case_par)

    case_par	go to state 1092
    init_case_par	go to state 1093



state 1056

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)

    OPEN_PAR	shift, and go to state 1094
    ID  	shift, and go to state 1095

    array	go to state 570



state 1057

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_PAR	shift, and go to state 198
    OPEN_MPAR	shift, and go to state 199



state 1058

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 137)

    $default	reduce using rule 137 (ass_right)



state 1059

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 214



state 1060

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 1061

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 1062

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1096

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1097

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 902
    INTLITERAL	shift, and go to state 1098
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 852
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1066

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1099

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1069

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1100

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 902
    INTLITERAL	shift, and go to state 1101
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 852
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1071

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 1073

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1075

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1102



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 801
    INTLITERAL	shift, and go to state 1103
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 729
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 804
    INTLITERAL	shift, and go to state 1104
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 731
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1105
    MUL 	shift, and go to state 746



state 1079

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 1106



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1107



state 1081

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 89)

    ASS_P	shift, and go to state 1108

    $default	reduce using rule 88 (declaration)



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1109



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1110



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1111



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1112



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1113



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1114



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1115



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1116



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1117



state 1091

    init_case_par  ->  BREAK . case_par   (rule 348)

    CASE	shift, and go to state 756
    DEFAULT	shift, and go to state 757

    case_par	go to state 1118



state 1092

    init_case_par  ->  case_par .   (rule 349)

    $default	reduce using rule 349 (init_case_par)



state 1093

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 346)

    $default	reduce using rule 346 (case_par)



state 1094

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)

    INTDECLARATION	shift, and go to state 615
    CHARDECLARATION	shift, and go to state 616
    FLOATDECLARATION	shift, and go to state 617
    OPEN_PAR	shift, and go to state 1094
    UNSIGNED	shift, and go to state 618
    ID  	shift, and go to state 1095

    array	go to state 570



state 1095

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 199



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1119



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1120



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1121

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1122



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1123



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1124

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1102

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1125

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1126

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1105

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 902
    INTLITERAL	shift, and go to state 1127
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 591
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 852
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1106

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 1107

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1108

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 89)

    OPEN_PAR	shift, and go to state 463
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126

    array_exp	go to state 1128
    option_list_value	go to state 133
    option_struct_list_value	go to state 134



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1096



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1097



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1129



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1099



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1100



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1130



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1131



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1132



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1133



state 1118

    init_case_par  ->  BREAK case_par .   (rule 348)

    $default	reduce using rule 348 (init_case_par)



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1134



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1135



state 1121

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1136



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1137



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1138



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1139



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1140



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1141



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 322)

    CLOSE_PAR	shift, and go to state 1142

    CLOSE_PAR	[reduce using rule 322 (intliteral)]
    $default	reduce using rule 322 (intliteral)



state 1128

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 89)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 286

    $default	reduce using rule 89 (declaration)



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1121



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1124



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1125



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1126



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1143



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1144
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1145
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1146



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1147
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1148
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1149



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1150



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1151



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1152



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1142



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1153
    ari_operator	go to state 250



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1154
    ari_operator	go to state 250



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1155
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1156
    ari_operator	go to state 250



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1157
    ari_operator	go to state 250



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1158
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1159
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1160
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1161



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1162



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1163



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1164
    ari_operator	go to state 250



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1165



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1166



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1167
    ari_operator	go to state 250



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1168
    ari_operator	go to state 250



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1169
    ari_operator	go to state 250



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 1170
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1171



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1172



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1173



state 1169

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1174



state 1170

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 560
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 1175
    ari_operator	go to state 250



state 1171

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1172

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1174

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1175

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1176



state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1177

    $   	go to state 1178



state 1178

    $   	go to state 1179



state 1179

    $default	accept
