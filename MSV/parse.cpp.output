Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   FREXP
   PREFIX


Useless rules:

#111   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#112   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#113   inner_option_array_declaration :	;
#114   inner_option_array_declaration :	 COMMA error;


Conflict in state 109 between rule 13 and token CHOP resolved as reduce.
Conflict in state 109 between rule 13 and token IFF resolved as reduce.
Conflict in state 109 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 13 and token OR resolved as reduce.
Conflict in state 109 between rule 13 and token AND resolved as reduce.
Conflict in state 109 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 22 and token CHOP resolved as reduce.
Conflict in state 110 between rule 22 and token IFF resolved as reduce.
Conflict in state 110 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 22 and token OR resolved as reduce.
Conflict in state 110 between rule 22 and token AND resolved as reduce.
Conflict in state 110 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 160 between rule 21 and token CHOP resolved as reduce.
Conflict in state 160 between rule 21 and token IFF resolved as reduce.
Conflict in state 160 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 160 between rule 21 and token OR resolved as reduce.
Conflict in state 160 between rule 21 and token AND resolved as reduce.
Conflict in state 160 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 161 between rule 10 and token CHOP resolved as reduce.
Conflict in state 161 between rule 10 and token IFF resolved as reduce.
Conflict in state 161 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 161 between rule 10 and token OR resolved as reduce.
Conflict in state 161 between rule 10 and token AND resolved as reduce.
Conflict in state 161 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 162 between rule 9 and token CHOP resolved as reduce.
Conflict in state 162 between rule 9 and token IFF resolved as reduce.
Conflict in state 162 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 162 between rule 9 and token OR resolved as reduce.
Conflict in state 162 between rule 9 and token AND resolved as reduce.
Conflict in state 162 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 163 between rule 20 and token CHOP resolved as reduce.
Conflict in state 163 between rule 20 and token IFF resolved as reduce.
Conflict in state 163 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 163 between rule 20 and token OR resolved as reduce.
Conflict in state 163 between rule 20 and token AND resolved as reduce.
Conflict in state 163 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 164 between rule 12 and token CHOP resolved as reduce.
Conflict in state 164 between rule 12 and token IFF resolved as reduce.
Conflict in state 164 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 164 between rule 12 and token OR resolved as reduce.
Conflict in state 164 between rule 12 and token AND resolved as reduce.
Conflict in state 164 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 165 between rule 11 and token CHOP resolved as reduce.
Conflict in state 165 between rule 11 and token IFF resolved as reduce.
Conflict in state 165 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 165 between rule 11 and token OR resolved as reduce.
Conflict in state 165 between rule 11 and token AND resolved as reduce.
Conflict in state 165 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 323 between rule 221 and token IMPLY resolved as reduce.
Conflict in state 326 between rule 220 and token IMPLY resolved as reduce.
Conflict in state 349 between rule 8 and token CHOP resolved as reduce.
Conflict in state 349 between rule 8 and token IFF resolved as shift.
Conflict in state 349 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 349 between rule 8 and token OR resolved as shift.
Conflict in state 349 between rule 8 and token AND resolved as shift.
Conflict in state 349 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 350 between rule 6 and token CHOP resolved as reduce.
Conflict in state 350 between rule 6 and token IFF resolved as reduce.
Conflict in state 350 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 350 between rule 6 and token OR resolved as shift.
Conflict in state 350 between rule 6 and token AND resolved as shift.
Conflict in state 350 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 351 between rule 7 and token CHOP resolved as reduce.
Conflict in state 351 between rule 7 and token IFF resolved as reduce.
Conflict in state 351 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 351 between rule 7 and token OR resolved as shift.
Conflict in state 351 between rule 7 and token AND resolved as shift.
Conflict in state 351 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 352 between rule 5 and token CHOP resolved as reduce.
Conflict in state 352 between rule 5 and token IFF resolved as reduce.
Conflict in state 352 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 352 between rule 5 and token OR resolved as reduce.
Conflict in state 352 between rule 5 and token AND resolved as shift.
Conflict in state 352 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 353 between rule 4 and token CHOP resolved as reduce.
Conflict in state 353 between rule 4 and token IFF resolved as reduce.
Conflict in state 353 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 353 between rule 4 and token OR resolved as reduce.
Conflict in state 353 between rule 4 and token AND resolved as reduce.
Conflict in state 353 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 360 between rule 305 and token OR resolved as reduce.
Conflict in state 360 between rule 305 and token AND resolved as reduce.
Conflict in state 428 between rule 400 and token OR resolved as reduce.
Conflict in state 428 between rule 400 and token AND resolved as reduce.
Conflict in state 490 between rule 32 and token CHOP resolved as reduce.
Conflict in state 490 between rule 32 and token OR resolved as shift.
Conflict in state 490 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 490 between rule 32 and token AND resolved as shift.
Conflict in state 491 between rule 31 and token CHOP resolved as reduce.
Conflict in state 491 between rule 31 and token OR resolved as reduce.
Conflict in state 491 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 491 between rule 31 and token AND resolved as shift.
Conflict in state 492 between rule 55 and token CHOP resolved as reduce.
Conflict in state 492 between rule 55 and token OR resolved as reduce.
Conflict in state 492 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 492 between rule 55 and token AND resolved as shift.
Conflict in state 493 between rule 30 and token CHOP resolved as reduce.
Conflict in state 493 between rule 30 and token OR resolved as reduce.
Conflict in state 493 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 493 between rule 30 and token AND resolved as reduce.
Conflict in state 573 between rule 307 and token OR resolved as reduce.
Conflict in state 573 between rule 307 and token AND resolved as shift.
Conflict in state 574 between rule 306 and token OR resolved as reduce.
Conflict in state 574 between rule 306 and token AND resolved as reduce.
Conflict in state 646 between rule 402 and token OR resolved as reduce.
Conflict in state 646 between rule 402 and token AND resolved as shift.
Conflict in state 647 between rule 401 and token OR resolved as reduce.
Conflict in state 647 between rule 401 and token AND resolved as reduce.
Conflict in state 823 between rule 205 and token CON resolved as reduce.
State 81 contains 1 shift/reduce conflict.
State 146 contains 2 shift/reduce conflicts.
State 147 contains 2 shift/reduce conflicts.
State 149 contains 14 shift/reduce conflicts.
State 155 contains 2 shift/reduce conflicts.
State 175 contains 2 shift/reduce conflicts.
State 213 contains 3 reduce/reduce conflicts.
State 215 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 216 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 217 contains 1 shift/reduce conflict.
State 219 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 221 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 222 contains 1 shift/reduce conflict.
State 233 contains 1 reduce/reduce conflict.
State 234 contains 1 reduce/reduce conflict.
State 259 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 292 contains 1 shift/reduce conflict.
State 294 contains 1 shift/reduce conflict.
State 295 contains 1 shift/reduce conflict.
State 296 contains 1 shift/reduce conflict.
State 298 contains 2 shift/reduce conflicts.
State 299 contains 2 shift/reduce conflicts.
State 300 contains 2 shift/reduce conflicts.
State 301 contains 2 shift/reduce conflicts.
State 302 contains 2 shift/reduce conflicts.
State 303 contains 2 shift/reduce conflicts.
State 304 contains 2 shift/reduce conflicts.
State 305 contains 2 shift/reduce conflicts.
State 306 contains 2 shift/reduce conflicts.
State 307 contains 2 shift/reduce conflicts.
State 308 contains 2 shift/reduce conflicts.
State 309 contains 2 shift/reduce conflicts.
State 310 contains 2 shift/reduce conflicts.
State 311 contains 2 shift/reduce conflicts.
State 312 contains 2 shift/reduce conflicts.
State 313 contains 2 shift/reduce conflicts.
State 316 contains 2 shift/reduce conflicts.
State 317 contains 2 shift/reduce conflicts.
State 318 contains 2 shift/reduce conflicts.
State 323 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 358 contains 1 shift/reduce conflict.
State 361 contains 2 shift/reduce conflicts.
State 362 contains 2 shift/reduce conflicts.
State 389 contains 1 shift/reduce conflict.
State 390 contains 1 shift/reduce conflict.
State 391 contains 1 shift/reduce conflict.
State 392 contains 1 shift/reduce conflict.
State 409 contains 1 shift/reduce conflict.
State 418 contains 1 shift/reduce conflict.
State 419 contains 1 shift/reduce conflict.
State 420 contains 1 shift/reduce conflict.
State 426 contains 1 shift/reduce conflict.
State 467 contains 1 shift/reduce conflict.
State 468 contains 1 shift/reduce conflict.
State 470 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 473 contains 1 shift/reduce conflict.
State 474 contains 1 shift/reduce conflict.
State 498 contains 2 shift/reduce conflicts.
State 499 contains 2 shift/reduce conflicts.
State 501 contains 2 shift/reduce conflicts.
State 502 contains 2 shift/reduce conflicts.
State 503 contains 2 shift/reduce conflicts.
State 504 contains 2 shift/reduce conflicts.
State 505 contains 2 shift/reduce conflicts.
State 506 contains 2 shift/reduce conflicts.
State 509 contains 2 shift/reduce conflicts.
State 510 contains 2 shift/reduce conflicts.
State 512 contains 2 shift/reduce conflicts.
State 513 contains 2 shift/reduce conflicts.
State 536 contains 1 shift/reduce conflict.
State 558 contains 8 shift/reduce conflicts.
State 560 contains 2 shift/reduce conflicts.
State 580 contains 1 shift/reduce conflict.
State 614 contains 1 shift/reduce conflict.
State 615 contains 1 shift/reduce conflict.
State 616 contains 1 shift/reduce conflict.
State 633 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 634 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 638 contains 1 shift/reduce conflict.
State 667 contains 1 shift/reduce conflict.
State 668 contains 1 shift/reduce conflict.
State 669 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 714 contains 3 shift/reduce conflicts.
State 717 contains 10 shift/reduce conflicts.
State 834 contains 2 shift/reduce conflicts.
State 835 contains 2 shift/reduce conflicts.
State 850 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 851 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 863 contains 1 shift/reduce conflict.
State 864 contains 1 shift/reduce conflict.
State 869 contains 2 shift/reduce conflicts.
State 870 contains 2 shift/reduce conflicts.
State 872 contains 2 shift/reduce conflicts.
State 873 contains 2 shift/reduce conflicts.
State 979 contains 1 shift/reduce conflict.
State 980 contains 1 shift/reduce conflict.
State 982 contains 1 shift/reduce conflict.
State 983 contains 1 shift/reduce conflict.
State 984 contains 1 shift/reduce conflict.
State 985 contains 1 shift/reduce conflict.
State 1000 contains 2 shift/reduce conflicts.
State 1008 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1014 contains 1 shift/reduce conflict.
State 1021 contains 2 shift/reduce conflicts.
State 1024 contains 8 shift/reduce conflicts.
State 1091 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1094 contains 1 shift/reduce conflict.
State 1096 contains 1 shift/reduce conflict.
State 1169 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1170 contains 1 shift/reduce conflict.
State 1171 contains 1 shift/reduce conflict.
State 1260 contains 1 shift/reduce conflict.
State 1261 contains 1 shift/reduce conflict.
State 1265 contains 1 shift/reduce conflict.
State 1266 contains 1 shift/reduce conflict.
State 1297 contains 1 shift/reduce conflict.
State 1300 contains 1 shift/reduce conflict.
State 1302 contains 1 shift/reduce conflict.
State 1303 contains 1 shift/reduce conflict.
State 1328 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 63   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 64   statement -> function_define
rule 65   statement -> function
rule 66   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 67   statement -> OPEN_PAR statement CLOSE_PAR
rule 68   option_struct_declaration -> sign_declaration
rule 69   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 70   empty_statement -> statement
rule 71   empty_statement ->		/* empty */
rule 72   function_define -> all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 75   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 76   function -> file_statement
rule 77   function -> String_Function
rule 78   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 79   struct_identifier -> STRUCT ID
rule 80   struct_identifier -> UNION ID
rule 81   sign_declaration -> SIGNED declaration
rule 82   sign_declaration -> UNSIGNED declaration
rule 83   sign_declaration -> declaration
rule 84   declaration -> type_define option_identifier_array_declaration
rule 85   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 86   declaration -> STRUCT ID option_identifier_array_declaration
rule 87   declaration -> UNION ID option_identifier_array_declaration
rule 88   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 89   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 90   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 91   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 93   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 94   type_define -> INTDECLARATION
rule 95   type_define -> FLOATDECLARATION
rule 96   type_define -> CHARDECLARATION
rule 97   type_define -> STRDECLARATION
rule 98   type_define -> VOIDDECLARATION
rule 99   type_define -> FILEDECLARATION
rule 100  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 107  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 108  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 109  inner_option_identifier_array_declaration -> COMMA error
rule 110  inner_option_identifier_array_declaration ->		/* empty */
rule 115  file_statement -> FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR
rule 116  file_statement -> FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR
rule 117  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 118  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 119  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 120  file_statement -> FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR
rule 121  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 122  ass_statement -> ass_left assign_operator ass_right
rule 123  ass_left -> identifier
rule 124  ass_left -> struct_member_exp
rule 125  ass_left -> array
rule 126  ass_left -> point_exp
rule 127  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 128  ass_left -> NEXT ass_left
rule 129  ass_left -> leftaddrshift
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 138  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  assign_operator -> ASS_P
rule 144  assign_operator -> ASS_N
rule 145  ass_right -> ari_exp
rule 146  ass_right -> array_exp
rule 147  ass_right -> strliteral
rule 148  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 149  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 150  ass_right -> rightaddrshift
rule 151  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 152  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 156  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 157  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 158  array -> OPEN_PAR array CLOSE_PAR
rule 159  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 160  option_ari_exp -> COMMA error
rule 161  option_ari_exp ->		/* empty */
rule 162  point_exp -> MUL identifier
rule 163  point_exp -> MUL point_exp
rule 164  point_exp -> MUL array
rule 165  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 166  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 167  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 168  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 169  ari_exp -> simple_ari_exp
rule 170  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 171  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 172  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 173  type_cast_alg_exp -> simple_ari_exp
rule 174  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 175  option_exp_else_statement -> ELSE ari_exp
rule 176  option_exp_else_statement ->		/* empty */
rule 177  simple_ari_exp -> member_in_exp
rule 178  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 179  member_in_exp -> intliteral
rule 180  member_in_exp -> SUB member_in_exp
rule 181  member_in_exp -> BNE member_in_exp
rule 182  member_in_exp -> POINTERNULL
rule 183  member_in_exp -> floatliteral
rule 184  member_in_exp -> identifier
rule 185  member_in_exp -> array
rule 186  member_in_exp -> point_exp
rule 187  member_in_exp -> function
rule 188  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 189  member_in_exp -> math_function
rule 190  member_in_exp -> charliteral
rule 191  member_in_exp -> address_exp
rule 192  member_in_exp -> type_cast
rule 193  member_in_exp -> struct_member_exp
rule 194  member_in_exp -> size_of
rule 195  bi_operator -> MUL
rule 196  bi_operator -> DIV
rule 197  bi_operator -> MOD
rule 198  bi_operator -> LST
rule 199  bi_operator -> RST
rule 200  bi_operator -> ADDRESS
rule 201  bi_operator -> INTER_OR
rule 202  bi_operator -> CON
rule 203  ari_operator -> ADD
rule 204  ari_operator -> SUB
rule 205  array_exp -> array_exp CON array_exp
rule 206  array_exp -> option_list_value
rule 207  array_exp -> option_struct_list_value
rule 208  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 209  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 210  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 211  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 212  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 213  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 214  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 215  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 216  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 217  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 218  inner_option_list_value ->		/* empty */
rule 219  inner_option_list_value -> COMMA error
rule 220  address_exp -> ADDRESS identifier
rule 221  address_exp -> ADDRESS array
rule 222  address_exp -> ADDRESS struct_member_exp
rule 223  address_exp -> ADDRESS address_exp
rule 224  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 225  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 227  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 228  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 229  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 230  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 231  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 232  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 240  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 241  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 242  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 243  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 244  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 245  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 246  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 247  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 248  casted_element -> type_cast_alg_exp
rule 249  casted_element -> MALLOC OPEN_PAR ari_exp CLOSE_PAR
rule 250  all_sizeof_type -> all_type_define
rule 251  all_sizeof_type -> INTDECLARATION MUL
rule 252  all_sizeof_type -> FLOATDECLARATION MUL
rule 253  all_sizeof_type -> CHARDECLARATION MUL
rule 254  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 255  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 256  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 257  all_sizeof_type -> STRUCT_TYPE MUL
rule 258  size_of -> SIZEOF OPEN_PAR ari_exp CLOSE_PAR
rule 259  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 260  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 261  size_of -> SIZEOF OPEN_PAR strliteral CLOSE_PAR
rule 262  String_Function -> String_Function_head
rule 263  String_Function -> String_Function_tail
rule 264  String_Function -> String_Function_cat
rule 265  String_Function -> String_Function_cpy
rule 266  String_Function -> String_Function_cmp
rule 267  String_Function -> String_Function_len
rule 268  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 269  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 270  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 271  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 272  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 273  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 274  str_func_parameter -> identifier
rule 275  str_func_parameter -> array
rule 276  str_func_parameter -> point_exp
rule 277  str_func_parameter -> strliteral
rule 278  str_func_parameter -> String_Function
rule 279  str_func_parameter -> struct_member_exp
rule 280  math_function -> ROUND ari_exp
rule 281  math_function -> CEIL ari_exp
rule 282  math_function -> FLOOR ari_exp
rule 283  math_function -> SIN ari_exp
rule 284  math_function -> COS ari_exp
rule 285  math_function -> TAN ari_exp
rule 286  math_function -> ASIN ari_exp
rule 287  math_function -> ACOS ari_exp
rule 288  math_function -> ATAN ari_exp
rule 289  math_function -> SINH ari_exp
rule 290  math_function -> COSH ari_exp
rule 291  math_function -> TANH ari_exp
rule 292  math_function -> EXP ari_exp
rule 293  math_function -> LOG ari_exp
rule 294  math_function -> LOG10 ari_exp
rule 295  math_function -> SQRT ari_exp
rule 296  math_function -> ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 297  math_function -> POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 298  math_function -> FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 299  math_function -> MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 300  math_function -> LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 301  math_function -> ABS ari_exp
rule 302  math_function -> FABS ari_exp
rule 303  math_function -> LABS ari_exp
rule 304  bool_exp -> prime_bool_exp
rule 305  bool_exp -> NEGATION bool_exp
rule 306  bool_exp -> bool_exp AND bool_exp
rule 307  bool_exp -> bool_exp OR bool_exp
rule 308  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 309  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 310  prime_bool_exp -> MY_TRUE
rule 311  prime_bool_exp -> MY_FALSE
rule 312  prime_bool_exp -> ari_exp
rule 313  prime_bool_exp -> ari_exp EQ strliteral
rule 314  prime_bool_exp -> ari_exp NE strliteral
rule 315  prime_bool_exp -> strliteral EQ ari_exp
rule 316  prime_bool_exp -> strliteral NE ari_exp
rule 317  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 318  prime_bool_exp -> ari_exp NE POINTERNULL
rule 319  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 320  prime_bool_exp -> POINTERNULL NE ari_exp
rule 321  prime_bool_exp -> ari_exp EQ charliteral
rule 322  prime_bool_exp -> ari_exp NE charliteral
rule 323  relation_operator -> GE
rule 324  relation_operator -> LE
rule 325  relation_operator -> NE
rule 326  relation_operator -> GT
rule 327  relation_operator -> LT
rule 328  relation_operator -> EQ
rule 329  sign_type_define -> UNSIGNED INTDECLARATION
rule 330  sign_type_define -> UNSIGNED CHARDECLARATION
rule 331  all_type_define -> sign_type_define
rule 332  all_type_define -> type_define
rule 333  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 334  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 335  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 336  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 337  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 338  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 339  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 340  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 341  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 342  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 343  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 344  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 345  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 346  option_function_parameter_list -> ID inner_option_define_identifier
rule 347  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 348  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 349  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 350  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 351  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 352  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 353  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 354  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 355  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 356  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 357  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 358  option_function_parameter_list ->		/* empty */
rule 359  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 360  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 361  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 362  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 363  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 364  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 365  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 366  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 367  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 368  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 369  inner_option_define_identifier ->		/* empty */
rule 370  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 371  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 372  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 373  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 374  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 375  inner_option_define_identifier -> COMMA error
rule 376  option_function_identifier -> ass_right inner_option_function_identifier
rule 377  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 378  option_function_identifier ->		/* empty */
rule 379  option_function_identifier -> ADDRESS error
rule 380  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 381  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 382  inner_option_function_identifier ->		/* empty */
rule 383  inner_option_function_identifier -> COMMA error
rule 384  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 385  statement_bpar -> error CLOSE_BPAR
rule 386  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 387  bool_par -> error CLOSE_PAR
rule 388  identifier -> ID
rule 389  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 390  strliteral -> STRLITERAL
rule 391  intliteral -> INTLITERAL
rule 392  charliteral -> CHARLITERAL
rule 393  floatliteral -> FLOATLITERAL
rule 394  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 395  option_frame_identifier ->		/* empty */
rule 396  option_frame_identifier -> COMMA error
rule 397  option_projection ->		/* empty */
rule 398  option_projection -> COMMA statement option_projection
rule 399  imply_pre -> prime_bool_exp
rule 400  imply_pre -> NEGATION imply_pre
rule 401  imply_pre -> imply_pre AND imply_pre
rule 402  imply_pre -> imply_pre OR imply_pre
rule 403  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 404  while_statement -> WHILE bool_par statement_bpar
rule 405  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 406  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 407  for_sta_init -> ass_statement
rule 408  for_sta_init -> declaration
rule 409  for_sta_init ->		/* empty */
rule 410  for_sta_condition -> bool_exp
rule 411  for_sta_condition ->		/* empty */
rule 412  for_sta_control -> ass_statement
rule 413  for_sta_control ->		/* empty */
rule 414  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 415  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 416  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 417  init_case_par -> BREAK case_par
rule 418  init_case_par -> case_par
rule 419  init_case_par ->		/* empty */
rule 420  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 421  option_else_statement -> ELSE statement_bpar
rule 422  option_else_statement ->		/* empty */
rule 423  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 424  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 425  option_output ->		/* empty */
rule 426  option_output -> COMMA ass_right option_output
rule 427  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 428  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 429  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 430  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 431  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 432  option_input ->		/* empty */
rule 433  option_input -> COMMA identifier option_input
rule 434  option_input -> COMMA array option_input
rule 435  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 436  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 437  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 438  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 439  struct_member_exp -> array DOT array option_struct_member_exp
rule 440  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 441  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 442  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 443  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 444  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 445  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 446  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 447  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 448  struct_member_exp -> identifier DOT function
rule 449  struct_member_exp -> identifier IMPLY function
rule 450  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 451  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 452  option_struct_member_exp ->		/* empty */
rule 453  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 454  option_struct_member_exp -> DOT array option_struct_member_exp
rule 455  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 456  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 457  option_struct_member_exp -> DOT function
rule 458  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 109 114 160 219 375 379 383 385 387 396
SWITCH (258) 414
CASE (259) 415
BREAK (260) 417
DEFAULT (261) 416
RETURN (262) 36
IF (263) 172 420
ELSE (264) 175 421
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 182 317 318 319 320
ARRAY (271) 103 104 338 342 349 350 353 364 365 366 367 372
STRUCT (272) 79 86 88 244 246 256
DOT (273) 435 436 437 438 439 440 448 453 454 457
UNION (274) 80 87 89
FOPEN (275) 115
FCLOSE (276) 121
FILEDECLARATION (277) 99
FGETS (278) 116
FPUTS (279) 118
FGETC (280) 117
FPUTC (281) 119 120
MORE (282) 19 48
DEFINE (283) 25 60
MY_TRUE (284) 15 310
MY_FALSE (285) 16 311
EXIST (286) 66
FRAME (287) 57
FOR (288) 405 406
WHILE (289) 404
DO (290) 405
TRUE (291) 52
FALSE (292) 53
REPEAT (293) 45
UNTIL (294) 45
DISPLAY (295) 423 424
SKIP (296) 14 46
THEN (297) 172 420
COMMA (298) 28 108 109 112 114 115 116 118 119 120 159 160 215 216
    217 219 270 271 272 296 297 298 299 300 352 359 360 361 362 363
    364 365 366 367 368 370 371 372 373 374 375 380 381 383 394 396
    398 406 426 433 434
COLON (299) 25 66 415 416
INTDECLARATION (300) 94 132 136 139 140 141 142 153 154 225 228 230
    232 233 238 239 251 254 329
STRDECLARATION (301) 97
POINTERDECLARATION (302)
CHARDECLARATION (303) 96 130 131 134 135 136 137 138 139 140 141 156
    157 227 229 231 235 236 241 242 253 255 330
VOIDDECLARATION (304) 98 237 243
FLOATDECLARATION (305) 95 133 155 226 234 240 252
LISTDECLARATION (306)
OPEN_PAR (307) 27 41 42 43 44 45 49 54 56 57 60 62 63 67 72 73 74 75
    90 91 92 93 115 116 117 118 119 120 121 127 130 131 132 133 134
    135 136 137 138 139 140 141 142 148 149 151 153 154 155 156 157
    158 165 166 167 168 188 208 224 225 226 227 228 229 230 231 232
    233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 249
    258 259 260 261 268 269 270 271 272 273 296 297 298 299 300 308
    357 368 377 381 386 389 403 406 414 415 416 423 424 427 428 429
    430 431 443 447 451
CLOSE_PAR (308) 27 41 42 43 44 45 49 54 56 57 60 62 63 67 72 73 74
    75 90 91 92 93 115 116 117 118 119 120 121 127 130 131 132 133
    134 135 136 137 138 139 140 141 142 148 149 151 153 154 155 156
    157 158 165 166 167 168 188 208 224 225 226 227 228 229 230 231
    232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247
    249 258 259 260 261 268 269 270 271 272 273 296 297 298 299 300
    308 357 368 377 381 386 387 389 403 406 414 415 416 423 424 427
    428 429 430 431 443 447 451
TIMES (309) 405
OPEN_BPAR (310) 23 45 58 59 60 66 72 78 212 213 214 384 414
CLOSE_BPAR (311) 23 45 58 59 60 66 72 78 212 213 214 384 385 414
OPEN_MPAR (312) 56 92 93 101 105 106 111 112 130 131 132 133 134 135
    136 137 138 139 140 141 142 152 153 154 155 156 157 165 209 210
    211 351 352 353 370 371 372
CLOSE_MPAR (313) 56 92 93 101 105 106 111 112 130 131 132 133 134 135
    136 137 138 139 140 141 142 152 153 154 155 156 157 165 209 210
    211 351 352 353 370 371 372
FUNCTION (314)
OVER (315)
CYLINDER (316)
OVEREP (317)
INTER_OR (318) 201
NON_DETERMINED (319)
SEND (320)
RECEIVE (321)
PROCESS (322)
CHANNEL (323)
PUT (324)
GET (325)
ERROR_TOKEN (326)
STRFUNCHEAD (327) 268
STRFUNCTAIL (328) 269
STRFUNCCAT (329) 270
STRFUNCCMP (330) 271
STRFUNCCPY (331) 272
STRFUNCLEN (332) 273
SIZEOF (333) 258 259 260 261
SYSTEM (334) 63
EXTERN (335) 74
CEIL (336) 281
FLOOR (337) 282
ROUND (338) 280
SIN (339) 283
COS (340) 284
TAN (341) 285
ASIN (342) 286
ACOS (343) 287
ATAN (344) 288
SINH (345) 289
COSH (346) 290
TANH (347) 291
EXP (348) 292
LOG (349) 293
LOG10 (350) 294
SQRT (351) 295
ATAN2 (352) 296
POW (353) 297
ABS (354) 301
FABS (355) 302
LABS (356) 303
FMOD (357) 298
MODF (358) 299
LDEXP (359) 300
FREXP (360)
UNSIGNED (361) 82 131 135 137 138 139 141 154 157 230 231 233 236 239
    242 254 255 329 330
SIGNED (362) 81 228 229
MALLOC (363) 249
FREE (364) 62
CHOP (365) 8 32
IMPLY (366) 56 441 442 443 444 445 446 447 449 450 455 456 458
IFF (367) 6
PROPIMPLY (368) 7
OR (369) 5 31 307 402
PARALLEL (370) 55
AND (371) 4 30 57 69 306 401
ASS_P (372) 60 93 102 103 104 105 106 143
ASS_N (373) 144
CON (374) 202 205
ADDRESS (375) 200 220 221 222 223 379
NE (376) 314 316 318 320 322 325
EQ (377) 313 315 317 319 321 328
GE (378) 323
LE (379) 324
GT (380) 326
LT (381) 327
LST (382) 198
RST (383) 199
ADD (384) 203
SUB (385) 180 204
MUL (386) 90 91 92 93 107 130 131 132 133 134 135 136 137 138 139 140
    141 142 151 153 154 155 156 157 162 163 164 166 167 195 232 233
    234 235 236 237 238 239 240 241 242 243 244 245 246 247 251 252
    253 254 255 256 257 336 337 340 341 344 345 347 348 350 354 355
    356 357 363 367 368 373 374
DIV (387) 196
MOD (388) 197
BNE (389) 181
CHOPSTAR (390) 26
NEXT (391) 13 41 128
NEGATION (392) 22 305 400
LENGTH (393) 17 49
REQUEST (394) 427 428 429 430 431
FINAL (395) 21 54
KEEP (396) 10 42
ALWAYS (397) 9 43
HALT (398) 20
W_NEXT (399) 12
PREFIX (400)
SOMETIMES (401) 11
ID (402) 24 25 36 60 72 73 74 79 80 86 87 92 93 101 103 104 105 106
    111 112 152 153 154 155 156 157 339 340 341 342 346 347 348 361
    364 377 381 388
STRLITERAL (403) 390
STRUCT_TYPE (404) 85 88 89 244 245 246 247 256 257 260 335 336 337
    338 343 344 345 362 363 365
INTLITERAL (405) 130 131 132 133 134 135 136 137 138 139 140 141 142
    391
FLOATLITERAL (406) 393
CHARLITERAL (407) 392

Nonterminals, with rules where they appear

program (153)
    on left: 1
gComplexProposition (154)
    on left: 2 3, on right: 1
complexProposition (155)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (156)
    on left: 28 29, on right: 23 28
statement (157)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 66 67 70 72
    384 398 415 416
option_struct_declaration (158)
    on left: 68 69, on right: 69 78
empty_statement (159)
    on left: 70 71, on right: 60
function_define (160)
    on left: 72, on right: 64
function (161)
    on left: 73 74 75 76 77, on right: 65 148 187 448 449 457 458
struct_define_statement (162)
    on left: 78, on right: 61
struct_identifier (163)
    on left: 79 80, on right: 78
sign_declaration (164)
    on left: 81 82 83, on right: 34 68 69
declaration (165)
    on left: 84 85 86 87 88 89 90 91 92 93, on right: 81 82 83 408
type_define (166)
    on left: 94 95 96 97 98 99, on right: 84 148 332
option_identifier_array_declaration (167)
    on left: 100 101 102 103 104 105 106 107, on right: 84 85 86 87
    88 89 107 108
inner_option_identifier_array_declaration (168)
    on left: 108 109 110, on right: 100 101 102 103 104 105 106
file_statement (169)
    on left: 115 116 117 118 119 120 121, on right: 76
ass_statement (170)
    on left: 122, on right: 33 407 412
ass_left (171)
    on left: 123 124 125 126 127 128 129, on right: 115 122 127 128
leftaddrshift (172)
    on left: 130 131 132 133 134 135 136 137 138 139 140 141 142,
    on right: 129 151
assign_operator (173)
    on left: 143 144, on right: 122
ass_right (174)
    on left: 145 146 147 148 149 150, on right: 102 122 149 376 380
    423 424 426
rightaddrshift (175)
    on left: 151, on right: 150
array (176)
    on left: 152 153 154 155 156 157 158, on right: 75 120 125 158
    164 185 221 275 429 430 434 436 438 439 440 442 445 446 447 450
    454 456
option_ari_exp (177)
    on left: 159 160 161, on right: 92 93 101 105 106 111 112 130 131
    132 133 134 135 136 137 138 139 140 141 142 152 153 154 155 156
    157 159 165
point_exp (178)
    on left: 162 163 164 165 166 167 168, on right: 126 163 165 168
    186 276 437 440 444 450
ari_exp (179)
    on left: 169 170 171 172, on right: 17 49 92 93 101 105 106 111
    112 130 131 132 133 134 135 136 137 138 139 140 141 142 145 152
    153 154 155 156 157 159 165 166 167 170 171 172 175 188 209 212
    215 249 258 280 281 282 283 284 285 286 287 288 289 290 291 292
    293 294 295 296 297 298 299 300 301 302 303 309 312 313 314 315
    316 317 318 319 320 321 322 351 352 353 370 371 372 405
type_cast_alg_exp (180)
    on left: 173 174, on right: 225 226 227 228 229 230 231 248
option_exp_else_statement (181)
    on left: 175 176, on right: 172
simple_ari_exp (182)
    on left: 177 178, on right: 169 170 171 173 174 178
member_in_exp (183)
    on left: 179 180 181 182 183 184 185 186 187 188 189 190 191 192
    193 194, on right: 177 178 180 181 414 415
bi_operator (184)
    on left: 195 196 197 198 199 200 201 202, on right: 178
ari_operator (185)
    on left: 203 204, on right: 171 174
array_exp (186)
    on left: 205 206 207 208, on right: 93 103 105 146 205 208 211
    214 217
option_list_value (187)
    on left: 209 210 211, on right: 206
option_struct_list_value (188)
    on left: 212 213 214, on right: 207
inner_option_list_value (189)
    on left: 215 216 217 218 219, on right: 209 210 211 212 213 214
    215 216 217
address_exp (190)
    on left: 220 221 222 223 224, on right: 191 223 224 443 447
type_cast (191)
    on left: 225 226 227 228 229 230 231 232 233 234 235 236 237 238
    239 240 241 242 243 244 245 246 247, on right: 192
casted_element (192)
    on left: 248 249, on right: 232 233 234 235 236 237 238 239 240
    241 242 243 244 245 246 247
all_sizeof_type (193)
    on left: 250 251 252 253 254 255 256 257, on right: 259
size_of (194)
    on left: 258 259 260 261, on right: 194
String_Function (195)
    on left: 262 263 264 265 266 267, on right: 77 278
String_Function_head (196)
    on left: 268, on right: 262
String_Function_tail (197)
    on left: 269, on right: 263
String_Function_cat (198)
    on left: 270, on right: 264
String_Function_cmp (199)
    on left: 271, on right: 266
String_Function_cpy (200)
    on left: 272, on right: 265
String_Function_len (201)
    on left: 273, on right: 267
str_func_parameter (202)
    on left: 274 275 276 277 278 279, on right: 63 268 269 270 271
    272 273
math_function (203)
    on left: 280 281 282 283 284 285 286 287 288 289 290 291 292 293
    294 295 296 297 298 299 300 301 302 303, on right: 189
bool_exp (204)
    on left: 304 305 306 307 308, on right: 44 45 172 305 306 307 308
    386 410 420
prime_bool_exp (205)
    on left: 309 310 311 312 313 314 315 316 317 318 319 320 321 322
   , on right: 25 304 399
relation_operator (206)
    on left: 323 324 325 326 327 328, on right: 170 309
sign_type_define (207)
    on left: 329 330, on right: 331
all_type_define (208)
    on left: 331 332, on right: 72 166 250 333 334 349 350 351 352
    353 354 355 356 359 360 366 367 370 371 372 373 374
option_function_parameter_list (209)
    on left: 333 334 335 336 337 338 339 340 341 342 343 344 345 346
    347 348 349 350 351 352 353 354 355 356 357 358,
    on right: 60 72 90 91 92 93 148 357 368
inner_option_define_identifier (210)
    on left: 359 360 361 362 363 364 365 366 367 368 369 370 371 372
    373 374 375, on right: 66 333 334 335 336 337 338 339 340 341 342
    343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 359
    360 361 362 363 364 365 366 367 368 370 371 372 373 374
option_function_identifier (211)
    on left: 376 377 378 379, on right: 73 74 75 377 381
inner_option_function_identifier (212)
    on left: 380 381 382 383, on right: 376 377 380 381
statement_bpar (213)
    on left: 384 385, on right: 58 59 404 405 406 420 421
bool_par (214)
    on left: 386 387, on right: 404
identifier (215)
    on left: 388 389, on right: 57 62 66 90 91 100 102 116 117 118
    119 120 121 123 162 184 220 274 333 335 336 337 338 339 340 341
    342 349 350 351 352 353 354 356 357 359 361 362 363 364 365 366
    367 368 370 371 372 373 389 394 427 428 433 435 436 437 438 441
    442 443 444 445 448 449 453 455
strliteral (216)
    on left: 390, on right: 104 106 115 147 148 210 213 216 261 277
    313 314 315 316
intliteral (217)
    on left: 391, on right: 116 179
charliteral (218)
    on left: 392, on right: 190 321 322
floatliteral (219)
    on left: 393, on right: 183
option_frame_identifier (220)
    on left: 394 395 396, on right: 57 394
option_projection (221)
    on left: 397 398, on right: 58 398
imply_pre (222)
    on left: 399 400 401 402 403, on right: 56 400 401 402 403
while_statement (223)
    on left: 404, on right: 38
for_statement (224)
    on left: 405, on right: 39
extend_for_statement (225)
    on left: 406, on right: 40
for_sta_init (226)
    on left: 407 408 409, on right: 406
for_sta_condition (227)
    on left: 410 411, on right: 406
for_sta_control (228)
    on left: 412 413, on right: 406
switch_statement (229)
    on left: 414, on right: 35
case_par (230)
    on left: 415 416, on right: 414 417 418
init_case_par (231)
    on left: 417 418 419, on right: 415
if_statement (232)
    on left: 420, on right: 37
option_else_statement (233)
    on left: 421 422, on right: 420
output_statement (234)
    on left: 423 424, on right: 51
option_output (235)
    on left: 425 426, on right: 424 426
input_statement (236)
    on left: 427 428 429 430 431, on right: 50
option_input (237)
    on left: 432 433 434, on right: 428 430 433 434
struct_member_exp (238)
    on left: 435 436 437 438 439 440 441 442 443 444 445 446 447 448
    449 450 451, on right: 124 193 222 279 431 451
option_struct_member_exp (239)
    on left: 452 453 454 455 456 457 458, on right: 435 436 437 438
    439 440 441 442 443 444 445 446 447 450 453 454 455 456


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1378
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 74
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 106



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 107



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 108



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 148
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 160



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 161



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 162



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 163



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 164



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 165



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 166
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 414)

    OPEN_PAR	shift, and go to state 173



state 23

    statement  ->  RETURN . ID   (rule 36)

    ID  	shift, and go to state 174



state 24

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 420)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 182
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 185



state 27

    struct_identifier  ->  STRUCT . ID   (rule 79)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 186
    STRUCT_TYPE	shift, and go to state 187



state 28

    struct_identifier  ->  UNION . ID   (rule 80)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 188
    STRUCT_TYPE	shift, and go to state 189



state 29

    file_statement  ->  FOPEN . OPEN_PAR ass_left COMMA strliteral CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 190



state 30

    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 121)

    OPEN_PAR	shift, and go to state 191



state 31

    type_define  ->  FILEDECLARATION .   (rule 99)

    $default	reduce using rule 99 (type_define)



state 32

    file_statement  ->  FGETS . OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 192



state 33

    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 193



state 34

    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 194



state 35

    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 119)
    file_statement  ->  FPUTC . OPEN_PAR array COMMA identifier CLOSE_PAR   (rule 120)

    OPEN_PAR	shift, and go to state 195



state 36

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 37

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 196



state 38

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 199



state 39

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 200



state 40

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 405)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 201
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 202
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 41

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 404)

    error	shift, and go to state 203
    OPEN_PAR	shift, and go to state 204

    bool_par	go to state 205



state 42

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 43

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 44

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 206



state 45

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 423)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 424)

    OPEN_PAR	shift, and go to state 207



state 46

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 47

    type_define  ->  INTDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 48

    type_define  ->  STRDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)



state 49

    type_define  ->  CHARDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)



state 50

    type_define  ->  VOIDDECLARATION .   (rule 98)

    $default	reduce using rule 98 (type_define)



state 51

    type_define  ->  FLOATDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 52

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 208
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 209
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 211
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    statement	go to state 212
    function_define	go to state 75
    function	go to state 213
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 217
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 219
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 220
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 221



state 53

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 222
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 54

    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 223



state 55

    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 224



state 56

    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 225



state 57

    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 226



state 58

    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 227



state 59

    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 273)

    OPEN_PAR	shift, and go to state 228



state 60

    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 229



state 61

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)

    ID  	shift, and go to state 230



state 62

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 233
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 234
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237



state 63

    sign_declaration  ->  SIGNED . declaration   (rule 81)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 238
    type_define	go to state 237



state 64

    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 62)

    OPEN_PAR	shift, and go to state 239



state 65

    point_exp  ->  MUL . identifier   (rule 162)
    point_exp  ->  MUL . point_exp   (rule 163)
    point_exp  ->  MUL . array   (rule 164)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 167)

    OPEN_PAR	shift, and go to state 240
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 244



state 66

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 128)

    OPEN_PAR	shift, and go to state 245
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 247
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    struct_member_exp	go to state 105



state 67

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 249



state 68

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 428)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 429)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 430)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 431)

    OPEN_PAR	shift, and go to state 250



state 69

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 251



state 70

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 252



state 71

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 253



state 72

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 254
    OPEN_MPAR	shift, and go to state 255

    $default	reduce using rule 388 (identifier)



state 73

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 258
    identifier	go to state 259



state 74

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    $default	reduce using rule 1 (program)



state 75

    statement  ->  function_define .   (rule 64)

    $default	reduce using rule 64 (statement)



state 76

    statement  ->  function .   (rule 65)

    $default	reduce using rule 65 (statement)



state 77

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 78

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 78)

    OPEN_BPAR	shift, and go to state 264



state 79

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 80

    sign_declaration  ->  declaration .   (rule 83)

    $default	reduce using rule 83 (sign_declaration)



state 81

    declaration  ->  type_define . option_identifier_array_declaration   (rule 84)
    all_type_define  ->  type_define .   (rule 332)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    ID  	[reduce using rule 332 (all_type_define)]
    $default	reduce using rule 332 (all_type_define)

    option_identifier_array_declaration	go to state 265
    identifier	go to state 259



state 82

    function  ->  file_statement .   (rule 76)

    $default	reduce using rule 76 (function)



state 83

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 84

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 122)

    ASS_P	shift, and go to state 266
    ASS_N	shift, and go to state 267

    assign_operator	go to state 268



state 85

    ass_left  ->  leftaddrshift .   (rule 129)

    $default	reduce using rule 129 (ass_left)



state 86

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    ass_left  ->  array .   (rule 125)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 271

    $default	reduce using rule 125 (ass_left)



state 87

    ass_left  ->  point_exp .   (rule 126)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273

    $default	reduce using rule 126 (ass_left)



state 88

    function  ->  String_Function .   (rule 77)

    $default	reduce using rule 77 (function)



state 89

    String_Function  ->  String_Function_head .   (rule 262)

    $default	reduce using rule 262 (String_Function)



state 90

    String_Function  ->  String_Function_tail .   (rule 263)

    $default	reduce using rule 263 (String_Function)



state 91

    String_Function  ->  String_Function_cat .   (rule 264)

    $default	reduce using rule 264 (String_Function)



state 92

    String_Function  ->  String_Function_cmp .   (rule 266)

    $default	reduce using rule 266 (String_Function)



state 93

    String_Function  ->  String_Function_cpy .   (rule 265)

    $default	reduce using rule 265 (String_Function)



state 94

    String_Function  ->  String_Function_len .   (rule 267)

    $default	reduce using rule 267 (String_Function)



state 95

    all_type_define  ->  sign_type_define .   (rule 331)

    $default	reduce using rule 331 (all_type_define)



state 96

    function_define  ->  all_type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    ID  	shift, and go to state 274



state 97

    ass_left  ->  identifier .   (rule 123)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    IMPLY	shift, and go to state 276

    $default	reduce using rule 123 (ass_left)



state 98

    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 99

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 100

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 101

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 102

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 103

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 104

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 105

    ass_left  ->  struct_member_exp .   (rule 124)

    $default	reduce using rule 124 (ass_left)



state 106

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 277



state 107

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 278
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172



state 108

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 279
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 280



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 111

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 172)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 281
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 112

    member_in_exp  ->  POINTERNULL .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 113

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 114

    size_of  ->  SIZEOF . OPEN_PAR ari_exp CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 259)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 260)
    size_of  ->  SIZEOF . OPEN_PAR strliteral CLOSE_PAR   (rule 261)

    OPEN_PAR	shift, and go to state 297



state 115

    math_function  ->  CEIL . ari_exp   (rule 281)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 298
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 116

    math_function  ->  FLOOR . ari_exp   (rule 282)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 299
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 117

    math_function  ->  ROUND . ari_exp   (rule 280)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 300
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 118

    math_function  ->  SIN . ari_exp   (rule 283)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 301
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 119

    math_function  ->  COS . ari_exp   (rule 284)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 302
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 120

    math_function  ->  TAN . ari_exp   (rule 285)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 303
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 121

    math_function  ->  ASIN . ari_exp   (rule 286)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 304
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 122

    math_function  ->  ACOS . ari_exp   (rule 287)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 305
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 123

    math_function  ->  ATAN . ari_exp   (rule 288)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 306
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 124

    math_function  ->  SINH . ari_exp   (rule 289)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 307
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 125

    math_function  ->  COSH . ari_exp   (rule 290)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 308
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 126

    math_function  ->  TANH . ari_exp   (rule 291)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 309
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 127

    math_function  ->  EXP . ari_exp   (rule 292)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 310
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 128

    math_function  ->  LOG . ari_exp   (rule 293)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 311
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 129

    math_function  ->  LOG10 . ari_exp   (rule 294)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 312
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 130

    math_function  ->  SQRT . ari_exp   (rule 295)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 313
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 131

    math_function  ->  ATAN2 . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    OPEN_PAR	shift, and go to state 314



state 132

    math_function  ->  POW . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    OPEN_PAR	shift, and go to state 315



state 133

    math_function  ->  ABS . ari_exp   (rule 301)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 316
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 134

    math_function  ->  FABS . ari_exp   (rule 302)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 317
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 135

    math_function  ->  LABS . ari_exp   (rule 303)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 318
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 136

    math_function  ->  FMOD . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    OPEN_PAR	shift, and go to state 319



state 137

    math_function  ->  MODF . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 299)

    OPEN_PAR	shift, and go to state 320



state 138

    math_function  ->  LDEXP . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 300)

    OPEN_PAR	shift, and go to state 321



state 139

    address_exp  ->  ADDRESS . identifier   (rule 220)
    address_exp  ->  ADDRESS . array   (rule 221)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 222)
    address_exp  ->  ADDRESS . address_exp   (rule 223)

    OPEN_PAR	shift, and go to state 322
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 323
    point_exp	go to state 324
    address_exp	go to state 325
    identifier	go to state 326
    struct_member_exp	go to state 327



state 140

    member_in_exp  ->  SUB . member_in_exp   (rule 180)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 328
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 141

    member_in_exp  ->  BNE . member_in_exp   (rule 181)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 329
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 142

    intliteral  ->  INTLITERAL .   (rule 391)

    $default	reduce using rule 391 (intliteral)



state 143

    floatliteral  ->  FLOATLITERAL .   (rule 393)

    $default	reduce using rule 393 (floatliteral)



state 144

    charliteral  ->  CHARLITERAL .   (rule 392)

    $default	reduce using rule 392 (charliteral)



state 145

    member_in_exp  ->  function .   (rule 187)

    $default	reduce using rule 187 (member_in_exp)



state 146

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    member_in_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 271

    DOT 	[reduce using rule 185 (member_in_exp)]
    IMPLY	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)



state 147

    member_in_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273

    DOT 	[reduce using rule 186 (member_in_exp)]
    IMPLY	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)



state 148

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 332



state 149

    ari_exp  ->  simple_ari_exp .   (rule 169)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 170)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 178)

    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    NE  	shift, and go to state 336
    EQ  	shift, and go to state 337
    GE  	shift, and go to state 338
    LE  	shift, and go to state 339
    GT  	shift, and go to state 340
    LT  	shift, and go to state 341
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346

    INTER_OR	[reduce using rule 169 (ari_exp)]
    CON 	[reduce using rule 169 (ari_exp)]
    ADDRESS	[reduce using rule 169 (ari_exp)]
    NE  	[reduce using rule 169 (ari_exp)]
    EQ  	[reduce using rule 169 (ari_exp)]
    GE  	[reduce using rule 169 (ari_exp)]
    LE  	[reduce using rule 169 (ari_exp)]
    GT  	[reduce using rule 169 (ari_exp)]
    LT  	[reduce using rule 169 (ari_exp)]
    LST 	[reduce using rule 169 (ari_exp)]
    RST 	[reduce using rule 169 (ari_exp)]
    MUL 	[reduce using rule 169 (ari_exp)]
    DIV 	[reduce using rule 169 (ari_exp)]
    MOD 	[reduce using rule 169 (ari_exp)]
    $default	reduce using rule 169 (ari_exp)

    bi_operator	go to state 347
    relation_operator	go to state 348



state 150

    simple_ari_exp  ->  member_in_exp .   (rule 177)

    $default	reduce using rule 177 (simple_ari_exp)



state 151

    member_in_exp  ->  address_exp .   (rule 191)

    $default	reduce using rule 191 (member_in_exp)



state 152

    member_in_exp  ->  type_cast .   (rule 192)

    $default	reduce using rule 192 (member_in_exp)



state 153

    member_in_exp  ->  size_of .   (rule 194)

    $default	reduce using rule 194 (member_in_exp)



state 154

    member_in_exp  ->  math_function .   (rule 189)

    $default	reduce using rule 189 (member_in_exp)



state 155

    member_in_exp  ->  identifier .   (rule 184)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    IMPLY	shift, and go to state 276

    DOT 	[reduce using rule 184 (member_in_exp)]
    IMPLY	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 156

    member_in_exp  ->  intliteral .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 157

    member_in_exp  ->  charliteral .   (rule 190)

    $default	reduce using rule 190 (member_in_exp)



state 158

    member_in_exp  ->  floatliteral .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)



state 159

    member_in_exp  ->  struct_member_exp .   (rule 193)

    $default	reduce using rule 193 (member_in_exp)



state 160

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 161

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 162

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 163

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 164

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 165

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 166

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 167

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 349



state 168

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 350



state 169

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 351



state 170

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 352



state 171

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 353



state 172

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 173

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 414)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 354
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 174

    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 175

    member_in_exp  ->  POINTERNULL .   (rule 182)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 319)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 320)

    NE  	shift, and go to state 355
    EQ  	shift, and go to state 356

    NE  	[reduce using rule 182 (member_in_exp)]
    EQ  	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



state 176

    prime_bool_exp  ->  MY_TRUE .   (rule 310)

    $default	reduce using rule 310 (prime_bool_exp)



state 177

    prime_bool_exp  ->  MY_FALSE .   (rule 311)

    $default	reduce using rule 311 (prime_bool_exp)



state 178

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 308)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 357
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 359
    prime_bool_exp	go to state 183
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 179

    bool_exp  ->  NEGATION . bool_exp   (rule 305)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 360
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 180

    strliteral  ->  STRLITERAL .   (rule 390)

    $default	reduce using rule 390 (strliteral)



state 181

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 309)
    prime_bool_exp  ->  ari_exp .   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 314)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 318)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 321)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 322)

    NE  	shift, and go to state 361
    EQ  	shift, and go to state 362
    GE  	shift, and go to state 338
    LE  	shift, and go to state 339
    GT  	shift, and go to state 340
    LT  	shift, and go to state 341
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 312 (prime_bool_exp)

    ari_operator	go to state 332
    relation_operator	go to state 363



state 182

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 420)

    THEN	shift, and go to state 364
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 183

    bool_exp  ->  prime_bool_exp .   (rule 304)

    $default	reduce using rule 304 (bool_exp)



state 184

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 315)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 316)

    NE  	shift, and go to state 367
    EQ  	shift, and go to state 368



state 185

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 369
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 186

    struct_identifier  ->  STRUCT ID .   (rule 79)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    $default	reduce using rule 79 (struct_identifier)

    option_identifier_array_declaration	go to state 370
    identifier	go to state 259



state 187

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 371
    identifier	go to state 259



state 188

    struct_identifier  ->  UNION ID .   (rule 80)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    $default	reduce using rule 80 (struct_identifier)

    option_identifier_array_declaration	go to state 372
    identifier	go to state 259



state 189

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 373
    identifier	go to state 259



state 190

    file_statement  ->  FOPEN OPEN_PAR . ass_left COMMA strliteral CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 375
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    struct_member_exp	go to state 105



state 191

    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 121)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 376



state 192

    file_statement  ->  FGETS OPEN_PAR . identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 377



state 193

    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 378



state 194

    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 379



state 195

    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 119)
    file_statement  ->  FPUTC OPEN_PAR . array COMMA identifier CLOSE_PAR   (rule 120)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 381
    identifier	go to state 382



state 196

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 383



state 197

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 384



state 198

    identifier  ->  ID .   (rule 388)

    $default	reduce using rule 388 (identifier)



state 199

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 386



state 200

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 387



state 201

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 388
    UNION	shift, and go to state 232
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 389
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 390
    VOIDDECLARATION	shift, and go to state 391
    FLOATDECLARATION	shift, and go to state 392
    OPEN_PAR	shift, and go to state 393
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 394
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 409 (for_sta_init)

    function	go to state 145
    declaration	go to state 395
    type_define	go to state 237
    file_statement	go to state 82
    ass_statement	go to state 396
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 219
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    for_sta_init	go to state 397
    struct_member_exp	go to state 221



state 202

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 405)

    TIMES	shift, and go to state 398
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 203

    bool_par  ->  error . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 399



state 204

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 386)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 400
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 205

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 404)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 403



state 206

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 404
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 207

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 423)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 424)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 409
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 208

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 172)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 420)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 416
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 209

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 403)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 208
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 417
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 418
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 419
    VOIDDECLARATION	shift, and go to state 391
    FLOATDECLARATION	shift, and go to state 420
    OPEN_PAR	shift, and go to state 209
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 421
    SIGNED	shift, and go to state 422
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 211
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 394
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    statement	go to state 212
    function_define	go to state 75
    function	go to state 213
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 219
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 423
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 221



state 210

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    point_exp  ->  MUL . identifier   (rule 162)
    point_exp  ->  MUL . point_exp   (rule 163)
    point_exp  ->  MUL . array   (rule 164)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 167)

    OPEN_PAR	shift, and go to state 240
    MUL 	shift, and go to state 424
    ID  	shift, and go to state 425

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 426



state 211

    imply_pre  ->  NEGATION . imply_pre   (rule 400)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 427
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 428
    struct_member_exp	go to state 159



state 212

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 67)

    CLOSE_PAR	shift, and go to state 429
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 213

    statement  ->  function .   (rule 65)
    member_in_exp  ->  function .   (rule 187)

    CLOSE_PAR	reduce using rule 65 (statement)
    CLOSE_PAR	[reduce using rule 187 (member_in_exp)]
    CHOP	reduce using rule 65 (statement)
    OR  	reduce using rule 65 (statement)
    OR  	[reduce using rule 187 (member_in_exp)]
    PARALLEL	reduce using rule 65 (statement)
    AND 	reduce using rule 65 (statement)
    AND 	[reduce using rule 187 (member_in_exp)]
    $default	reduce using rule 187 (member_in_exp)



state 214

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 122)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 127)

    CLOSE_PAR	shift, and go to state 430
    ASS_P	shift, and go to state 266
    ASS_N	shift, and go to state 267

    assign_operator	go to state 268



state 215

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    ass_left  ->  array .   (rule 125)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)
    member_in_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 125 (ass_left)]
    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    ASS_P	reduce using rule 125 (ass_left)
    ASS_N	reduce using rule 125 (ass_left)
    $default	reduce using rule 185 (member_in_exp)



state 216

    ass_left  ->  point_exp .   (rule 126)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 168)
    member_in_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273

    CLOSE_PAR	[reduce using rule 126 (ass_left)]
    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    ASS_P	reduce using rule 126 (ass_left)
    ASS_N	reduce using rule 126 (ass_left)
    $default	reduce using rule 186 (member_in_exp)



state 217

    member_in_exp  ->  address_exp .   (rule 191)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)

    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    $default	reduce using rule 191 (member_in_exp)



state 218

    imply_pre  ->  prime_bool_exp .   (rule 399)

    $default	reduce using rule 399 (imply_pre)



state 219

    ass_left  ->  identifier .   (rule 123)
    member_in_exp  ->  identifier .   (rule 184)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 389)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    ASS_P	reduce using rule 123 (ass_left)
    ASS_N	reduce using rule 123 (ass_left)
    $default	reduce using rule 184 (member_in_exp)



state 220

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)

    CLOSE_PAR	shift, and go to state 435
    OR  	shift, and go to state 436
    AND 	shift, and go to state 437



state 221

    ass_left  ->  struct_member_exp .   (rule 124)
    member_in_exp  ->  struct_member_exp .   (rule 193)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 451)

    CLOSE_PAR	shift, and go to state 438

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    CLOSE_PAR	[reduce using rule 193 (member_in_exp)]
    ASS_P	reduce using rule 124 (ass_left)
    ASS_N	reduce using rule 124 (ass_left)
    $default	reduce using rule 193 (member_in_exp)



state 222

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 439
    CLOSE_BPAR	shift, and go to state 440
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    CLOSE_BPAR	[reduce using rule 397 (option_projection)]
    $default	reduce using rule 397 (option_projection)

    option_projection	go to state 441



state 223

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 446
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 224

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 450
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 225

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 451
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 226

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 452
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 227

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 453
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 228

    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 273)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 454
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 229

    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 455
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 230

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 456



state 231

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 187



state 232

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 458
    STRUCT_TYPE	shift, and go to state 189



state 233

    type_define  ->  INTDECLARATION .   (rule 94)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    ID  	reduce using rule 94 (type_define)
    ID  	[reduce using rule 329 (sign_type_define)]
    $default	reduce using rule 94 (type_define)



state 234

    type_define  ->  CHARDECLARATION .   (rule 96)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    ID  	reduce using rule 96 (type_define)
    ID  	[reduce using rule 330 (sign_type_define)]
    $default	reduce using rule 96 (type_define)



state 235

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    MUL 	shift, and go to state 459



state 236

    sign_declaration  ->  UNSIGNED declaration .   (rule 82)

    $default	reduce using rule 82 (sign_declaration)



state 237

    declaration  ->  type_define . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 265
    identifier	go to state 259



state 238

    sign_declaration  ->  SIGNED declaration .   (rule 81)

    $default	reduce using rule 81 (sign_declaration)



state 239

    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 62)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 460



state 240

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 167)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 461
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    type_define	go to state 462
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 463
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    sign_type_define	go to state 95
    all_type_define	go to state 464
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 241

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 388)

    OPEN_MPAR	shift, and go to state 255

    $default	reduce using rule 388 (identifier)



state 242

    point_exp  ->  MUL array .   (rule 164)

    $default	reduce using rule 164 (point_exp)



state 243

    point_exp  ->  MUL point_exp .   (rule 163)

    $default	reduce using rule 163 (point_exp)



state 244

    point_exp  ->  MUL identifier .   (rule 162)

    $default	reduce using rule 162 (point_exp)



state 245

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 465
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 466
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 467
    point_exp	go to state 468
    address_exp	go to state 469
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 470
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 471



state 246

    ass_left  ->  NEXT . ass_left   (rule 128)

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 247
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    struct_member_exp	go to state 105



state 247

    ass_left  ->  NEXT ass_left .   (rule 128)

    $default	reduce using rule 128 (ass_left)



state 248

    ass_left  ->  array .   (rule 125)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    IMPLY	shift, and go to state 271

    $default	reduce using rule 125 (ass_left)



state 249

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 472
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 250

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 428)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 429)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 430)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 431)

    OPEN_PAR	shift, and go to state 442
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 473
    point_exp	go to state 324
    identifier	go to state 474
    struct_member_exp	go to state 475



state 251

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 476
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 252

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 477
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 253

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 478
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 254

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 482
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 255

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 483
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 256

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259



state 257

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)
    identifier  ->  ID .   (rule 388)

    ARRAY	shift, and go to state 485
    OPEN_MPAR	shift, and go to state 486

    $default	reduce using rule 388 (identifier)



state 258

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 259

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 487
    ASS_P	shift, and go to state 488

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 489



state 260

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 490
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 261

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 491
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 262

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 492
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 263

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 493
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 264

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 78)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    UNSIGNED	shift, and go to state 494
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 495
    sign_declaration	go to state 496
    declaration	go to state 80
    type_define	go to state 237



state 265

    declaration  ->  type_define option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 266

    assign_operator  ->  ASS_P .   (rule 143)

    $default	reduce using rule 143 (assign_operator)



state 267

    assign_operator  ->  ASS_N .   (rule 144)

    $default	reduce using rule 144 (assign_operator)



state 268

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 122)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 497
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 269

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 439)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 498
    identifier	go to state 499



state 270

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 75)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 500
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 271

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 446)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 501
    identifier	go to state 502



state 272

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 440)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 503
    identifier	go to state 504



state 273

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 450)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 505
    identifier	go to state 506



state 274

    function_define  ->  all_type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_PAR	shift, and go to state 507



state 275

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier DOT . function   (rule 448)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 508
    file_statement	go to state 82
    array	go to state 509
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 510



state 276

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier IMPLY . function   (rule 449)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 511
    file_statement	go to state 82
    array	go to state 512
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 513



state 277

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 514
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 278

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 279

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 515



state 280

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 516



state 281

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 172)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)

    THEN	shift, and go to state 517
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 282

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)

    STRUCT_TYPE	shift, and go to state 518



state 283

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 520



state 284

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 522



state 285

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 243)

    MUL 	shift, and go to state 523



state 286

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 525



state 287

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 288

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 530
    CHARDECLARATION	shift, and go to state 531



state 289

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)

    INTDECLARATION	shift, and go to state 532
    CHARDECLARATION	shift, and go to state 533



state 290

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 247)

    MUL 	shift, and go to state 534



state 291

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)
    member_in_exp  ->  array .   (rule 185)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)



state 292

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 168)
    member_in_exp  ->  point_exp .   (rule 186)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273

    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)



state 293

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 188)

    CLOSE_PAR	shift, and go to state 535
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 294

    member_in_exp  ->  address_exp .   (rule 191)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 224)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)

    CLOSE_PAR	shift, and go to state 536

    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    $default	reduce using rule 191 (member_in_exp)



state 295

    member_in_exp  ->  identifier .   (rule 184)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 389)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 296

    member_in_exp  ->  struct_member_exp .   (rule 193)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 451)

    CLOSE_PAR	shift, and go to state 438

    CLOSE_PAR	[reduce using rule 193 (member_in_exp)]
    $default	reduce using rule 193 (member_in_exp)



state 297

    size_of  ->  SIZEOF OPEN_PAR . ari_exp CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 259)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 260)
    size_of  ->  SIZEOF OPEN_PAR . strliteral CLOSE_PAR   (rule 261)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 537
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 538
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 539
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 540
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 541
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 542
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    type_define	go to state 462
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 543
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    all_sizeof_type	go to state 544
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    sign_type_define	go to state 95
    all_type_define	go to state 545
    identifier	go to state 155
    strliteral	go to state 546
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 298

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  CEIL ari_exp .   (rule 281)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 281 (math_function)]
    SUB 	[reduce using rule 281 (math_function)]
    $default	reduce using rule 281 (math_function)

    ari_operator	go to state 332



state 299

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  FLOOR ari_exp .   (rule 282)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 282 (math_function)]
    SUB 	[reduce using rule 282 (math_function)]
    $default	reduce using rule 282 (math_function)

    ari_operator	go to state 332



state 300

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ROUND ari_exp .   (rule 280)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 280 (math_function)]
    SUB 	[reduce using rule 280 (math_function)]
    $default	reduce using rule 280 (math_function)

    ari_operator	go to state 332



state 301

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  SIN ari_exp .   (rule 283)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 283 (math_function)]
    SUB 	[reduce using rule 283 (math_function)]
    $default	reduce using rule 283 (math_function)

    ari_operator	go to state 332



state 302

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  COS ari_exp .   (rule 284)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 284 (math_function)]
    SUB 	[reduce using rule 284 (math_function)]
    $default	reduce using rule 284 (math_function)

    ari_operator	go to state 332



state 303

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  TAN ari_exp .   (rule 285)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 285 (math_function)]
    SUB 	[reduce using rule 285 (math_function)]
    $default	reduce using rule 285 (math_function)

    ari_operator	go to state 332



state 304

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ASIN ari_exp .   (rule 286)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 286 (math_function)]
    SUB 	[reduce using rule 286 (math_function)]
    $default	reduce using rule 286 (math_function)

    ari_operator	go to state 332



state 305

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ACOS ari_exp .   (rule 287)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 287 (math_function)]
    SUB 	[reduce using rule 287 (math_function)]
    $default	reduce using rule 287 (math_function)

    ari_operator	go to state 332



state 306

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ATAN ari_exp .   (rule 288)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 288 (math_function)]
    SUB 	[reduce using rule 288 (math_function)]
    $default	reduce using rule 288 (math_function)

    ari_operator	go to state 332



state 307

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  SINH ari_exp .   (rule 289)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 289 (math_function)]
    SUB 	[reduce using rule 289 (math_function)]
    $default	reduce using rule 289 (math_function)

    ari_operator	go to state 332



state 308

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  COSH ari_exp .   (rule 290)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 290 (math_function)]
    SUB 	[reduce using rule 290 (math_function)]
    $default	reduce using rule 290 (math_function)

    ari_operator	go to state 332



state 309

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  TANH ari_exp .   (rule 291)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 291 (math_function)]
    SUB 	[reduce using rule 291 (math_function)]
    $default	reduce using rule 291 (math_function)

    ari_operator	go to state 332



state 310

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  EXP ari_exp .   (rule 292)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 292 (math_function)]
    SUB 	[reduce using rule 292 (math_function)]
    $default	reduce using rule 292 (math_function)

    ari_operator	go to state 332



state 311

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  LOG ari_exp .   (rule 293)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 293 (math_function)]
    SUB 	[reduce using rule 293 (math_function)]
    $default	reduce using rule 293 (math_function)

    ari_operator	go to state 332



state 312

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  LOG10 ari_exp .   (rule 294)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 294 (math_function)]
    SUB 	[reduce using rule 294 (math_function)]
    $default	reduce using rule 294 (math_function)

    ari_operator	go to state 332



state 313

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  SQRT ari_exp .   (rule 295)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 295 (math_function)]
    SUB 	[reduce using rule 295 (math_function)]
    $default	reduce using rule 295 (math_function)

    ari_operator	go to state 332



state 314

    math_function  ->  ATAN2 OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 547
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 315

    math_function  ->  POW OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 548
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 316

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ABS ari_exp .   (rule 301)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 301 (math_function)]
    SUB 	[reduce using rule 301 (math_function)]
    $default	reduce using rule 301 (math_function)

    ari_operator	go to state 332



state 317

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  FABS ari_exp .   (rule 302)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 302 (math_function)]
    SUB 	[reduce using rule 302 (math_function)]
    $default	reduce using rule 302 (math_function)

    ari_operator	go to state 332



state 318

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  LABS ari_exp .   (rule 303)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 303 (math_function)]
    SUB 	[reduce using rule 303 (math_function)]
    $default	reduce using rule 303 (math_function)

    ari_operator	go to state 332



state 319

    math_function  ->  FMOD OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 549
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 320

    math_function  ->  MODF OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 550
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 321

    math_function  ->  LDEXP OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 300)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 551
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 322

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    OPEN_PAR	shift, and go to state 552
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 553
    point_exp	go to state 554
    address_exp	go to state 555
    identifier	go to state 556
    struct_member_exp	go to state 557



state 323

    address_exp  ->  ADDRESS array .   (rule 221)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269

    DOT 	[reduce using rule 221 (address_exp)]
    $default	reduce using rule 221 (address_exp)



state 324

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273



state 325

    address_exp  ->  ADDRESS address_exp .   (rule 223)

    $default	reduce using rule 223 (address_exp)



state 326

    address_exp  ->  ADDRESS identifier .   (rule 220)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275

    DOT 	[reduce using rule 220 (address_exp)]
    $default	reduce using rule 220 (address_exp)



state 327

    address_exp  ->  ADDRESS struct_member_exp .   (rule 222)

    $default	reduce using rule 222 (address_exp)



state 328

    member_in_exp  ->  SUB member_in_exp .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 329

    member_in_exp  ->  BNE member_in_exp .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 330

    ari_operator  ->  ADD .   (rule 203)

    $default	reduce using rule 203 (ari_operator)



state 331

    ari_operator  ->  SUB .   (rule 204)

    $default	reduce using rule 204 (ari_operator)



state 332

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 171)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    simple_ari_exp	go to state 558
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 333

    bi_operator  ->  INTER_OR .   (rule 201)

    $default	reduce using rule 201 (bi_operator)



state 334

    bi_operator  ->  CON .   (rule 202)

    $default	reduce using rule 202 (bi_operator)



state 335

    bi_operator  ->  ADDRESS .   (rule 200)

    $default	reduce using rule 200 (bi_operator)



state 336

    relation_operator  ->  NE .   (rule 325)

    $default	reduce using rule 325 (relation_operator)



state 337

    relation_operator  ->  EQ .   (rule 328)

    $default	reduce using rule 328 (relation_operator)



state 338

    relation_operator  ->  GE .   (rule 323)

    $default	reduce using rule 323 (relation_operator)



state 339

    relation_operator  ->  LE .   (rule 324)

    $default	reduce using rule 324 (relation_operator)



state 340

    relation_operator  ->  GT .   (rule 326)

    $default	reduce using rule 326 (relation_operator)



state 341

    relation_operator  ->  LT .   (rule 327)

    $default	reduce using rule 327 (relation_operator)



state 342

    bi_operator  ->  LST .   (rule 198)

    $default	reduce using rule 198 (bi_operator)



state 343

    bi_operator  ->  RST .   (rule 199)

    $default	reduce using rule 199 (bi_operator)



state 344

    bi_operator  ->  MUL .   (rule 195)

    $default	reduce using rule 195 (bi_operator)



state 345

    bi_operator  ->  DIV .   (rule 196)

    $default	reduce using rule 196 (bi_operator)



state 346

    bi_operator  ->  MOD .   (rule 197)

    $default	reduce using rule 197 (bi_operator)



state 347

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 178)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 559
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 348

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 170)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 560
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 349

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 8 (complexProposition)



state 350

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 6 (complexProposition)



state 351

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 7 (complexProposition)



state 352

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 5 (complexProposition)



state 353

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 4 (complexProposition)



state 354

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 414)

    CLOSE_PAR	shift, and go to state 561



state 355

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 320)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 562
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 356

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 319)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 563
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 357

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 308)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 357
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 359
    prime_bool_exp	go to state 183
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 358

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 188)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 309)
    prime_bool_exp  ->  ari_exp .   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 314)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 318)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 321)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 322)

    CLOSE_PAR	shift, and go to state 535
    NE  	shift, and go to state 361
    EQ  	shift, and go to state 362
    GE  	shift, and go to state 338
    LE  	shift, and go to state 339
    GT  	shift, and go to state 340
    LT  	shift, and go to state 341
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    CLOSE_PAR	[reduce using rule 312 (prime_bool_exp)]
    $default	reduce using rule 312 (prime_bool_exp)

    ari_operator	go to state 332
    relation_operator	go to state 363



state 359

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 308)

    CLOSE_PAR	shift, and go to state 564
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 360

    bool_exp  ->  NEGATION bool_exp .   (rule 305)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)


    $default	reduce using rule 305 (bool_exp)



state 361

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 314)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 318)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 322)
    relation_operator  ->  NE .   (rule 325)

    POINTERNULL	shift, and go to state 565
    STRLITERAL	shift, and go to state 180
    CHARLITERAL	shift, and go to state 144

    POINTERNULL	[reduce using rule 325 (relation_operator)]
    CHARLITERAL	[reduce using rule 325 (relation_operator)]
    $default	reduce using rule 325 (relation_operator)

    strliteral	go to state 566
    charliteral	go to state 567



state 362

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 321)
    relation_operator  ->  EQ .   (rule 328)

    POINTERNULL	shift, and go to state 568
    STRLITERAL	shift, and go to state 180
    CHARLITERAL	shift, and go to state 144

    POINTERNULL	[reduce using rule 328 (relation_operator)]
    CHARLITERAL	[reduce using rule 328 (relation_operator)]
    $default	reduce using rule 328 (relation_operator)

    strliteral	go to state 569
    charliteral	go to state 570



state 363

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 309)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 571
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 364

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 420)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 572



state 365

    bool_exp  ->  bool_exp OR . bool_exp   (rule 307)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 573
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 366

    bool_exp  ->  bool_exp AND . bool_exp   (rule 306)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 574
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 367

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 316)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 575
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 368

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 315)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 576
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 369

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)

    CLOSE_PAR	shift, and go to state 577
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 370

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 371

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 372

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 373

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 89)

    $default	reduce using rule 89 (declaration)



state 374

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    OPEN_PAR	shift, and go to state 578
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 580
    point_exp	go to state 468
    address_exp	go to state 469
    identifier	go to state 470
    struct_member_exp	go to state 471



state 375

    file_statement  ->  FOPEN OPEN_PAR ass_left . COMMA strliteral CLOSE_PAR   (rule 115)

    COMMA	shift, and go to state 581



state 376

    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 582



state 377

    file_statement  ->  FGETS OPEN_PAR identifier . COMMA intliteral COMMA identifier CLOSE_PAR   (rule 116)

    COMMA	shift, and go to state 583



state 378

    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 118)

    COMMA	shift, and go to state 584



state 379

    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 117)

    CLOSE_PAR	shift, and go to state 585



state 380

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    OPEN_PAR	shift, and go to state 586
    ID  	shift, and go to state 241

    array	go to state 587
    identifier	go to state 384



state 381

    file_statement  ->  FPUTC OPEN_PAR array . COMMA identifier CLOSE_PAR   (rule 120)

    COMMA	shift, and go to state 588



state 382

    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 119)

    COMMA	shift, and go to state 589



state 383

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 594



state 384

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 389)

    CLOSE_PAR	shift, and go to state 434



state 385

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 363)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 367)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 373)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 374)
    inner_option_define_identifier  ->  COMMA . error   (rule 375)

    error	shift, and go to state 595
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 596
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 597
    STRUCT_TYPE	shift, and go to state 598

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 599



state 386

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COLON	shift, and go to state 600



state 387

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 601

    $default	reduce using rule 395 (option_frame_identifier)

    option_frame_identifier	go to state 602



state 388

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 88)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)

    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 603



state 389

    type_define  ->  INTDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 520

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 390

    type_define  ->  CHARDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 522

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 391

    type_define  ->  VOIDDECLARATION .   (rule 98)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 243)

    MUL 	shift, and go to state 523

    MUL 	[reduce using rule 98 (type_define)]
    $default	reduce using rule 98 (type_define)



state 392

    type_define  ->  FLOATDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 525

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 393

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 604
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 219
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 221



state 394

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 85)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 247)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 605
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 258
    identifier	go to state 259



state 395

    for_sta_init  ->  declaration .   (rule 408)

    $default	reduce using rule 408 (for_sta_init)



state 396

    for_sta_init  ->  ass_statement .   (rule 407)

    $default	reduce using rule 407 (for_sta_init)



state 397

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    COMMA	shift, and go to state 606



state 398

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 405)

    DO  	shift, and go to state 607



state 399

    bool_par  ->  error CLOSE_PAR .   (rule 387)

    $default	reduce using rule 387 (bool_par)



state 400

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 386)

    CLOSE_PAR	shift, and go to state 608
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 401

    statement_bpar  ->  error . CLOSE_BPAR   (rule 385)

    CLOSE_BPAR	shift, and go to state 609



state 402

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 384)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 610
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 403

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 404)

    $default	reduce using rule 404 (while_statement)



state 404

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 611
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 405

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 612
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 613
    rightaddrshift	go to state 410
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 614
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 615
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    strliteral	go to state 616
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 406

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 212)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 213)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 214)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 617
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 618
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 619
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 620
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 407

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 209)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 210)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 211)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 617
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 621
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 622
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 623
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 408

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 151)
    point_exp  ->  MUL . identifier   (rule 162)
    point_exp  ->  MUL . point_exp   (rule 163)
    point_exp  ->  MUL . array   (rule 164)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 167)

    OPEN_PAR	shift, and go to state 624
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 244



state 409

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 423)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 424)

    COMMA	shift, and go to state 625
    CLOSE_PAR	shift, and go to state 626

    CLOSE_PAR	[reduce using rule 425 (option_output)]
    $default	reduce using rule 425 (option_output)

    option_output	go to state 627



state 410

    ass_right  ->  rightaddrshift .   (rule 150)

    $default	reduce using rule 150 (ass_right)



state 411

    ass_right  ->  ari_exp .   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 145 (ass_right)

    ari_operator	go to state 332



state 412

    ass_right  ->  array_exp .   (rule 146)
    array_exp  ->  array_exp . CON array_exp   (rule 205)

    CON 	shift, and go to state 628

    $default	reduce using rule 146 (ass_right)



state 413

    array_exp  ->  option_list_value .   (rule 206)

    $default	reduce using rule 206 (array_exp)



state 414

    array_exp  ->  option_struct_list_value .   (rule 207)

    $default	reduce using rule 207 (array_exp)



state 415

    ass_right  ->  strliteral .   (rule 147)

    $default	reduce using rule 147 (ass_right)



state 416

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 172)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 420)

    THEN	shift, and go to state 629
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 417

    struct_identifier  ->  STRUCT . ID   (rule 79)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 88)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)

    ID  	shift, and go to state 186
    STRUCT_TYPE	shift, and go to state 603



state 418

    type_define  ->  INTDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 630

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 419

    type_define  ->  CHARDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 631

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 420

    type_define  ->  FLOATDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 632

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 421

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 633
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 634
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237



state 422

    sign_declaration  ->  SIGNED . declaration   (rule 81)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 635
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 636
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 238
    type_define	go to state 237



state 423

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 403)

    CLOSE_PAR	shift, and go to state 637
    OR  	shift, and go to state 436
    AND 	shift, and go to state 437



state 424

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    point_exp  ->  MUL . identifier   (rule 162)
    point_exp  ->  MUL . point_exp   (rule 163)
    point_exp  ->  MUL . array   (rule 164)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 167)

    OPEN_PAR	shift, and go to state 240
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 242
    point_exp	go to state 243
    identifier	go to state 638



state 425

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 388)

    OPEN_MPAR	shift, and go to state 639

    $default	reduce using rule 388 (identifier)



state 426

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    point_exp  ->  MUL identifier .   (rule 162)

    CLOSE_PAR	shift, and go to state 640

    CLOSE_PAR	[reduce using rule 162 (point_exp)]
    $default	reduce using rule 162 (point_exp)



state 427

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 403)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 641
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 642
    struct_member_exp	go to state 296



state 428

    imply_pre  ->  NEGATION imply_pre .   (rule 400)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)


    $default	reduce using rule 400 (imply_pre)



state 429

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 67)

    $default	reduce using rule 67 (statement)



state 430

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 127)

    $default	reduce using rule 127 (ass_left)



state 431

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 158)

    $default	reduce using rule 158 (array)



state 432

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 168)

    OPEN_MPAR	shift, and go to state 643

    $default	reduce using rule 168 (point_exp)



state 433

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 447)

    IMPLY	shift, and go to state 644



state 434

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 389)

    $default	reduce using rule 389 (identifier)



state 435

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 645



state 436

    imply_pre  ->  imply_pre OR . imply_pre   (rule 402)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 427
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 646
    struct_member_exp	go to state 159



state 437

    imply_pre  ->  imply_pre AND . imply_pre   (rule 401)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 427
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 647
    struct_member_exp	go to state 159



state 438

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 451)

    $default	reduce using rule 451 (struct_member_exp)



state 439

    option_projection  ->  COMMA . statement option_projection   (rule 398)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 648
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 440

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 649



state 441

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 650



state 442

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    OPEN_PAR	shift, and go to state 552
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 553
    point_exp	go to state 554
    address_exp	go to state 469
    identifier	go to state 556
    struct_member_exp	go to state 557



state 443

    str_func_parameter  ->  array .   (rule 275)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    IMPLY	shift, and go to state 271

    $default	reduce using rule 275 (str_func_parameter)



state 444

    str_func_parameter  ->  point_exp .   (rule 276)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    IMPLY	shift, and go to state 273

    $default	reduce using rule 276 (str_func_parameter)



state 445

    str_func_parameter  ->  String_Function .   (rule 278)

    $default	reduce using rule 278 (str_func_parameter)



state 446

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 268)

    CLOSE_PAR	shift, and go to state 651



state 447

    str_func_parameter  ->  identifier .   (rule 274)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    IMPLY	shift, and go to state 276

    $default	reduce using rule 274 (str_func_parameter)



state 448

    str_func_parameter  ->  strliteral .   (rule 277)

    $default	reduce using rule 277 (str_func_parameter)



state 449

    str_func_parameter  ->  struct_member_exp .   (rule 279)

    $default	reduce using rule 279 (str_func_parameter)



state 450

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 269)

    CLOSE_PAR	shift, and go to state 652



state 451

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 270)

    COMMA	shift, and go to state 653



state 452

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 271)

    COMMA	shift, and go to state 654



state 453

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 272)

    COMMA	shift, and go to state 655



state 454

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 273)

    CLOSE_PAR	shift, and go to state 656



state 455

    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 63)

    CLOSE_PAR	shift, and go to state 657



state 456

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 74)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 658
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 457

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 370
    identifier	go to state 259



state 458

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 372
    identifier	go to state 259



state 459

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 659
    ID  	shift, and go to state 660

    identifier	go to state 661



state 460

    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 62)

    CLOSE_PAR	shift, and go to state 662



state 461

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    INTDECLARATION	shift, and go to state 663
    CHARDECLARATION	shift, and go to state 664



state 462

    all_type_define  ->  type_define .   (rule 332)

    $default	reduce using rule 332 (all_type_define)



state 463

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 167)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    CLOSE_PAR	shift, and go to state 665
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 464

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 166)

    MUL 	shift, and go to state 666



state 465

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 208
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 667
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 668
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 669
    OPEN_PAR	shift, and go to state 209
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 670
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 210
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 211
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    statement	go to state 212
    function_define	go to state 75
    function	go to state 213
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 214
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 219
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 220
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 221



state 466

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 671
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 467

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    ass_left  ->  array .   (rule 125)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    OPEN_PAR	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 125 (ass_left)]
    $default	reduce using rule 125 (ass_left)



state 468

    ass_left  ->  point_exp .   (rule 126)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 168)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273

    CLOSE_PAR	[reduce using rule 126 (ass_left)]
    $default	reduce using rule 126 (ass_left)



state 469

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)

    CLOSE_PAR	shift, and go to state 433



state 470

    ass_left  ->  identifier .   (rule 123)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 389)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    $default	reduce using rule 123 (ass_left)



state 471

    ass_left  ->  struct_member_exp .   (rule 124)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 451)

    CLOSE_PAR	shift, and go to state 438

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    $default	reduce using rule 124 (ass_left)



state 472

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    CLOSE_PAR	shift, and go to state 672
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 473

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 429)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 430)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    COMMA	shift, and go to state 673
    CLOSE_PAR	shift, and go to state 674
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 432 (option_input)]
    $default	reduce using rule 432 (option_input)

    option_input	go to state 675



state 474

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 428)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    COMMA	shift, and go to state 673
    CLOSE_PAR	shift, and go to state 676
    IMPLY	shift, and go to state 276

    CLOSE_PAR	[reduce using rule 432 (option_input)]
    $default	reduce using rule 432 (option_input)

    option_input	go to state 677



state 475

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 431)

    CLOSE_PAR	shift, and go to state 678



state 476

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 679
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 477

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 680
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 478

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 681
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 479

    address_exp  ->  ADDRESS . identifier   (rule 220)
    address_exp  ->  ADDRESS . array   (rule 221)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 222)
    address_exp  ->  ADDRESS . address_exp   (rule 223)
    option_function_identifier  ->  ADDRESS . error   (rule 379)

    error	shift, and go to state 682
    OPEN_PAR	shift, and go to state 322
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 323
    point_exp	go to state 324
    address_exp	go to state 325
    identifier	go to state 326
    struct_member_exp	go to state 327



state 480

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 377)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 683
    OPEN_MPAR	shift, and go to state 255

    $default	reduce using rule 388 (identifier)



state 481

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 376)

    COMMA	shift, and go to state 684

    $default	reduce using rule 382 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 685



state 482

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 686



state 483

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 688
    ari_operator	go to state 332



state 484

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (option_identifier_array_declaration)



state 485

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    ASS_P	shift, and go to state 689



state 486

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 690
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 487

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 108)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 109)

    error	shift, and go to state 691
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 692
    identifier	go to state 259



state 488

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 102)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 693
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 489

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 490

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    $default	reduce using rule 32 (statement)



state 491

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    AND 	shift, and go to state 263

    $default	reduce using rule 31 (statement)



state 492

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

    AND 	shift, and go to state 263

    $default	reduce using rule 55 (statement)



state 493

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



state 494

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237



state 495

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 78)

    CLOSE_BPAR	shift, and go to state 694



state 496

    option_struct_declaration  ->  sign_declaration .   (rule 68)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 69)

    AND 	shift, and go to state 695

    $default	reduce using rule 68 (option_struct_declaration)



state 497

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 122)

    $default	reduce using rule 122 (ass_statement)



state 498

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 439)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 698



state 499

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 436)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 699



state 500

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 75)

    CLOSE_PAR	shift, and go to state 700



state 501

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 701



state 502

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 442)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 702



state 503

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 440)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 703



state 504

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 437)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 704



state 505

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 705



state 506

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 706



state 507

    function_define  ->  all_type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 707



state 508

    struct_member_exp  ->  identifier DOT function .   (rule 448)

    $default	reduce using rule 448 (struct_member_exp)



state 509

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 438)

    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 708



state 510

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 435)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 709



state 511

    struct_member_exp  ->  identifier IMPLY function .   (rule 449)

    $default	reduce using rule 449 (struct_member_exp)



state 512

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 445)

    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 710



state 513

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 441)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 711



state 514

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 515

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 279
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 712



state 516

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 713



state 517

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 172)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 714
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 518

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 246)

    MUL 	shift, and go to state 715



state 519

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 225)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 716
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 520

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 718
    MUL 	shift, and go to state 719



state 521

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 227)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 720
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 522

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 722



state 523

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 243)

    CLOSE_PAR	shift, and go to state 723
    MUL 	shift, and go to state 724



state 524

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 226)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 725
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 525

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 727



state 526

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 728



state 527

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 729



state 528

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 730



state 529

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 732



state 530

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 734



state 531

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 736



state 532

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)

    CLOSE_PAR	shift, and go to state 737



state 533

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)

    CLOSE_PAR	shift, and go to state 738



state 534

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 247)

    CLOSE_PAR	shift, and go to state 739
    MUL 	shift, and go to state 740



state 535

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 188)

    $default	reduce using rule 188 (member_in_exp)



state 536

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 224)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 447)

    IMPLY	shift, and go to state 644

    IMPLY	[reduce using rule 224 (address_exp)]
    $default	reduce using rule 224 (address_exp)



state 537

    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 256)

    STRUCT_TYPE	shift, and go to state 741



state 538

    type_define  ->  INTDECLARATION .   (rule 94)
    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 251)

    MUL 	shift, and go to state 742

    $default	reduce using rule 94 (type_define)



state 539

    type_define  ->  CHARDECLARATION .   (rule 96)
    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 253)

    MUL 	shift, and go to state 743

    $default	reduce using rule 96 (type_define)



state 540

    type_define  ->  FLOATDECLARATION .   (rule 95)
    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 252)

    MUL 	shift, and go to state 744

    $default	reduce using rule 95 (type_define)



state 541

    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 254)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 255)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    INTDECLARATION	shift, and go to state 745
    CHARDECLARATION	shift, and go to state 746



state 542

    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 257)
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 260)

    CLOSE_PAR	shift, and go to state 747
    MUL 	shift, and go to state 748



state 543

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    size_of  ->  SIZEOF OPEN_PAR ari_exp . CLOSE_PAR   (rule 258)

    CLOSE_PAR	shift, and go to state 749
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 544

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 259)

    CLOSE_PAR	shift, and go to state 750



state 545

    all_sizeof_type  ->  all_type_define .   (rule 250)

    $default	reduce using rule 250 (all_sizeof_type)



state 546

    size_of  ->  SIZEOF OPEN_PAR strliteral . CLOSE_PAR   (rule 261)

    CLOSE_PAR	shift, and go to state 751



state 547

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ATAN2 OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 296)

    COMMA	shift, and go to state 752
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 548

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  POW OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 297)

    COMMA	shift, and go to state 753
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 549

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  FMOD OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 298)

    COMMA	shift, and go to state 754
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 550

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  MODF OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 299)

    COMMA	shift, and go to state 755
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 551

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  LDEXP OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 300)

    COMMA	shift, and go to state 756
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 552

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    INTDECLARATION	shift, and go to state 757
    CHARDECLARATION	shift, and go to state 758
    FLOATDECLARATION	shift, and go to state 759
    OPEN_PAR	shift, and go to state 552
    UNSIGNED	shift, and go to state 760
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241

    array	go to state 553
    point_exp	go to state 554
    address_exp	go to state 555
    identifier	go to state 556
    struct_member_exp	go to state 557



state 553

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271



state 554

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 168)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 440)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 444)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 272
    CLOSE_PAR	shift, and go to state 432
    IMPLY	shift, and go to state 273



state 555

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 224)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)

    CLOSE_PAR	shift, and go to state 536



state 556

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 389)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  identifier . DOT function   (rule 448)
    struct_member_exp  ->  identifier . IMPLY function   (rule 449)

    DOT 	shift, and go to state 275
    CLOSE_PAR	shift, and go to state 434
    IMPLY	shift, and go to state 276



state 557

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 451)

    CLOSE_PAR	shift, and go to state 438



state 558

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 171)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 178)

    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346

    INTER_OR	[reduce using rule 171 (ari_exp)]
    CON 	[reduce using rule 171 (ari_exp)]
    ADDRESS	[reduce using rule 171 (ari_exp)]
    LST 	[reduce using rule 171 (ari_exp)]
    RST 	[reduce using rule 171 (ari_exp)]
    MUL 	[reduce using rule 171 (ari_exp)]
    DIV 	[reduce using rule 171 (ari_exp)]
    MOD 	[reduce using rule 171 (ari_exp)]
    $default	reduce using rule 171 (ari_exp)

    bi_operator	go to state 347



state 559

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 178)

    $default	reduce using rule 178 (simple_ari_exp)



state 560

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 170)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 170 (ari_exp)]
    SUB 	[reduce using rule 170 (ari_exp)]
    $default	reduce using rule 170 (ari_exp)

    ari_operator	go to state 332



state 561

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 414)

    OPEN_BPAR	shift, and go to state 761



state 562

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 320)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 320 (prime_bool_exp)

    ari_operator	go to state 332



state 563

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 319)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 319 (prime_bool_exp)

    ari_operator	go to state 332



state 564

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 308)

    $default	reduce using rule 308 (bool_exp)



state 565

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 318)

    $default	reduce using rule 318 (prime_bool_exp)



state 566

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 314)

    $default	reduce using rule 314 (prime_bool_exp)



state 567

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 322)

    $default	reduce using rule 322 (prime_bool_exp)



state 568

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 317)

    $default	reduce using rule 317 (prime_bool_exp)



state 569

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 313)

    $default	reduce using rule 313 (prime_bool_exp)



state 570

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 321)

    $default	reduce using rule 321 (prime_bool_exp)



state 571

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 309)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 309 (prime_bool_exp)

    ari_operator	go to state 332



state 572

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 420)

    ELSE	shift, and go to state 762

    $default	reduce using rule 422 (option_else_statement)

    option_else_statement	go to state 763



state 573

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 307)

    AND 	shift, and go to state 366

    $default	reduce using rule 307 (bool_exp)



state 574

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)


    $default	reduce using rule 306 (bool_exp)



state 575

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 316)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 316 (prime_bool_exp)

    ari_operator	go to state 332



state 576

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 315)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 315 (prime_bool_exp)

    ari_operator	go to state 332



state 577

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 578

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    INTDECLARATION	shift, and go to state 764
    CHARDECLARATION	shift, and go to state 765
    FLOATDECLARATION	shift, and go to state 766
    OPEN_PAR	shift, and go to state 578
    UNSIGNED	shift, and go to state 767
    ADDRESS	shift, and go to state 139
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 580
    point_exp	go to state 468
    address_exp	go to state 555
    identifier	go to state 470
    struct_member_exp	go to state 471



state 579

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 127)

    CLOSE_PAR	shift, and go to state 430



state 580

    ass_left  ->  array .   (rule 125)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 446)

    DOT 	shift, and go to state 269
    CLOSE_PAR	shift, and go to state 431
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 125 (ass_left)]
    $default	reduce using rule 125 (ass_left)



state 581

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA . strliteral CLOSE_PAR   (rule 115)

    STRLITERAL	shift, and go to state 180

    strliteral	go to state 768



state 582

    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 121)

    $default	reduce using rule 121 (file_statement)



state 583

    file_statement  ->  FGETS OPEN_PAR identifier COMMA . intliteral COMMA identifier CLOSE_PAR   (rule 116)

    INTLITERAL	shift, and go to state 142

    intliteral	go to state 769



state 584

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 770



state 585

    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 117)

    $default	reduce using rule 117 (file_statement)



state 586

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    INTDECLARATION	shift, and go to state 757
    CHARDECLARATION	shift, and go to state 758
    FLOATDECLARATION	shift, and go to state 759
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 760
    ID  	shift, and go to state 241

    array	go to state 587
    identifier	go to state 384



state 587

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 158)

    CLOSE_PAR	shift, and go to state 431



state 588

    file_statement  ->  FPUTC OPEN_PAR array COMMA . identifier CLOSE_PAR   (rule 120)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 771



state 589

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 772



state 590

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 357)

    MUL 	shift, and go to state 773



state 591

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 341)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 342)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 346)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 348)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 774
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 775
    identifier	go to state 776



state 592

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 343)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 344)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 345)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778
    identifier	go to state 779



state 593

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 354)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 355)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 356)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 780
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 781
    identifier	go to state 782



state 594

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 783



state 595

    inner_option_define_identifier  ->  COMMA error .   (rule 375)

    $default	reduce using rule 375 (inner_option_define_identifier)



state 596

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)

    MUL 	shift, and go to state 784



state 597

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 364)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 785



state 598

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 363)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 365)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 786
    ID  	shift, and go to state 198

    identifier	go to state 787



state 599

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 367)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 373)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 374)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 788
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 789
    identifier	go to state 790



state 600

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 791



state 601

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 394)
    option_frame_identifier  ->  COMMA . error   (rule 396)

    error	shift, and go to state 792
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 793



state 602

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 794



state 603

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 88)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 795
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 371
    identifier	go to state 259



state 604

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 796
    CHARDECLARATION	shift, and go to state 797
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 798
    OPEN_PAR	shift, and go to state 604
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 799
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_left	go to state 579
    leftaddrshift	go to state 85
    array	go to state 215
    point_exp	go to state 216
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 219
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 221



state 605

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 247)

    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 739
    MUL 	shift, and go to state 800
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259



state 606

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 411 (for_sta_condition)

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 801
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    for_sta_condition	go to state 802
    struct_member_exp	go to state 159



state 607

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 405)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 803



state 608

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 386)

    $default	reduce using rule 386 (bool_par)



state 609

    statement_bpar  ->  error CLOSE_BPAR .   (rule 385)

    $default	reduce using rule 385 (statement_bpar)



state 610

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 384)

    CLOSE_BPAR	shift, and go to state 804
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 611

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 805



state 612

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 612
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 613
    rightaddrshift	go to state 410
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 614
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 615
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    strliteral	go to state 616
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 613

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 149)

    CLOSE_PAR	shift, and go to state 806



state 614

    ass_right  ->  ari_exp .   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 188)

    CLOSE_PAR	shift, and go to state 535
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    CLOSE_PAR	[reduce using rule 145 (ass_right)]
    $default	reduce using rule 145 (ass_right)

    ari_operator	go to state 332



state 615

    ass_right  ->  array_exp .   (rule 146)
    array_exp  ->  array_exp . CON array_exp   (rule 205)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 208)

    CLOSE_PAR	shift, and go to state 807
    CON 	shift, and go to state 628

    CLOSE_PAR	[reduce using rule 146 (ass_right)]
    $default	reduce using rule 146 (ass_right)



state 616

    ass_right  ->  strliteral .   (rule 147)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)

    CLOSE_PAR	shift, and go to state 808

    CLOSE_PAR	[reduce using rule 147 (ass_right)]
    $default	reduce using rule 147 (ass_right)



state 617

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 809
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 810
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 618

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 212)

    COMMA	shift, and go to state 811
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 218 (inner_option_list_value)

    ari_operator	go to state 332
    inner_option_list_value	go to state 812



state 619

    array_exp  ->  array_exp . CON array_exp   (rule 205)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 214)

    COMMA	shift, and go to state 811
    CON 	shift, and go to state 628

    $default	reduce using rule 218 (inner_option_list_value)

    inner_option_list_value	go to state 813



state 620

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 213)

    COMMA	shift, and go to state 811

    $default	reduce using rule 218 (inner_option_list_value)

    inner_option_list_value	go to state 814



state 621

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 209)

    COMMA	shift, and go to state 811
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 218 (inner_option_list_value)

    ari_operator	go to state 332
    inner_option_list_value	go to state 815



state 622

    array_exp  ->  array_exp . CON array_exp   (rule 205)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 211)

    COMMA	shift, and go to state 811
    CON 	shift, and go to state 628

    $default	reduce using rule 218 (inner_option_list_value)

    inner_option_list_value	go to state 816



state 623

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 210)

    COMMA	shift, and go to state 811

    $default	reduce using rule 218 (inner_option_list_value)

    inner_option_list_value	go to state 817



state 624

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 166)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 167)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 818
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 461
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    type_define	go to state 462
    file_statement	go to state 82
    leftaddrshift	go to state 819
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 463
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    sign_type_define	go to state 95
    all_type_define	go to state 464
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 625

    option_output  ->  COMMA . ass_right option_output   (rule 426)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 820
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 626

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 423)

    $default	reduce using rule 423 (output_statement)



state 627

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 424)

    CLOSE_PAR	shift, and go to state 821



state 628

    array_exp  ->  array_exp CON . array_exp   (rule 205)

    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407

    array_exp	go to state 823
    option_list_value	go to state 413
    option_struct_list_value	go to state 414



state 629

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 172)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 420)

    error	shift, and go to state 401
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    OPEN_BPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 714
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    statement_bpar	go to state 572
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 630

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 824
    MUL 	shift, and go to state 719



state 631

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 825
    MUL 	shift, and go to state 722



state 632

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 826
    MUL 	shift, and go to state 727



state 633

    type_define  ->  INTDECLARATION .   (rule 94)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 827

    MUL 	[reduce using rule 94 (type_define)]
    ID  	reduce using rule 94 (type_define)
    ID  	[reduce using rule 329 (sign_type_define)]
    $default	reduce using rule 94 (type_define)



state 634

    type_define  ->  CHARDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 828

    MUL 	[reduce using rule 96 (type_define)]
    ID  	reduce using rule 96 (type_define)
    ID  	[reduce using rule 330 (sign_type_define)]
    $default	reduce using rule 96 (type_define)



state 635

    type_define  ->  INTDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)

    CLOSE_PAR	shift, and go to state 737

    $default	reduce using rule 94 (type_define)



state 636

    type_define  ->  CHARDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)

    CLOSE_PAR	shift, and go to state 738

    $default	reduce using rule 96 (type_define)



state 637

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 403)

    IMPLY	shift, and go to state 645

    $default	reduce using rule 403 (imply_pre)



state 638

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    point_exp  ->  MUL identifier .   (rule 162)

    CLOSE_PAR	shift, and go to state 829

    CLOSE_PAR	[reduce using rule 162 (point_exp)]
    $default	reduce using rule 162 (point_exp)



state 639

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 830
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 640

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    OPEN_PAR	shift, and go to state 831



state 641

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 403)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 641
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 211
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 358
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    prime_bool_exp	go to state 218
    identifier	go to state 295
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    imply_pre	go to state 642
    struct_member_exp	go to state 296



state 642

    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 403)

    CLOSE_PAR	shift, and go to state 832
    OR  	shift, and go to state 436
    AND 	shift, and go to state 437



state 643

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 165)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 833
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 644

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 447)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 834
    identifier	go to state 835



state 645

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 836



state 646

    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 402)

    AND 	shift, and go to state 437

    $default	reduce using rule 402 (imply_pre)



state 647

    imply_pre  ->  imply_pre . AND imply_pre   (rule 401)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 401)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 402)


    $default	reduce using rule 401 (imply_pre)



state 648

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 398)

    COMMA	shift, and go to state 439
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    $default	reduce using rule 397 (option_projection)

    option_projection	go to state 837



state 649

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 838



state 650

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 839



state 651

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 268)

    $default	reduce using rule 268 (String_Function_head)



state 652

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 269)

    $default	reduce using rule 269 (String_Function_tail)



state 653

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 840
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 654

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 841
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 655

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 442
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 241
    STRLITERAL	shift, and go to state 180

    array	go to state 443
    point_exp	go to state 444
    String_Function	go to state 445
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 842
    identifier	go to state 447
    strliteral	go to state 448
    struct_member_exp	go to state 449



state 656

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 273)

    $default	reduce using rule 273 (String_Function_len)



state 657

    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 658

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 74)

    CLOSE_PAR	shift, and go to state 843



state 659

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 844



state 660

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    identifier  ->  ID .   (rule 388)

    OPEN_MPAR	shift, and go to state 845

    $default	reduce using rule 388 (identifier)



state 661

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    CLOSE_PAR	shift, and go to state 640



state 662

    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 62)

    $default	reduce using rule 62 (statement)



state 663

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    $default	reduce using rule 329 (sign_type_define)



state 664

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    $default	reduce using rule 330 (sign_type_define)



state 665

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 167)

    $default	reduce using rule 167 (point_exp)



state 666

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 166)

    CLOSE_PAR	shift, and go to state 846



state 667

    type_define  ->  INTDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 847

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 668

    type_define  ->  CHARDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    MUL 	shift, and go to state 848

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 669

    type_define  ->  FLOATDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 849

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 670

    sign_declaration  ->  UNSIGNED . declaration   (rule 82)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 329)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 330)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 850
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 851
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 236
    type_define	go to state 237



state 671

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 672

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 673

    option_input  ->  COMMA . identifier option_input   (rule 433)
    option_input  ->  COMMA . array option_input   (rule 434)

    OPEN_PAR	shift, and go to state 380
    ID  	shift, and go to state 241

    array	go to state 852
    identifier	go to state 853



state 674

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 429)

    $default	reduce using rule 429 (input_statement)



state 675

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 430)

    CLOSE_PAR	shift, and go to state 854



state 676

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 427)

    $default	reduce using rule 427 (input_statement)



state 677

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 428)

    CLOSE_PAR	shift, and go to state 855



state 678

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 431)

    $default	reduce using rule 431 (input_statement)



state 679

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 680

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 681

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 682

    option_function_identifier  ->  ADDRESS error .   (rule 379)

    $default	reduce using rule 379 (option_function_identifier)



state 683

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 377)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 856
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 684

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 380)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 381)
    inner_option_function_identifier  ->  COMMA . error   (rule 383)

    error	shift, and go to state 857
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 858
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 859
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 685

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 376)

    $default	reduce using rule 376 (option_function_identifier)



state 686

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)



state 687

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 159)
    option_ari_exp  ->  COMMA . error   (rule 160)

    error	shift, and go to state 860
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 861
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 688

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 862



state 689

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 104)

    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRLITERAL	shift, and go to state 180

    array_exp	go to state 863
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    strliteral	go to state 864



state 690

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 865
    ari_operator	go to state 332



state 691

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 109)

    $default	reduce using rule 109 (inner_option_identifier_array_declaration)



state 692

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 108)

    $default	reduce using rule 108 (inner_option_identifier_array_declaration)



state 693

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 487

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 866



state 694

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 78)

    $default	reduce using rule 78 (struct_define_statement)



state 695

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 69)

    STRUCT	shift, and go to state 231
    UNION	shift, and go to state 232
    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 235
    UNSIGNED	shift, and go to state 494
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 867
    sign_declaration	go to state 496
    declaration	go to state 80
    type_define	go to state 237



state 696

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 453)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 454)
    option_struct_member_exp  ->  DOT . function   (rule 457)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 868
    file_statement	go to state 82
    array	go to state 869
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 870



state 697

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 455)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 456)
    option_struct_member_exp  ->  IMPLY . function   (rule 458)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 380
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 72

    function	go to state 871
    file_statement	go to state 82
    array	go to state 872
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 873



state 698

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 439)

    $default	reduce using rule 439 (struct_member_exp)



state 699

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 436)

    $default	reduce using rule 436 (struct_member_exp)



state 700

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 75)

    $default	reduce using rule 75 (function)



state 701

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 446)

    $default	reduce using rule 446 (struct_member_exp)



state 702

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 442)

    $default	reduce using rule 442 (struct_member_exp)



state 703

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 440)

    $default	reduce using rule 440 (struct_member_exp)



state 704

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 437)

    $default	reduce using rule 437 (struct_member_exp)



state 705

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 450)

    $default	reduce using rule 450 (struct_member_exp)



state 706

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 444)

    $default	reduce using rule 444 (struct_member_exp)



state 707

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 874



state 708

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 438)

    $default	reduce using rule 438 (struct_member_exp)



state 709

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 435)

    $default	reduce using rule 435 (struct_member_exp)



state 710

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 445)

    $default	reduce using rule 445 (struct_member_exp)



state 711

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 441)

    $default	reduce using rule 441 (struct_member_exp)



state 712

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 713

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 875



state 714

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 172)

    ELSE	shift, and go to state 876
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ELSE	[reduce using rule 176 (option_exp_else_statement)]
    ADD 	[reduce using rule 176 (option_exp_else_statement)]
    SUB 	[reduce using rule 176 (option_exp_else_statement)]
    $default	reduce using rule 176 (option_exp_else_statement)

    option_exp_else_statement	go to state 877
    ari_operator	go to state 332



state 715

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 246)

    CLOSE_PAR	shift, and go to state 878
    MUL 	shift, and go to state 879



state 716

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 717

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 173)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 174)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 178)

    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346

    INTER_OR	[reduce using rule 173 (type_cast_alg_exp)]
    CON 	[reduce using rule 173 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 173 (type_cast_alg_exp)]
    LST 	[reduce using rule 173 (type_cast_alg_exp)]
    RST 	[reduce using rule 173 (type_cast_alg_exp)]
    ADD 	[reduce using rule 173 (type_cast_alg_exp)]
    SUB 	[reduce using rule 173 (type_cast_alg_exp)]
    MUL 	[reduce using rule 173 (type_cast_alg_exp)]
    DIV 	[reduce using rule 173 (type_cast_alg_exp)]
    MOD 	[reduce using rule 173 (type_cast_alg_exp)]
    $default	reduce using rule 173 (type_cast_alg_exp)

    bi_operator	go to state 347
    ari_operator	go to state 880



state 718

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 719

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 884



state 720

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 721

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 722

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 886



state 723

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 887
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 724

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 243)

    CLOSE_PAR	shift, and go to state 888



state 725

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 726

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 889
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 727

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 890



state 728

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 891
    MUL 	shift, and go to state 719



state 729

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 892
    MUL 	shift, and go to state 722



state 730

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 893
    MUL 	shift, and go to state 727



state 731

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 827



state 732

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 894



state 733

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 230)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 895
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 734

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 896
    MUL 	shift, and go to state 897



state 735

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 231)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 898
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 736

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 899
    MUL 	shift, and go to state 900



state 737

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 228)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 901
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 738

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 229)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 902
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 739

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 245)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 903
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 740

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 247)

    CLOSE_PAR	shift, and go to state 904



state 741

    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 256)

    MUL 	shift, and go to state 905



state 742

    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 251)

    $default	reduce using rule 251 (all_sizeof_type)



state 743

    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 253)

    $default	reduce using rule 253 (all_sizeof_type)



state 744

    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 252)

    $default	reduce using rule 252 (all_sizeof_type)



state 745

    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 254)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    MUL 	shift, and go to state 906

    $default	reduce using rule 329 (sign_type_define)



state 746

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 255)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    MUL 	shift, and go to state 907

    $default	reduce using rule 330 (sign_type_define)



state 747

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 260)

    $default	reduce using rule 260 (size_of)



state 748

    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 257)

    $default	reduce using rule 257 (all_sizeof_type)



state 749

    size_of  ->  SIZEOF OPEN_PAR ari_exp CLOSE_PAR .   (rule 258)

    $default	reduce using rule 258 (size_of)



state 750

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 259)

    $default	reduce using rule 259 (size_of)



state 751

    size_of  ->  SIZEOF OPEN_PAR strliteral CLOSE_PAR .   (rule 261)

    $default	reduce using rule 261 (size_of)



state 752

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 908
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 753

    math_function  ->  POW OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 909
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 754

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 910
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 755

    math_function  ->  MODF OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 911
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 756

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 300)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 912
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 757

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 913



state 758

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    MUL 	shift, and go to state 914



state 759

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 915



state 760

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    INTDECLARATION	shift, and go to state 916
    CHARDECLARATION	shift, and go to state 917



state 761

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 414)

    CASE	shift, and go to state 918
    DEFAULT	shift, and go to state 919

    case_par	go to state 920



state 762

    option_else_statement  ->  ELSE . statement_bpar   (rule 421)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 921



state 763

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 420)

    $default	reduce using rule 420 (if_statement)



state 764

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 847



state 765

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    MUL 	shift, and go to state 848



state 766

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 849



state 767

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    INTDECLARATION	shift, and go to state 916
    CHARDECLARATION	shift, and go to state 922



state 768

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 923



state 769

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral . COMMA identifier CLOSE_PAR   (rule 116)

    COMMA	shift, and go to state 924



state 770

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 118)

    CLOSE_PAR	shift, and go to state 925



state 771

    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier . CLOSE_PAR   (rule 120)

    CLOSE_PAR	shift, and go to state 926



state 772

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 119)

    CLOSE_PAR	shift, and go to state 927



state 773

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 357)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 928



state 774

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 341)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 348)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 929
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 930
    identifier	go to state 931



state 775

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 346)

    $default	reduce using rule 346 (option_function_parameter_list)



state 776

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 342)

    ARRAY	shift, and go to state 932
    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 933



state 777

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 344)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 345)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 934
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 935
    identifier	go to state 936



state 778

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 343)

    $default	reduce using rule 343 (option_function_parameter_list)



state 779

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 338)

    ARRAY	shift, and go to state 937
    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 938



state 780

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 354)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 355)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 356)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    MUL 	shift, and go to state 939
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 940
    identifier	go to state 941



state 781

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 334)

    $default	reduce using rule 334 (option_function_parameter_list)



state 782

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 353)

    ARRAY	shift, and go to state 942
    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 943

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 944



state 783

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 945



state 784

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 946



state 785

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 364)

    ARRAY	shift, and go to state 947
    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 948



state 786

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 363)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 949



state 787

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 365)

    ARRAY	shift, and go to state 950
    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 951



state 788

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 367)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 373)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 374)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 952
    identifier	go to state 953



state 789

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 360)

    $default	reduce using rule 360 (inner_option_define_identifier)



state 790

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)

    ARRAY	shift, and go to state 954
    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 955

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 956



state 791

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 66)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 957
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 792

    option_frame_identifier  ->  COMMA error .   (rule 396)

    $default	reduce using rule 396 (option_frame_identifier)



state 793

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 394)

    COMMA	shift, and go to state 601

    $default	reduce using rule 395 (option_frame_identifier)

    option_frame_identifier	go to state 958



state 794

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 959



state 795

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 878
    MUL 	shift, and go to state 960
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259



state 796

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 630



state 797

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 631



state 798

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 524
    MUL 	shift, and go to state 632



state 799

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 961



state 800

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 247)

    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 904
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259



state 801

    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)
    for_sta_condition  ->  bool_exp .   (rule 410)

    OR  	shift, and go to state 365
    AND 	shift, and go to state 366

    $default	reduce using rule 410 (for_sta_condition)



state 802

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    COMMA	shift, and go to state 962



state 803

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 405)

    $default	reduce using rule 405 (for_statement)



state 804

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 384)

    $default	reduce using rule 384 (statement_bpar)



state 805

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 963



state 806

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 149)

    $default	reduce using rule 149 (ass_right)



state 807

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 208)

    $default	reduce using rule 208 (array_exp)



state 808

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)

    OPEN_PAR	shift, and go to state 964



state 809

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 809
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 810
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 810

    array_exp  ->  array_exp . CON array_exp   (rule 205)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 208)

    CLOSE_PAR	shift, and go to state 807
    CON 	shift, and go to state 628



state 811

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 215)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 216)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 217)
    inner_option_list_value  ->  COMMA . error   (rule 219)

    error	shift, and go to state 965
    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 617
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 966
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 967
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    strliteral	go to state 968
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 812

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 212)

    CLOSE_BPAR	shift, and go to state 969



state 813

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 214)

    CLOSE_BPAR	shift, and go to state 970



state 814

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 213)

    CLOSE_BPAR	shift, and go to state 971



state 815

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 209)

    CLOSE_MPAR	shift, and go to state 972



state 816

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 211)

    CLOSE_MPAR	shift, and go to state 973



state 817

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 210)

    CLOSE_MPAR	shift, and go to state 974



state 818

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 975
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 819

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 151)

    CLOSE_PAR	shift, and go to state 976



state 820

    option_output  ->  COMMA ass_right . option_output   (rule 426)

    COMMA	shift, and go to state 625

    $default	reduce using rule 425 (option_output)

    option_output	go to state 977



state 821

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 424)

    $default	reduce using rule 424 (output_statement)



state 822

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 208)

    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407

    array_exp	go to state 810
    option_list_value	go to state 413
    option_struct_list_value	go to state 414



state 823

    array_exp  ->  array_exp . CON array_exp   (rule 205)
    array_exp  ->  array_exp CON array_exp .   (rule 205)


    $default	reduce using rule 205 (array_exp)



state 824

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 978
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 980
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 981
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 983
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 826

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 984
    INTLITERAL	shift, and go to state 985
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 889
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 827

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 986
    MUL 	shift, and go to state 897



state 828

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 987
    MUL 	shift, and go to state 900



state 829

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    OPEN_PAR	shift, and go to state 988



state 830

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 989
    ari_operator	go to state 332



state 831

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 90)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 990



state 832

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 403)

    $default	reduce using rule 403 (imply_pre)



state 833

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 165)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 991
    ari_operator	go to state 332



state 834

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 992



state 835

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 993



state 836

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 994
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 837

    option_projection  ->  COMMA statement option_projection .   (rule 398)

    $default	reduce using rule 398 (option_projection)



state 838

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 839

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 995



state 840

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 270)

    CLOSE_PAR	shift, and go to state 996



state 841

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 271)

    CLOSE_PAR	shift, and go to state 997



state 842

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 272)

    CLOSE_PAR	shift, and go to state 998



state 843

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 74)

    $default	reduce using rule 74 (function)



state 844

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 829



state 845

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 999
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 846

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 166)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1000
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 847

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1001



state 848

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1002



state 849

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1003



state 850

    type_define  ->  INTDECLARATION .   (rule 94)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 329)

    MUL 	shift, and go to state 1004

    MUL 	[reduce using rule 94 (type_define)]
    ID  	reduce using rule 94 (type_define)
    ID  	[reduce using rule 329 (sign_type_define)]
    $default	reduce using rule 94 (type_define)



state 851

    type_define  ->  CHARDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 330)

    MUL 	shift, and go to state 1005

    MUL 	[reduce using rule 96 (type_define)]
    ID  	reduce using rule 96 (type_define)
    ID  	[reduce using rule 330 (sign_type_define)]
    $default	reduce using rule 96 (type_define)



state 852

    option_input  ->  COMMA array . option_input   (rule 434)

    COMMA	shift, and go to state 673

    $default	reduce using rule 432 (option_input)

    option_input	go to state 1006



state 853

    option_input  ->  COMMA identifier . option_input   (rule 433)

    COMMA	shift, and go to state 673

    $default	reduce using rule 432 (option_input)

    option_input	go to state 1007



state 854

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 430)

    $default	reduce using rule 430 (input_statement)



state 855

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 428)

    $default	reduce using rule 428 (input_statement)



state 856

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 377)

    CLOSE_PAR	shift, and go to state 1008



state 857

    inner_option_function_identifier  ->  COMMA error .   (rule 383)

    $default	reduce using rule 383 (inner_option_function_identifier)



state 858

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 381)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 1009
    OPEN_MPAR	shift, and go to state 255

    $default	reduce using rule 388 (identifier)



state 859

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 380)

    COMMA	shift, and go to state 684

    $default	reduce using rule 382 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 1010



state 860

    option_ari_exp  ->  COMMA error .   (rule 160)

    $default	reduce using rule 160 (option_ari_exp)



state 861

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1011
    ari_operator	go to state 332



state 862

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (array)



state 863

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 103)
    array_exp  ->  array_exp . CON array_exp   (rule 205)

    COMMA	shift, and go to state 487
    CON 	shift, and go to state 628

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1012



state 864

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 104)

    COMMA	shift, and go to state 487

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1013



state 865

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)

    CLOSE_MPAR	shift, and go to state 1014



state 866

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 867

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 69)

    $default	reduce using rule 69 (option_struct_declaration)



state 868

    option_struct_member_exp  ->  DOT function .   (rule 457)

    $default	reduce using rule 457 (option_struct_member_exp)



state 869

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 454)

    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 1015



state 870

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 453)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 1016



state 871

    option_struct_member_exp  ->  IMPLY function .   (rule 458)

    $default	reduce using rule 458 (option_struct_member_exp)



state 872

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 456)

    DOT 	shift, and go to state 696
    OPEN_PAR	shift, and go to state 270
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 1017



state 873

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 455)

    DOT 	shift, and go to state 696
    IMPLY	shift, and go to state 697

    DOT 	[reduce using rule 452 (option_struct_member_exp)]
    IMPLY	[reduce using rule 452 (option_struct_member_exp)]
    $default	reduce using rule 452 (option_struct_member_exp)

    option_struct_member_exp	go to state 1018



state 874

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 1019



state 875

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 1020



state 876

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 175)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1021
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 877

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 172)

    $default	reduce using rule 172 (ari_exp)



state 878

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 244)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1022
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 879

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 246)

    CLOSE_PAR	shift, and go to state 1023



state 880

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 174)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    simple_ari_exp	go to state 1024
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 881

    casted_element  ->  MALLOC . OPEN_PAR ari_exp CLOSE_PAR   (rule 249)

    OPEN_PAR	shift, and go to state 1025



state 882

    casted_element  ->  type_cast_alg_exp .   (rule 248)

    $default	reduce using rule 248 (casted_element)



state 883

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 884

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1026
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 885

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 886

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 241)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1027
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 887

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 888

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 243)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1028
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 889

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 890

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 240)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1029
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 891

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 892

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 893

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 984
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 889
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 894

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 1030
    MUL 	shift, and go to state 900



state 895

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 896

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1031
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 897

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1032



state 898

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 899

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 900

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 1034



state 901

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 902

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 903

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 245)

    $default	reduce using rule 245 (type_cast)



state 904

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 247)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1035
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 905

    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 256)

    $default	reduce using rule 256 (all_sizeof_type)



state 906

    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 254)

    $default	reduce using rule 254 (all_sizeof_type)



state 907

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 255)

    $default	reduce using rule 255 (all_sizeof_type)



state 908

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 296)

    CLOSE_PAR	shift, and go to state 1036
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 909

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 297)

    CLOSE_PAR	shift, and go to state 1037
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 910

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 298)

    CLOSE_PAR	shift, and go to state 1038
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 911

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 299)

    CLOSE_PAR	shift, and go to state 1039
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 912

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 300)

    CLOSE_PAR	shift, and go to state 1040
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 913

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1041



state 914

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1042



state 915

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1043



state 916

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 1004



state 917

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    MUL 	shift, and go to state 1044



state 918

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 415)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    member_in_exp	go to state 1045
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 919

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 416)

    COLON	shift, and go to state 1046



state 920

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 414)

    CLOSE_BPAR	shift, and go to state 1047



state 921

    option_else_statement  ->  ELSE statement_bpar .   (rule 421)

    $default	reduce using rule 421 (option_else_statement)



state 922

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    MUL 	shift, and go to state 1005



state 923

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR .   (rule 115)

    $default	reduce using rule 115 (file_statement)



state 924

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA . identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 1048



state 925

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 118)

    $default	reduce using rule 118 (file_statement)



state 926

    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR .   (rule 120)

    $default	reduce using rule 120 (file_statement)



state 927

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 119)

    $default	reduce using rule 119 (file_statement)



state 928

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 357)

    CLOSE_PAR	shift, and go to state 1049



state 929

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 341)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 348)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1050
    identifier	go to state 1051



state 930

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 347)

    $default	reduce using rule 347 (option_function_parameter_list)



state 931

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 340)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1052



state 932

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 342)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1053



state 933

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 339)

    $default	reduce using rule 339 (option_function_parameter_list)



state 934

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 345)

    COMMA	shift, and go to state 385
    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1054
    identifier	go to state 1055



state 935

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 344)

    $default	reduce using rule 344 (option_function_parameter_list)



state 936

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 336)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1056



state 937

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 338)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1057



state 938

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 335)

    $default	reduce using rule 335 (option_function_parameter_list)



state 939

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 356)

    OPEN_PAR	shift, and go to state 197
    ID  	shift, and go to state 198

    identifier	go to state 1058



state 940

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 355)

    $default	reduce using rule 355 (option_function_parameter_list)



state 941

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 354)

    ARRAY	shift, and go to state 1059
    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1060



state 942

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 353)

    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 1061

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1062



state 943

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1063
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 944

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 333)

    $default	reduce using rule 333 (option_function_parameter_list)



state 945

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 1064



state 946

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)

    CLOSE_PAR	shift, and go to state 1065



state 947

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 364)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1066



state 948

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 361)

    $default	reduce using rule 361 (inner_option_define_identifier)



state 949

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 363)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1067



state 950

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 365)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1068



state 951

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 362)

    $default	reduce using rule 362 (inner_option_define_identifier)



state 952

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 374)

    $default	reduce using rule 374 (inner_option_define_identifier)



state 953

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 367)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 373)

    ARRAY	shift, and go to state 1069
    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1070



state 954

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)

    COMMA	shift, and go to state 385
    OPEN_MPAR	shift, and go to state 1071

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1072



state 955

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1073
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 956

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 359)

    $default	reduce using rule 359 (inner_option_define_identifier)



state 957

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1074
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 958

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 394)

    $default	reduce using rule 394 (option_frame_identifier)



state 959

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 1075



state 960

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 107)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 197
    CLOSE_PAR	shift, and go to state 1023
    MUL 	shift, and go to state 256
    ID  	shift, and go to state 257

    option_identifier_array_declaration	go to state 484
    identifier	go to state 259



state 961

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 828



state 962

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 406)

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 246
    ID  	shift, and go to state 241

    $default	reduce using rule 413 (for_sta_control)

    ass_statement	go to state 1076
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 248
    point_exp	go to state 87
    identifier	go to state 97
    for_sta_control	go to state 1077
    struct_member_exp	go to state 105



state 963

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 175
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MY_TRUE	shift, and go to state 176
    MY_FALSE	shift, and go to state 177
    OPEN_PAR	shift, and go to state 178
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    NEGATION	shift, and go to state 179
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 181
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    bool_exp	go to state 1078
    prime_bool_exp	go to state 183
    identifier	go to state 155
    strliteral	go to state 184
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 964

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51

    type_define	go to state 1079



state 965

    inner_option_list_value  ->  COMMA error .   (rule 219)

    $default	reduce using rule 219 (inner_option_list_value)



state 966

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 215)

    COMMA	shift, and go to state 811
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 218 (inner_option_list_value)

    ari_operator	go to state 332
    inner_option_list_value	go to state 1080



state 967

    array_exp  ->  array_exp . CON array_exp   (rule 205)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 217)

    COMMA	shift, and go to state 811
    CON 	shift, and go to state 628

    $default	reduce using rule 218 (inner_option_list_value)

    inner_option_list_value	go to state 1081



state 968

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 216)

    COMMA	shift, and go to state 811

    $default	reduce using rule 218 (inner_option_list_value)

    inner_option_list_value	go to state 1082



state 969

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 212)

    $default	reduce using rule 212 (option_struct_list_value)



state 970

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 214)

    $default	reduce using rule 214 (option_struct_list_value)



state 971

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 213)

    $default	reduce using rule 213 (option_struct_list_value)



state 972

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 209)

    $default	reduce using rule 209 (option_list_value)



state 973

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 211)

    $default	reduce using rule 211 (option_list_value)



state 974

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 210)

    $default	reduce using rule 210 (option_list_value)



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 796
    CHARDECLARATION	shift, and go to state 797
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 798
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 799
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 976

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 151)

    $default	reduce using rule 151 (rightaddrshift)



state 977

    option_output  ->  COMMA ass_right option_output .   (rule 426)

    $default	reduce using rule 426 (option_output)



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 1083
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 979

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1084
    OPEN_MPAR	shift, and go to state 255

    CLOSE_PAR	[reduce using rule 388 (identifier)]
    $default	reduce using rule 388 (identifier)



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1085

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 981

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 1086
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 982

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1087
    OPEN_MPAR	shift, and go to state 255

    CLOSE_PAR	[reduce using rule 388 (identifier)]
    $default	reduce using rule 388 (identifier)



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1088

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 984

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1089
    OPEN_MPAR	shift, and go to state 255

    CLOSE_PAR	[reduce using rule 388 (identifier)]
    $default	reduce using rule 388 (identifier)



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1090

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 986

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1091
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1031
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 1092
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1094
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 988

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 91)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1095



state 989

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 1096



state 990

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 90)

    CLOSE_PAR	shift, and go to state 1097



state 991

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 165)

    CLOSE_MPAR	shift, and go to state 1098



state 992

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 447)

    $default	reduce using rule 447 (struct_member_exp)



state 993

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 443)

    $default	reduce using rule 443 (struct_member_exp)



state 994

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 1099
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 995

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 996

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 270)

    $default	reduce using rule 270 (String_Function_cat)



state 997

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 271)

    $default	reduce using rule 271 (String_Function_cmp)



state 998

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 272)

    $default	reduce using rule 272 (String_Function_cpy)



state 999

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1100
    ari_operator	go to state 332



state 1000

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 166)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 166 (point_exp)]
    SUB 	[reduce using rule 166 (point_exp)]
    $default	reduce using rule 166 (point_exp)

    ari_operator	go to state 332



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    OPEN_PAR	shift, and go to state 1101
    ID  	shift, and go to state 1102
    INTLITERAL	shift, and go to state 1103



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    OPEN_PAR	shift, and go to state 1104
    ID  	shift, and go to state 1105
    INTLITERAL	shift, and go to state 1106



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    ID  	shift, and go to state 1107
    INTLITERAL	shift, and go to state 1108



state 1004

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1109



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1110



state 1006

    option_input  ->  COMMA array option_input .   (rule 434)

    $default	reduce using rule 434 (option_input)



state 1007

    option_input  ->  COMMA identifier option_input .   (rule 433)

    $default	reduce using rule 433 (option_input)



state 1008

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 377)

    COMMA	shift, and go to state 684

    COMMA	[reduce using rule 73 (function)]
    CLOSE_PAR	reduce using rule 73 (function)
    CLOSE_PAR	[reduce using rule 382 (inner_option_function_identifier)]
    $default	reduce using rule 73 (function)

    inner_option_function_identifier	go to state 1111



state 1009

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 381)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 405
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 479
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 408
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 480
    STRLITERAL	shift, and go to state 180
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    $default	reduce using rule 378 (option_function_identifier)

    function	go to state 145
    file_statement	go to state 82
    ass_right	go to state 481
    rightaddrshift	go to state 410
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 411
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    array_exp	go to state 412
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    option_function_identifier	go to state 1112
    identifier	go to state 155
    strliteral	go to state 415
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1010

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 380)

    $default	reduce using rule 380 (inner_option_function_identifier)



state 1011

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 159)

    $default	reduce using rule 159 (option_ari_exp)



state 1012

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 1013

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)



state 1014

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 106)

    COMMA	shift, and go to state 487
    ASS_P	shift, and go to state 1113

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1114



state 1015

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 454)

    $default	reduce using rule 454 (option_struct_member_exp)



state 1016

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 453)

    $default	reduce using rule 453 (option_struct_member_exp)



state 1017

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 456)

    $default	reduce using rule 456 (option_struct_member_exp)



state 1018

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 455)

    $default	reduce using rule 455 (option_struct_member_exp)



state 1019

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 72)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1115
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1020

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 1116
    CHOP	shift, and go to state 167
    IFF 	shift, and go to state 168
    PROPIMPLY	shift, and go to state 169
    OR  	shift, and go to state 170
    AND 	shift, and go to state 171
    CHOPSTAR	shift, and go to state 172



state 1021

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 175)

    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ADD 	[reduce using rule 175 (option_exp_else_statement)]
    SUB 	[reduce using rule 175 (option_exp_else_statement)]
    $default	reduce using rule 175 (option_exp_else_statement)

    ari_operator	go to state 332



state 1022

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 244)

    $default	reduce using rule 244 (type_cast)



state 1023

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 246)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1117
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1024

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 174)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 178)

    INTER_OR	shift, and go to state 333
    CON 	shift, and go to state 334
    ADDRESS	shift, and go to state 335
    LST 	shift, and go to state 342
    RST 	shift, and go to state 343
    MUL 	shift, and go to state 344
    DIV 	shift, and go to state 345
    MOD 	shift, and go to state 346

    INTER_OR	[reduce using rule 174 (type_cast_alg_exp)]
    CON 	[reduce using rule 174 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 174 (type_cast_alg_exp)]
    LST 	[reduce using rule 174 (type_cast_alg_exp)]
    RST 	[reduce using rule 174 (type_cast_alg_exp)]
    MUL 	[reduce using rule 174 (type_cast_alg_exp)]
    DIV 	[reduce using rule 174 (type_cast_alg_exp)]
    MOD 	[reduce using rule 174 (type_cast_alg_exp)]
    $default	reduce using rule 174 (type_cast_alg_exp)

    bi_operator	go to state 347



state 1025

    casted_element  ->  MALLOC OPEN_PAR . ari_exp CLOSE_PAR   (rule 249)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1118
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1026

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)



state 1027

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 241)

    $default	reduce using rule 241 (type_cast)



state 1028

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 243)

    $default	reduce using rule 243 (type_cast)



state 1029

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 240)

    $default	reduce using rule 240 (type_cast)



state 1030

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1031

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 1032

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1119
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1033

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 1034

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 242)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1120
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1035

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 247)

    $default	reduce using rule 247 (type_cast)



state 1036

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 296)

    $default	reduce using rule 296 (math_function)



state 1037

    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 297)

    $default	reduce using rule 297 (math_function)



state 1038

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 298)

    $default	reduce using rule 298 (math_function)



state 1039

    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 299)

    $default	reduce using rule 299 (math_function)



state 1040

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 300)

    $default	reduce using rule 300 (math_function)



state 1041

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    ID  	shift, and go to state 1102



state 1042

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    ID  	shift, and go to state 1105



state 1043

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    ID  	shift, and go to state 1107



state 1044

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1121



state 1045

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 415)

    COLON	shift, and go to state 1122



state 1046

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 416)

    OPEN_PAR	shift, and go to state 1123



state 1047

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 414)

    $default	reduce using rule 414 (switch_statement)



state 1048

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 1124



state 1049

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 357)

    OPEN_PAR	shift, and go to state 1125



state 1050

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 348)

    $default	reduce using rule 348 (option_function_parameter_list)



state 1051

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 341)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1126



state 1052

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 340)

    $default	reduce using rule 340 (option_function_parameter_list)



state 1053

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 342)

    $default	reduce using rule 342 (option_function_parameter_list)



state 1054

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 345)

    $default	reduce using rule 345 (option_function_parameter_list)



state 1055

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 337)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1127



state 1056

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 336)

    $default	reduce using rule 336 (option_function_parameter_list)



state 1057

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 338)

    $default	reduce using rule 338 (option_function_parameter_list)



state 1058

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 356)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1128



state 1059

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 350)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1129



state 1060

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 354)

    $default	reduce using rule 354 (option_function_parameter_list)



state 1061

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 353)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1130
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1062

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 349)

    $default	reduce using rule 349 (option_function_parameter_list)



state 1063

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    COMMA	shift, and go to state 1131
    CLOSE_MPAR	shift, and go to state 1132
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1064

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1133
    empty_statement	go to state 1134
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1065

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)

    OPEN_PAR	shift, and go to state 1135



state 1066

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 364)

    $default	reduce using rule 364 (inner_option_define_identifier)



state 1067

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 363)

    $default	reduce using rule 363 (inner_option_define_identifier)



state 1068

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 365)

    $default	reduce using rule 365 (inner_option_define_identifier)



state 1069

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 367)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1136



state 1070

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 373)

    $default	reduce using rule 373 (inner_option_define_identifier)



state 1071

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 372)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1137
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1072

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 366)

    $default	reduce using rule 366 (inner_option_define_identifier)



state 1073

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    COMMA	shift, and go to state 1138
    CLOSE_MPAR	shift, and go to state 1139
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1074

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)



state 1075

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1140
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1076

    for_sta_control  ->  ass_statement .   (rule 412)

    $default	reduce using rule 412 (for_sta_control)



state 1077

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 406)

    CLOSE_PAR	shift, and go to state 1141



state 1078

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 306)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 307)

    CLOSE_PAR	shift, and go to state 1142
    OR  	shift, and go to state 365
    AND 	shift, and go to state 366



state 1079

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)

    CLOSE_PAR	shift, and go to state 1143



state 1080

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 215)

    $default	reduce using rule 215 (inner_option_list_value)



state 1081

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 217)

    $default	reduce using rule 217 (inner_option_list_value)



state 1082

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 216)

    $default	reduce using rule 216 (inner_option_list_value)



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 1144
    CHARDECLARATION	shift, and go to state 1145
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 1146
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 1084

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    OPEN_MPAR	shift, and go to state 1147



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1148



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 1149
    CHARDECLARATION	shift, and go to state 1150
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 1151
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 1087

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    OPEN_MPAR	shift, and go to state 1152



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1153



state 1089

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_MPAR	shift, and go to state 1154



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1155



state 1091

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1156
    OPEN_MPAR	shift, and go to state 255

    CLOSE_PAR	[reduce using rule 388 (identifier)]
    $default	reduce using rule 388 (identifier)



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 283
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 1157
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 288
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 1093

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    identifier  ->  ID .   (rule 388)

    OPEN_PAR	shift, and go to state 254
    CLOSE_PAR	shift, and go to state 1158
    OPEN_MPAR	shift, and go to state 255

    CLOSE_PAR	[reduce using rule 388 (identifier)]
    $default	reduce using rule 388 (identifier)



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1159

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1095

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 1160



state 1096

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    CLOSE_PAR	shift, and go to state 1161

    CLOSE_PAR	[reduce using rule 152 (array)]
    $default	reduce using rule 152 (array)



state 1097

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 90)

    $default	reduce using rule 90 (declaration)



state 1098

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 165)

    $default	reduce using rule 165 (point_exp)



state 1099

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 1100

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    CLOSE_MPAR	shift, and go to state 1162



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_PAR	shift, and go to state 1163



state 1102

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1084



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1085



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_PAR	shift, and go to state 1164



state 1105

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1087



state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1088



state 1107

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1089



state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1090



state 1109

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    ID  	shift, and go to state 1165



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    OPEN_PAR	shift, and go to state 1166
    ID  	shift, and go to state 1167
    INTLITERAL	shift, and go to state 1168



state 1111

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 377)

    $default	reduce using rule 377 (option_function_identifier)



state 1112

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 381)

    CLOSE_PAR	shift, and go to state 1169



state 1113

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407
    STRLITERAL	shift, and go to state 180

    array_exp	go to state 1170
    option_list_value	go to state 413
    option_struct_list_value	go to state 414
    strliteral	go to state 1171



state 1114

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 1115

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 1172
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 1116

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 1117

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 246)

    $default	reduce using rule 246 (type_cast)



state 1118

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    casted_element  ->  MALLOC OPEN_PAR ari_exp . CLOSE_PAR   (rule 249)

    CLOSE_PAR	shift, and go to state 1173
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1119

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)



state 1120

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 242)

    $default	reduce using rule 242 (type_cast)



state 1121

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    ID  	shift, and go to state 1167



state 1122

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 415)

    OPEN_PAR	shift, and go to state 1174



state 1123

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 416)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1175
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1124

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (file_statement)



state 1125

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 357)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1176



state 1126

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 341)

    $default	reduce using rule 341 (option_function_parameter_list)



state 1127

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 337)

    $default	reduce using rule 337 (option_function_parameter_list)



state 1128

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 356)

    $default	reduce using rule 356 (option_function_parameter_list)



state 1129

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 350)

    $default	reduce using rule 350 (option_function_parameter_list)



state 1130

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 353)

    CLOSE_MPAR	shift, and go to state 1177
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1131

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1178
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1132

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1179



state 1133

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 70)

    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263

    $default	reduce using rule 70 (empty_statement)



state 1134

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1180



state 1135

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 368)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1181



state 1136

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 367)

    $default	reduce using rule 367 (inner_option_define_identifier)



state 1137

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 372)

    CLOSE_MPAR	shift, and go to state 1182
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1138

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1183
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1139

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1184



state 1140

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 1185
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 1141

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 406)

    error	shift, and go to state 401
    OPEN_BPAR	shift, and go to state 402

    statement_bpar	go to state 1186



state 1142

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 1143

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 148)

    OPEN_PAR	shift, and go to state 1187



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 1188



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 1189



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 1190



state 1147

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1191
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1192
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 1193



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 1194



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 1195



state 1152

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1196
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1197
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1154

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1198
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1199
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1156

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    OPEN_MPAR	shift, and go to state 1200



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 168)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 188)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 247)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 389)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 443)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 447)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 451)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    STRUCT	shift, and go to state 282
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    INTDECLARATION	shift, and go to state 1201
    CHARDECLARATION	shift, and go to state 1202
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 287
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    UNSIGNED	shift, and go to state 1203
    SIGNED	shift, and go to state 289
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 290
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 291
    point_exp	go to state 292
    ari_exp	go to state 293
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 294
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 295
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 296



state 1158

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    OPEN_MPAR	shift, and go to state 1204



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1205



state 1160

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 91)

    $default	reduce using rule 91 (declaration)



state 1161

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    OPEN_PAR	shift, and go to state 1206



state 1162

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    CLOSE_PAR	shift, and go to state 1161



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    INTDECLARATION	shift, and go to state 1207
    CHARDECLARATION	shift, and go to state 1208
    UNSIGNED	shift, and go to state 1209



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTDECLARATION	shift, and go to state 1210
    CHARDECLARATION	shift, and go to state 1211
    UNSIGNED	shift, and go to state 1212



state 1165

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1156



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_PAR	shift, and go to state 1213



state 1167

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1158



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1159



state 1169

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 381)

    COMMA	shift, and go to state 684

    COMMA	[reduce using rule 73 (function)]
    CLOSE_PAR	reduce using rule 73 (function)
    CLOSE_PAR	[reduce using rule 382 (inner_option_function_identifier)]
    $default	reduce using rule 73 (function)

    inner_option_function_identifier	go to state 1214



state 1170

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 105)
    array_exp  ->  array_exp . CON array_exp   (rule 205)

    COMMA	shift, and go to state 487
    CON 	shift, and go to state 628

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1215



state 1171

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 106)

    COMMA	shift, and go to state 487

    COMMA	[reduce using rule 110 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 110 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1216



state 1172

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (function_define)



state 1173

    casted_element  ->  MALLOC OPEN_PAR ari_exp CLOSE_PAR .   (rule 249)

    $default	reduce using rule 249 (casted_element)



state 1174

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 415)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FILEDECLARATION	shift, and go to state 31
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    MORE	shift, and go to state 36
    DEFINE	shift, and go to state 37
    EXIST	shift, and go to state 38
    FRAME	shift, and go to state 39
    FOR 	shift, and go to state 40
    WHILE	shift, and go to state 41
    TRUE	shift, and go to state 42
    FALSE	shift, and go to state 43
    REPEAT	shift, and go to state 44
    DISPLAY	shift, and go to state 45
    SKIP	shift, and go to state 46
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 52
    OPEN_BPAR	shift, and go to state 53
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SYSTEM	shift, and go to state 60
    EXTERN	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1217
    function_define	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    sign_type_define	go to state 95
    all_type_define	go to state 96
    identifier	go to state 97
    while_statement	go to state 98
    for_statement	go to state 99
    extend_for_statement	go to state 100
    switch_statement	go to state 101
    if_statement	go to state 102
    output_statement	go to state 103
    input_statement	go to state 104
    struct_member_exp	go to state 105



state 1175

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 416)

    CLOSE_PAR	shift, and go to state 1218
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 1176

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 357)

    CLOSE_PAR	shift, and go to state 1219



state 1177

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 353)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1220



state 1178

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 352)

    CLOSE_MPAR	shift, and go to state 1221
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1179

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 351)

    $default	reduce using rule 351 (option_function_parameter_list)



state 1180

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1181

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 368)

    CLOSE_PAR	shift, and go to state 1222



state 1182

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 372)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1223



state 1183

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 371)

    CLOSE_MPAR	shift, and go to state 1224
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    ari_operator	go to state 332



state 1184

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 370)

    $default	reduce using rule 370 (inner_option_define_identifier)



state 1185

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



state 1186

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 406)

    $default	reduce using rule 406 (extend_for_statement)



state 1187

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 148)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1225



state 1188

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 1226
    MUL 	shift, and go to state 719



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1227
    MUL 	shift, and go to state 722



state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 1228



state 1191

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1229
    ari_operator	go to state 332



state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1230
    ari_operator	go to state 332



state 1193

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 1231
    MUL 	shift, and go to state 719



state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1232
    MUL 	shift, and go to state 722



state 1195

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 1233



state 1196

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 156)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1234
    ari_operator	go to state 332



state 1197

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1235
    ari_operator	go to state 332



state 1198

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1236
    ari_operator	go to state 332



state 1199

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1237
    ari_operator	go to state 332



state 1200

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1238
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 519
    MUL 	shift, and go to state 1239



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 521
    MUL 	shift, and go to state 1240



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)

    INTDECLARATION	shift, and go to state 731
    CHARDECLARATION	shift, and go to state 1241



state 1204

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1242
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1243
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1206

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 93)

    FILEDECLARATION	shift, and go to state 31
    INTDECLARATION	shift, and go to state 47
    STRDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 590
    UNSIGNED	shift, and go to state 461
    ID  	shift, and go to state 591
    STRUCT_TYPE	shift, and go to state 592

    $default	reduce using rule 358 (option_function_parameter_list)

    type_define	go to state 462
    sign_type_define	go to state 95
    all_type_define	go to state 593
    option_function_parameter_list	go to state 1244



state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 1245



state 1208

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 1246



state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CHARDECLARATION	shift, and go to state 1247



state 1210

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1248



state 1211

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1249



state 1212

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CHARDECLARATION	shift, and go to state 1250



state 1213

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    INTDECLARATION	shift, and go to state 1251
    CHARDECLARATION	shift, and go to state 1252
    UNSIGNED	shift, and go to state 1253



state 1214

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 381)

    $default	reduce using rule 381 (inner_option_function_identifier)



state 1215

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)



state 1216

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (option_identifier_array_declaration)



state 1217

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 415)

    CLOSE_PAR	shift, and go to state 1254
    CHOP	shift, and go to state 260
    OR  	shift, and go to state 261
    PARALLEL	shift, and go to state 262
    AND 	shift, and go to state 263



state 1218

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 416)

    $default	reduce using rule 416 (case_par)



state 1219

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 357)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1255



state 1220

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 353)

    $default	reduce using rule 353 (option_function_parameter_list)



state 1221

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 352)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1256



state 1222

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 368)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1257



state 1223

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 372)

    $default	reduce using rule 372 (inner_option_define_identifier)



state 1224

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 371)

    COMMA	shift, and go to state 385

    $default	reduce using rule 369 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1258



state 1225

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 148)

    CLOSE_PAR	shift, and go to state 1259



state 1226

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1260
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 1261
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1228

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 1262
    MUL 	shift, and go to state 900



state 1229

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1263



state 1230

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1264



state 1231

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1265
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1232

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 1266
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1233

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 1267
    MUL 	shift, and go to state 900



state 1234

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 156)

    CLOSE_MPAR	shift, and go to state 1268



state 1235

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1269



state 1236

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 155)

    CLOSE_MPAR	shift, and go to state 1270



state 1237

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1271



state 1238

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1272
    ari_operator	go to state 332



state 1239

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 1273
    MUL 	shift, and go to state 719



state 1240

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1274
    MUL 	shift, and go to state 722



state 1241

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 735
    MUL 	shift, and go to state 1275



state 1242

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 157)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1276
    ari_operator	go to state 332



state 1243

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1277
    ari_operator	go to state 332



state 1244

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 93)

    CLOSE_PAR	shift, and go to state 1278



state 1245

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 1279



state 1246

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1280



state 1247

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 1281



state 1248

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1282



state 1249

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1283



state 1250

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1284



state 1251

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    MUL 	shift, and go to state 1285



state 1252

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    MUL 	shift, and go to state 1286



state 1253

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CHARDECLARATION	shift, and go to state 1287



state 1254

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 415)

    CASE	shift, and go to state 918
    BREAK	shift, and go to state 1288
    DEFAULT	shift, and go to state 919

    $default	reduce using rule 419 (init_case_par)

    case_par	go to state 1289
    init_case_par	go to state 1290



state 1255

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 357)

    $default	reduce using rule 357 (option_function_parameter_list)



state 1256

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 352)

    $default	reduce using rule 352 (option_function_parameter_list)



state 1257

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 368)

    $default	reduce using rule 368 (inner_option_define_identifier)



state 1258

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 371)

    $default	reduce using rule 371 (inner_option_define_identifier)



state 1259

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 148)

    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 1291
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    EXTERN	shift, and go to state 61
    ID  	shift, and go to state 1292

    function	go to state 1293
    file_statement	go to state 82
    array	go to state 1294
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94



state 1260

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1295

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1261

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1296

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1262

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1297
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1263

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (array)



state 1264

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1265

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1298

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1266

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1299

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1267

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1300
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1268

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 156)

    $default	reduce using rule 156 (array)



state 1269

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1270

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 155)

    $default	reduce using rule 155 (array)



state 1271

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1272

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 1301



state 1273

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1302
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 883
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1274

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 982
    INTLITERAL	shift, and go to state 1303
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 885
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1275

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 1304
    MUL 	shift, and go to state 900



state 1276

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 157)

    CLOSE_MPAR	shift, and go to state 1305



state 1277

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1306



state 1278

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 92)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 93)

    ASS_P	shift, and go to state 1307

    $default	reduce using rule 92 (declaration)



state 1279

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    INTLITERAL	shift, and go to state 1308



state 1280

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    INTLITERAL	shift, and go to state 1309



state 1281

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1310



state 1282

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTLITERAL	shift, and go to state 1311



state 1283

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1312



state 1284

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1313



state 1285

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1314



state 1286

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1315



state 1287

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    MUL 	shift, and go to state 1316



state 1288

    init_case_par  ->  BREAK . case_par   (rule 417)

    CASE	shift, and go to state 918
    DEFAULT	shift, and go to state 919

    case_par	go to state 1317



state 1289

    init_case_par  ->  case_par .   (rule 418)

    $default	reduce using rule 418 (init_case_par)



state 1290

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 415)

    $default	reduce using rule 415 (case_par)



state 1291

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)

    OPEN_PAR	shift, and go to state 1318
    ID  	shift, and go to state 1319

    array	go to state 587



state 1292

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    OPEN_PAR	shift, and go to state 254
    OPEN_MPAR	shift, and go to state 255



state 1293

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 148)

    $default	reduce using rule 148 (ass_right)



state 1294

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 270



state 1295

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 1320



state 1296

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1321



state 1297

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1322

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1298

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1323



state 1299

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1324



state 1300

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1325

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1301

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (array)



state 1302

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1326

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1303

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1327

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1304

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    MALLOC	shift, and go to state 881
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 1093
    INTLITERAL	shift, and go to state 1328
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    type_cast_alg_exp	go to state 882
    simple_ari_exp	go to state 717
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    casted_element	go to state 1033
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1305

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 157)

    $default	reduce using rule 157 (array)



state 1306

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1307

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 93)

    OPEN_PAR	shift, and go to state 822
    OPEN_BPAR	shift, and go to state 406
    OPEN_MPAR	shift, and go to state 407

    array_exp	go to state 1329
    option_list_value	go to state 413
    option_struct_list_value	go to state 414



state 1308

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 1295



state 1309

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1296



state 1310

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    INTLITERAL	shift, and go to state 1330



state 1311

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1298



state 1312

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1299



state 1313

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1331



state 1314

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    INTLITERAL	shift, and go to state 1332



state 1315

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    INTLITERAL	shift, and go to state 1333



state 1316

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1334



state 1317

    init_case_par  ->  BREAK case_par .   (rule 417)

    $default	reduce using rule 417 (init_case_par)



state 1318

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 158)

    INTDECLARATION	shift, and go to state 757
    CHARDECLARATION	shift, and go to state 758
    FLOATDECLARATION	shift, and go to state 759
    OPEN_PAR	shift, and go to state 1318
    UNSIGNED	shift, and go to state 760
    ID  	shift, and go to state 1319

    array	go to state 587



state 1319

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    OPEN_MPAR	shift, and go to state 255



state 1320

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 1335



state 1321

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 1336



state 1322

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1337



state 1323

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1338



state 1324

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1339



state 1325

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1340



state 1326

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1341



state 1327

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1342



state 1328

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    intliteral  ->  INTLITERAL .   (rule 391)

    CLOSE_PAR	shift, and go to state 1343

    CLOSE_PAR	[reduce using rule 391 (intliteral)]
    $default	reduce using rule 391 (intliteral)



state 1329

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 93)
    array_exp  ->  array_exp . CON array_exp   (rule 205)

    CON 	shift, and go to state 628

    $default	reduce using rule 93 (declaration)



state 1330

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1322



state 1331

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1325



state 1332

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1326



state 1333

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1327



state 1334

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    INTLITERAL	shift, and go to state 1344



state 1335

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1345
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1336

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1346
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1337

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 1347



state 1338

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1348
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1339

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1349
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1340

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1350



state 1341

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 1351



state 1342

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_MPAR	shift, and go to state 1352



state 1343

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1353



state 1344

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1343



state 1345

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1354
    ari_operator	go to state 332



state 1346

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1355
    ari_operator	go to state 332



state 1347

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1356
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1348

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1357
    ari_operator	go to state 332



state 1349

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1358
    ari_operator	go to state 332



state 1350

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1359
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1360
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1352

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1361
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1353

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_MPAR	shift, and go to state 1362



state 1354

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1363



state 1355

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1364



state 1356

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1365
    ari_operator	go to state 332



state 1357

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1366



state 1358

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1367



state 1359

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1368
    ari_operator	go to state 332



state 1360

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1369
    ari_operator	go to state 332



state 1361

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 137)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1370
    ari_operator	go to state 332



state 1362

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 111
    POINTERNULL	shift, and go to state 112
    FOPEN	shift, and go to state 29
    FCLOSE	shift, and go to state 30
    FGETS	shift, and go to state 32
    FPUTS	shift, and go to state 33
    FGETC	shift, and go to state 34
    FPUTC	shift, and go to state 35
    OPEN_PAR	shift, and go to state 113
    STRFUNCHEAD	shift, and go to state 54
    STRFUNCTAIL	shift, and go to state 55
    STRFUNCCAT	shift, and go to state 56
    STRFUNCCMP	shift, and go to state 57
    STRFUNCCPY	shift, and go to state 58
    STRFUNCLEN	shift, and go to state 59
    SIZEOF	shift, and go to state 114
    EXTERN	shift, and go to state 61
    CEIL	shift, and go to state 115
    FLOOR	shift, and go to state 116
    ROUND	shift, and go to state 117
    SIN 	shift, and go to state 118
    COS 	shift, and go to state 119
    TAN 	shift, and go to state 120
    ASIN	shift, and go to state 121
    ACOS	shift, and go to state 122
    ATAN	shift, and go to state 123
    SINH	shift, and go to state 124
    COSH	shift, and go to state 125
    TANH	shift, and go to state 126
    EXP 	shift, and go to state 127
    LOG 	shift, and go to state 128
    LOG10	shift, and go to state 129
    SQRT	shift, and go to state 130
    ATAN2	shift, and go to state 131
    POW 	shift, and go to state 132
    ABS 	shift, and go to state 133
    FABS	shift, and go to state 134
    LABS	shift, and go to state 135
    FMOD	shift, and go to state 136
    MODF	shift, and go to state 137
    LDEXP	shift, and go to state 138
    ADDRESS	shift, and go to state 139
    SUB 	shift, and go to state 140
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 141
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 142
    FLOATLITERAL	shift, and go to state 143
    CHARLITERAL	shift, and go to state 144

    function	go to state 145
    file_statement	go to state 82
    array	go to state 146
    point_exp	go to state 147
    ari_exp	go to state 1371
    simple_ari_exp	go to state 149
    member_in_exp	go to state 150
    address_exp	go to state 151
    type_cast	go to state 152
    size_of	go to state 153
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 154
    identifier	go to state 155
    intliteral	go to state 156
    charliteral	go to state 157
    floatliteral	go to state 158
    struct_member_exp	go to state 159



state 1363

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (leftaddrshift)



state 1364

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (leftaddrshift)



state 1365

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1372



state 1366

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)



state 1367

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1368

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1373



state 1369

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 1374



state 1370

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 137)

    CLOSE_MPAR	shift, and go to state 1375



state 1371

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 171)

    COMMA	shift, and go to state 687
    ADD 	shift, and go to state 330
    SUB 	shift, and go to state 331

    $default	reduce using rule 161 (option_ari_exp)

    option_ari_exp	go to state 1376
    ari_operator	go to state 332



state 1372

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (leftaddrshift)



state 1373

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1374

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (leftaddrshift)



state 1375

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 137)

    $default	reduce using rule 137 (leftaddrshift)



state 1376

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 1377



state 1377

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    $default	reduce using rule 138 (leftaddrshift)



state 1378

    $   	go to state 1379



state 1379

    $   	go to state 1380



state 1380

    $default	accept
