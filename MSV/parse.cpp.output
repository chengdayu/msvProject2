Useless nonterminals:

   switch_statement
   case_par
   init_case_par


Terminals which are not used:

   PBEGIN
   PEND
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   SWITCH
   BREAK
   CASE
   DEFAULT
   FREXP
   PROPIMPLY
   IFF
   CHOPSTAR
   HALT
   W_NEXT
   SOMETIMES


Useless rules:

#73    switch_statement :	 SWITCH OPEN_PAR factor CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR;
#74    case_par :	 CASE factor COLON OPEN_PAR statement CLOSE_PAR init_case_par;
#75    case_par :	 DEFAULT COLON OPEN_PAR statement CLOSE_PAR init_case_par;
#76    init_case_par :	 BREAK case_par;
#77    init_case_par :	 case_par;
#78    init_case_par :	;


Conflict in state 287 between rule 361 and token IMPLY resolved as reduce.
Conflict in state 291 between rule 360 and token IMPLY resolved as reduce.
Conflict in state 294 between rule 266 and token OR resolved as reduce.
Conflict in state 294 between rule 266 and token AND resolved as reduce.
Conflict in state 398 between rule 47 and token OR resolved as reduce.
Conflict in state 398 between rule 47 and token AND resolved as reduce.
Conflict in state 461 between rule 3 and token CHOP resolved as reduce.
Conflict in state 461 between rule 3 and token OR resolved as shift.
Conflict in state 461 between rule 3 and token PARALLEL resolved as shift.
Conflict in state 461 between rule 3 and token AND resolved as shift.
Conflict in state 462 between rule 2 and token CHOP resolved as reduce.
Conflict in state 462 between rule 2 and token OR resolved as reduce.
Conflict in state 462 between rule 2 and token PARALLEL resolved as reduce.
Conflict in state 462 between rule 2 and token AND resolved as shift.
Conflict in state 463 between rule 25 and token CHOP resolved as reduce.
Conflict in state 463 between rule 25 and token OR resolved as reduce.
Conflict in state 463 between rule 25 and token PARALLEL resolved as reduce.
Conflict in state 463 between rule 25 and token AND resolved as shift.
Conflict in state 464 between rule 1 and token CHOP resolved as reduce.
Conflict in state 464 between rule 1 and token OR resolved as reduce.
Conflict in state 464 between rule 1 and token PARALLEL resolved as reduce.
Conflict in state 464 between rule 1 and token AND resolved as reduce.
Conflict in state 539 between rule 268 and token OR resolved as reduce.
Conflict in state 539 between rule 268 and token AND resolved as shift.
Conflict in state 540 between rule 267 and token OR resolved as reduce.
Conflict in state 540 between rule 267 and token AND resolved as reduce.
Conflict in state 626 between rule 49 and token OR resolved as reduce.
Conflict in state 626 between rule 49 and token AND resolved as shift.
Conflict in state 627 between rule 48 and token OR resolved as reduce.
Conflict in state 627 between rule 48 and token AND resolved as reduce.
Conflict in state 796 between rule 251 and token CON resolved as reduce.
State 84 contains 2 shift/reduce conflicts.
State 124 contains 14 shift/reduce conflicts.
State 129 contains 2 shift/reduce conflicts.
State 131 contains 2 shift/reduce conflicts.
State 138 contains 2 shift/reduce conflicts.
State 167 contains 1 shift/reduce conflict.
State 168 contains 1 shift/reduce conflict.
State 170 contains 1 shift/reduce conflict.
State 182 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 183 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 186 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 187 contains 1 shift/reduce conflict.
State 188 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 189 contains 1 shift/reduce conflict.
State 253 contains 1 shift/reduce conflict.
State 254 contains 1 shift/reduce conflict.
State 255 contains 1 shift/reduce conflict.
State 257 contains 1 shift/reduce conflict.
State 258 contains 1 shift/reduce conflict.
State 259 contains 1 shift/reduce conflict.
State 262 contains 2 shift/reduce conflicts.
State 263 contains 2 shift/reduce conflicts.
State 264 contains 2 shift/reduce conflicts.
State 265 contains 2 shift/reduce conflicts.
State 266 contains 2 shift/reduce conflicts.
State 267 contains 2 shift/reduce conflicts.
State 268 contains 2 shift/reduce conflicts.
State 269 contains 2 shift/reduce conflicts.
State 270 contains 2 shift/reduce conflicts.
State 271 contains 2 shift/reduce conflicts.
State 272 contains 2 shift/reduce conflicts.
State 273 contains 2 shift/reduce conflicts.
State 274 contains 2 shift/reduce conflicts.
State 275 contains 2 shift/reduce conflicts.
State 276 contains 2 shift/reduce conflicts.
State 277 contains 2 shift/reduce conflicts.
State 280 contains 2 shift/reduce conflicts.
State 281 contains 2 shift/reduce conflicts.
State 282 contains 2 shift/reduce conflicts.
State 287 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 296 contains 2 shift/reduce conflicts.
State 297 contains 2 shift/reduce conflicts.
State 343 contains 1 shift/reduce conflict.
State 344 contains 1 shift/reduce conflict.
State 345 contains 1 shift/reduce conflict.
State 346 contains 1 shift/reduce conflict.
State 352 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 365 contains 1 shift/reduce conflict.
State 368 contains 2 shift/reduce conflicts.
State 375 contains 1 shift/reduce conflict.
State 377 contains 1 shift/reduce conflict.
State 378 contains 1 shift/reduce conflict.
State 380 contains 1 shift/reduce conflict.
State 381 contains 1 shift/reduce conflict.
State 383 contains 1 shift/reduce conflict.
State 387 contains 1 shift/reduce conflict.
State 388 contains 1 shift/reduce conflict.
State 389 contains 1 shift/reduce conflict.
State 393 contains 1 shift/reduce conflict.
State 396 contains 1 shift/reduce conflict.
State 437 contains 1 shift/reduce conflict.
State 438 contains 1 shift/reduce conflict.
State 439 contains 1 shift/reduce conflict.
State 441 contains 1 shift/reduce conflict.
State 443 contains 1 shift/reduce conflict.
State 445 contains 1 shift/reduce conflict.
State 467 contains 2 shift/reduce conflicts.
State 468 contains 2 shift/reduce conflicts.
State 470 contains 2 shift/reduce conflicts.
State 471 contains 2 shift/reduce conflicts.
State 472 contains 2 shift/reduce conflicts.
State 473 contains 2 shift/reduce conflicts.
State 474 contains 2 shift/reduce conflicts.
State 475 contains 2 shift/reduce conflicts.
State 477 contains 2 shift/reduce conflicts.
State 479 contains 2 shift/reduce conflicts.
State 480 contains 2 shift/reduce conflicts.
State 482 contains 2 shift/reduce conflicts.
State 505 contains 1 shift/reduce conflict.
State 534 contains 8 shift/reduce conflicts.
State 537 contains 2 shift/reduce conflicts.
State 545 contains 1 shift/reduce conflict.
State 561 contains 1 shift/reduce conflict.
State 576 contains 1 shift/reduce conflict.
State 577 contains 1 shift/reduce conflict.
State 578 contains 1 shift/reduce conflict.
State 582 contains 1 shift/reduce conflict.
State 586 contains 1 shift/reduce conflict.
State 594 contains 1 shift/reduce conflict.
State 596 contains 1 shift/reduce conflict.
State 597 contains 1 shift/reduce conflict.
State 599 contains 1 shift/reduce conflict.
State 601 contains 1 shift/reduce conflict.
State 602 contains 1 shift/reduce conflict.
State 606 contains 1 shift/reduce conflict.
State 607 contains 1 shift/reduce conflict.
State 615 contains 1 shift/reduce conflict.
State 616 contains 1 shift/reduce conflict.
State 620 contains 1 shift/reduce conflict.
State 648 contains 1 shift/reduce conflict.
State 649 contains 1 shift/reduce conflict.
State 650 contains 1 shift/reduce conflict.
State 676 contains 1 shift/reduce conflict.
State 694 contains 3 shift/reduce conflicts.
State 696 contains 10 shift/reduce conflicts.
State 755 contains 1 shift/reduce conflict.
State 757 contains 1 shift/reduce conflict.
State 758 contains 1 shift/reduce conflict.
State 760 contains 1 shift/reduce conflict.
State 799 contains 1 shift/reduce conflict.
State 803 contains 1 shift/reduce conflict.
State 806 contains 1 shift/reduce conflict.
State 807 contains 1 shift/reduce conflict.
State 824 contains 2 shift/reduce conflicts.
State 825 contains 2 shift/reduce conflicts.
State 840 contains 1 shift/reduce conflict.
State 841 contains 1 shift/reduce conflict.
State 859 contains 2 shift/reduce conflicts.
State 861 contains 2 shift/reduce conflicts.
State 862 contains 2 shift/reduce conflicts.
State 864 contains 2 shift/reduce conflicts.
State 916 contains 1 shift/reduce conflict.
State 918 contains 1 shift/reduce conflict.
State 919 contains 1 shift/reduce conflict.
State 922 contains 1 shift/reduce conflict.
State 923 contains 1 shift/reduce conflict.
State 938 contains 1 shift/reduce conflict.
State 958 contains 1 shift/reduce conflict.
State 959 contains 1 shift/reduce conflict.
State 961 contains 1 shift/reduce conflict.
State 962 contains 1 shift/reduce conflict.
State 964 contains 1 shift/reduce conflict.
State 965 contains 1 shift/reduce conflict.
State 966 contains 1 shift/reduce conflict.
State 967 contains 1 shift/reduce conflict.
State 984 contains 2 shift/reduce conflicts.
State 1003 contains 2 shift/reduce conflicts.
State 1006 contains 8 shift/reduce conflicts.
State 1033 contains 1 shift/reduce conflict.
State 1050 contains 1 shift/reduce conflict.
State 1063 contains 1 shift/reduce conflict.
State 1065 contains 1 shift/reduce conflict.
State 1066 contains 1 shift/reduce conflict.
State 1068 contains 1 shift/reduce conflict.
State 1101 contains 1 shift/reduce conflict.
State 1106 contains 1 shift/reduce conflict.
State 1108 contains 1 shift/reduce conflict.
State 1144 contains 1 shift/reduce conflict.
State 1183 contains 1 shift/reduce conflict.
State 1185 contains 1 shift/reduce conflict.
State 1220 contains 1 shift/reduce conflict.
State 1221 contains 1 shift/reduce conflict.
State 1225 contains 1 shift/reduce conflict.
State 1226 contains 1 shift/reduce conflict.
State 1252 contains 1 shift/reduce conflict.
State 1255 contains 1 shift/reduce conflict.
State 1258 contains 1 shift/reduce conflict.
State 1260 contains 1 shift/reduce conflict.
State 1261 contains 1 shift/reduce conflict.
State 1286 contains 1 shift/reduce conflict.

Grammar
rule 1    statement -> statement AND statement
rule 2    statement -> statement OR statement
rule 3    statement -> statement CHOP statement
rule 4    statement -> PREFIX OPEN_PAR statement CLOSE_PAR
rule 5    statement -> ass_statement
rule 6    statement -> sign_declaration
rule 7    statement -> if_statement
rule 8    statement -> while_statement
rule 9    statement -> for_statement
rule 10   statement -> extend_for_statement
rule 11   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 12   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 13   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 14   statement -> AWAIT OPEN_PAR bool_statement CLOSE_PAR
rule 15   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR
rule 16   statement -> SKIP
rule 17   statement -> EMPTY
rule 18   statement -> MORE
rule 19   statement -> LENGTH OPEN_PAR alg_exp CLOSE_PAR
rule 20   statement -> request_statement
rule 21   statement -> display_statement
rule 22   statement -> TRUE
rule 23   statement -> FALSE
rule 24   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 25   statement -> statement PARALLEL statement
rule 26   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 27   statement -> FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 28   statement -> OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION big_par
rule 29   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION big_par
rule 30   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR
rule 31   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 32   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR
rule 33   statement -> struct_define_statement
rule 34   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 35   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 36   statement -> function
rule 37   statement -> EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 38   statement -> OPEN_PAR statement CLOSE_PAR
rule 39   empty_statement -> statement
rule 40   empty_statement ->		/* empty */
rule 41   optional_projection ->		/* empty */
rule 42   optional_projection -> COMMA statement optional_projection
rule 43   optional_frame_identifier -> COMMA identifier optional_frame_identifier
rule 44   optional_frame_identifier ->		/* empty */
rule 45   optional_frame_identifier -> COMMA error
rule 46   imply_pre -> prime_bool_statement
rule 47   imply_pre -> NEGATION imply_pre
rule 48   imply_pre -> imply_pre AND imply_pre
rule 49   imply_pre -> imply_pre OR imply_pre
rule 50   imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 51   display_statement -> DISPLAY OPEN_PAR ass_exp CLOSE_PAR
rule 52   display_statement -> DISPLAY OPEN_PAR ass_exp option_output CLOSE_PAR
rule 53   option_output ->		/* empty */
rule 54   option_output -> COMMA ass_exp option_output
rule 55   request_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 56   request_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 57   request_statement -> REQUEST OPEN_PAR list CLOSE_PAR
rule 58   request_statement -> REQUEST OPEN_PAR list option_input CLOSE_PAR
rule 59   request_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 60   option_input ->		/* empty */
rule 61   option_input -> COMMA identifier option_input
rule 62   option_input -> COMMA list option_input
rule 63   extend_for_statement -> FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par
rule 64   for_sta_init -> ass_statement
rule 65   for_sta_init -> declaration
rule 66   for_sta_init ->		/* empty */
rule 67   for_sta_condition -> pbool_expression
rule 68   for_sta_condition ->		/* empty */
rule 69   pbool_expression -> alg_exp relation_operator alg_exp
rule 70   for_sta_control -> ass_statement
rule 71   for_sta_control ->		/* empty */
rule 72   for_statement -> FOR alg_exp TIMES DO big_par
rule 79   while_statement -> WHILE bool_par big_par
rule 80   bool_par -> OPEN_PAR bool_statement CLOSE_PAR
rule 81   bool_par -> error CLOSE_PAR
rule 82   if_statement -> IF bool_statement THEN big_par optional_else_statement
rule 83   optional_else_statement -> ELSE big_par
rule 84   optional_else_statement ->		/* empty */
rule 85   big_par -> OPEN_BPAR statement CLOSE_BPAR
rule 86   big_par -> error CLOSE_BPAR
rule 87   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 88   struct_identifier -> STRUCT ID
rule 89   struct_identifier -> UNION ID
rule 90   option_struct_declaration -> sign_declaration
rule 91   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 92   sign_declaration -> SIGNED declaration
rule 93   sign_declaration -> UNSIGNED declaration
rule 94   sign_declaration -> declaration
rule 95   declaration -> type_define option_identifier_array_declaration
rule 96   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 97   declaration -> STRUCT ID option_identifier_array_declaration
rule 98   declaration -> UNION ID option_identifier_array_declaration
rule 99   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 100  declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 101  declaration -> POINTERDECLARATION option_function_parameter_list
rule 102  declaration -> LISTDECLARATION option_array_declaration
rule 103  declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 104  declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 105  declaration -> OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 106  declaration -> OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp
rule 107  option_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration
rule 108  inner_option_array_declaration -> COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration
rule 109  inner_option_array_declaration ->		/* empty */
rule 110  inner_option_array_declaration -> COMMA error
rule 111  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 112  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 113  option_identifier_array_declaration -> identifier ASS_EQU ass_exp inner_option_identifier_array_declaration
rule 114  option_identifier_array_declaration -> identifier ASS_EQU string inner_option_identifier_array_declaration
rule 115  option_identifier_array_declaration -> ID ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration
rule 116  option_identifier_array_declaration -> ID ARRAY ASS_EQU string inner_option_identifier_array_declaration
rule 117  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration
rule 118  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration
rule 119  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 120  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 121  inner_option_identifier_array_declaration -> COMMA error
rule 122  option_alg_exp -> COMMA alg_exp option_alg_exp
rule 123  option_alg_exp -> COMMA error
rule 124  alg_exp -> simple_alg_exp
rule 125  alg_exp -> simple_alg_exp relation_operator alg_exp
rule 126  alg_exp -> alg_exp alg_operator simple_alg_exp
rule 127  alg_exp -> IF bool_statement THEN alg_exp optional_exp_else_statement
rule 128  optional_exp_else_statement -> ELSE alg_exp
rule 129  optional_exp_else_statement ->		/* empty */
rule 130  simple_alg_exp -> factor
rule 131  simple_alg_exp -> simple_alg_exp mul_operator factor
rule 132  factor -> integer
rule 133  factor -> SUB factor
rule 134  factor -> BNE factor
rule 135  factor -> POINTERNULL
rule 136  factor -> floatliteral
rule 137  factor -> identifier
rule 138  factor -> list
rule 139  factor -> pre_next
rule 140  factor -> value_exp
rule 141  factor -> OPEN_PAR alg_exp CLOSE_PAR
rule 142  factor -> Float_Function
rule 143  factor -> charliteral
rule 144  factor -> address_exp
rule 145  factor -> type_cast
rule 146  factor -> struct_member_exp
rule 147  factor -> size_of
rule 148  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 149  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 150  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 151  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 152  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 153  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 154  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 155  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 156  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 157  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 158  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 159  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 160  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 161  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 162  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 163  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 164  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 165  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 166  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 167  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 168  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 169  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 170  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 171  type_cast_alg_exp -> simple_alg_exp
rule 172  type_cast_alg_exp -> simple_alg_exp alg_operator simple_alg_exp
rule 173  casted_element -> type_cast_alg_exp
rule 174  casted_element -> MALLOC OPEN_PAR alg_exp CLOSE_PAR
rule 175  size_of -> SIZEOF OPEN_PAR alg_exp CLOSE_PAR
rule 176  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 177  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 178  size_of -> SIZEOF OPEN_PAR string CLOSE_PAR
rule 179  all_sizeof_type -> all_type_define
rule 180  all_sizeof_type -> INTDECLARATION MUL
rule 181  all_sizeof_type -> FLOATDECLARATION MUL
rule 182  all_sizeof_type -> CHARDECLARATION MUL
rule 183  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 184  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 185  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 186  all_sizeof_type -> STRUCT_TYPE MUL
rule 187  Float_Function -> ROUND alg_exp
rule 188  Float_Function -> CEIL alg_exp
rule 189  Float_Function -> FLOOR alg_exp
rule 190  Float_Function -> SIN alg_exp
rule 191  Float_Function -> COS alg_exp
rule 192  Float_Function -> TAN alg_exp
rule 193  Float_Function -> ASIN alg_exp
rule 194  Float_Function -> ACOS alg_exp
rule 195  Float_Function -> ATAN alg_exp
rule 196  Float_Function -> SINH alg_exp
rule 197  Float_Function -> COSH alg_exp
rule 198  Float_Function -> TANH alg_exp
rule 199  Float_Function -> EXP alg_exp
rule 200  Float_Function -> LOG alg_exp
rule 201  Float_Function -> LOG10 alg_exp
rule 202  Float_Function -> SQRT alg_exp
rule 203  Float_Function -> ATAN2 OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 204  Float_Function -> POW OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 205  Float_Function -> FMOD OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 206  Float_Function -> MODF OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 207  Float_Function -> LDEXP OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 208  Float_Function -> ABS alg_exp
rule 209  Float_Function -> FABS alg_exp
rule 210  Float_Function -> LABS alg_exp
rule 211  list -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 212  list -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 213  list -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 214  list -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 215  list -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 216  list -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 217  list -> OPEN_PAR list CLOSE_PAR
rule 218  pre_next -> PREVIOUS OPEN_PAR identifier CLOSE_PAR
rule 219  value_exp -> MUL identifier
rule 220  value_exp -> MUL value_exp
rule 221  value_exp -> MUL list
rule 222  value_exp -> OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 223  value_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp
rule 224  value_exp -> MUL OPEN_PAR alg_exp CLOSE_PAR
rule 225  value_exp -> OPEN_PAR value_exp CLOSE_PAR
rule 226  function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 227  function -> list OPEN_PAR option_function_identifier CLOSE_PAR
rule 228  function -> file_statement
rule 229  function -> String_Function
rule 230  option_function_identifier -> ass_exp inner_option_function_identifier
rule 231  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 232  option_function_identifier ->		/* empty */
rule 233  option_function_identifier -> ADDRESS error
rule 234  ass_statement -> ass_ident assign_operator ass_exp
rule 235  ass_ident -> identifier
rule 236  ass_ident -> struct_member_exp
rule 237  ass_ident -> list
rule 238  ass_ident -> value_exp
rule 239  ass_ident -> OPEN_PAR ass_ident CLOSE_PAR
rule 240  ass_ident -> NEXT ass_ident
rule 241  ass_ident -> leftaddrshift
rule 242  assign_operator -> ASS_EQU
rule 243  assign_operator -> UNITASSIGN
rule 244  ass_exp -> list_exp
rule 245  ass_exp -> string
rule 246  ass_exp -> bool_statement
rule 247  ass_exp -> OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 248  ass_exp -> OPEN_PAR ass_exp CLOSE_PAR
rule 249  ass_exp -> rightaddrshift
rule 250  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 251  list_exp -> list_exp CON list_exp
rule 252  list_exp -> option_list_value
rule 253  list_exp -> option_struct_list_value
rule 254  list_exp -> OPEN_PAR list_exp CLOSE_PAR
rule 255  bool_statement -> prime_bool_statement
rule 256  bool_statement -> alg_exp EQU string
rule 257  bool_statement -> alg_exp NE string
rule 258  bool_statement -> string EQU alg_exp
rule 259  bool_statement -> string NE alg_exp
rule 260  bool_statement -> alg_exp EQU POINTERNULL
rule 261  bool_statement -> alg_exp NE POINTERNULL
rule 262  bool_statement -> POINTERNULL EQU alg_exp
rule 263  bool_statement -> POINTERNULL NE alg_exp
rule 264  bool_statement -> alg_exp EQU charliteral
rule 265  bool_statement -> alg_exp NE charliteral
rule 266  bool_statement -> NEGATION bool_statement
rule 267  bool_statement -> bool_statement AND bool_statement
rule 268  bool_statement -> bool_statement OR bool_statement
rule 269  bool_statement -> OPEN_PAR bool_statement CLOSE_PAR
rule 270  prime_bool_statement -> alg_exp relation_operator alg_exp
rule 271  prime_bool_statement -> MY_TRUE
rule 272  prime_bool_statement -> MY_FALSE
rule 273  prime_bool_statement -> alg_exp
rule 274  option_function_parameter_list -> all_type_define identifier inner_optional_define_identifier
rule 275  option_function_parameter_list -> all_type_define inner_optional_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE identifier inner_optional_define_identifier
rule 277  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_optional_define_identifier
rule 278  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_optional_define_identifier
rule 279  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_optional_define_identifier
rule 280  option_function_parameter_list -> ID identifier inner_optional_define_identifier
rule 281  option_function_parameter_list -> ID MUL identifier inner_optional_define_identifier
rule 282  option_function_parameter_list -> ID MUL MUL identifier inner_optional_define_identifier
rule 283  option_function_parameter_list -> ID identifier ARRAY inner_optional_define_identifier
rule 284  option_function_parameter_list -> STRUCT_TYPE inner_optional_define_identifier
rule 285  option_function_parameter_list -> STRUCT_TYPE MUL inner_optional_define_identifier
rule 286  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_optional_define_identifier
rule 287  option_function_parameter_list -> ID inner_optional_define_identifier
rule 288  option_function_parameter_list -> ID MUL inner_optional_define_identifier
rule 289  option_function_parameter_list -> ID MUL MUL inner_optional_define_identifier
rule 290  option_function_parameter_list -> all_type_define identifier ARRAY inner_optional_define_identifier
rule 291  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_optional_define_identifier
rule 292  option_function_parameter_list -> all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 293  option_function_parameter_list -> all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 294  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 295  option_function_parameter_list -> all_type_define MUL identifier inner_optional_define_identifier
rule 296  option_function_parameter_list -> all_type_define MUL inner_optional_define_identifier
rule 297  option_function_parameter_list -> all_type_define MUL MUL identifier inner_optional_define_identifier
rule 298  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier
rule 299  option_function_parameter_list ->		/* empty */
rule 300  inner_optional_define_identifier -> COMMA all_type_define identifier inner_optional_define_identifier
rule 301  inner_optional_define_identifier -> COMMA all_type_define inner_optional_define_identifier
rule 302  inner_optional_define_identifier -> COMMA ID identifier inner_optional_define_identifier
rule 303  inner_optional_define_identifier -> COMMA STRUCT_TYPE identifier inner_optional_define_identifier
rule 304  inner_optional_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_optional_define_identifier
rule 305  inner_optional_define_identifier -> COMMA ID identifier ARRAY inner_optional_define_identifier
rule 306  inner_optional_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_optional_define_identifier
rule 307  inner_optional_define_identifier -> COMMA all_type_define identifier ARRAY inner_optional_define_identifier
rule 308  inner_optional_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_optional_define_identifier
rule 309  inner_optional_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier
rule 310  inner_optional_define_identifier ->		/* empty */
rule 311  inner_optional_define_identifier -> COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 312  inner_optional_define_identifier -> COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 313  inner_optional_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 314  inner_optional_define_identifier -> COMMA all_type_define MUL identifier inner_optional_define_identifier
rule 315  inner_optional_define_identifier -> COMMA all_type_define MUL inner_optional_define_identifier
rule 316  inner_optional_define_identifier -> COMMA error
rule 317  file_statement -> FOPEN OPEN_PAR ass_ident COMMA string CLOSE_PAR
rule 318  file_statement -> FGETS OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR
rule 319  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 320  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 321  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 322  file_statement -> FPUTC OPEN_PAR list COMMA identifier CLOSE_PAR
rule 323  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 324  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 325  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 326  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 327  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 328  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 329  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 330  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 331  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 332  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 333  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 334  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 335  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 336  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 337  String_Function -> String_Function_head
rule 338  String_Function -> String_Function_tail
rule 339  String_Function -> String_Function_cat
rule 340  String_Function -> String_Function_cpy
rule 341  String_Function -> String_Function_cmp
rule 342  String_Function -> String_Function_len
rule 343  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 344  struct_member_exp -> list DOT identifier option_struct_member_exp
rule 345  struct_member_exp -> value_exp DOT identifier option_struct_member_exp
rule 346  struct_member_exp -> identifier DOT list option_struct_member_exp
rule 347  struct_member_exp -> list DOT list option_struct_member_exp
rule 348  struct_member_exp -> value_exp DOT list option_struct_member_exp
rule 349  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 350  struct_member_exp -> list IMPLY identifier option_struct_member_exp
rule 351  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 352  struct_member_exp -> value_exp IMPLY identifier option_struct_member_exp
rule 353  struct_member_exp -> identifier IMPLY list option_struct_member_exp
rule 354  struct_member_exp -> list IMPLY list option_struct_member_exp
rule 355  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY list option_struct_member_exp
rule 356  struct_member_exp -> identifier DOT function
rule 357  struct_member_exp -> identifier IMPLY function
rule 358  struct_member_exp -> value_exp IMPLY list option_struct_member_exp
rule 359  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 360  address_exp -> ADDRESS identifier
rule 361  address_exp -> ADDRESS list
rule 362  address_exp -> ADDRESS struct_member_exp
rule 363  address_exp -> ADDRESS address_exp
rule 364  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 365  option_struct_member_exp ->		/* empty */
rule 366  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 367  option_struct_member_exp -> DOT list option_struct_member_exp
rule 368  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 369  option_struct_member_exp -> IMPLY list option_struct_member_exp
rule 370  option_struct_member_exp -> DOT function
rule 371  option_struct_member_exp -> IMPLY function
rule 372  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 373  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 374  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 375  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 376  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 377  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 378  str_func_parameter -> identifier
rule 379  str_func_parameter -> list
rule 380  str_func_parameter -> value_exp
rule 381  str_func_parameter -> string
rule 382  str_func_parameter -> String_Function
rule 383  str_func_parameter -> struct_member_exp
rule 384  option_list_value -> OPEN_MPAR alg_exp inner_option_list_value CLOSE_MPAR
rule 385  option_list_value -> OPEN_MPAR string inner_option_list_value CLOSE_MPAR
rule 386  option_list_value -> OPEN_MPAR charliteral inner_option_list_value CLOSE_MPAR
rule 387  option_list_value -> OPEN_MPAR list_exp inner_option_list_value CLOSE_MPAR
rule 388  option_struct_list_value -> OPEN_BPAR alg_exp inner_option_list_value CLOSE_BPAR
rule 389  option_struct_list_value -> OPEN_BPAR string inner_option_list_value CLOSE_BPAR
rule 390  option_struct_list_value -> OPEN_BPAR charliteral inner_option_list_value CLOSE_BPAR
rule 391  option_struct_list_value -> OPEN_BPAR list_exp inner_option_list_value CLOSE_BPAR
rule 392  inner_option_list_value -> COMMA alg_exp inner_option_list_value
rule 393  inner_option_list_value -> COMMA string inner_option_list_value
rule 394  inner_option_list_value -> COMMA charliteral inner_option_list_value
rule 395  inner_option_list_value -> COMMA list_exp inner_option_list_value
rule 396  inner_option_list_value -> COMMA error
rule 397  inner_option_function_identifier -> COMMA ass_exp inner_option_function_identifier
rule 398  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 399  inner_option_function_identifier -> COMMA error
rule 400  all_type_define -> sign_type_define
rule 401  all_type_define -> type_define
rule 402  type_define -> INTDECLARATION
rule 403  type_define -> FLOATDECLARATION
rule 404  type_define -> CHARDECLARATION
rule 405  type_define -> STRDECLARATION
rule 406  type_define -> VOIDDECLARATION
rule 407  type_define -> FILEDECLARATION
rule 408  mul_operator -> MUL
rule 409  mul_operator -> DIV
rule 410  mul_operator -> MOD
rule 411  mul_operator -> LST
rule 412  mul_operator -> RST
rule 413  mul_operator -> ADDRESS
rule 414  mul_operator -> INTER_OR
rule 415  mul_operator -> CON
rule 416  alg_operator -> ADD
rule 417  alg_operator -> SUB
rule 418  relation_operator -> GE
rule 419  relation_operator -> LE
rule 420  relation_operator -> NE
rule 421  relation_operator -> GT
rule 422  relation_operator -> LT
rule 423  relation_operator -> EQU
rule 424  sign_type_define -> UNSIGNED INTDECLARATION
rule 425  sign_type_define -> UNSIGNED CHARDECLARATION
rule 426  floatliteral -> FLOATLITERAL
rule 427  charliteral -> CHARLITERAL
rule 428  identifier -> ID
rule 429  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 430  integer -> INTEGER
rule 431  string -> STR

Terminals, with rules where they appear

$ (-1)
error (256) 45 81 86 110 121 123 233 316 396 399
IF (258) 82 127
ELSE (259) 83 128
EMPTY (260) 17
AWAIT (261) 14
PROJECTION (262) 28 29
PBEGIN (263)
PEND (264)
POINTERNULL (265) 135 260 261 262 263
ARRAY (266) 115 116 279 283 290 291 294 305 306 307 308 313
STRUCT (267) 88 97 99 167 169 185
DOT (268) 343 344 345 346 347 348 356 366 367 370
UNION (269) 89 98 100
FOPEN (270) 317
FCLOSE (271) 323
FILEDECLARATION (272) 407
FGETS (273) 318
FPUTS (274) 320
FGETC (275) 319
FPUTC (276) 321 322
MORE (277) 18
DEFINE (278) 30
MY_TRUE (279) 271
MY_FALSE (280) 272
EXIST (281) 37
FRAME (282) 27
FOR (283) 63 72
WHILE (284) 79
DO (285) 72
TRUE (286) 22
FALSE (287) 23
REPEAT (288) 15
UNTIL (289) 15
DISPLAY (290) 51 52
SKIP (291) 16
THEN (292) 82 127
COMMA (293) 42 43 45 54 61 62 108 110 120 121 122 123 203 204 205 206
    207 293 300 301 302 303 304 305 306 307 308 309 311 312 313 314
    315 316 317 318 320 321 322 374 375 376 392 393 394 395 396 397
    398 399
COLON (294) 37 74 75
INTDECLARATION (295) 148 151 153 155 156 161 162 180 183 212 213 326
    330 333 334 335 336 402 424
STRDECLARATION (296) 405
POINTERDECLARATION (297) 101
CHARDECLARATION (298) 150 152 154 158 159 164 165 182 184 215 216 324
    325 328 329 330 331 332 333 334 335 404 425
VOIDDECLARATION (299) 160 166 406
FLOATDECLARATION (300) 149 157 163 181 214 327 403
LISTDECLARATION (301) 102
OPEN_PAR (302) 4 11 12 13 14 15 19 24 26 27 30 31 32 34 35 38 50 51
    52 55 56 57 58 59 63 73 74 75 80 103 104 105 106 141 148 149 150
    151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166
    167 168 169 170 174 175 176 177 178 203 204 205 206 207 212 213
    214 215 216 217 218 222 223 224 225 226 227 231 239 247 248 250
    254 269 298 309 317 318 319 320 321 322 323 324 325 326 327 328
    329 330 331 332 333 334 335 336 351 355 359 364 372 373 374 375
    376 377 398 429
CLOSE_PAR (303) 4 11 12 13 14 15 19 24 26 27 30 31 32 34 35 38 50 51
    52 55 56 57 58 59 63 73 74 75 80 81 103 104 105 106 141 148 149
    150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
    166 167 168 169 170 174 175 176 177 178 203 204 205 206 207 212
    213 214 215 216 217 218 222 223 224 225 226 227 231 239 247 248
    250 254 269 298 309 317 318 319 320 321 322 323 324 325 326 327
    328 329 330 331 332 333 334 335 336 351 355 359 364 372 373 374
    375 376 377 398 429
TIMES (304) 72
OPEN_BPAR (305) 15 28 29 30 31 32 37 73 85 87 388 389 390 391
CLOSE_BPAR (306) 15 28 29 30 31 32 37 85 86 87 388 389 390 391
OPEN_MPAR (307) 26 105 106 107 108 112 117 118 211 212 213 214 215
    216 222 292 293 294 311 312 313 324 325 326 327 328 329 330 331
    332 333 334 335 336 384 385 386 387
CLOSE_MPAR (308) 26 105 106 107 108 112 117 118 211 212 213 214 215
    216 222 292 293 294 311 312 313 324 325 326 327 328 329 330 331
    332 333 334 335 336 384 385 386 387
FUNCTION (309) 31
OVER (310)
CYLINDER (311)
OVEREP (312)
INTER_OR (313) 414
NON_DETERMINED (314)
SEND (315)
RECEIVE (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
PROCESS (321) 32
STRFUNCHEAD (322) 372
STRFUNCTAIL (323) 373
STRFUNCCAT (324) 374
STRFUNCCMP (325) 376
STRFUNCCPY (326) 375
STRFUNCLEN (327) 377
SIZEOF (328) 175 176 177 178
SYSTEM (329) 35
SWITCH (330) 73
BREAK (331) 76
CASE (332) 74
DEFAULT (333) 75
CEIL (334) 188
FLOOR (335) 189
ROUND (336) 187
SIN (337) 190
COS (338) 191
TAN (339) 192
ASIN (340) 193
ACOS (341) 194
ATAN (342) 195
SINH (343) 196
COSH (344) 197
TANH (345) 198
EXP (346) 199
LOG (347) 200
LOG10 (348) 201
SQRT (349) 202
ATAN2 (350) 203
POW (351) 204
ABS (352) 208
FABS (353) 209
LABS (354) 210
FMOD (355) 205
MODF (356) 206
LDEXP (357) 207
FREXP (358)
UNSIGNED (359) 93 153 154 156 159 162 165 183 184 213 216 325 329 331
    332 333 335 424 425
SIGNED (360) 92 151 152
MALLOC (361) 174
FREE (362) 34
CHOP (363) 3 63
IMPLY (364) 26 349 350 351 352 353 354 355 357 358 368 369 371
PROPIMPLY (365)
IFF (366)
OR (367) 2 49 268
PARALLEL (368) 25
AND (369) 1 27 48 91 267
ASS_EQU (370) 30 32 106 113 114 115 116 117 118 242
UNITASSIGN (371) 243
CON (372) 251 415
ADDRESS (373) 233 360 361 362 363 413
NE (374) 257 259 261 263 265 420
EQU (375) 256 258 260 262 264 423
GE (376) 418
LE (377) 419
GT (378) 421
LT (379) 422
LST (380) 411
RST (381) 412
ADD (382) 416
SUB (383) 133 417
MUL (384) 103 104 105 106 119 155 156 157 158 159 160 161 162 163 164
    165 166 167 168 169 170 180 181 182 183 184 185 186 212 213 214
    215 216 219 220 221 223 224 250 277 278 281 282 285 286 288 289
    291 295 296 297 298 304 308 309 314 315 324 325 326 327 328 329
    330 331 332 333 334 335 336 408
DIV (385) 409
MOD (386) 410
BNE (387) 134
CHOPSTAR (388)
NEXT (389) 11 240
NEGATION (390) 47 266
LENGTH (391) 19
REQUEST (392) 55 56 57 58 59
FINAL (393) 24
KEEP (394) 12
ALWAYS (395) 13
HALT (396)
W_NEXT (397)
PREFIX (398) 4
PREVIOUS (399) 218
SOMETIMES (400)
ID (401) 30 31 32 88 89 97 98 105 106 107 108 112 115 116 117 118 211
    212 213 214 215 216 226 231 280 281 282 283 287 288 289 302 305
    398 428
STR (402) 431
STRUCT_TYPE (403) 96 99 100 167 168 169 170 177 185 186 276 277 278
    279 284 285 286 303 304 306
INTEGER (404) 324 325 326 327 328 329 330 331 332 333 334 335 336 430
FLOATLITERAL (405) 426
CHARLITERAL (406) 427

Nonterminals, with rules where they appear

statement (152)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38,
    on right: 1 2 3 4 11 12 13 15 24 25 26 27 28 29 31 37 38 39 42
    74 75 85
empty_statement (153)
    on left: 39 40, on right: 30 32
optional_projection (154)
    on left: 41 42, on right: 28 42
optional_frame_identifier (155)
    on left: 43 44 45, on right: 27 43
imply_pre (156)
    on left: 46 47 48 49 50, on right: 26 47 48 49 50
display_statement (157)
    on left: 51 52, on right: 21
option_output (158)
    on left: 53 54, on right: 52 54
request_statement (159)
    on left: 55 56 57 58 59, on right: 20
option_input (160)
    on left: 60 61 62, on right: 56 58 61 62
extend_for_statement (161)
    on left: 63, on right: 10
for_sta_init (162)
    on left: 64 65 66, on right: 63
for_sta_condition (163)
    on left: 67 68, on right: 63
pbool_expression (164)
    on left: 69, on right: 67
for_sta_control (165)
    on left: 70 71, on right: 63
for_statement (166)
    on left: 72, on right: 9
while_statement (167)
    on left: 79, on right: 8
bool_par (168)
    on left: 80 81, on right: 79
if_statement (169)
    on left: 82, on right: 7
optional_else_statement (170)
    on left: 83 84, on right: 82
big_par (171)
    on left: 85 86, on right: 28 29 63 72 79 82 83
struct_define_statement (172)
    on left: 87, on right: 33
struct_identifier (173)
    on left: 88 89, on right: 87
option_struct_declaration (174)
    on left: 90 91, on right: 87 91
sign_declaration (175)
    on left: 92 93 94, on right: 6 90 91
declaration (176)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106,
    on right: 65 92 93 94
option_array_declaration (177)
    on left: 107, on right: 102
inner_option_array_declaration (178)
    on left: 108 109 110, on right: 107 108
option_identifier_array_declaration (179)
    on left: 111 112 113 114 115 116 117 118 119, on right: 95 96 97
    98 99 100 119 120
inner_option_identifier_array_declaration (180)
    on left: 120 121, on right: 111 112 113 114 115 116 117 118
option_alg_exp (181)
    on left: 122 123, on right: 105 106 107 108 112 117 118 122 211
    212 213 214 215 216 222 324 325 326 327 328 329 330 331 332 333
    334 335 336
alg_exp (182)
    on left: 124 125 126 127, on right: 19 69 72 105 106 107 108 112
    117 118 122 125 126 127 128 141 174 175 187 188 189 190 191 192
    193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
    209 210 211 212 213 214 215 216 222 223 224 256 257 258 259 260
    261 262 263 264 265 270 273 292 293 294 311 312 313 324 325 326
    327 328 329 330 331 332 333 334 335 336 384 388 392
optional_exp_else_statement (183)
    on left: 128 129, on right: 127
simple_alg_exp (184)
    on left: 130 131, on right: 124 125 126 131 171 172
factor (185)
    on left: 132 133 134 135 136 137 138 139 140 141 142 143 144 145
    146 147, on right: 73 74 130 131 133 134
type_cast (186)
    on left: 148 149 150 151 152 153 154 155 156 157 158 159 160 161
    162 163 164 165 166 167 168 169 170, on right: 145
type_cast_alg_exp (187)
    on left: 171 172, on right: 148 149 150 151 152 153 154 173
casted_element (188)
    on left: 173 174, on right: 155 156 157 158 159 160 161 162 163
    164 165 166 167 168 169 170
size_of (189)
    on left: 175 176 177 178, on right: 147
all_sizeof_type (190)
    on left: 179 180 181 182 183 184 185 186, on right: 176
Float_Function (191)
    on left: 187 188 189 190 191 192 193 194 195 196 197 198 199 200
    201 202 203 204 205 206 207 208 209 210, on right: 142
list (192)
    on left: 211 212 213 214 215 216 217, on right: 57 58 62 138 217
    221 227 237 322 344 346 347 348 350 353 354 355 358 361 367 369
    379
pre_next (193)
    on left: 218, on right: 139
value_exp (194)
    on left: 219 220 221 222 223 224 225, on right: 140 220 222 225
    238 345 348 352 358 380
function (195)
    on left: 226 227 228 229, on right: 36 247 356 357 370 371
option_function_identifier (196)
    on left: 230 231 232 233, on right: 226 227 231 398
ass_statement (197)
    on left: 234, on right: 5 64 70
ass_ident (198)
    on left: 235 236 237 238 239 240 241, on right: 234 239 240 317
assign_operator (199)
    on left: 242 243, on right: 234
ass_exp (200)
    on left: 244 245 246 247 248 249, on right: 51 52 54 113 230 234
    248 397
rightaddrshift (201)
    on left: 250, on right: 249
list_exp (202)
    on left: 251 252 253 254, on right: 106 115 117 244 251 254 387
    391 395
bool_statement (203)
    on left: 255 256 257 258 259 260 261 262 263 264 265 266 267 268
    269, on right: 14 15 80 82 127 246 266 267 268 269
prime_bool_statement (204)
    on left: 270 271 272 273, on right: 46 255
option_function_parameter_list (205)
    on left: 274 275 276 277 278 279 280 281 282 283 284 285 286 287
    288 289 290 291 292 293 294 295 296 297 298 299,
    on right: 30 31 32 101 103 104 105 106 247 298 309
inner_optional_define_identifier (206)
    on left: 300 301 302 303 304 305 306 307 308 309 310 311 312 313
    314 315 316, on right: 37 274 275 276 277 278 279 280 281 282 283
    284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 300
    301 302 303 304 305 306 307 308 309 311 312 313 314 315
file_statement (207)
    on left: 317 318 319 320 321 322 323, on right: 228
leftaddrshift (208)
    on left: 324 325 326 327 328 329 330 331 332 333 334 335 336,
    on right: 241 250
String_Function (209)
    on left: 337 338 339 340 341 342, on right: 229 382
struct_member_exp (210)
    on left: 343 344 345 346 347 348 349 350 351 352 353 354 355 356
    357 358 359, on right: 59 146 236 359 362 383
address_exp (211)
    on left: 360 361 362 363 364, on right: 144 351 355 363 364
option_struct_member_exp (212)
    on left: 365 366 367 368 369 370 371, on right: 343 344 345 346
    347 348 349 350 351 352 353 354 355 358 366 367 368 369
String_Function_head (213)
    on left: 372, on right: 337
String_Function_tail (214)
    on left: 373, on right: 338
String_Function_cat (215)
    on left: 374, on right: 339
String_Function_cpy (216)
    on left: 375, on right: 340
String_Function_cmp (217)
    on left: 376, on right: 341
String_Function_len (218)
    on left: 377, on right: 342
str_func_parameter (219)
    on left: 378 379 380 381 382 383, on right: 35 372 373 374 375
    376 377
option_list_value (220)
    on left: 384 385 386 387, on right: 252
option_struct_list_value (221)
    on left: 388 389 390 391, on right: 253
inner_option_list_value (222)
    on left: 392 393 394 395 396, on right: 384 385 386 387 388 389
    390 391 392 393 394 395
inner_option_function_identifier (223)
    on left: 397 398 399, on right: 230 231 397 398
all_type_define (224)
    on left: 400 401, on right: 179 223 274 275 290 291 292 293 294
    295 296 297 300 301 307 308 311 312 313 314 315
type_define (225)
    on left: 402 403 404 405 406 407, on right: 95 247 401
mul_operator (226)
    on left: 408 409 410 411 412 413 414 415, on right: 131
alg_operator (227)
    on left: 416 417, on right: 126 172
relation_operator (228)
    on left: 418 419 420 421 422 423, on right: 69 125 270
sign_type_define (229)
    on left: 424 425, on right: 400
floatliteral (230)
    on left: 426, on right: 136
charliteral (231)
    on left: 427, on right: 143 264 265 386 390 394
identifier (232)
    on left: 428 429, on right: 27 34 37 43 55 56 61 103 104 111 113
    114 137 218 219 235 274 276 277 278 279 280 281 282 283 290 291
    292 293 294 295 297 298 300 302 303 304 305 306 307 308 309 311
    312 313 314 318 319 320 321 322 323 343 344 345 346 349 350 351
    352 353 356 357 360 366 368 378 429
integer (233)
    on left: 430, on right: 132 318
string (234)
    on left: 431, on right: 114 116 118 178 245 247 256 257 258 259
    317 381 385 389 393


state 0

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 55
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 1

    if_statement  ->  IF . bool_statement THEN big_par optional_else_statement   (rule 82)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 132
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 2

    statement  ->  EMPTY .   (rule 17)

    $default	reduce using rule 17 (statement)



state 3

    statement  ->  AWAIT . OPEN_PAR bool_statement CLOSE_PAR   (rule 14)

    OPEN_PAR	shift, and go to state 141



state 4

    struct_identifier  ->  STRUCT . ID   (rule 88)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 97)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 99)

    ID  	shift, and go to state 142
    STRUCT_TYPE	shift, and go to state 143



state 5

    struct_identifier  ->  UNION . ID   (rule 89)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 98)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 100)

    ID  	shift, and go to state 144
    STRUCT_TYPE	shift, and go to state 145



state 6

    file_statement  ->  FOPEN . OPEN_PAR ass_ident COMMA string CLOSE_PAR   (rule 317)

    OPEN_PAR	shift, and go to state 146



state 7

    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 323)

    OPEN_PAR	shift, and go to state 147



state 8

    type_define  ->  FILEDECLARATION .   (rule 407)

    $default	reduce using rule 407 (type_define)



state 9

    file_statement  ->  FGETS . OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR   (rule 318)

    OPEN_PAR	shift, and go to state 148



state 10

    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 320)

    OPEN_PAR	shift, and go to state 149



state 11

    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 150



state 12

    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 321)
    file_statement  ->  FPUTC . OPEN_PAR list COMMA identifier CLOSE_PAR   (rule 322)

    OPEN_PAR	shift, and go to state 151



state 13

    statement  ->  MORE .   (rule 18)

    $default	reduce using rule 18 (statement)



state 14

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 30)

    ID  	shift, and go to state 152



state 15

    statement  ->  EXIST . identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 37)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 155



state 16

    statement  ->  FRAME . OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 27)

    OPEN_PAR	shift, and go to state 156



state 17

    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 63)
    for_statement  ->  FOR . alg_exp TIMES DO big_par   (rule 72)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 158
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 159
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 18

    while_statement  ->  WHILE . bool_par big_par   (rule 79)

    error	shift, and go to state 160
    OPEN_PAR	shift, and go to state 161

    bool_par	go to state 162



state 19

    statement  ->  TRUE .   (rule 22)

    $default	reduce using rule 22 (statement)



state 20

    statement  ->  FALSE .   (rule 23)

    $default	reduce using rule 23 (statement)



state 21

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 15)

    OPEN_BPAR	shift, and go to state 163



state 22

    display_statement  ->  DISPLAY . OPEN_PAR ass_exp CLOSE_PAR   (rule 51)
    display_statement  ->  DISPLAY . OPEN_PAR ass_exp option_output CLOSE_PAR   (rule 52)

    OPEN_PAR	shift, and go to state 164



state 23

    statement  ->  SKIP .   (rule 16)

    $default	reduce using rule 16 (statement)



state 24

    type_define  ->  INTDECLARATION .   (rule 402)

    $default	reduce using rule 402 (type_define)



state 25

    type_define  ->  STRDECLARATION .   (rule 405)

    $default	reduce using rule 405 (type_define)



state 26

    declaration  ->  POINTERDECLARATION . option_function_parameter_list   (rule 101)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 169
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 27

    type_define  ->  CHARDECLARATION .   (rule 404)

    $default	reduce using rule 404 (type_define)



state 28

    type_define  ->  VOIDDECLARATION .   (rule 406)

    $default	reduce using rule 406 (type_define)



state 29

    type_define  ->  FLOATDECLARATION .   (rule 403)

    $default	reduce using rule 403 (type_define)



state 30

    declaration  ->  LISTDECLARATION . option_array_declaration   (rule 102)

    ID  	shift, and go to state 173

    option_array_declaration	go to state 174



state 31

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 38)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 175
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 176
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SIZEOF	shift, and go to state 88
    SYSTEM	shift, and go to state 41
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 177
    BNE 	shift, and go to state 115
    NEXT	shift, and go to state 46
    NEGATION	shift, and go to state 178
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    statement	go to state 179
    imply_pre	go to state 180
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    alg_exp	go to state 181
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 182
    pre_next	go to state 130
    value_exp	go to state 183
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 184
    prime_bool_statement	go to state 185
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 186
    address_exp	go to state 187
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 188
    integer	go to state 139



state 32

    statement  ->  OPEN_BPAR . statement optional_projection CLOSE_BPAR PROJECTION big_par   (rule 28)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION big_par   (rule 29)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 189
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 33

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 31)

    ID  	shift, and go to state 190



state 34

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 32)

    ID  	shift, and go to state 191



state 35

    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 372)

    OPEN_PAR	shift, and go to state 192



state 36

    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 373)

    OPEN_PAR	shift, and go to state 193



state 37

    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 374)

    OPEN_PAR	shift, and go to state 194



state 38

    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 376)

    OPEN_PAR	shift, and go to state 195



state 39

    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 196



state 40

    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 377)

    OPEN_PAR	shift, and go to state 197



state 41

    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 35)

    OPEN_PAR	shift, and go to state 198



state 42

    sign_declaration  ->  UNSIGNED . declaration   (rule 93)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    STRUCT_TYPE	shift, and go to state 54

    declaration	go to state 202
    type_define	go to state 81



state 43

    sign_declaration  ->  SIGNED . declaration   (rule 92)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    STRUCT_TYPE	shift, and go to state 54

    declaration	go to state 203
    type_define	go to state 81



state 44

    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 34)

    OPEN_PAR	shift, and go to state 204



state 45

    value_exp  ->  MUL . identifier   (rule 219)
    value_exp  ->  MUL . value_exp   (rule 220)
    value_exp  ->  MUL . list   (rule 221)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 223)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 224)

    OPEN_PAR	shift, and go to state 205
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 206
    value_exp	go to state 207
    identifier	go to state 208



state 46

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 11)
    ass_ident  ->  NEXT . ass_ident   (rule 240)

    OPEN_PAR	shift, and go to state 209
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 210
    ID  	shift, and go to state 118

    list	go to state 211
    value_exp	go to state 67
    ass_ident	go to state 212
    leftaddrshift	go to state 72
    struct_member_exp	go to state 74
    identifier	go to state 82



state 47

    statement  ->  LENGTH . OPEN_PAR alg_exp CLOSE_PAR   (rule 19)

    OPEN_PAR	shift, and go to state 213



state 48

    request_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 55)
    request_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 56)
    request_statement  ->  REQUEST . OPEN_PAR list CLOSE_PAR   (rule 57)
    request_statement  ->  REQUEST . OPEN_PAR list option_input CLOSE_PAR   (rule 58)
    request_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 59)

    OPEN_PAR	shift, and go to state 214



state 49

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 24)

    OPEN_PAR	shift, and go to state 215



state 50

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 12)

    OPEN_PAR	shift, and go to state 216



state 51

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 13)

    OPEN_PAR	shift, and go to state 217



state 52

    statement  ->  PREFIX . OPEN_PAR statement CLOSE_PAR   (rule 4)

    OPEN_PAR	shift, and go to state 218



state 53

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 226)
    identifier  ->  ID .   (rule 428)

    OPEN_PAR	shift, and go to state 219
    OPEN_MPAR	shift, and go to state 220

    $default	reduce using rule 428 (identifier)



state 54

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 96)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 223
    identifier	go to state 224



state 55

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)

    $   	go to state 1336
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 56

    statement  ->  display_statement .   (rule 21)

    $default	reduce using rule 21 (statement)



state 57

    statement  ->  request_statement .   (rule 20)

    $default	reduce using rule 20 (statement)



state 58

    statement  ->  extend_for_statement .   (rule 10)

    $default	reduce using rule 10 (statement)



state 59

    statement  ->  for_statement .   (rule 9)

    $default	reduce using rule 9 (statement)



state 60

    statement  ->  while_statement .   (rule 8)

    $default	reduce using rule 8 (statement)



state 61

    statement  ->  if_statement .   (rule 7)

    $default	reduce using rule 7 (statement)



state 62

    statement  ->  struct_define_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 63

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 87)

    OPEN_BPAR	shift, and go to state 229



state 64

    statement  ->  sign_declaration .   (rule 6)

    $default	reduce using rule 6 (statement)



state 65

    sign_declaration  ->  declaration .   (rule 94)

    $default	reduce using rule 94 (sign_declaration)



state 66

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    ass_ident  ->  list .   (rule 237)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    OPEN_PAR	shift, and go to state 231
    IMPLY	shift, and go to state 232

    $default	reduce using rule 237 (ass_ident)



state 67

    ass_ident  ->  value_exp .   (rule 238)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    IMPLY	shift, and go to state 234

    $default	reduce using rule 238 (ass_ident)



state 68

    statement  ->  function .   (rule 36)

    $default	reduce using rule 36 (statement)



state 69

    statement  ->  ass_statement .   (rule 5)

    $default	reduce using rule 5 (statement)



state 70

    ass_statement  ->  ass_ident . assign_operator ass_exp   (rule 234)

    ASS_EQU	shift, and go to state 235
    UNITASSIGN	shift, and go to state 236

    assign_operator	go to state 237



state 71

    function  ->  file_statement .   (rule 228)

    $default	reduce using rule 228 (function)



state 72

    ass_ident  ->  leftaddrshift .   (rule 241)

    $default	reduce using rule 241 (ass_ident)



state 73

    function  ->  String_Function .   (rule 229)

    $default	reduce using rule 229 (function)



state 74

    ass_ident  ->  struct_member_exp .   (rule 236)

    $default	reduce using rule 236 (ass_ident)



state 75

    String_Function  ->  String_Function_head .   (rule 337)

    $default	reduce using rule 337 (String_Function)



state 76

    String_Function  ->  String_Function_tail .   (rule 338)

    $default	reduce using rule 338 (String_Function)



state 77

    String_Function  ->  String_Function_cat .   (rule 339)

    $default	reduce using rule 339 (String_Function)



state 78

    String_Function  ->  String_Function_cpy .   (rule 340)

    $default	reduce using rule 340 (String_Function)



state 79

    String_Function  ->  String_Function_cmp .   (rule 341)

    $default	reduce using rule 341 (String_Function)



state 80

    String_Function  ->  String_Function_len .   (rule 342)

    $default	reduce using rule 342 (String_Function)



state 81

    declaration  ->  type_define . option_identifier_array_declaration   (rule 95)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 238
    identifier	go to state 224



state 82

    ass_ident  ->  identifier .   (rule 235)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)

    DOT 	shift, and go to state 239
    IMPLY	shift, and go to state 240

    $default	reduce using rule 235 (ass_ident)



state 83

    alg_exp  ->  IF . bool_statement THEN alg_exp optional_exp_else_statement   (rule 127)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 241
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 84

    factor  ->  POINTERNULL .   (rule 135)
    bool_statement  ->  POINTERNULL . EQU alg_exp   (rule 262)
    bool_statement  ->  POINTERNULL . NE alg_exp   (rule 263)

    NE  	shift, and go to state 242
    EQU 	shift, and go to state 243

    NE  	[reduce using rule 135 (factor)]
    EQU 	[reduce using rule 135 (factor)]
    $default	reduce using rule 135 (factor)



state 85

    prime_bool_statement  ->  MY_TRUE .   (rule 271)

    $default	reduce using rule 271 (prime_bool_statement)



state 86

    prime_bool_statement  ->  MY_FALSE .   (rule 272)

    $default	reduce using rule 272 (prime_bool_statement)



state 87

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 269)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    STRUCT	shift, and go to state 244
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 249
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 253
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    bool_statement	go to state 256
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139
    string	go to state 140



state 88

    size_of  ->  SIZEOF . OPEN_PAR alg_exp CLOSE_PAR   (rule 175)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 176)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 177)
    size_of  ->  SIZEOF . OPEN_PAR string CLOSE_PAR   (rule 178)

    OPEN_PAR	shift, and go to state 260



state 89

    Float_Function  ->  CEIL . alg_exp   (rule 188)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 262
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 90

    Float_Function  ->  FLOOR . alg_exp   (rule 189)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 263
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 91

    Float_Function  ->  ROUND . alg_exp   (rule 187)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 264
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 92

    Float_Function  ->  SIN . alg_exp   (rule 190)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 265
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 93

    Float_Function  ->  COS . alg_exp   (rule 191)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 266
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 94

    Float_Function  ->  TAN . alg_exp   (rule 192)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 267
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 95

    Float_Function  ->  ASIN . alg_exp   (rule 193)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 268
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 96

    Float_Function  ->  ACOS . alg_exp   (rule 194)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 269
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 97

    Float_Function  ->  ATAN . alg_exp   (rule 195)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 270
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 98

    Float_Function  ->  SINH . alg_exp   (rule 196)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 271
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 99

    Float_Function  ->  COSH . alg_exp   (rule 197)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 272
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 100

    Float_Function  ->  TANH . alg_exp   (rule 198)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 273
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 101

    Float_Function  ->  EXP . alg_exp   (rule 199)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 274
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 102

    Float_Function  ->  LOG . alg_exp   (rule 200)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 275
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 103

    Float_Function  ->  LOG10 . alg_exp   (rule 201)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 276
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 104

    Float_Function  ->  SQRT . alg_exp   (rule 202)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 277
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 105

    Float_Function  ->  ATAN2 . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 203)

    OPEN_PAR	shift, and go to state 278



state 106

    Float_Function  ->  POW . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 204)

    OPEN_PAR	shift, and go to state 279



state 107

    Float_Function  ->  ABS . alg_exp   (rule 208)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 280
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 108

    Float_Function  ->  FABS . alg_exp   (rule 209)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 281
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 109

    Float_Function  ->  LABS . alg_exp   (rule 210)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 282
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 110

    Float_Function  ->  FMOD . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 205)

    OPEN_PAR	shift, and go to state 283



state 111

    Float_Function  ->  MODF . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 206)

    OPEN_PAR	shift, and go to state 284



state 112

    Float_Function  ->  LDEXP . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 207)

    OPEN_PAR	shift, and go to state 285



state 113

    address_exp  ->  ADDRESS . identifier   (rule 360)
    address_exp  ->  ADDRESS . list   (rule 361)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 362)
    address_exp  ->  ADDRESS . address_exp   (rule 363)

    OPEN_PAR	shift, and go to state 286
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 287
    value_exp	go to state 288
    struct_member_exp	go to state 289
    address_exp	go to state 290
    identifier	go to state 291



state 114

    factor  ->  SUB . factor   (rule 133)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    factor	go to state 292
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 115

    factor  ->  BNE . factor   (rule 134)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    factor	go to state 293
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 116

    bool_statement  ->  NEGATION . bool_statement   (rule 266)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 294
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 117

    pre_next  ->  PREVIOUS . OPEN_PAR identifier CLOSE_PAR   (rule 218)

    OPEN_PAR	shift, and go to state 295



state 118

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    identifier  ->  ID .   (rule 428)

    OPEN_MPAR	shift, and go to state 220

    $default	reduce using rule 428 (identifier)



state 119

    string  ->  STR .   (rule 431)

    $default	reduce using rule 431 (string)



state 120

    integer  ->  INTEGER .   (rule 430)

    $default	reduce using rule 430 (integer)



state 121

    floatliteral  ->  FLOATLITERAL .   (rule 426)

    $default	reduce using rule 426 (floatliteral)



state 122

    charliteral  ->  CHARLITERAL .   (rule 427)

    $default	reduce using rule 427 (charliteral)



state 123

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    bool_statement  ->  alg_exp . EQU string   (rule 256)
    bool_statement  ->  alg_exp . NE string   (rule 257)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 260)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 261)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 264)
    bool_statement  ->  alg_exp . NE charliteral   (rule 265)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 270)
    prime_bool_statement  ->  alg_exp .   (rule 273)

    NE  	shift, and go to state 296
    EQU 	shift, and go to state 297
    GE  	shift, and go to state 298
    LE  	shift, and go to state 299
    GT  	shift, and go to state 300
    LT  	shift, and go to state 301
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 273 (prime_bool_statement)

    alg_operator	go to state 304
    relation_operator	go to state 305



state 124

    alg_exp  ->  simple_alg_exp .   (rule 124)
    alg_exp  ->  simple_alg_exp . relation_operator alg_exp   (rule 125)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 131)

    INTER_OR	shift, and go to state 306
    CON 	shift, and go to state 307
    ADDRESS	shift, and go to state 308
    NE  	shift, and go to state 309
    EQU 	shift, and go to state 310
    GE  	shift, and go to state 298
    LE  	shift, and go to state 299
    GT  	shift, and go to state 300
    LT  	shift, and go to state 301
    LST 	shift, and go to state 311
    RST 	shift, and go to state 312
    MUL 	shift, and go to state 313
    DIV 	shift, and go to state 314
    MOD 	shift, and go to state 315

    INTER_OR	[reduce using rule 124 (alg_exp)]
    CON 	[reduce using rule 124 (alg_exp)]
    ADDRESS	[reduce using rule 124 (alg_exp)]
    NE  	[reduce using rule 124 (alg_exp)]
    EQU 	[reduce using rule 124 (alg_exp)]
    GE  	[reduce using rule 124 (alg_exp)]
    LE  	[reduce using rule 124 (alg_exp)]
    GT  	[reduce using rule 124 (alg_exp)]
    LT  	[reduce using rule 124 (alg_exp)]
    LST 	[reduce using rule 124 (alg_exp)]
    RST 	[reduce using rule 124 (alg_exp)]
    MUL 	[reduce using rule 124 (alg_exp)]
    DIV 	[reduce using rule 124 (alg_exp)]
    MOD 	[reduce using rule 124 (alg_exp)]
    $default	reduce using rule 124 (alg_exp)

    mul_operator	go to state 316
    relation_operator	go to state 317



state 125

    simple_alg_exp  ->  factor .   (rule 130)

    $default	reduce using rule 130 (simple_alg_exp)



state 126

    factor  ->  type_cast .   (rule 145)

    $default	reduce using rule 145 (factor)



state 127

    factor  ->  size_of .   (rule 147)

    $default	reduce using rule 147 (factor)



state 128

    factor  ->  Float_Function .   (rule 142)

    $default	reduce using rule 142 (factor)



state 129

    factor  ->  list .   (rule 138)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    IMPLY	shift, and go to state 232

    DOT 	[reduce using rule 138 (factor)]
    IMPLY	[reduce using rule 138 (factor)]
    $default	reduce using rule 138 (factor)



state 130

    factor  ->  pre_next .   (rule 139)

    $default	reduce using rule 139 (factor)



state 131

    factor  ->  value_exp .   (rule 140)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    IMPLY	shift, and go to state 234

    DOT 	[reduce using rule 140 (factor)]
    IMPLY	[reduce using rule 140 (factor)]
    $default	reduce using rule 140 (factor)



state 132

    if_statement  ->  IF bool_statement . THEN big_par optional_else_statement   (rule 82)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    THEN	shift, and go to state 318
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 133

    bool_statement  ->  prime_bool_statement .   (rule 255)

    $default	reduce using rule 255 (bool_statement)



state 134

    factor  ->  struct_member_exp .   (rule 146)

    $default	reduce using rule 146 (factor)



state 135

    factor  ->  address_exp .   (rule 144)

    $default	reduce using rule 144 (factor)



state 136

    factor  ->  floatliteral .   (rule 136)

    $default	reduce using rule 136 (factor)



state 137

    factor  ->  charliteral .   (rule 143)

    $default	reduce using rule 143 (factor)



state 138

    factor  ->  identifier .   (rule 137)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)

    DOT 	shift, and go to state 239
    IMPLY	shift, and go to state 240

    DOT 	[reduce using rule 137 (factor)]
    IMPLY	[reduce using rule 137 (factor)]
    $default	reduce using rule 137 (factor)



state 139

    factor  ->  integer .   (rule 132)

    $default	reduce using rule 132 (factor)



state 140

    bool_statement  ->  string . EQU alg_exp   (rule 258)
    bool_statement  ->  string . NE alg_exp   (rule 259)

    NE  	shift, and go to state 321
    EQU 	shift, and go to state 322



state 141

    statement  ->  AWAIT OPEN_PAR . bool_statement CLOSE_PAR   (rule 14)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 323
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 142

    struct_identifier  ->  STRUCT ID .   (rule 88)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 97)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    $default	reduce using rule 88 (struct_identifier)

    option_identifier_array_declaration	go to state 324
    identifier	go to state 224



state 143

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 99)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 325
    identifier	go to state 224



state 144

    struct_identifier  ->  UNION ID .   (rule 89)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    $default	reduce using rule 89 (struct_identifier)

    option_identifier_array_declaration	go to state 326
    identifier	go to state 224



state 145

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 327
    identifier	go to state 224



state 146

    file_statement  ->  FOPEN OPEN_PAR . ass_ident COMMA string CLOSE_PAR   (rule 317)

    OPEN_PAR	shift, and go to state 328
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 210
    ID  	shift, and go to state 118

    list	go to state 211
    value_exp	go to state 67
    ass_ident	go to state 329
    leftaddrshift	go to state 72
    struct_member_exp	go to state 74
    identifier	go to state 82



state 147

    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 323)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 330



state 148

    file_statement  ->  FGETS OPEN_PAR . identifier COMMA integer COMMA identifier CLOSE_PAR   (rule 318)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 331



state 149

    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 320)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 332



state 150

    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 333



state 151

    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 321)
    file_statement  ->  FPUTC OPEN_PAR . list COMMA identifier CLOSE_PAR   (rule 322)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 335
    identifier	go to state 336



state 152

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 30)

    OPEN_PAR	shift, and go to state 337



state 153

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 338



state 154

    identifier  ->  ID .   (rule 428)

    $default	reduce using rule 428 (identifier)



state 155

    statement  ->  EXIST identifier . inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 37)

    COMMA	shift, and go to state 339

    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 340



state 156

    statement  ->  FRAME OPEN_PAR . identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 27)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 341



state 157

    factor  ->  POINTERNULL .   (rule 135)

    $default	reduce using rule 135 (factor)



state 158

    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 63)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 342
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 343
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 344
    VOIDDECLARATION	shift, and go to state 345
    FLOATDECLARATION	shift, and go to state 346
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 347
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEXT	shift, and go to state 210
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 348
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    $default	reduce using rule 66 (for_sta_init)

    for_sta_init	go to state 349
    declaration	go to state 350
    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 352
    pre_next	go to state 130
    value_exp	go to state 183
    ass_statement	go to state 353
    ass_ident	go to state 70
    leftaddrshift	go to state 72
    struct_member_exp	go to state 186
    address_exp	go to state 258
    type_define	go to state 81
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 188
    integer	go to state 139



state 159

    for_statement  ->  FOR alg_exp . TIMES DO big_par   (rule 72)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    TIMES	shift, and go to state 354
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 160

    bool_par  ->  error . CLOSE_PAR   (rule 81)

    CLOSE_PAR	shift, and go to state 355



state 161

    bool_par  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 80)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 356
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 162

    while_statement  ->  WHILE bool_par . big_par   (rule 79)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 359



state 163

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 15)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 360
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 164

    display_statement  ->  DISPLAY OPEN_PAR . ass_exp CLOSE_PAR   (rule 51)
    display_statement  ->  DISPLAY OPEN_PAR . ass_exp option_output CLOSE_PAR   (rule 52)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    ass_exp	go to state 365
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 165

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 298)

    MUL 	shift, and go to state 372



state 166

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 424)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 425)

    INTDECLARATION	shift, and go to state 373
    CHARDECLARATION	shift, and go to state 374



state 167

    option_function_parameter_list  ->  ID . identifier inner_optional_define_identifier   (rule 280)
    option_function_parameter_list  ->  ID . MUL identifier inner_optional_define_identifier   (rule 281)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_optional_define_identifier   (rule 282)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_optional_define_identifier   (rule 283)
    option_function_parameter_list  ->  ID . inner_optional_define_identifier   (rule 287)
    option_function_parameter_list  ->  ID . MUL inner_optional_define_identifier   (rule 288)
    option_function_parameter_list  ->  ID . MUL MUL inner_optional_define_identifier   (rule 289)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 375
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 376
    identifier	go to state 377



state 168

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_optional_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_optional_define_identifier   (rule 277)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_optional_define_identifier   (rule 278)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_optional_define_identifier   (rule 279)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_optional_define_identifier   (rule 284)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_optional_define_identifier   (rule 285)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_optional_define_identifier   (rule 286)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 378
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 379
    identifier	go to state 380



state 169

    declaration  ->  POINTERDECLARATION option_function_parameter_list .   (rule 101)

    $default	reduce using rule 101 (declaration)



state 170

    option_function_parameter_list  ->  all_type_define . identifier inner_optional_define_identifier   (rule 274)
    option_function_parameter_list  ->  all_type_define . inner_optional_define_identifier   (rule 275)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_optional_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_optional_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 293)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 294)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_optional_define_identifier   (rule 295)
    option_function_parameter_list  ->  all_type_define . MUL inner_optional_define_identifier   (rule 296)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_optional_define_identifier   (rule 297)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 381
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 382
    identifier	go to state 383



state 171

    all_type_define  ->  type_define .   (rule 401)

    $default	reduce using rule 401 (all_type_define)



state 172

    all_type_define  ->  sign_type_define .   (rule 400)

    $default	reduce using rule 400 (all_type_define)



state 173

    option_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 107)

    OPEN_MPAR	shift, and go to state 384



state 174

    declaration  ->  LISTDECLARATION option_array_declaration .   (rule 102)

    $default	reduce using rule 102 (declaration)



state 175

    if_statement  ->  IF . bool_statement THEN big_par optional_else_statement   (rule 82)
    alg_exp  ->  IF . bool_statement THEN alg_exp optional_exp_else_statement   (rule 127)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 385
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 176

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 38)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 50)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 175
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 386
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 387
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 388
    VOIDDECLARATION	shift, and go to state 345
    FLOATDECLARATION	shift, and go to state 389
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 176
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SIZEOF	shift, and go to state 88
    SYSTEM	shift, and go to state 41
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 390
    SIGNED	shift, and go to state 391
    FREE	shift, and go to state 44
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 177
    BNE 	shift, and go to state 115
    NEXT	shift, and go to state 46
    NEGATION	shift, and go to state 178
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 348
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    statement	go to state 179
    imply_pre	go to state 392
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    alg_exp	go to state 393
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 182
    pre_next	go to state 130
    value_exp	go to state 183
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 184
    prime_bool_statement	go to state 185
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 186
    address_exp	go to state 258
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 188
    integer	go to state 139



state 177

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    value_exp  ->  MUL . identifier   (rule 219)
    value_exp  ->  MUL . value_exp   (rule 220)
    value_exp  ->  MUL . list   (rule 221)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 223)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 224)

    OPEN_PAR	shift, and go to state 205
    MUL 	shift, and go to state 394
    ID  	shift, and go to state 395

    list	go to state 206
    value_exp	go to state 207
    identifier	go to state 396



state 178

    imply_pre  ->  NEGATION . imply_pre   (rule 47)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 397
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 178
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    imply_pre	go to state 398
    alg_exp	go to state 181
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    prime_bool_statement	go to state 185
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 179

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 38)

    CLOSE_PAR	shift, and go to state 399
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 180

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 48)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 49)

    CLOSE_PAR	shift, and go to state 400
    OR  	shift, and go to state 401
    AND 	shift, and go to state 402



state 181

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 270)
    prime_bool_statement  ->  alg_exp .   (rule 273)

    NE  	shift, and go to state 309
    EQU 	shift, and go to state 310
    GE  	shift, and go to state 298
    LE  	shift, and go to state 299
    GT  	shift, and go to state 300
    LT  	shift, and go to state 301
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 273 (prime_bool_statement)

    alg_operator	go to state 304
    relation_operator	go to state 305



state 182

    factor  ->  list .   (rule 138)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    ass_ident  ->  list .   (rule 237)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    OPEN_PAR	shift, and go to state 231
    CLOSE_PAR	shift, and go to state 403
    IMPLY	shift, and go to state 232

    CLOSE_PAR	[reduce using rule 138 (factor)]
    CLOSE_PAR	[reduce using rule 237 (ass_ident)]
    ASS_EQU	reduce using rule 237 (ass_ident)
    UNITASSIGN	reduce using rule 237 (ass_ident)
    $default	reduce using rule 138 (factor)



state 183

    factor  ->  value_exp .   (rule 140)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 225)
    ass_ident  ->  value_exp .   (rule 238)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    CLOSE_PAR	shift, and go to state 404
    IMPLY	shift, and go to state 234

    CLOSE_PAR	[reduce using rule 140 (factor)]
    CLOSE_PAR	[reduce using rule 238 (ass_ident)]
    ASS_EQU	reduce using rule 238 (ass_ident)
    UNITASSIGN	reduce using rule 238 (ass_ident)
    $default	reduce using rule 140 (factor)



state 184

    ass_statement  ->  ass_ident . assign_operator ass_exp   (rule 234)
    ass_ident  ->  OPEN_PAR ass_ident . CLOSE_PAR   (rule 239)

    CLOSE_PAR	shift, and go to state 405
    ASS_EQU	shift, and go to state 235
    UNITASSIGN	shift, and go to state 236

    assign_operator	go to state 237



state 185

    imply_pre  ->  prime_bool_statement .   (rule 46)

    $default	reduce using rule 46 (imply_pre)



state 186

    factor  ->  struct_member_exp .   (rule 146)
    ass_ident  ->  struct_member_exp .   (rule 236)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 406

    CLOSE_PAR	[reduce using rule 146 (factor)]
    CLOSE_PAR	[reduce using rule 236 (ass_ident)]
    ASS_EQU	reduce using rule 236 (ass_ident)
    UNITASSIGN	reduce using rule 236 (ass_ident)
    $default	reduce using rule 146 (factor)



state 187

    factor  ->  address_exp .   (rule 144)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)

    CLOSE_PAR	shift, and go to state 407

    CLOSE_PAR	[reduce using rule 144 (factor)]
    $default	reduce using rule 144 (factor)



state 188

    factor  ->  identifier .   (rule 137)
    ass_ident  ->  identifier .   (rule 235)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 429)

    DOT 	shift, and go to state 239
    CLOSE_PAR	shift, and go to state 408
    IMPLY	shift, and go to state 240

    CLOSE_PAR	[reduce using rule 137 (factor)]
    CLOSE_PAR	[reduce using rule 235 (ass_ident)]
    ASS_EQU	reduce using rule 235 (ass_ident)
    UNITASSIGN	reduce using rule 235 (ass_ident)
    $default	reduce using rule 137 (factor)



state 189

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  OPEN_BPAR statement . optional_projection CLOSE_BPAR PROJECTION big_par   (rule 28)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION big_par   (rule 29)

    COMMA	shift, and go to state 409
    CLOSE_BPAR	shift, and go to state 410
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228

    CLOSE_BPAR	[reduce using rule 41 (optional_projection)]
    $default	reduce using rule 41 (optional_projection)

    optional_projection	go to state 411



state 190

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 31)

    OPEN_PAR	shift, and go to state 412



state 191

    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 32)

    OPEN_PAR	shift, and go to state 413



state 192

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 372)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 419
    identifier	go to state 420
    string	go to state 421



state 193

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 373)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 422
    identifier	go to state 420
    string	go to state 421



state 194

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 374)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 423
    identifier	go to state 420
    string	go to state 421



state 195

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 376)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 424
    identifier	go to state 420
    string	go to state 421



state 196

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 425
    identifier	go to state 420
    string	go to state 421



state 197

    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 377)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 426
    identifier	go to state 420
    string	go to state 421



state 198

    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 35)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 427
    identifier	go to state 420
    string	go to state 421



state 199

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 97)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 99)

    ID  	shift, and go to state 428
    STRUCT_TYPE	shift, and go to state 143



state 200

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 98)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 100)

    ID  	shift, and go to state 429
    STRUCT_TYPE	shift, and go to state 145



state 201

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    MUL 	shift, and go to state 430



state 202

    sign_declaration  ->  UNSIGNED declaration .   (rule 93)

    $default	reduce using rule 93 (sign_declaration)



state 203

    sign_declaration  ->  SIGNED declaration .   (rule 92)

    $default	reduce using rule 92 (sign_declaration)



state 204

    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 34)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 431



state 205

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR alg_exp   (rule 223)
    value_exp  ->  MUL OPEN_PAR . alg_exp CLOSE_PAR   (rule 224)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 166
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 433
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 134
    address_exp	go to state 135
    all_type_define	go to state 434
    type_define	go to state 171
    sign_type_define	go to state 172
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 206

    value_exp  ->  MUL list .   (rule 221)

    $default	reduce using rule 221 (value_exp)



state 207

    value_exp  ->  MUL value_exp .   (rule 220)

    $default	reduce using rule 220 (value_exp)



state 208

    value_exp  ->  MUL identifier .   (rule 219)

    $default	reduce using rule 219 (value_exp)



state 209

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 11)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 435
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 436
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 437
    value_exp	go to state 438
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 184
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 439
    address_exp	go to state 440
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 441



state 210

    ass_ident  ->  NEXT . ass_ident   (rule 240)

    OPEN_PAR	shift, and go to state 328
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 210
    ID  	shift, and go to state 118

    list	go to state 211
    value_exp	go to state 67
    ass_ident	go to state 212
    leftaddrshift	go to state 72
    struct_member_exp	go to state 74
    identifier	go to state 82



state 211

    ass_ident  ->  list .   (rule 237)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    IMPLY	shift, and go to state 232

    $default	reduce using rule 237 (ass_ident)



state 212

    ass_ident  ->  NEXT ass_ident .   (rule 240)

    $default	reduce using rule 240 (ass_ident)



state 213

    statement  ->  LENGTH OPEN_PAR . alg_exp CLOSE_PAR   (rule 19)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 442
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 214

    request_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 55)
    request_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 56)
    request_statement  ->  REQUEST OPEN_PAR . list CLOSE_PAR   (rule 57)
    request_statement  ->  REQUEST OPEN_PAR . list option_input CLOSE_PAR   (rule 58)
    request_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 59)

    OPEN_PAR	shift, and go to state 414
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 443
    value_exp	go to state 288
    struct_member_exp	go to state 444
    identifier	go to state 445



state 215

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 24)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 446
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 216

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 12)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 447
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 217

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 13)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 448
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 218

    statement  ->  PREFIX OPEN_PAR . statement CLOSE_PAR   (rule 4)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 449
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 219

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 226)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 450
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 451
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    $default	reduce using rule 232 (option_function_identifier)

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    option_function_identifier	go to state 452
    ass_exp	go to state 453
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 220

    list  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 211)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 454
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 221

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 119)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 455
    identifier	go to state 224



state 222

    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 112)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 115)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_EQU string inner_option_identifier_array_declaration   (rule 116)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 117)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 118)
    identifier  ->  ID .   (rule 428)

    ARRAY	shift, and go to state 456
    OPEN_MPAR	shift, and go to state 457

    $default	reduce using rule 428 (identifier)



state 223

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (declaration)



state 224

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 111)
    option_identifier_array_declaration  ->  identifier . ASS_EQU ass_exp inner_option_identifier_array_declaration   (rule 113)
    option_identifier_array_declaration  ->  identifier . ASS_EQU string inner_option_identifier_array_declaration   (rule 114)

    COMMA	shift, and go to state 458
    ASS_EQU	shift, and go to state 459

    inner_option_identifier_array_declaration	go to state 460



state 225

    statement  ->  statement CHOP . statement   (rule 3)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 461
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 226

    statement  ->  statement OR . statement   (rule 2)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 462
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 227

    statement  ->  statement PARALLEL . statement   (rule 25)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 463
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 228

    statement  ->  statement AND . statement   (rule 1)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 464
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 229

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 87)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    STRUCT_TYPE	shift, and go to state 54

    option_struct_declaration	go to state 465
    sign_declaration	go to state 466
    declaration	go to state 65
    type_define	go to state 81



state 230

    struct_member_exp  ->  list DOT . identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list DOT . list option_struct_member_exp   (rule 347)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 467
    identifier	go to state 468



state 231

    function  ->  list OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 227)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 450
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 451
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    $default	reduce using rule 232 (option_function_identifier)

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    option_function_identifier	go to state 469
    ass_exp	go to state 453
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 232

    struct_member_exp  ->  list IMPLY . identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list IMPLY . list option_struct_member_exp   (rule 354)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 470
    identifier	go to state 471



state 233

    struct_member_exp  ->  value_exp DOT . identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp DOT . list option_struct_member_exp   (rule 348)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 472
    identifier	go to state 473



state 234

    struct_member_exp  ->  value_exp IMPLY . identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp IMPLY . list option_struct_member_exp   (rule 358)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 474
    identifier	go to state 475



state 235

    assign_operator  ->  ASS_EQU .   (rule 242)

    $default	reduce using rule 242 (assign_operator)



state 236

    assign_operator  ->  UNITASSIGN .   (rule 243)

    $default	reduce using rule 243 (assign_operator)



state 237

    ass_statement  ->  ass_ident assign_operator . ass_exp   (rule 234)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    ass_exp	go to state 476
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 238

    declaration  ->  type_define option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (declaration)



state 239

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier DOT . list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier DOT . function   (rule 356)

    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    OPEN_PAR	shift, and go to state 334
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    ID  	shift, and go to state 53

    list	go to state 477
    function	go to state 478
    file_statement	go to state 71
    String_Function	go to state 73
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    identifier	go to state 479



state 240

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier IMPLY . list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier IMPLY . function   (rule 357)

    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    OPEN_PAR	shift, and go to state 334
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    ID  	shift, and go to state 53

    list	go to state 480
    function	go to state 481
    file_statement	go to state 71
    String_Function	go to state 73
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    identifier	go to state 482



state 241

    alg_exp  ->  IF bool_statement . THEN alg_exp optional_exp_else_statement   (rule 127)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    THEN	shift, and go to state 483
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 242

    bool_statement  ->  POINTERNULL NE . alg_exp   (rule 263)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 484
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 243

    bool_statement  ->  POINTERNULL EQU . alg_exp   (rule 262)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 485
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 244

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)

    STRUCT_TYPE	shift, and go to state 486



state 245

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 488



state 246

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 490



state 247

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 166)

    MUL 	shift, and go to state 491



state 248

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 163)

    CLOSE_PAR	shift, and go to state 492
    MUL 	shift, and go to state 493



state 249

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 269)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    STRUCT	shift, and go to state 244
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 249
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 253
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    bool_statement	go to state 256
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139
    string	go to state 140



state 250

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)

    INTDECLARATION	shift, and go to state 498
    CHARDECLARATION	shift, and go to state 499



state 251

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)

    INTDECLARATION	shift, and go to state 500
    CHARDECLARATION	shift, and go to state 501



state 252

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 170)

    MUL 	shift, and go to state 502



state 253

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 141)
    bool_statement  ->  alg_exp . EQU string   (rule 256)
    bool_statement  ->  alg_exp . NE string   (rule 257)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 260)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 261)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 264)
    bool_statement  ->  alg_exp . NE charliteral   (rule 265)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 270)
    prime_bool_statement  ->  alg_exp .   (rule 273)

    CLOSE_PAR	shift, and go to state 503
    NE  	shift, and go to state 296
    EQU 	shift, and go to state 297
    GE  	shift, and go to state 298
    LE  	shift, and go to state 299
    GT  	shift, and go to state 300
    LT  	shift, and go to state 301
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    CLOSE_PAR	[reduce using rule 273 (prime_bool_statement)]
    $default	reduce using rule 273 (prime_bool_statement)

    alg_operator	go to state 304
    relation_operator	go to state 305



state 254

    factor  ->  list .   (rule 138)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    CLOSE_PAR	shift, and go to state 403
    IMPLY	shift, and go to state 232

    CLOSE_PAR	[reduce using rule 138 (factor)]
    $default	reduce using rule 138 (factor)



state 255

    factor  ->  value_exp .   (rule 140)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 225)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    CLOSE_PAR	shift, and go to state 404
    IMPLY	shift, and go to state 234

    CLOSE_PAR	[reduce using rule 140 (factor)]
    $default	reduce using rule 140 (factor)



state 256

    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)
    bool_statement  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 269)

    CLOSE_PAR	shift, and go to state 504
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 257

    factor  ->  struct_member_exp .   (rule 146)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 406

    CLOSE_PAR	[reduce using rule 146 (factor)]
    $default	reduce using rule 146 (factor)



state 258

    factor  ->  address_exp .   (rule 144)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 505

    CLOSE_PAR	[reduce using rule 144 (factor)]
    $default	reduce using rule 144 (factor)



state 259

    factor  ->  identifier .   (rule 137)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 429)

    DOT 	shift, and go to state 239
    CLOSE_PAR	shift, and go to state 408
    IMPLY	shift, and go to state 240

    CLOSE_PAR	[reduce using rule 137 (factor)]
    $default	reduce using rule 137 (factor)



state 260

    size_of  ->  SIZEOF OPEN_PAR . alg_exp CLOSE_PAR   (rule 175)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 176)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 177)
    size_of  ->  SIZEOF OPEN_PAR . string CLOSE_PAR   (rule 178)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 506
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 507
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 508
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 509
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 510
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    STRUCT_TYPE	shift, and go to state 511
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 512
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    all_sizeof_type	go to state 513
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    all_type_define	go to state 514
    type_define	go to state 171
    sign_type_define	go to state 172
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 515



state 261

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 262

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  CEIL alg_exp .   (rule 188)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 188 (Float_Function)]
    SUB 	[reduce using rule 188 (Float_Function)]
    $default	reduce using rule 188 (Float_Function)

    alg_operator	go to state 304



state 263

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  FLOOR alg_exp .   (rule 189)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 189 (Float_Function)]
    SUB 	[reduce using rule 189 (Float_Function)]
    $default	reduce using rule 189 (Float_Function)

    alg_operator	go to state 304



state 264

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ROUND alg_exp .   (rule 187)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 187 (Float_Function)]
    SUB 	[reduce using rule 187 (Float_Function)]
    $default	reduce using rule 187 (Float_Function)

    alg_operator	go to state 304



state 265

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  SIN alg_exp .   (rule 190)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 190 (Float_Function)]
    SUB 	[reduce using rule 190 (Float_Function)]
    $default	reduce using rule 190 (Float_Function)

    alg_operator	go to state 304



state 266

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  COS alg_exp .   (rule 191)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 191 (Float_Function)]
    SUB 	[reduce using rule 191 (Float_Function)]
    $default	reduce using rule 191 (Float_Function)

    alg_operator	go to state 304



state 267

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  TAN alg_exp .   (rule 192)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 192 (Float_Function)]
    SUB 	[reduce using rule 192 (Float_Function)]
    $default	reduce using rule 192 (Float_Function)

    alg_operator	go to state 304



state 268

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ASIN alg_exp .   (rule 193)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 193 (Float_Function)]
    SUB 	[reduce using rule 193 (Float_Function)]
    $default	reduce using rule 193 (Float_Function)

    alg_operator	go to state 304



state 269

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ACOS alg_exp .   (rule 194)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 194 (Float_Function)]
    SUB 	[reduce using rule 194 (Float_Function)]
    $default	reduce using rule 194 (Float_Function)

    alg_operator	go to state 304



state 270

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ATAN alg_exp .   (rule 195)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 195 (Float_Function)]
    SUB 	[reduce using rule 195 (Float_Function)]
    $default	reduce using rule 195 (Float_Function)

    alg_operator	go to state 304



state 271

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  SINH alg_exp .   (rule 196)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 196 (Float_Function)]
    SUB 	[reduce using rule 196 (Float_Function)]
    $default	reduce using rule 196 (Float_Function)

    alg_operator	go to state 304



state 272

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  COSH alg_exp .   (rule 197)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 197 (Float_Function)]
    SUB 	[reduce using rule 197 (Float_Function)]
    $default	reduce using rule 197 (Float_Function)

    alg_operator	go to state 304



state 273

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  TANH alg_exp .   (rule 198)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 198 (Float_Function)]
    SUB 	[reduce using rule 198 (Float_Function)]
    $default	reduce using rule 198 (Float_Function)

    alg_operator	go to state 304



state 274

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  EXP alg_exp .   (rule 199)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 199 (Float_Function)]
    SUB 	[reduce using rule 199 (Float_Function)]
    $default	reduce using rule 199 (Float_Function)

    alg_operator	go to state 304



state 275

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  LOG alg_exp .   (rule 200)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 200 (Float_Function)]
    SUB 	[reduce using rule 200 (Float_Function)]
    $default	reduce using rule 200 (Float_Function)

    alg_operator	go to state 304



state 276

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  LOG10 alg_exp .   (rule 201)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 201 (Float_Function)]
    SUB 	[reduce using rule 201 (Float_Function)]
    $default	reduce using rule 201 (Float_Function)

    alg_operator	go to state 304



state 277

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  SQRT alg_exp .   (rule 202)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 202 (Float_Function)]
    SUB 	[reduce using rule 202 (Float_Function)]
    $default	reduce using rule 202 (Float_Function)

    alg_operator	go to state 304



state 278

    Float_Function  ->  ATAN2 OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 203)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 516
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 279

    Float_Function  ->  POW OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 204)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 517
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 280

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ABS alg_exp .   (rule 208)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 208 (Float_Function)]
    SUB 	[reduce using rule 208 (Float_Function)]
    $default	reduce using rule 208 (Float_Function)

    alg_operator	go to state 304



state 281

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  FABS alg_exp .   (rule 209)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 209 (Float_Function)]
    SUB 	[reduce using rule 209 (Float_Function)]
    $default	reduce using rule 209 (Float_Function)

    alg_operator	go to state 304



state 282

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  LABS alg_exp .   (rule 210)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 210 (Float_Function)]
    SUB 	[reduce using rule 210 (Float_Function)]
    $default	reduce using rule 210 (Float_Function)

    alg_operator	go to state 304



state 283

    Float_Function  ->  FMOD OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 205)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 518
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 284

    Float_Function  ->  MODF OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 206)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 519
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 285

    Float_Function  ->  LDEXP OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 207)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 520
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 286

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 521
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 522
    value_exp	go to state 523
    struct_member_exp	go to state 524
    address_exp	go to state 525
    identifier	go to state 526



state 287

    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)
    address_exp  ->  ADDRESS list .   (rule 361)

    DOT 	shift, and go to state 230

    DOT 	[reduce using rule 361 (address_exp)]
    $default	reduce using rule 361 (address_exp)



state 288

    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    IMPLY	shift, and go to state 234



state 289

    address_exp  ->  ADDRESS struct_member_exp .   (rule 362)

    $default	reduce using rule 362 (address_exp)



state 290

    address_exp  ->  ADDRESS address_exp .   (rule 363)

    $default	reduce using rule 363 (address_exp)



state 291

    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)
    address_exp  ->  ADDRESS identifier .   (rule 360)

    DOT 	shift, and go to state 239

    DOT 	[reduce using rule 360 (address_exp)]
    $default	reduce using rule 360 (address_exp)



state 292

    factor  ->  SUB factor .   (rule 133)

    $default	reduce using rule 133 (factor)



state 293

    factor  ->  BNE factor .   (rule 134)

    $default	reduce using rule 134 (factor)



state 294

    bool_statement  ->  NEGATION bool_statement .   (rule 266)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)


    $default	reduce using rule 266 (bool_statement)



state 295

    pre_next  ->  PREVIOUS OPEN_PAR . identifier CLOSE_PAR   (rule 218)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 527



state 296

    bool_statement  ->  alg_exp NE . string   (rule 257)
    bool_statement  ->  alg_exp NE . POINTERNULL   (rule 261)
    bool_statement  ->  alg_exp NE . charliteral   (rule 265)
    relation_operator  ->  NE .   (rule 420)

    POINTERNULL	shift, and go to state 528
    STR 	shift, and go to state 119
    CHARLITERAL	shift, and go to state 122

    POINTERNULL	[reduce using rule 420 (relation_operator)]
    CHARLITERAL	[reduce using rule 420 (relation_operator)]
    $default	reduce using rule 420 (relation_operator)

    charliteral	go to state 529
    string	go to state 530



state 297

    bool_statement  ->  alg_exp EQU . string   (rule 256)
    bool_statement  ->  alg_exp EQU . POINTERNULL   (rule 260)
    bool_statement  ->  alg_exp EQU . charliteral   (rule 264)
    relation_operator  ->  EQU .   (rule 423)

    POINTERNULL	shift, and go to state 531
    STR 	shift, and go to state 119
    CHARLITERAL	shift, and go to state 122

    POINTERNULL	[reduce using rule 423 (relation_operator)]
    CHARLITERAL	[reduce using rule 423 (relation_operator)]
    $default	reduce using rule 423 (relation_operator)

    charliteral	go to state 532
    string	go to state 533



state 298

    relation_operator  ->  GE .   (rule 418)

    $default	reduce using rule 418 (relation_operator)



state 299

    relation_operator  ->  LE .   (rule 419)

    $default	reduce using rule 419 (relation_operator)



state 300

    relation_operator  ->  GT .   (rule 421)

    $default	reduce using rule 421 (relation_operator)



state 301

    relation_operator  ->  LT .   (rule 422)

    $default	reduce using rule 422 (relation_operator)



state 302

    alg_operator  ->  ADD .   (rule 416)

    $default	reduce using rule 416 (alg_operator)



state 303

    alg_operator  ->  SUB .   (rule 417)

    $default	reduce using rule 417 (alg_operator)



state 304

    alg_exp  ->  alg_exp alg_operator . simple_alg_exp   (rule 126)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 534
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 305

    prime_bool_statement  ->  alg_exp relation_operator . alg_exp   (rule 270)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 535
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 306

    mul_operator  ->  INTER_OR .   (rule 414)

    $default	reduce using rule 414 (mul_operator)



state 307

    mul_operator  ->  CON .   (rule 415)

    $default	reduce using rule 415 (mul_operator)



state 308

    mul_operator  ->  ADDRESS .   (rule 413)

    $default	reduce using rule 413 (mul_operator)



state 309

    relation_operator  ->  NE .   (rule 420)

    $default	reduce using rule 420 (relation_operator)



state 310

    relation_operator  ->  EQU .   (rule 423)

    $default	reduce using rule 423 (relation_operator)



state 311

    mul_operator  ->  LST .   (rule 411)

    $default	reduce using rule 411 (mul_operator)



state 312

    mul_operator  ->  RST .   (rule 412)

    $default	reduce using rule 412 (mul_operator)



state 313

    mul_operator  ->  MUL .   (rule 408)

    $default	reduce using rule 408 (mul_operator)



state 314

    mul_operator  ->  DIV .   (rule 409)

    $default	reduce using rule 409 (mul_operator)



state 315

    mul_operator  ->  MOD .   (rule 410)

    $default	reduce using rule 410 (mul_operator)



state 316

    simple_alg_exp  ->  simple_alg_exp mul_operator . factor   (rule 131)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    factor	go to state 536
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 317

    alg_exp  ->  simple_alg_exp relation_operator . alg_exp   (rule 125)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 537
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 318

    if_statement  ->  IF bool_statement THEN . big_par optional_else_statement   (rule 82)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 538



state 319

    bool_statement  ->  bool_statement OR . bool_statement   (rule 268)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 539
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 320

    bool_statement  ->  bool_statement AND . bool_statement   (rule 267)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 540
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 321

    bool_statement  ->  string NE . alg_exp   (rule 259)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 541
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 322

    bool_statement  ->  string EQU . alg_exp   (rule 258)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 542
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 323

    statement  ->  AWAIT OPEN_PAR bool_statement . CLOSE_PAR   (rule 14)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    CLOSE_PAR	shift, and go to state 543
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 324

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (declaration)



state 325

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (declaration)



state 326

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (declaration)



state 327

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (declaration)



state 328

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 544
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 210
    ID  	shift, and go to state 118

    list	go to state 545
    value_exp	go to state 438
    ass_ident	go to state 546
    leftaddrshift	go to state 72
    struct_member_exp	go to state 439
    address_exp	go to state 440
    identifier	go to state 441



state 329

    file_statement  ->  FOPEN OPEN_PAR ass_ident . COMMA string CLOSE_PAR   (rule 317)

    COMMA	shift, and go to state 547



state 330

    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 323)

    CLOSE_PAR	shift, and go to state 548



state 331

    file_statement  ->  FGETS OPEN_PAR identifier . COMMA integer COMMA identifier CLOSE_PAR   (rule 318)

    COMMA	shift, and go to state 549



state 332

    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 320)

    COMMA	shift, and go to state 550



state 333

    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 319)

    CLOSE_PAR	shift, and go to state 551



state 334

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 552
    ID  	shift, and go to state 118

    list	go to state 553
    identifier	go to state 338



state 335

    file_statement  ->  FPUTC OPEN_PAR list . COMMA identifier CLOSE_PAR   (rule 322)

    COMMA	shift, and go to state 554



state 336

    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 321)

    COMMA	shift, and go to state 555



state 337

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 30)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 556
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 338

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 429)

    CLOSE_PAR	shift, and go to state 408



state 339

    inner_optional_define_identifier  ->  COMMA . all_type_define identifier inner_optional_define_identifier   (rule 300)
    inner_optional_define_identifier  ->  COMMA . all_type_define inner_optional_define_identifier   (rule 301)
    inner_optional_define_identifier  ->  COMMA . ID identifier inner_optional_define_identifier   (rule 302)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_optional_define_identifier   (rule 303)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_optional_define_identifier   (rule 304)
    inner_optional_define_identifier  ->  COMMA . ID identifier ARRAY inner_optional_define_identifier   (rule 305)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_optional_define_identifier   (rule 306)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_optional_define_identifier   (rule 307)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_optional_define_identifier   (rule 308)
    inner_optional_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 309)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 311)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 312)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 313)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier inner_optional_define_identifier   (rule 314)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL inner_optional_define_identifier   (rule 315)
    inner_optional_define_identifier  ->  COMMA . error   (rule 316)

    error	shift, and go to state 557
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 558
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 559
    STRUCT_TYPE	shift, and go to state 560

    all_type_define	go to state 561
    type_define	go to state 171
    sign_type_define	go to state 172



state 340

    statement  ->  EXIST identifier inner_optional_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 37)

    COLON	shift, and go to state 562



state 341

    statement  ->  FRAME OPEN_PAR identifier . optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 27)

    COMMA	shift, and go to state 563

    $default	reduce using rule 44 (optional_frame_identifier)

    optional_frame_identifier	go to state 564



state 342

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 97)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 99)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)

    ID  	shift, and go to state 428
    STRUCT_TYPE	shift, and go to state 565



state 343

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_define  ->  INTDECLARATION .   (rule 402)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 488

    MUL 	[reduce using rule 402 (type_define)]
    $default	reduce using rule 402 (type_define)



state 344

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_define  ->  CHARDECLARATION .   (rule 404)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 490

    MUL 	[reduce using rule 404 (type_define)]
    $default	reduce using rule 404 (type_define)



state 345

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_define  ->  VOIDDECLARATION .   (rule 406)

    MUL 	shift, and go to state 491

    MUL 	[reduce using rule 406 (type_define)]
    $default	reduce using rule 406 (type_define)



state 346

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_define  ->  FLOATDECLARATION .   (rule 403)

    CLOSE_PAR	shift, and go to state 492
    MUL 	shift, and go to state 493

    MUL 	[reduce using rule 403 (type_define)]
    $default	reduce using rule 403 (type_define)



state 347

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 566
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 177
    BNE 	shift, and go to state 115
    NEXT	shift, and go to state 210
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 352
    pre_next	go to state 130
    value_exp	go to state 183
    ass_ident	go to state 546
    leftaddrshift	go to state 72
    struct_member_exp	go to state 186
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 188
    integer	go to state 139



state 348

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 96)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 170)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 567
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 223
    identifier	go to state 224



state 349

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 63)

    CHOP	shift, and go to state 568



state 350

    for_sta_init  ->  declaration .   (rule 65)

    $default	reduce using rule 65 (for_sta_init)



state 351

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 141)

    CLOSE_PAR	shift, and go to state 503
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 352

    factor  ->  list .   (rule 138)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)
    ass_ident  ->  list .   (rule 237)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    CLOSE_PAR	shift, and go to state 403
    IMPLY	shift, and go to state 232

    CLOSE_PAR	[reduce using rule 138 (factor)]
    CLOSE_PAR	[reduce using rule 237 (ass_ident)]
    ASS_EQU	reduce using rule 237 (ass_ident)
    UNITASSIGN	reduce using rule 237 (ass_ident)
    $default	reduce using rule 138 (factor)



state 353

    for_sta_init  ->  ass_statement .   (rule 64)

    $default	reduce using rule 64 (for_sta_init)



state 354

    for_statement  ->  FOR alg_exp TIMES . DO big_par   (rule 72)

    DO  	shift, and go to state 569



state 355

    bool_par  ->  error CLOSE_PAR .   (rule 81)

    $default	reduce using rule 81 (bool_par)



state 356

    bool_par  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 80)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    CLOSE_PAR	shift, and go to state 570
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 357

    big_par  ->  error . CLOSE_BPAR   (rule 86)

    CLOSE_BPAR	shift, and go to state 571



state 358

    big_par  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 85)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 572
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 359

    while_statement  ->  WHILE bool_par big_par .   (rule 79)

    $default	reduce using rule 79 (while_statement)



state 360

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 15)
    statement  ->  statement . PARALLEL statement   (rule 25)

    CLOSE_BPAR	shift, and go to state 573
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 361

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_exp  ->  OPEN_PAR . string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)
    ass_exp  ->  OPEN_PAR . ass_exp CLOSE_PAR   (rule 248)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 254)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 269)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    STRUCT	shift, and go to state 244
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 574
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 253
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    ass_exp	go to state 575
    rightaddrshift	go to state 366
    list_exp	go to state 576
    bool_statement	go to state 577
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 257
    address_exp	go to state 258
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139
    string	go to state 578



state 362

    option_struct_list_value  ->  OPEN_BPAR . alg_exp inner_option_list_value CLOSE_BPAR   (rule 388)
    option_struct_list_value  ->  OPEN_BPAR . string inner_option_list_value CLOSE_BPAR   (rule 389)
    option_struct_list_value  ->  OPEN_BPAR . charliteral inner_option_list_value CLOSE_BPAR   (rule 390)
    option_struct_list_value  ->  OPEN_BPAR . list_exp inner_option_list_value CLOSE_BPAR   (rule 391)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 579
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 580
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    list_exp	go to state 581
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 582
    identifier	go to state 138
    integer	go to state 139
    string	go to state 583



state 363

    option_list_value  ->  OPEN_MPAR . alg_exp inner_option_list_value CLOSE_MPAR   (rule 384)
    option_list_value  ->  OPEN_MPAR . string inner_option_list_value CLOSE_MPAR   (rule 385)
    option_list_value  ->  OPEN_MPAR . charliteral inner_option_list_value CLOSE_MPAR   (rule 386)
    option_list_value  ->  OPEN_MPAR . list_exp inner_option_list_value CLOSE_MPAR   (rule 387)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 579
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 584
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    list_exp	go to state 585
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 586
    identifier	go to state 138
    integer	go to state 139
    string	go to state 587



state 364

    value_exp  ->  MUL . identifier   (rule 219)
    value_exp  ->  MUL . value_exp   (rule 220)
    value_exp  ->  MUL . list   (rule 221)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 223)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 224)
    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 250)

    OPEN_PAR	shift, and go to state 588
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 206
    value_exp	go to state 207
    identifier	go to state 208



state 365

    display_statement  ->  DISPLAY OPEN_PAR ass_exp . CLOSE_PAR   (rule 51)
    display_statement  ->  DISPLAY OPEN_PAR ass_exp . option_output CLOSE_PAR   (rule 52)

    COMMA	shift, and go to state 589
    CLOSE_PAR	shift, and go to state 590

    CLOSE_PAR	[reduce using rule 53 (option_output)]
    $default	reduce using rule 53 (option_output)

    option_output	go to state 591



state 366

    ass_exp  ->  rightaddrshift .   (rule 249)

    $default	reduce using rule 249 (ass_exp)



state 367

    ass_exp  ->  list_exp .   (rule 244)
    list_exp  ->  list_exp . CON list_exp   (rule 251)

    CON 	shift, and go to state 592

    $default	reduce using rule 244 (ass_exp)



state 368

    ass_exp  ->  bool_statement .   (rule 246)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    OR  	shift, and go to state 319
    AND 	shift, and go to state 320

    OR  	[reduce using rule 246 (ass_exp)]
    AND 	[reduce using rule 246 (ass_exp)]
    $default	reduce using rule 246 (ass_exp)



state 369

    list_exp  ->  option_list_value .   (rule 252)

    $default	reduce using rule 252 (list_exp)



state 370

    list_exp  ->  option_struct_list_value .   (rule 253)

    $default	reduce using rule 253 (list_exp)



state 371

    ass_exp  ->  string .   (rule 245)
    bool_statement  ->  string . EQU alg_exp   (rule 258)
    bool_statement  ->  string . NE alg_exp   (rule 259)

    NE  	shift, and go to state 321
    EQU 	shift, and go to state 322

    $default	reduce using rule 245 (ass_exp)



state 372

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 593



state 373

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 424)

    $default	reduce using rule 424 (sign_type_define)



state 374

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 425)

    $default	reduce using rule 425 (sign_type_define)



state 375

    option_function_parameter_list  ->  ID MUL . identifier inner_optional_define_identifier   (rule 281)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_optional_define_identifier   (rule 282)
    option_function_parameter_list  ->  ID MUL . inner_optional_define_identifier   (rule 288)
    option_function_parameter_list  ->  ID MUL . MUL inner_optional_define_identifier   (rule 289)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 594
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 595
    identifier	go to state 596



state 376

    option_function_parameter_list  ->  ID inner_optional_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 377

    option_function_parameter_list  ->  ID identifier . inner_optional_define_identifier   (rule 280)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_optional_define_identifier   (rule 283)

    ARRAY	shift, and go to state 597
    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 598



state 378

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_optional_define_identifier   (rule 277)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_optional_define_identifier   (rule 278)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_optional_define_identifier   (rule 285)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_optional_define_identifier   (rule 286)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 599
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 600
    identifier	go to state 601



state 379

    option_function_parameter_list  ->  STRUCT_TYPE inner_optional_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 380

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_optional_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_optional_define_identifier   (rule 279)

    ARRAY	shift, and go to state 602
    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 603



state 381

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_optional_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_optional_define_identifier   (rule 295)
    option_function_parameter_list  ->  all_type_define MUL . inner_optional_define_identifier   (rule 296)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_optional_define_identifier   (rule 297)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 604
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 605
    identifier	go to state 606



state 382

    option_function_parameter_list  ->  all_type_define inner_optional_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 383

    option_function_parameter_list  ->  all_type_define identifier . inner_optional_define_identifier   (rule 274)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_optional_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 293)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 294)

    ARRAY	shift, and go to state 607
    COMMA	shift, and go to state 339
    OPEN_MPAR	shift, and go to state 608

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 609



state 384

    option_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 107)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 610
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 385

    if_statement  ->  IF bool_statement . THEN big_par optional_else_statement   (rule 82)
    alg_exp  ->  IF bool_statement . THEN alg_exp optional_exp_else_statement   (rule 127)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    THEN	shift, and go to state 611
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 386

    struct_identifier  ->  STRUCT . ID   (rule 88)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 97)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 99)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)

    ID  	shift, and go to state 142
    STRUCT_TYPE	shift, and go to state 565



state 387

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    type_define  ->  INTDECLARATION .   (rule 402)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 612

    MUL 	[reduce using rule 402 (type_define)]
    $default	reduce using rule 402 (type_define)



state 388

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    type_define  ->  CHARDECLARATION .   (rule 404)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 613

    MUL 	[reduce using rule 404 (type_define)]
    $default	reduce using rule 404 (type_define)



state 389

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    type_define  ->  FLOATDECLARATION .   (rule 403)

    CLOSE_PAR	shift, and go to state 492
    MUL 	shift, and go to state 614

    MUL 	[reduce using rule 403 (type_define)]
    $default	reduce using rule 403 (type_define)



state 390

    sign_declaration  ->  UNSIGNED . declaration   (rule 93)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 615
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 616
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    STRUCT_TYPE	shift, and go to state 54

    declaration	go to state 202
    type_define	go to state 81



state 391

    sign_declaration  ->  SIGNED . declaration   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 617
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 618
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    STRUCT_TYPE	shift, and go to state 54

    declaration	go to state 203
    type_define	go to state 81



state 392

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 48)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 49)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 50)

    CLOSE_PAR	shift, and go to state 619
    OR  	shift, and go to state 401
    AND 	shift, and go to state 402



state 393

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 141)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 270)
    prime_bool_statement  ->  alg_exp .   (rule 273)

    CLOSE_PAR	shift, and go to state 503
    NE  	shift, and go to state 309
    EQU 	shift, and go to state 310
    GE  	shift, and go to state 298
    LE  	shift, and go to state 299
    GT  	shift, and go to state 300
    LT  	shift, and go to state 301
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    CLOSE_PAR	[reduce using rule 273 (prime_bool_statement)]
    $default	reduce using rule 273 (prime_bool_statement)

    alg_operator	go to state 304
    relation_operator	go to state 305



state 394

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    value_exp  ->  MUL . identifier   (rule 219)
    value_exp  ->  MUL . value_exp   (rule 220)
    value_exp  ->  MUL . list   (rule 221)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 223)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 224)

    OPEN_PAR	shift, and go to state 205
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 206
    value_exp	go to state 207
    identifier	go to state 620



state 395

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    identifier  ->  ID .   (rule 428)

    OPEN_MPAR	shift, and go to state 621

    $default	reduce using rule 428 (identifier)



state 396

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    value_exp  ->  MUL identifier .   (rule 219)

    CLOSE_PAR	shift, and go to state 622

    CLOSE_PAR	[reduce using rule 219 (value_exp)]
    $default	reduce using rule 219 (value_exp)



state 397

    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 50)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 623
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 178
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    imply_pre	go to state 624
    alg_exp	go to state 393
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    prime_bool_statement	go to state 185
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 398

    imply_pre  ->  NEGATION imply_pre .   (rule 47)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 48)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 49)


    $default	reduce using rule 47 (imply_pre)



state 399

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 38)

    $default	reduce using rule 38 (statement)



state 400

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)

    IMPLY	shift, and go to state 625



state 401

    imply_pre  ->  imply_pre OR . imply_pre   (rule 49)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 397
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 178
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    imply_pre	go to state 626
    alg_exp	go to state 181
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    prime_bool_statement	go to state 185
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 402

    imply_pre  ->  imply_pre AND . imply_pre   (rule 48)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 397
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 178
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    imply_pre	go to state 627
    alg_exp	go to state 181
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    prime_bool_statement	go to state 185
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 403

    list  ->  OPEN_PAR list CLOSE_PAR .   (rule 217)

    $default	reduce using rule 217 (list)



state 404

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR .   (rule 225)

    OPEN_MPAR	shift, and go to state 628

    $default	reduce using rule 225 (value_exp)



state 405

    ass_ident  ->  OPEN_PAR ass_ident CLOSE_PAR .   (rule 239)

    $default	reduce using rule 239 (ass_ident)



state 406

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (struct_member_exp)



state 407

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY list option_struct_member_exp   (rule 355)

    IMPLY	shift, and go to state 629



state 408

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 429)

    $default	reduce using rule 429 (identifier)



state 409

    optional_projection  ->  COMMA . statement optional_projection   (rule 42)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 630
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 410

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION big_par   (rule 29)

    PROJECTION	shift, and go to state 631



state 411

    statement  ->  OPEN_BPAR statement optional_projection . CLOSE_BPAR PROJECTION big_par   (rule 28)

    CLOSE_BPAR	shift, and go to state 632



state 412

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 31)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 633
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 413

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 32)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 634
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 414

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 521
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 522
    value_exp	go to state 523
    struct_member_exp	go to state 524
    address_exp	go to state 440
    identifier	go to state 526



state 415

    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)
    str_func_parameter  ->  list .   (rule 379)

    DOT 	shift, and go to state 230
    IMPLY	shift, and go to state 232

    $default	reduce using rule 379 (str_func_parameter)



state 416

    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)
    str_func_parameter  ->  value_exp .   (rule 380)

    DOT 	shift, and go to state 233
    IMPLY	shift, and go to state 234

    $default	reduce using rule 380 (str_func_parameter)



state 417

    str_func_parameter  ->  String_Function .   (rule 382)

    $default	reduce using rule 382 (str_func_parameter)



state 418

    str_func_parameter  ->  struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (str_func_parameter)



state 419

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 372)

    CLOSE_PAR	shift, and go to state 635



state 420

    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)
    str_func_parameter  ->  identifier .   (rule 378)

    DOT 	shift, and go to state 239
    IMPLY	shift, and go to state 240

    $default	reduce using rule 378 (str_func_parameter)



state 421

    str_func_parameter  ->  string .   (rule 381)

    $default	reduce using rule 381 (str_func_parameter)



state 422

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 373)

    CLOSE_PAR	shift, and go to state 636



state 423

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 374)

    COMMA	shift, and go to state 637



state 424

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 376)

    COMMA	shift, and go to state 638



state 425

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 375)

    COMMA	shift, and go to state 639



state 426

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 377)

    CLOSE_PAR	shift, and go to state 640



state 427

    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 35)

    CLOSE_PAR	shift, and go to state 641



state 428

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 97)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 324
    identifier	go to state 224



state 429

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 326
    identifier	go to state 224



state 430

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 642
    ID  	shift, and go to state 643

    identifier	go to state 644



state 431

    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 34)

    CLOSE_PAR	shift, and go to state 645



state 432

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 433

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    value_exp  ->  MUL OPEN_PAR alg_exp . CLOSE_PAR   (rule 224)

    CLOSE_PAR	shift, and go to state 646
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 434

    value_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR alg_exp   (rule 223)

    MUL 	shift, and go to state 647



state 435

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 38)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 175
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 648
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 649
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 650
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 176
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SIZEOF	shift, and go to state 88
    SYSTEM	shift, and go to state 41
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 651
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 177
    BNE 	shift, and go to state 115
    NEXT	shift, and go to state 46
    NEGATION	shift, and go to state 178
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    statement	go to state 179
    imply_pre	go to state 180
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    alg_exp	go to state 181
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 182
    pre_next	go to state 130
    value_exp	go to state 183
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 184
    prime_bool_statement	go to state 185
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 186
    address_exp	go to state 258
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 188
    integer	go to state 139



state 436

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 11)
    statement  ->  statement . PARALLEL statement   (rule 25)

    CLOSE_PAR	shift, and go to state 652
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 437

    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    ass_ident  ->  list .   (rule 237)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    OPEN_PAR	shift, and go to state 231
    CLOSE_PAR	shift, and go to state 403
    IMPLY	shift, and go to state 232

    CLOSE_PAR	[reduce using rule 237 (ass_ident)]
    $default	reduce using rule 237 (ass_ident)



state 438

    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 225)
    ass_ident  ->  value_exp .   (rule 238)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    CLOSE_PAR	shift, and go to state 404
    IMPLY	shift, and go to state 234

    CLOSE_PAR	[reduce using rule 238 (ass_ident)]
    $default	reduce using rule 238 (ass_ident)



state 439

    ass_ident  ->  struct_member_exp .   (rule 236)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 406

    CLOSE_PAR	[reduce using rule 236 (ass_ident)]
    $default	reduce using rule 236 (ass_ident)



state 440

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)

    CLOSE_PAR	shift, and go to state 407



state 441

    ass_ident  ->  identifier .   (rule 235)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 429)

    DOT 	shift, and go to state 239
    CLOSE_PAR	shift, and go to state 408
    IMPLY	shift, and go to state 240

    CLOSE_PAR	[reduce using rule 235 (ass_ident)]
    $default	reduce using rule 235 (ass_ident)



state 442

    statement  ->  LENGTH OPEN_PAR alg_exp . CLOSE_PAR   (rule 19)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    CLOSE_PAR	shift, and go to state 653
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 443

    request_statement  ->  REQUEST OPEN_PAR list . CLOSE_PAR   (rule 57)
    request_statement  ->  REQUEST OPEN_PAR list . option_input CLOSE_PAR   (rule 58)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    COMMA	shift, and go to state 654
    CLOSE_PAR	shift, and go to state 655
    IMPLY	shift, and go to state 232

    CLOSE_PAR	[reduce using rule 60 (option_input)]
    $default	reduce using rule 60 (option_input)

    option_input	go to state 656



state 444

    request_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 59)

    CLOSE_PAR	shift, and go to state 657



state 445

    request_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 55)
    request_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 56)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)

    DOT 	shift, and go to state 239
    COMMA	shift, and go to state 654
    CLOSE_PAR	shift, and go to state 658
    IMPLY	shift, and go to state 240

    CLOSE_PAR	[reduce using rule 60 (option_input)]
    $default	reduce using rule 60 (option_input)

    option_input	go to state 659



state 446

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 24)
    statement  ->  statement . PARALLEL statement   (rule 25)

    CLOSE_PAR	shift, and go to state 660
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 447

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 12)
    statement  ->  statement . PARALLEL statement   (rule 25)

    CLOSE_PAR	shift, and go to state 661
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 448

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 13)
    statement  ->  statement . PARALLEL statement   (rule 25)

    CLOSE_PAR	shift, and go to state 662
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 449

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  PREFIX OPEN_PAR statement . CLOSE_PAR   (rule 4)
    statement  ->  statement . PARALLEL statement   (rule 25)

    CLOSE_PAR	shift, and go to state 663
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 450

    option_function_identifier  ->  ADDRESS . error   (rule 233)
    address_exp  ->  ADDRESS . identifier   (rule 360)
    address_exp  ->  ADDRESS . list   (rule 361)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 362)
    address_exp  ->  ADDRESS . address_exp   (rule 363)

    error	shift, and go to state 664
    OPEN_PAR	shift, and go to state 286
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 287
    value_exp	go to state 288
    struct_member_exp	go to state 289
    address_exp	go to state 290
    identifier	go to state 291



state 451

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 231)
    identifier  ->  ID .   (rule 428)

    OPEN_PAR	shift, and go to state 665
    OPEN_MPAR	shift, and go to state 220

    $default	reduce using rule 428 (identifier)



state 452

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 226)

    CLOSE_PAR	shift, and go to state 666



state 453

    option_function_identifier  ->  ass_exp . inner_option_function_identifier   (rule 230)

    COMMA	shift, and go to state 667

    inner_option_function_identifier	go to state 668



state 454

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 211)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 670
    alg_operator	go to state 304



state 455

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 119)

    $default	reduce using rule 119 (option_identifier_array_declaration)



state 456

    option_identifier_array_declaration  ->  ID ARRAY . ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 115)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_EQU string inner_option_identifier_array_declaration   (rule 116)

    ASS_EQU	shift, and go to state 671



state 457

    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 112)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 117)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 118)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 672
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 458

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 120)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 121)

    error	shift, and go to state 673
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 674
    identifier	go to state 224



state 459

    option_identifier_array_declaration  ->  identifier ASS_EQU . ass_exp inner_option_identifier_array_declaration   (rule 113)
    option_identifier_array_declaration  ->  identifier ASS_EQU . string inner_option_identifier_array_declaration   (rule 114)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    ass_exp	go to state 675
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 676



state 460

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 111)

    $default	reduce using rule 111 (option_identifier_array_declaration)



state 461

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement CHOP statement .   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)

    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228

    $default	reduce using rule 3 (statement)



state 462

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement OR statement .   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)

    AND 	shift, and go to state 228

    $default	reduce using rule 2 (statement)



state 463

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  statement PARALLEL statement .   (rule 25)

    AND 	shift, and go to state 228

    $default	reduce using rule 25 (statement)



state 464

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement AND statement .   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)


    $default	reduce using rule 1 (statement)



state 465

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 87)

    CLOSE_BPAR	shift, and go to state 677



state 466

    option_struct_declaration  ->  sign_declaration .   (rule 90)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 91)

    AND 	shift, and go to state 678

    $default	reduce using rule 90 (option_struct_declaration)



state 467

    struct_member_exp  ->  list DOT list . option_struct_member_exp   (rule 347)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 681



state 468

    struct_member_exp  ->  list DOT identifier . option_struct_member_exp   (rule 344)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 682



state 469

    function  ->  list OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 227)

    CLOSE_PAR	shift, and go to state 683



state 470

    struct_member_exp  ->  list IMPLY list . option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 684



state 471

    struct_member_exp  ->  list IMPLY identifier . option_struct_member_exp   (rule 350)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 685



state 472

    struct_member_exp  ->  value_exp DOT list . option_struct_member_exp   (rule 348)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 686



state 473

    struct_member_exp  ->  value_exp DOT identifier . option_struct_member_exp   (rule 345)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 687



state 474

    struct_member_exp  ->  value_exp IMPLY list . option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 688



state 475

    struct_member_exp  ->  value_exp IMPLY identifier . option_struct_member_exp   (rule 352)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 689



state 476

    ass_statement  ->  ass_ident assign_operator ass_exp .   (rule 234)

    $default	reduce using rule 234 (ass_statement)



state 477

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    struct_member_exp  ->  identifier DOT list . option_struct_member_exp   (rule 346)

    DOT 	shift, and go to state 679
    OPEN_PAR	shift, and go to state 231
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 690



state 478

    struct_member_exp  ->  identifier DOT function .   (rule 356)

    $default	reduce using rule 356 (struct_member_exp)



state 479

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 343)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 691



state 480

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    struct_member_exp  ->  identifier IMPLY list . option_struct_member_exp   (rule 353)

    DOT 	shift, and go to state 679
    OPEN_PAR	shift, and go to state 231
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 692



state 481

    struct_member_exp  ->  identifier IMPLY function .   (rule 357)

    $default	reduce using rule 357 (struct_member_exp)



state 482

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 349)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 693



state 483

    alg_exp  ->  IF bool_statement THEN . alg_exp optional_exp_else_statement   (rule 127)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 694
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 484

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    bool_statement  ->  POINTERNULL NE alg_exp .   (rule 263)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 263 (bool_statement)

    alg_operator	go to state 304



state 485

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    bool_statement  ->  POINTERNULL EQU alg_exp .   (rule 262)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 262 (bool_statement)

    alg_operator	go to state 304



state 486

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 169)

    MUL 	shift, and go to state 695



state 487

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 148)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 697
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 488

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 161)

    CLOSE_PAR	shift, and go to state 698
    MUL 	shift, and go to state 699



state 489

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 150)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 700
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 490

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 164)

    CLOSE_PAR	shift, and go to state 701
    MUL 	shift, and go to state 702



state 491

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 166)

    CLOSE_PAR	shift, and go to state 703
    MUL 	shift, and go to state 704



state 492

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 149)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 705
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 493

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 163)

    CLOSE_PAR	shift, and go to state 706
    MUL 	shift, and go to state 707



state 494

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 708



state 495

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 709



state 496

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    CLOSE_PAR	shift, and go to state 492
    MUL 	shift, and go to state 710



state 497

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    INTDECLARATION	shift, and go to state 711
    CHARDECLARATION	shift, and go to state 712



state 498

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 162)

    CLOSE_PAR	shift, and go to state 713
    MUL 	shift, and go to state 714



state 499

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 716



state 500

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 151)

    CLOSE_PAR	shift, and go to state 717



state 501

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 152)

    CLOSE_PAR	shift, and go to state 718



state 502

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 170)

    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 720



state 503

    factor  ->  OPEN_PAR alg_exp CLOSE_PAR .   (rule 141)

    $default	reduce using rule 141 (factor)



state 504

    bool_statement  ->  OPEN_PAR bool_statement CLOSE_PAR .   (rule 269)

    $default	reduce using rule 269 (bool_statement)



state 505

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY list option_struct_member_exp   (rule 355)
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 364)

    IMPLY	shift, and go to state 629

    IMPLY	[reduce using rule 364 (address_exp)]
    $default	reduce using rule 364 (address_exp)



state 506

    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 185)

    STRUCT_TYPE	shift, and go to state 721



state 507

    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 180)
    type_define  ->  INTDECLARATION .   (rule 402)

    MUL 	shift, and go to state 722

    $default	reduce using rule 402 (type_define)



state 508

    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 182)
    type_define  ->  CHARDECLARATION .   (rule 404)

    MUL 	shift, and go to state 723

    $default	reduce using rule 404 (type_define)



state 509

    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 181)
    type_define  ->  FLOATDECLARATION .   (rule 403)

    MUL 	shift, and go to state 724

    $default	reduce using rule 403 (type_define)



state 510

    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 183)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 184)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 424)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 425)

    INTDECLARATION	shift, and go to state 725
    CHARDECLARATION	shift, and go to state 726



state 511

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 177)
    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 186)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 728



state 512

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    size_of  ->  SIZEOF OPEN_PAR alg_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 729
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 513

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 730



state 514

    all_sizeof_type  ->  all_type_define .   (rule 179)

    $default	reduce using rule 179 (all_sizeof_type)



state 515

    size_of  ->  SIZEOF OPEN_PAR string . CLOSE_PAR   (rule 178)

    CLOSE_PAR	shift, and go to state 731



state 516

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 203)

    COMMA	shift, and go to state 732
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 517

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  POW OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 204)

    COMMA	shift, and go to state 733
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 518

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  FMOD OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 205)

    COMMA	shift, and go to state 734
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 519

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  MODF OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 206)

    COMMA	shift, and go to state 735
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 520

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  LDEXP OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 207)

    COMMA	shift, and go to state 736
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 521

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    INTDECLARATION	shift, and go to state 737
    CHARDECLARATION	shift, and go to state 738
    FLOATDECLARATION	shift, and go to state 739
    OPEN_PAR	shift, and go to state 521
    UNSIGNED	shift, and go to state 740
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118

    list	go to state 522
    value_exp	go to state 523
    struct_member_exp	go to state 524
    address_exp	go to state 525
    identifier	go to state 526



state 522

    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    CLOSE_PAR	shift, and go to state 403
    IMPLY	shift, and go to state 232



state 523

    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 225)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 345)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 348)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 352)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 358)

    DOT 	shift, and go to state 233
    CLOSE_PAR	shift, and go to state 404
    IMPLY	shift, and go to state 234



state 524

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 406



state 525

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 505



state 526

    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 343)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 346)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 349)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 353)
    struct_member_exp  ->  identifier . DOT function   (rule 356)
    struct_member_exp  ->  identifier . IMPLY function   (rule 357)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 429)

    DOT 	shift, and go to state 239
    CLOSE_PAR	shift, and go to state 408
    IMPLY	shift, and go to state 240



state 527

    pre_next  ->  PREVIOUS OPEN_PAR identifier . CLOSE_PAR   (rule 218)

    CLOSE_PAR	shift, and go to state 741



state 528

    bool_statement  ->  alg_exp NE POINTERNULL .   (rule 261)

    $default	reduce using rule 261 (bool_statement)



state 529

    bool_statement  ->  alg_exp NE charliteral .   (rule 265)

    $default	reduce using rule 265 (bool_statement)



state 530

    bool_statement  ->  alg_exp NE string .   (rule 257)

    $default	reduce using rule 257 (bool_statement)



state 531

    bool_statement  ->  alg_exp EQU POINTERNULL .   (rule 260)

    $default	reduce using rule 260 (bool_statement)



state 532

    bool_statement  ->  alg_exp EQU charliteral .   (rule 264)

    $default	reduce using rule 264 (bool_statement)



state 533

    bool_statement  ->  alg_exp EQU string .   (rule 256)

    $default	reduce using rule 256 (bool_statement)



state 534

    alg_exp  ->  alg_exp alg_operator simple_alg_exp .   (rule 126)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 131)

    INTER_OR	shift, and go to state 306
    CON 	shift, and go to state 307
    ADDRESS	shift, and go to state 308
    LST 	shift, and go to state 311
    RST 	shift, and go to state 312
    MUL 	shift, and go to state 313
    DIV 	shift, and go to state 314
    MOD 	shift, and go to state 315

    INTER_OR	[reduce using rule 126 (alg_exp)]
    CON 	[reduce using rule 126 (alg_exp)]
    ADDRESS	[reduce using rule 126 (alg_exp)]
    LST 	[reduce using rule 126 (alg_exp)]
    RST 	[reduce using rule 126 (alg_exp)]
    MUL 	[reduce using rule 126 (alg_exp)]
    DIV 	[reduce using rule 126 (alg_exp)]
    MOD 	[reduce using rule 126 (alg_exp)]
    $default	reduce using rule 126 (alg_exp)

    mul_operator	go to state 316



state 535

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    prime_bool_statement  ->  alg_exp relation_operator alg_exp .   (rule 270)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 270 (prime_bool_statement)

    alg_operator	go to state 304



state 536

    simple_alg_exp  ->  simple_alg_exp mul_operator factor .   (rule 131)

    $default	reduce using rule 131 (simple_alg_exp)



state 537

    alg_exp  ->  simple_alg_exp relation_operator alg_exp .   (rule 125)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 125 (alg_exp)]
    SUB 	[reduce using rule 125 (alg_exp)]
    $default	reduce using rule 125 (alg_exp)

    alg_operator	go to state 304



state 538

    if_statement  ->  IF bool_statement THEN big_par . optional_else_statement   (rule 82)

    ELSE	shift, and go to state 742

    $default	reduce using rule 84 (optional_else_statement)

    optional_else_statement	go to state 743



state 539

    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)
    bool_statement  ->  bool_statement OR bool_statement .   (rule 268)

    AND 	shift, and go to state 320

    $default	reduce using rule 268 (bool_statement)



state 540

    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement AND bool_statement .   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)


    $default	reduce using rule 267 (bool_statement)



state 541

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    bool_statement  ->  string NE alg_exp .   (rule 259)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 259 (bool_statement)

    alg_operator	go to state 304



state 542

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    bool_statement  ->  string EQU alg_exp .   (rule 258)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 258 (bool_statement)

    alg_operator	go to state 304



state 543

    statement  ->  AWAIT OPEN_PAR bool_statement CLOSE_PAR .   (rule 14)

    $default	reduce using rule 14 (statement)



state 544

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    INTDECLARATION	shift, and go to state 744
    CHARDECLARATION	shift, and go to state 745
    FLOATDECLARATION	shift, and go to state 746
    OPEN_PAR	shift, and go to state 544
    UNSIGNED	shift, and go to state 747
    ADDRESS	shift, and go to state 113
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 210
    ID  	shift, and go to state 118

    list	go to state 545
    value_exp	go to state 438
    ass_ident	go to state 546
    leftaddrshift	go to state 72
    struct_member_exp	go to state 439
    address_exp	go to state 525
    identifier	go to state 441



state 545

    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)
    ass_ident  ->  list .   (rule 237)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 344)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 347)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 350)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 354)

    DOT 	shift, and go to state 230
    CLOSE_PAR	shift, and go to state 403
    IMPLY	shift, and go to state 232

    CLOSE_PAR	[reduce using rule 237 (ass_ident)]
    $default	reduce using rule 237 (ass_ident)



state 546

    ass_ident  ->  OPEN_PAR ass_ident . CLOSE_PAR   (rule 239)

    CLOSE_PAR	shift, and go to state 405



state 547

    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA . string CLOSE_PAR   (rule 317)

    STR 	shift, and go to state 119

    string	go to state 748



state 548

    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 323)

    $default	reduce using rule 323 (file_statement)



state 549

    file_statement  ->  FGETS OPEN_PAR identifier COMMA . integer COMMA identifier CLOSE_PAR   (rule 318)

    INTEGER	shift, and go to state 120

    integer	go to state 749



state 550

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 320)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 750



state 551

    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (file_statement)



state 552

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    INTDECLARATION	shift, and go to state 737
    CHARDECLARATION	shift, and go to state 738
    FLOATDECLARATION	shift, and go to state 739
    OPEN_PAR	shift, and go to state 552
    UNSIGNED	shift, and go to state 740
    ID  	shift, and go to state 118

    list	go to state 553
    identifier	go to state 338



state 553

    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 217)

    CLOSE_PAR	shift, and go to state 403



state 554

    file_statement  ->  FPUTC OPEN_PAR list COMMA . identifier CLOSE_PAR   (rule 322)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 751



state 555

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 321)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 752



state 556

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 30)

    CLOSE_PAR	shift, and go to state 753



state 557

    inner_optional_define_identifier  ->  COMMA error .   (rule 316)

    $default	reduce using rule 316 (inner_optional_define_identifier)



state 558

    inner_optional_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 309)

    MUL 	shift, and go to state 754



state 559

    inner_optional_define_identifier  ->  COMMA ID . identifier inner_optional_define_identifier   (rule 302)
    inner_optional_define_identifier  ->  COMMA ID . identifier ARRAY inner_optional_define_identifier   (rule 305)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 755



state 560

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_optional_define_identifier   (rule 303)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_optional_define_identifier   (rule 304)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_optional_define_identifier   (rule 306)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 756
    ID  	shift, and go to state 154

    identifier	go to state 757



state 561

    inner_optional_define_identifier  ->  COMMA all_type_define . identifier inner_optional_define_identifier   (rule 300)
    inner_optional_define_identifier  ->  COMMA all_type_define . inner_optional_define_identifier   (rule 301)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_optional_define_identifier   (rule 307)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_optional_define_identifier   (rule 308)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 311)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 312)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 313)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier inner_optional_define_identifier   (rule 314)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL inner_optional_define_identifier   (rule 315)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 758
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 759
    identifier	go to state 760



state 562

    statement  ->  EXIST identifier inner_optional_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 37)

    OPEN_BPAR	shift, and go to state 761



state 563

    optional_frame_identifier  ->  COMMA . identifier optional_frame_identifier   (rule 43)
    optional_frame_identifier  ->  COMMA . error   (rule 45)

    error	shift, and go to state 762
    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 763



state 564

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 764



state 565

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 99)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 169)

    OPEN_PAR	shift, and go to state 153
    MUL 	shift, and go to state 765
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 325
    identifier	go to state 224



state 566

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 239)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 766
    CHARDECLARATION	shift, and go to state 767
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 768
    OPEN_PAR	shift, and go to state 566
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 769
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEXT	shift, and go to state 210
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 352
    pre_next	go to state 130
    value_exp	go to state 183
    ass_ident	go to state 546
    leftaddrshift	go to state 72
    struct_member_exp	go to state 186
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 188
    integer	go to state 139



state 567

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 119)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 170)

    OPEN_PAR	shift, and go to state 153
    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 770
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 455
    identifier	go to state 224



state 568

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP . for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 63)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    $default	reduce using rule 68 (for_sta_condition)

    for_sta_condition	go to state 771
    pbool_expression	go to state 772
    alg_exp	go to state 773
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 569

    for_statement  ->  FOR alg_exp TIMES DO . big_par   (rule 72)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 774



state 570

    bool_par  ->  OPEN_PAR bool_statement CLOSE_PAR .   (rule 80)

    $default	reduce using rule 80 (bool_par)



state 571

    big_par  ->  error CLOSE_BPAR .   (rule 86)

    $default	reduce using rule 86 (big_par)



state 572

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    big_par  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 85)

    CLOSE_BPAR	shift, and go to state 775
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 573

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 15)

    UNTIL	shift, and go to state 776



state 574

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    ass_exp  ->  OPEN_PAR . string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)
    ass_exp  ->  OPEN_PAR . ass_exp CLOSE_PAR   (rule 248)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 254)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 269)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    STRUCT	shift, and go to state 244
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 574
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 253
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    ass_exp	go to state 575
    rightaddrshift	go to state 366
    list_exp	go to state 576
    bool_statement	go to state 577
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 257
    address_exp	go to state 258
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139
    string	go to state 578



state 575

    ass_exp  ->  OPEN_PAR ass_exp . CLOSE_PAR   (rule 248)

    CLOSE_PAR	shift, and go to state 777



state 576

    ass_exp  ->  list_exp .   (rule 244)
    list_exp  ->  list_exp . CON list_exp   (rule 251)
    list_exp  ->  OPEN_PAR list_exp . CLOSE_PAR   (rule 254)

    CLOSE_PAR	shift, and go to state 778
    CON 	shift, and go to state 592

    CLOSE_PAR	[reduce using rule 244 (ass_exp)]
    $default	reduce using rule 244 (ass_exp)



state 577

    ass_exp  ->  bool_statement .   (rule 246)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)
    bool_statement  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 269)

    CLOSE_PAR	shift, and go to state 504
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320

    CLOSE_PAR	[reduce using rule 246 (ass_exp)]
    $default	reduce using rule 246 (ass_exp)



state 578

    ass_exp  ->  string .   (rule 245)
    ass_exp  ->  OPEN_PAR string . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)
    bool_statement  ->  string . EQU alg_exp   (rule 258)
    bool_statement  ->  string . NE alg_exp   (rule 259)

    CLOSE_PAR	shift, and go to state 779
    NE  	shift, and go to state 321
    EQU 	shift, and go to state 322

    CLOSE_PAR	[reduce using rule 245 (ass_exp)]
    $default	reduce using rule 245 (ass_exp)



state 579

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 254)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 780
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    list_exp	go to state 781
    struct_member_exp	go to state 257
    address_exp	go to state 258
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 580

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    option_struct_list_value  ->  OPEN_BPAR alg_exp . inner_option_list_value CLOSE_BPAR   (rule 388)

    COMMA	shift, and go to state 782
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    inner_option_list_value	go to state 783
    alg_operator	go to state 304



state 581

    list_exp  ->  list_exp . CON list_exp   (rule 251)
    option_struct_list_value  ->  OPEN_BPAR list_exp . inner_option_list_value CLOSE_BPAR   (rule 391)

    COMMA	shift, and go to state 782
    CON 	shift, and go to state 592

    inner_option_list_value	go to state 784



state 582

    factor  ->  charliteral .   (rule 143)
    option_struct_list_value  ->  OPEN_BPAR charliteral . inner_option_list_value CLOSE_BPAR   (rule 390)

    COMMA	shift, and go to state 782

    COMMA	[reduce using rule 143 (factor)]
    $default	reduce using rule 143 (factor)

    inner_option_list_value	go to state 785



state 583

    option_struct_list_value  ->  OPEN_BPAR string . inner_option_list_value CLOSE_BPAR   (rule 389)

    COMMA	shift, and go to state 782

    inner_option_list_value	go to state 786



state 584

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    option_list_value  ->  OPEN_MPAR alg_exp . inner_option_list_value CLOSE_MPAR   (rule 384)

    COMMA	shift, and go to state 782
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    inner_option_list_value	go to state 787
    alg_operator	go to state 304



state 585

    list_exp  ->  list_exp . CON list_exp   (rule 251)
    option_list_value  ->  OPEN_MPAR list_exp . inner_option_list_value CLOSE_MPAR   (rule 387)

    COMMA	shift, and go to state 782
    CON 	shift, and go to state 592

    inner_option_list_value	go to state 788



state 586

    factor  ->  charliteral .   (rule 143)
    option_list_value  ->  OPEN_MPAR charliteral . inner_option_list_value CLOSE_MPAR   (rule 386)

    COMMA	shift, and go to state 782

    COMMA	[reduce using rule 143 (factor)]
    $default	reduce using rule 143 (factor)

    inner_option_list_value	go to state 789



state 587

    option_list_value  ->  OPEN_MPAR string . inner_option_list_value CLOSE_MPAR   (rule 385)

    COMMA	shift, and go to state 782

    inner_option_list_value	go to state 790



state 588

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR alg_exp   (rule 223)
    value_exp  ->  MUL OPEN_PAR . alg_exp CLOSE_PAR   (rule 224)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 250)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 791
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 166
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 433
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    leftaddrshift	go to state 792
    struct_member_exp	go to state 134
    address_exp	go to state 135
    all_type_define	go to state 434
    type_define	go to state 171
    sign_type_define	go to state 172
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 589

    option_output  ->  COMMA . ass_exp option_output   (rule 54)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    ass_exp	go to state 793
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 590

    display_statement  ->  DISPLAY OPEN_PAR ass_exp CLOSE_PAR .   (rule 51)

    $default	reduce using rule 51 (display_statement)



state 591

    display_statement  ->  DISPLAY OPEN_PAR ass_exp option_output . CLOSE_PAR   (rule 52)

    CLOSE_PAR	shift, and go to state 794



state 592

    list_exp  ->  list_exp CON . list_exp   (rule 251)

    OPEN_PAR	shift, and go to state 795
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363

    list_exp	go to state 796
    option_list_value	go to state 369
    option_struct_list_value	go to state 370



state 593

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 797



state 594

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_optional_define_identifier   (rule 282)
    option_function_parameter_list  ->  ID MUL MUL . inner_optional_define_identifier   (rule 289)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 798
    identifier	go to state 799



state 595

    option_function_parameter_list  ->  ID MUL inner_optional_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)



state 596

    option_function_parameter_list  ->  ID MUL identifier . inner_optional_define_identifier   (rule 281)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 800



state 597

    option_function_parameter_list  ->  ID identifier ARRAY . inner_optional_define_identifier   (rule 283)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 801



state 598

    option_function_parameter_list  ->  ID identifier inner_optional_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 599

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_optional_define_identifier   (rule 278)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_optional_define_identifier   (rule 286)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 802
    identifier	go to state 803



state 600

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_optional_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 601

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_optional_define_identifier   (rule 277)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 804



state 602

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_optional_define_identifier   (rule 279)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 805



state 603

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_optional_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 604

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_optional_define_identifier   (rule 297)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 806



state 605

    option_function_parameter_list  ->  all_type_define MUL inner_optional_define_identifier .   (rule 296)

    $default	reduce using rule 296 (option_function_parameter_list)



state 606

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_optional_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_optional_define_identifier   (rule 295)

    ARRAY	shift, and go to state 807
    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 808



state 607

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_optional_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 294)

    COMMA	shift, and go to state 339
    OPEN_MPAR	shift, and go to state 809

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 810



state 608

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 293)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 811
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 609

    option_function_parameter_list  ->  all_type_define identifier inner_optional_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 610

    option_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 107)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 812
    alg_operator	go to state 304



state 611

    if_statement  ->  IF bool_statement THEN . big_par optional_else_statement   (rule 82)
    alg_exp  ->  IF bool_statement THEN . alg_exp optional_exp_else_statement   (rule 127)

    error	shift, and go to state 357
    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    OPEN_BPAR	shift, and go to state 358
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    big_par	go to state 538
    alg_exp	go to state 694
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 612

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 813
    MUL 	shift, and go to state 699



state 613

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 814
    MUL 	shift, and go to state 702



state 614

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    CLOSE_PAR	shift, and go to state 815
    MUL 	shift, and go to state 707



state 615

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    type_define  ->  INTDECLARATION .   (rule 402)

    CLOSE_PAR	shift, and go to state 713
    MUL 	shift, and go to state 816

    MUL 	[reduce using rule 402 (type_define)]
    $default	reduce using rule 402 (type_define)



state 616

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    type_define  ->  CHARDECLARATION .   (rule 404)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 817

    MUL 	[reduce using rule 404 (type_define)]
    $default	reduce using rule 404 (type_define)



state 617

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_define  ->  INTDECLARATION .   (rule 402)

    CLOSE_PAR	shift, and go to state 717

    $default	reduce using rule 402 (type_define)



state 618

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_define  ->  CHARDECLARATION .   (rule 404)

    CLOSE_PAR	shift, and go to state 718

    $default	reduce using rule 404 (type_define)



state 619

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 26)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 50)

    IMPLY	shift, and go to state 625

    $default	reduce using rule 50 (imply_pre)



state 620

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)
    value_exp  ->  MUL identifier .   (rule 219)

    CLOSE_PAR	shift, and go to state 818

    CLOSE_PAR	[reduce using rule 219 (value_exp)]
    $default	reduce using rule 219 (value_exp)



state 621

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    list  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 211)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 819
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 622

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)

    OPEN_PAR	shift, and go to state 820



state 623

    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 50)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 623
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 178
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    imply_pre	go to state 624
    alg_exp	go to state 393
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    prime_bool_statement	go to state 185
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 624

    imply_pre  ->  imply_pre . AND imply_pre   (rule 48)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 49)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 50)

    CLOSE_PAR	shift, and go to state 821
    OR  	shift, and go to state 401
    AND 	shift, and go to state 402



state 625

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 26)

    OPEN_MPAR	shift, and go to state 822



state 626

    imply_pre  ->  imply_pre . AND imply_pre   (rule 48)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 49)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 49)

    AND 	shift, and go to state 402

    $default	reduce using rule 49 (imply_pre)



state 627

    imply_pre  ->  imply_pre . AND imply_pre   (rule 48)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 48)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 49)


    $default	reduce using rule 48 (imply_pre)



state 628

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 222)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 823
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 629

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . list option_struct_member_exp   (rule 355)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 824
    identifier	go to state 825



state 630

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    optional_projection  ->  COMMA statement . optional_projection   (rule 42)

    COMMA	shift, and go to state 409
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228

    $default	reduce using rule 41 (optional_projection)

    optional_projection	go to state 826



state 631

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . big_par   (rule 29)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 827



state 632

    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR . PROJECTION big_par   (rule 28)

    PROJECTION	shift, and go to state 828



state 633

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 31)

    CLOSE_PAR	shift, and go to state 829



state 634

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 32)

    CLOSE_PAR	shift, and go to state 830



state 635

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 372)

    $default	reduce using rule 372 (String_Function_head)



state 636

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 373)

    $default	reduce using rule 373 (String_Function_tail)



state 637

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 374)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 831
    identifier	go to state 420
    string	go to state 421



state 638

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 376)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 832
    identifier	go to state 420
    string	go to state 421



state 639

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 414
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    MUL 	shift, and go to state 45
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119

    list	go to state 415
    value_exp	go to state 416
    String_Function	go to state 417
    struct_member_exp	go to state 418
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    str_func_parameter	go to state 833
    identifier	go to state 420
    string	go to state 421



state 640

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 377)

    $default	reduce using rule 377 (String_Function_len)



state 641

    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 35)

    $default	reduce using rule 35 (statement)



state 642

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 834



state 643

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    identifier  ->  ID .   (rule 428)

    OPEN_MPAR	shift, and go to state 835

    $default	reduce using rule 428 (identifier)



state 644

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 103)

    CLOSE_PAR	shift, and go to state 622



state 645

    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 34)

    $default	reduce using rule 34 (statement)



state 646

    value_exp  ->  MUL OPEN_PAR alg_exp CLOSE_PAR .   (rule 224)

    $default	reduce using rule 224 (value_exp)



state 647

    value_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR alg_exp   (rule 223)

    CLOSE_PAR	shift, and go to state 836



state 648

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    type_define  ->  INTDECLARATION .   (rule 402)

    MUL 	shift, and go to state 837

    MUL 	[reduce using rule 402 (type_define)]
    $default	reduce using rule 402 (type_define)



state 649

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    type_define  ->  CHARDECLARATION .   (rule 404)

    MUL 	shift, and go to state 838

    MUL 	[reduce using rule 404 (type_define)]
    $default	reduce using rule 404 (type_define)



state 650

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    type_define  ->  FLOATDECLARATION .   (rule 403)

    MUL 	shift, and go to state 839

    MUL 	[reduce using rule 403 (type_define)]
    $default	reduce using rule 403 (type_define)



state 651

    sign_declaration  ->  UNSIGNED . declaration   (rule 93)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 840
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 841
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    STRUCT_TYPE	shift, and go to state 54

    declaration	go to state 202
    type_define	go to state 81



state 652

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 11)

    $default	reduce using rule 11 (statement)



state 653

    statement  ->  LENGTH OPEN_PAR alg_exp CLOSE_PAR .   (rule 19)

    $default	reduce using rule 19 (statement)



state 654

    option_input  ->  COMMA . identifier option_input   (rule 61)
    option_input  ->  COMMA . list option_input   (rule 62)

    OPEN_PAR	shift, and go to state 334
    ID  	shift, and go to state 118

    list	go to state 842
    identifier	go to state 843



state 655

    request_statement  ->  REQUEST OPEN_PAR list CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (request_statement)



state 656

    request_statement  ->  REQUEST OPEN_PAR list option_input . CLOSE_PAR   (rule 58)

    CLOSE_PAR	shift, and go to state 844



state 657

    request_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 59)

    $default	reduce using rule 59 (request_statement)



state 658

    request_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 55)

    $default	reduce using rule 55 (request_statement)



state 659

    request_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 845



state 660

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 24)

    $default	reduce using rule 24 (statement)



state 661

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 12)

    $default	reduce using rule 12 (statement)



state 662

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 13)

    $default	reduce using rule 13 (statement)



state 663

    statement  ->  PREFIX OPEN_PAR statement CLOSE_PAR .   (rule 4)

    $default	reduce using rule 4 (statement)



state 664

    option_function_identifier  ->  ADDRESS error .   (rule 233)

    $default	reduce using rule 233 (option_function_identifier)



state 665

    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 231)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 450
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 451
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    $default	reduce using rule 232 (option_function_identifier)

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    option_function_identifier	go to state 846
    ass_exp	go to state 453
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 666

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 226)

    $default	reduce using rule 226 (function)



state 667

    inner_option_function_identifier  ->  COMMA . ass_exp inner_option_function_identifier   (rule 397)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 398)
    inner_option_function_identifier  ->  COMMA . error   (rule 399)

    error	shift, and go to state 847
    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 848
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    ass_exp	go to state 849
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 668

    option_function_identifier  ->  ass_exp inner_option_function_identifier .   (rule 230)

    $default	reduce using rule 230 (option_function_identifier)



state 669

    option_alg_exp  ->  COMMA . alg_exp option_alg_exp   (rule 122)
    option_alg_exp  ->  COMMA . error   (rule 123)

    error	shift, and go to state 850
    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 851
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 670

    list  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 211)

    CLOSE_MPAR	shift, and go to state 852



state 671

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU . list_exp inner_option_identifier_array_declaration   (rule 115)
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU . string inner_option_identifier_array_declaration   (rule 116)

    OPEN_PAR	shift, and go to state 795
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    STR 	shift, and go to state 119

    list_exp	go to state 853
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    string	go to state 854



state 672

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 112)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 117)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 118)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 855
    alg_operator	go to state 304



state 673

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 121)

    $default	reduce using rule 121 (inner_option_identifier_array_declaration)



state 674

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 120)

    $default	reduce using rule 120 (inner_option_identifier_array_declaration)



state 675

    option_identifier_array_declaration  ->  identifier ASS_EQU ass_exp . inner_option_identifier_array_declaration   (rule 113)

    COMMA	shift, and go to state 458

    inner_option_identifier_array_declaration	go to state 856



state 676

    option_identifier_array_declaration  ->  identifier ASS_EQU string . inner_option_identifier_array_declaration   (rule 114)
    ass_exp  ->  string .   (rule 245)
    bool_statement  ->  string . EQU alg_exp   (rule 258)
    bool_statement  ->  string . NE alg_exp   (rule 259)

    COMMA	shift, and go to state 458
    NE  	shift, and go to state 321
    EQU 	shift, and go to state 322

    COMMA	[reduce using rule 245 (ass_exp)]
    $default	reduce using rule 245 (ass_exp)

    inner_option_identifier_array_declaration	go to state 857



state 677

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 87)

    $default	reduce using rule 87 (struct_define_statement)



state 678

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 91)

    STRUCT	shift, and go to state 199
    UNION	shift, and go to state 200
    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 201
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    STRUCT_TYPE	shift, and go to state 54

    option_struct_declaration	go to state 858
    sign_declaration	go to state 466
    declaration	go to state 65
    type_define	go to state 81



state 679

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 366)
    option_struct_member_exp  ->  DOT . list option_struct_member_exp   (rule 367)
    option_struct_member_exp  ->  DOT . function   (rule 370)

    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    OPEN_PAR	shift, and go to state 334
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    ID  	shift, and go to state 53

    list	go to state 859
    function	go to state 860
    file_statement	go to state 71
    String_Function	go to state 73
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    identifier	go to state 861



state 680

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 368)
    option_struct_member_exp  ->  IMPLY . list option_struct_member_exp   (rule 369)
    option_struct_member_exp  ->  IMPLY . function   (rule 371)

    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    OPEN_PAR	shift, and go to state 334
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    ID  	shift, and go to state 53

    list	go to state 862
    function	go to state 863
    file_statement	go to state 71
    String_Function	go to state 73
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    identifier	go to state 864



state 681

    struct_member_exp  ->  list DOT list option_struct_member_exp .   (rule 347)

    $default	reduce using rule 347 (struct_member_exp)



state 682

    struct_member_exp  ->  list DOT identifier option_struct_member_exp .   (rule 344)

    $default	reduce using rule 344 (struct_member_exp)



state 683

    function  ->  list OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 227)

    $default	reduce using rule 227 (function)



state 684

    struct_member_exp  ->  list IMPLY list option_struct_member_exp .   (rule 354)

    $default	reduce using rule 354 (struct_member_exp)



state 685

    struct_member_exp  ->  list IMPLY identifier option_struct_member_exp .   (rule 350)

    $default	reduce using rule 350 (struct_member_exp)



state 686

    struct_member_exp  ->  value_exp DOT list option_struct_member_exp .   (rule 348)

    $default	reduce using rule 348 (struct_member_exp)



state 687

    struct_member_exp  ->  value_exp DOT identifier option_struct_member_exp .   (rule 345)

    $default	reduce using rule 345 (struct_member_exp)



state 688

    struct_member_exp  ->  value_exp IMPLY list option_struct_member_exp .   (rule 358)

    $default	reduce using rule 358 (struct_member_exp)



state 689

    struct_member_exp  ->  value_exp IMPLY identifier option_struct_member_exp .   (rule 352)

    $default	reduce using rule 352 (struct_member_exp)



state 690

    struct_member_exp  ->  identifier DOT list option_struct_member_exp .   (rule 346)

    $default	reduce using rule 346 (struct_member_exp)



state 691

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 343)

    $default	reduce using rule 343 (struct_member_exp)



state 692

    struct_member_exp  ->  identifier IMPLY list option_struct_member_exp .   (rule 353)

    $default	reduce using rule 353 (struct_member_exp)



state 693

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 349)

    $default	reduce using rule 349 (struct_member_exp)



state 694

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    alg_exp  ->  IF bool_statement THEN alg_exp . optional_exp_else_statement   (rule 127)

    ELSE	shift, and go to state 865
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ELSE	[reduce using rule 129 (optional_exp_else_statement)]
    ADD 	[reduce using rule 129 (optional_exp_else_statement)]
    SUB 	[reduce using rule 129 (optional_exp_else_statement)]
    $default	reduce using rule 129 (optional_exp_else_statement)

    optional_exp_else_statement	go to state 866
    alg_operator	go to state 304



state 695

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 169)

    CLOSE_PAR	shift, and go to state 867
    MUL 	shift, and go to state 868



state 696

    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 131)
    type_cast_alg_exp  ->  simple_alg_exp .   (rule 171)
    type_cast_alg_exp  ->  simple_alg_exp . alg_operator simple_alg_exp   (rule 172)

    INTER_OR	shift, and go to state 306
    CON 	shift, and go to state 307
    ADDRESS	shift, and go to state 308
    LST 	shift, and go to state 311
    RST 	shift, and go to state 312
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303
    MUL 	shift, and go to state 313
    DIV 	shift, and go to state 314
    MOD 	shift, and go to state 315

    INTER_OR	[reduce using rule 171 (type_cast_alg_exp)]
    CON 	[reduce using rule 171 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 171 (type_cast_alg_exp)]
    LST 	[reduce using rule 171 (type_cast_alg_exp)]
    RST 	[reduce using rule 171 (type_cast_alg_exp)]
    ADD 	[reduce using rule 171 (type_cast_alg_exp)]
    SUB 	[reduce using rule 171 (type_cast_alg_exp)]
    MUL 	[reduce using rule 171 (type_cast_alg_exp)]
    DIV 	[reduce using rule 171 (type_cast_alg_exp)]
    MOD 	[reduce using rule 171 (type_cast_alg_exp)]
    $default	reduce using rule 171 (type_cast_alg_exp)

    mul_operator	go to state 316
    alg_operator	go to state 869



state 697

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 148)

    $default	reduce using rule 148 (type_cast)



state 698

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 155)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 872
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 699

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 161)

    CLOSE_PAR	shift, and go to state 873



state 700

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 150)

    $default	reduce using rule 150 (type_cast)



state 701

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 158)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 874
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 702

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 164)

    CLOSE_PAR	shift, and go to state 875



state 703

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 160)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 876
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 704

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 166)

    CLOSE_PAR	shift, and go to state 877



state 705

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 149)

    $default	reduce using rule 149 (type_cast)



state 706

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 157)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 878
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 707

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 163)

    CLOSE_PAR	shift, and go to state 879



state 708

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    CLOSE_PAR	shift, and go to state 880
    MUL 	shift, and go to state 699



state 709

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    CLOSE_PAR	shift, and go to state 881
    MUL 	shift, and go to state 702



state 710

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    CLOSE_PAR	shift, and go to state 882
    MUL 	shift, and go to state 707



state 711

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    CLOSE_PAR	shift, and go to state 713
    MUL 	shift, and go to state 816



state 712

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 883



state 713

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 153)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 884
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 714

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 162)

    CLOSE_PAR	shift, and go to state 885
    MUL 	shift, and go to state 886



state 715

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 154)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 887
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 716

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 165)

    CLOSE_PAR	shift, and go to state 888
    MUL 	shift, and go to state 889



state 717

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 151)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 890
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 718

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 152)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 891
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 719

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 168)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 892
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 720

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 170)

    CLOSE_PAR	shift, and go to state 893



state 721

    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 185)

    MUL 	shift, and go to state 894



state 722

    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 180)

    $default	reduce using rule 180 (all_sizeof_type)



state 723

    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 182)

    $default	reduce using rule 182 (all_sizeof_type)



state 724

    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 181)

    $default	reduce using rule 181 (all_sizeof_type)



state 725

    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 183)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 424)

    MUL 	shift, and go to state 895

    $default	reduce using rule 424 (sign_type_define)



state 726

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 184)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 425)

    MUL 	shift, and go to state 896

    $default	reduce using rule 425 (sign_type_define)



state 727

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (size_of)



state 728

    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 186)

    $default	reduce using rule 186 (all_sizeof_type)



state 729

    size_of  ->  SIZEOF OPEN_PAR alg_exp CLOSE_PAR .   (rule 175)

    $default	reduce using rule 175 (size_of)



state 730

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 176)

    $default	reduce using rule 176 (size_of)



state 731

    size_of  ->  SIZEOF OPEN_PAR string CLOSE_PAR .   (rule 178)

    $default	reduce using rule 178 (size_of)



state 732

    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 203)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 897
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 733

    Float_Function  ->  POW OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 204)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 898
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 734

    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 205)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 899
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 735

    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 206)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 900
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 736

    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 207)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 901
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 737

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    MUL 	shift, and go to state 902



state 738

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    MUL 	shift, and go to state 903



state 739

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    MUL 	shift, and go to state 904



state 740

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    INTDECLARATION	shift, and go to state 905
    CHARDECLARATION	shift, and go to state 906



state 741

    pre_next  ->  PREVIOUS OPEN_PAR identifier CLOSE_PAR .   (rule 218)

    $default	reduce using rule 218 (pre_next)



state 742

    optional_else_statement  ->  ELSE . big_par   (rule 83)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 907



state 743

    if_statement  ->  IF bool_statement THEN big_par optional_else_statement .   (rule 82)

    $default	reduce using rule 82 (if_statement)



state 744

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    MUL 	shift, and go to state 837



state 745

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    MUL 	shift, and go to state 838



state 746

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    MUL 	shift, and go to state 839



state 747

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    INTDECLARATION	shift, and go to state 905
    CHARDECLARATION	shift, and go to state 908



state 748

    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA string . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 909



state 749

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer . COMMA identifier CLOSE_PAR   (rule 318)

    COMMA	shift, and go to state 910



state 750

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 320)

    CLOSE_PAR	shift, and go to state 911



state 751

    file_statement  ->  FPUTC OPEN_PAR list COMMA identifier . CLOSE_PAR   (rule 322)

    CLOSE_PAR	shift, and go to state 912



state 752

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 321)

    CLOSE_PAR	shift, and go to state 913



state 753

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 30)

    ASS_EQU	shift, and go to state 914



state 754

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 309)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 915



state 755

    inner_optional_define_identifier  ->  COMMA ID identifier . inner_optional_define_identifier   (rule 302)
    inner_optional_define_identifier  ->  COMMA ID identifier . ARRAY inner_optional_define_identifier   (rule 305)

    ARRAY	shift, and go to state 916
    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 917



state 756

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_optional_define_identifier   (rule 304)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 918



state 757

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_optional_define_identifier   (rule 303)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_optional_define_identifier   (rule 306)

    ARRAY	shift, and go to state 919
    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 920



state 758

    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_optional_define_identifier   (rule 308)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier inner_optional_define_identifier   (rule 314)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . inner_optional_define_identifier   (rule 315)

    COMMA	shift, and go to state 339
    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 921
    identifier	go to state 922



state 759

    inner_optional_define_identifier  ->  COMMA all_type_define inner_optional_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_optional_define_identifier)



state 760

    inner_optional_define_identifier  ->  COMMA all_type_define identifier . inner_optional_define_identifier   (rule 300)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_optional_define_identifier   (rule 307)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 311)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 312)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 313)

    ARRAY	shift, and go to state 923
    COMMA	shift, and go to state 339
    OPEN_MPAR	shift, and go to state 924

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 925



state 761

    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 37)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 926
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 762

    optional_frame_identifier  ->  COMMA error .   (rule 45)

    $default	reduce using rule 45 (optional_frame_identifier)



state 763

    optional_frame_identifier  ->  COMMA identifier . optional_frame_identifier   (rule 43)

    COMMA	shift, and go to state 563

    $default	reduce using rule 44 (optional_frame_identifier)

    optional_frame_identifier	go to state 927



state 764

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 27)

    AND 	shift, and go to state 928



state 765

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 119)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 169)

    OPEN_PAR	shift, and go to state 153
    CLOSE_PAR	shift, and go to state 867
    MUL 	shift, and go to state 929
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 455
    identifier	go to state 224



state 766

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 612



state 767

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 613



state 768

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    CLOSE_PAR	shift, and go to state 492
    MUL 	shift, and go to state 614



state 769

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    INTDECLARATION	shift, and go to state 711
    CHARDECLARATION	shift, and go to state 930



state 770

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 119)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 170)

    OPEN_PAR	shift, and go to state 153
    CLOSE_PAR	shift, and go to state 893
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 455
    identifier	go to state 224



state 771

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition . CHOP for_sta_control CLOSE_PAR big_par   (rule 63)

    CHOP	shift, and go to state 931



state 772

    for_sta_condition  ->  pbool_expression .   (rule 67)

    $default	reduce using rule 67 (for_sta_condition)



state 773

    pbool_expression  ->  alg_exp . relation_operator alg_exp   (rule 69)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    NE  	shift, and go to state 309
    EQU 	shift, and go to state 310
    GE  	shift, and go to state 298
    LE  	shift, and go to state 299
    GT  	shift, and go to state 300
    LT  	shift, and go to state 301
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304
    relation_operator	go to state 932



state 774

    for_statement  ->  FOR alg_exp TIMES DO big_par .   (rule 72)

    $default	reduce using rule 72 (for_statement)



state 775

    big_par  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 85)

    $default	reduce using rule 85 (big_par)



state 776

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_statement CLOSE_PAR   (rule 15)

    OPEN_PAR	shift, and go to state 933



state 777

    ass_exp  ->  OPEN_PAR ass_exp CLOSE_PAR .   (rule 248)

    $default	reduce using rule 248 (ass_exp)



state 778

    list_exp  ->  OPEN_PAR list_exp CLOSE_PAR .   (rule 254)

    $default	reduce using rule 254 (list_exp)



state 779

    ass_exp  ->  OPEN_PAR string CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)

    OPEN_PAR	shift, and go to state 934



state 780

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 254)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 780
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    list_exp	go to state 781
    struct_member_exp	go to state 257
    address_exp	go to state 258
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 781

    list_exp  ->  list_exp . CON list_exp   (rule 251)
    list_exp  ->  OPEN_PAR list_exp . CLOSE_PAR   (rule 254)

    CLOSE_PAR	shift, and go to state 778
    CON 	shift, and go to state 592



state 782

    inner_option_list_value  ->  COMMA . alg_exp inner_option_list_value   (rule 392)
    inner_option_list_value  ->  COMMA . string inner_option_list_value   (rule 393)
    inner_option_list_value  ->  COMMA . charliteral inner_option_list_value   (rule 394)
    inner_option_list_value  ->  COMMA . list_exp inner_option_list_value   (rule 395)
    inner_option_list_value  ->  COMMA . error   (rule 396)

    error	shift, and go to state 935
    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 579
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 936
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    list_exp	go to state 937
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 938
    identifier	go to state 138
    integer	go to state 139
    string	go to state 939



state 783

    option_struct_list_value  ->  OPEN_BPAR alg_exp inner_option_list_value . CLOSE_BPAR   (rule 388)

    CLOSE_BPAR	shift, and go to state 940



state 784

    option_struct_list_value  ->  OPEN_BPAR list_exp inner_option_list_value . CLOSE_BPAR   (rule 391)

    CLOSE_BPAR	shift, and go to state 941



state 785

    option_struct_list_value  ->  OPEN_BPAR charliteral inner_option_list_value . CLOSE_BPAR   (rule 390)

    CLOSE_BPAR	shift, and go to state 942



state 786

    option_struct_list_value  ->  OPEN_BPAR string inner_option_list_value . CLOSE_BPAR   (rule 389)

    CLOSE_BPAR	shift, and go to state 943



state 787

    option_list_value  ->  OPEN_MPAR alg_exp inner_option_list_value . CLOSE_MPAR   (rule 384)

    CLOSE_MPAR	shift, and go to state 944



state 788

    option_list_value  ->  OPEN_MPAR list_exp inner_option_list_value . CLOSE_MPAR   (rule 387)

    CLOSE_MPAR	shift, and go to state 945



state 789

    option_list_value  ->  OPEN_MPAR charliteral inner_option_list_value . CLOSE_MPAR   (rule 386)

    CLOSE_MPAR	shift, and go to state 946



state 790

    option_list_value  ->  OPEN_MPAR string inner_option_list_value . CLOSE_MPAR   (rule 385)

    CLOSE_MPAR	shift, and go to state 947



state 791

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 494
    CHARDECLARATION	shift, and go to state 495
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 948
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 497
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 792

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 250)

    CLOSE_PAR	shift, and go to state 949



state 793

    option_output  ->  COMMA ass_exp . option_output   (rule 54)

    COMMA	shift, and go to state 589

    $default	reduce using rule 53 (option_output)

    option_output	go to state 950



state 794

    display_statement  ->  DISPLAY OPEN_PAR ass_exp option_output CLOSE_PAR .   (rule 52)

    $default	reduce using rule 52 (display_statement)



state 795

    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 254)

    OPEN_PAR	shift, and go to state 795
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363

    list_exp	go to state 781
    option_list_value	go to state 369
    option_struct_list_value	go to state 370



state 796

    list_exp  ->  list_exp . CON list_exp   (rule 251)
    list_exp  ->  list_exp CON list_exp .   (rule 251)


    $default	reduce using rule 251 (list_exp)



state 797

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 951



state 798

    option_function_parameter_list  ->  ID MUL MUL inner_optional_define_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_parameter_list)



state 799

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_optional_define_identifier   (rule 282)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 952



state 800

    option_function_parameter_list  ->  ID MUL identifier inner_optional_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 801

    option_function_parameter_list  ->  ID identifier ARRAY inner_optional_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 802

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_optional_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 803

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_optional_define_identifier   (rule 278)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 953



state 804

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_optional_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 805

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_optional_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 806

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_optional_define_identifier   (rule 297)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 954



state 807

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_optional_define_identifier   (rule 291)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 955



state 808

    option_function_parameter_list  ->  all_type_define MUL identifier inner_optional_define_identifier .   (rule 295)

    $default	reduce using rule 295 (option_function_parameter_list)



state 809

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 294)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 956
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 810

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_optional_define_identifier .   (rule 290)

    $default	reduce using rule 290 (option_function_parameter_list)



state 811

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp . COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 293)

    COMMA	shift, and go to state 957
    CLOSE_MPAR	shift, and go to state 958
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 812

    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_array_declaration   (rule 107)

    CLOSE_MPAR	shift, and go to state 959



state 813

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 155)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 960
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 961
    INTEGER	shift, and go to state 962
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 872
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 814

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 963
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 964
    INTEGER	shift, and go to state 965
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 874
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 815

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 966
    INTEGER	shift, and go to state 967
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 878
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 816

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    CLOSE_PAR	shift, and go to state 968
    MUL 	shift, and go to state 886



state 817

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 969
    MUL 	shift, and go to state 889



state 818

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)

    OPEN_PAR	shift, and go to state 970



state 819

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 211)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 971
    alg_operator	go to state 304



state 820

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 103)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 972
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 821

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 50)

    $default	reduce using rule 50 (imply_pre)



state 822

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 26)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 973
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 823

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 222)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 974
    alg_operator	go to state 304



state 824

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY list . option_struct_member_exp   (rule 355)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 975



state 825

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 351)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 976



state 826

    optional_projection  ->  COMMA statement optional_projection .   (rule 42)

    $default	reduce using rule 42 (optional_projection)



state 827

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION big_par .   (rule 29)

    $default	reduce using rule 29 (statement)



state 828

    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION . big_par   (rule 28)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 977



state 829

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 31)

    OPEN_BPAR	shift, and go to state 978



state 830

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 32)

    ASS_EQU	shift, and go to state 979



state 831

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 374)

    CLOSE_PAR	shift, and go to state 980



state 832

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 376)

    CLOSE_PAR	shift, and go to state 981



state 833

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 982



state 834

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 104)

    CLOSE_PAR	shift, and go to state 818



state 835

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 983
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 836

    value_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . alg_exp   (rule 223)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 984
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 837

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 985



state 838

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 986



state 839

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    CLOSE_PAR	shift, and go to state 987



state 840

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    type_define  ->  INTDECLARATION .   (rule 402)

    MUL 	shift, and go to state 988

    MUL 	[reduce using rule 402 (type_define)]
    $default	reduce using rule 402 (type_define)



state 841

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    type_define  ->  CHARDECLARATION .   (rule 404)

    MUL 	shift, and go to state 989

    MUL 	[reduce using rule 404 (type_define)]
    $default	reduce using rule 404 (type_define)



state 842

    option_input  ->  COMMA list . option_input   (rule 62)

    COMMA	shift, and go to state 654

    $default	reduce using rule 60 (option_input)

    option_input	go to state 990



state 843

    option_input  ->  COMMA identifier . option_input   (rule 61)

    COMMA	shift, and go to state 654

    $default	reduce using rule 60 (option_input)

    option_input	go to state 991



state 844

    request_statement  ->  REQUEST OPEN_PAR list option_input CLOSE_PAR .   (rule 58)

    $default	reduce using rule 58 (request_statement)



state 845

    request_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (request_statement)



state 846

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 231)

    CLOSE_PAR	shift, and go to state 992



state 847

    inner_option_function_identifier  ->  COMMA error .   (rule 399)

    $default	reduce using rule 399 (inner_option_function_identifier)



state 848

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 398)
    identifier  ->  ID .   (rule 428)

    OPEN_PAR	shift, and go to state 993
    OPEN_MPAR	shift, and go to state 220

    $default	reduce using rule 428 (identifier)



state 849

    inner_option_function_identifier  ->  COMMA ass_exp . inner_option_function_identifier   (rule 397)

    COMMA	shift, and go to state 667

    inner_option_function_identifier	go to state 994



state 850

    option_alg_exp  ->  COMMA error .   (rule 123)

    $default	reduce using rule 123 (option_alg_exp)



state 851

    option_alg_exp  ->  COMMA alg_exp . option_alg_exp   (rule 122)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 995
    alg_operator	go to state 304



state 852

    list  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 211)

    $default	reduce using rule 211 (list)



state 853

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU list_exp . inner_option_identifier_array_declaration   (rule 115)
    list_exp  ->  list_exp . CON list_exp   (rule 251)

    COMMA	shift, and go to state 458
    CON 	shift, and go to state 592

    inner_option_identifier_array_declaration	go to state 996



state 854

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU string . inner_option_identifier_array_declaration   (rule 116)

    COMMA	shift, and go to state 458

    inner_option_identifier_array_declaration	go to state 997



state 855

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 112)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 117)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 118)

    CLOSE_MPAR	shift, and go to state 998



state 856

    option_identifier_array_declaration  ->  identifier ASS_EQU ass_exp inner_option_identifier_array_declaration .   (rule 113)

    $default	reduce using rule 113 (option_identifier_array_declaration)



state 857

    option_identifier_array_declaration  ->  identifier ASS_EQU string inner_option_identifier_array_declaration .   (rule 114)

    $default	reduce using rule 114 (option_identifier_array_declaration)



state 858

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 91)

    $default	reduce using rule 91 (option_struct_declaration)



state 859

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    option_struct_member_exp  ->  DOT list . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 679
    OPEN_PAR	shift, and go to state 231
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 999



state 860

    option_struct_member_exp  ->  DOT function .   (rule 370)

    $default	reduce using rule 370 (option_struct_member_exp)



state 861

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 1000



state 862

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)
    option_struct_member_exp  ->  IMPLY list . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 679
    OPEN_PAR	shift, and go to state 231
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 1001



state 863

    option_struct_member_exp  ->  IMPLY function .   (rule 371)

    $default	reduce using rule 371 (option_struct_member_exp)



state 864

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 679
    IMPLY	shift, and go to state 680

    DOT 	[reduce using rule 365 (option_struct_member_exp)]
    IMPLY	[reduce using rule 365 (option_struct_member_exp)]
    $default	reduce using rule 365 (option_struct_member_exp)

    option_struct_member_exp	go to state 1002



state 865

    optional_exp_else_statement  ->  ELSE . alg_exp   (rule 128)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1003
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 866

    alg_exp  ->  IF bool_statement THEN alg_exp optional_exp_else_statement .   (rule 127)

    $default	reduce using rule 127 (alg_exp)



state 867

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 167)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1004
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 868

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 169)

    CLOSE_PAR	shift, and go to state 1005



state 869

    type_cast_alg_exp  ->  simple_alg_exp alg_operator . simple_alg_exp   (rule 172)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 1006
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 870

    casted_element  ->  MALLOC . OPEN_PAR alg_exp CLOSE_PAR   (rule 174)

    OPEN_PAR	shift, and go to state 1007



state 871

    casted_element  ->  type_cast_alg_exp .   (rule 173)

    $default	reduce using rule 173 (casted_element)



state 872

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 155)

    $default	reduce using rule 155 (type_cast)



state 873

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 161)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1008
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 874

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 158)

    $default	reduce using rule 158 (type_cast)



state 875

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 164)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1009
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 876

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 160)

    $default	reduce using rule 160 (type_cast)



state 877

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 166)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1010
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 878

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 157)

    $default	reduce using rule 157 (type_cast)



state 879

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 163)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1011
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 880

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 155)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 961
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 872
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 881

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 964
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 874
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 882

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 966
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 878
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 883

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    CLOSE_PAR	shift, and go to state 1012
    MUL 	shift, and go to state 889



state 884

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 153)

    $default	reduce using rule 153 (type_cast)



state 885

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 156)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1013
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 886

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 162)

    CLOSE_PAR	shift, and go to state 1014



state 887

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 154)

    $default	reduce using rule 154 (type_cast)



state 888

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 159)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1015
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 889

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 165)

    CLOSE_PAR	shift, and go to state 1016



state 890

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 151)

    $default	reduce using rule 151 (type_cast)



state 891

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 152)

    $default	reduce using rule 152 (type_cast)



state 892

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 168)

    $default	reduce using rule 168 (type_cast)



state 893

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 170)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1017
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 894

    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 185)

    $default	reduce using rule 185 (all_sizeof_type)



state 895

    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 183)

    $default	reduce using rule 183 (all_sizeof_type)



state 896

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 184)

    $default	reduce using rule 184 (all_sizeof_type)



state 897

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 203)

    CLOSE_PAR	shift, and go to state 1018
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 898

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  POW OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 204)

    CLOSE_PAR	shift, and go to state 1019
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 899

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 205)

    CLOSE_PAR	shift, and go to state 1020
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 900

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 206)

    CLOSE_PAR	shift, and go to state 1021
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 901

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 207)

    CLOSE_PAR	shift, and go to state 1022
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 902

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    CLOSE_PAR	shift, and go to state 1023



state 903

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    CLOSE_PAR	shift, and go to state 1024



state 904

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    CLOSE_PAR	shift, and go to state 1025



state 905

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    MUL 	shift, and go to state 988



state 906

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    MUL 	shift, and go to state 1026



state 907

    optional_else_statement  ->  ELSE big_par .   (rule 83)

    $default	reduce using rule 83 (optional_else_statement)



state 908

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    MUL 	shift, and go to state 989



state 909

    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA string CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (file_statement)



state 910

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA . identifier CLOSE_PAR   (rule 318)

    OPEN_PAR	shift, and go to state 153
    ID  	shift, and go to state 154

    identifier	go to state 1027



state 911

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 320)

    $default	reduce using rule 320 (file_statement)



state 912

    file_statement  ->  FPUTC OPEN_PAR list COMMA identifier CLOSE_PAR .   (rule 322)

    $default	reduce using rule 322 (file_statement)



state 913

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 321)

    $default	reduce using rule 321 (file_statement)



state 914

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 30)

    OPEN_BPAR	shift, and go to state 1028



state 915

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 309)

    CLOSE_PAR	shift, and go to state 1029



state 916

    inner_optional_define_identifier  ->  COMMA ID identifier ARRAY . inner_optional_define_identifier   (rule 305)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1030



state 917

    inner_optional_define_identifier  ->  COMMA ID identifier inner_optional_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_optional_define_identifier)



state 918

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_optional_define_identifier   (rule 304)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1031



state 919

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_optional_define_identifier   (rule 306)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1032



state 920

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_optional_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_optional_define_identifier)



state 921

    inner_optional_define_identifier  ->  COMMA all_type_define MUL inner_optional_define_identifier .   (rule 315)

    $default	reduce using rule 315 (inner_optional_define_identifier)



state 922

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_optional_define_identifier   (rule 308)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . inner_optional_define_identifier   (rule 314)

    ARRAY	shift, and go to state 1033
    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1034



state 923

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_optional_define_identifier   (rule 307)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 313)

    COMMA	shift, and go to state 339
    OPEN_MPAR	shift, and go to state 1035

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1036



state 924

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 311)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 312)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1037
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 925

    inner_optional_define_identifier  ->  COMMA all_type_define identifier inner_optional_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_optional_define_identifier)



state 926

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 37)

    CLOSE_BPAR	shift, and go to state 1038
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 927

    optional_frame_identifier  ->  COMMA identifier optional_frame_identifier .   (rule 43)

    $default	reduce using rule 43 (optional_frame_identifier)



state 928

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 27)

    OPEN_PAR	shift, and go to state 1039



state 929

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 119)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 169)

    OPEN_PAR	shift, and go to state 153
    CLOSE_PAR	shift, and go to state 1005
    MUL 	shift, and go to state 221
    ID  	shift, and go to state 222

    option_identifier_array_declaration	go to state 455
    identifier	go to state 224



state 930

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 817



state 931

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP . for_sta_control CLOSE_PAR big_par   (rule 63)

    OPEN_PAR	shift, and go to state 328
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 210
    ID  	shift, and go to state 118

    $default	reduce using rule 71 (for_sta_control)

    for_sta_control	go to state 1040
    list	go to state 211
    value_exp	go to state 67
    ass_statement	go to state 1041
    ass_ident	go to state 70
    leftaddrshift	go to state 72
    struct_member_exp	go to state 74
    identifier	go to state 82



state 932

    pbool_expression  ->  alg_exp relation_operator . alg_exp   (rule 69)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1042
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 933

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_statement CLOSE_PAR   (rule 15)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 87
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    bool_statement	go to state 1043
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 140



state 934

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29

    type_define	go to state 1044



state 935

    inner_option_list_value  ->  COMMA error .   (rule 396)

    $default	reduce using rule 396 (inner_option_list_value)



state 936

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    inner_option_list_value  ->  COMMA alg_exp . inner_option_list_value   (rule 392)

    COMMA	shift, and go to state 782
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    inner_option_list_value	go to state 1045
    alg_operator	go to state 304



state 937

    list_exp  ->  list_exp . CON list_exp   (rule 251)
    inner_option_list_value  ->  COMMA list_exp . inner_option_list_value   (rule 395)

    COMMA	shift, and go to state 782
    CON 	shift, and go to state 592

    inner_option_list_value	go to state 1046



state 938

    factor  ->  charliteral .   (rule 143)
    inner_option_list_value  ->  COMMA charliteral . inner_option_list_value   (rule 394)

    COMMA	shift, and go to state 782

    COMMA	[reduce using rule 143 (factor)]
    $default	reduce using rule 143 (factor)

    inner_option_list_value	go to state 1047



state 939

    inner_option_list_value  ->  COMMA string . inner_option_list_value   (rule 393)

    COMMA	shift, and go to state 782

    inner_option_list_value	go to state 1048



state 940

    option_struct_list_value  ->  OPEN_BPAR alg_exp inner_option_list_value CLOSE_BPAR .   (rule 388)

    $default	reduce using rule 388 (option_struct_list_value)



state 941

    option_struct_list_value  ->  OPEN_BPAR list_exp inner_option_list_value CLOSE_BPAR .   (rule 391)

    $default	reduce using rule 391 (option_struct_list_value)



state 942

    option_struct_list_value  ->  OPEN_BPAR charliteral inner_option_list_value CLOSE_BPAR .   (rule 390)

    $default	reduce using rule 390 (option_struct_list_value)



state 943

    option_struct_list_value  ->  OPEN_BPAR string inner_option_list_value CLOSE_BPAR .   (rule 389)

    $default	reduce using rule 389 (option_struct_list_value)



state 944

    option_list_value  ->  OPEN_MPAR alg_exp inner_option_list_value CLOSE_MPAR .   (rule 384)

    $default	reduce using rule 384 (option_list_value)



state 945

    option_list_value  ->  OPEN_MPAR list_exp inner_option_list_value CLOSE_MPAR .   (rule 387)

    $default	reduce using rule 387 (option_list_value)



state 946

    option_list_value  ->  OPEN_MPAR charliteral inner_option_list_value CLOSE_MPAR .   (rule 386)

    $default	reduce using rule 386 (option_list_value)



state 947

    option_list_value  ->  OPEN_MPAR string inner_option_list_value CLOSE_MPAR .   (rule 385)

    $default	reduce using rule 385 (option_list_value)



state 948

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 766
    CHARDECLARATION	shift, and go to state 767
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 768
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 769
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 949

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 250)

    $default	reduce using rule 250 (rightaddrshift)



state 950

    option_output  ->  COMMA ass_exp option_output .   (rule 54)

    $default	reduce using rule 54 (option_output)



state 951

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 298)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 1049
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 952

    option_function_parameter_list  ->  ID MUL MUL identifier inner_optional_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 953

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_optional_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 954

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_optional_define_identifier .   (rule 297)

    $default	reduce using rule 297 (option_function_parameter_list)



state 955

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_optional_define_identifier .   (rule 291)

    $default	reduce using rule 291 (option_function_parameter_list)



state 956

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 294)

    CLOSE_MPAR	shift, and go to state 1050
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 957

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 293)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1051
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 958

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 292)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1052



state 959

    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_array_declaration   (rule 107)

    COMMA	shift, and go to state 1053

    COMMA	[reduce using rule 109 (inner_option_array_declaration)]
    $default	reduce using rule 109 (inner_option_array_declaration)

    inner_option_array_declaration	go to state 1054



state 960

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 1055
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 961

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    identifier  ->  ID .   (rule 428)

    CLOSE_PAR	shift, and go to state 1056
    OPEN_MPAR	shift, and go to state 220

    CLOSE_PAR	[reduce using rule 428 (identifier)]
    $default	reduce using rule 428 (identifier)



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1057

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 963

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 1058
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 964

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    identifier  ->  ID .   (rule 428)

    CLOSE_PAR	shift, and go to state 1059
    OPEN_MPAR	shift, and go to state 220

    CLOSE_PAR	[reduce using rule 428 (identifier)]
    $default	reduce using rule 428 (identifier)



state 965

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1060

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 966

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    identifier  ->  ID .   (rule 428)

    CLOSE_PAR	shift, and go to state 1061
    OPEN_MPAR	shift, and go to state 220

    CLOSE_PAR	[reduce using rule 428 (identifier)]
    $default	reduce using rule 428 (identifier)



state 967

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1062

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 968

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 1063
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1013
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 969

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 1064
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 1065
    INTEGER	shift, and go to state 1066
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1015
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 970

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 104)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 1067
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 971

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 211)

    CLOSE_MPAR	shift, and go to state 1068



state 972

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 103)

    CLOSE_PAR	shift, and go to state 1069



state 973

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 26)

    CLOSE_MPAR	shift, and go to state 1070
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 974

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 222)

    CLOSE_MPAR	shift, and go to state 1071



state 975

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY list option_struct_member_exp .   (rule 355)

    $default	reduce using rule 355 (struct_member_exp)



state 976

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 351)

    $default	reduce using rule 351 (struct_member_exp)



state 977

    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION big_par .   (rule 28)

    $default	reduce using rule 28 (statement)



state 978

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 31)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 1072
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 979

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 32)

    OPEN_BPAR	shift, and go to state 1073



state 980

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 374)

    $default	reduce using rule 374 (String_Function_cat)



state 981

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 376)

    $default	reduce using rule 376 (String_Function_cmp)



state 982

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 375)

    $default	reduce using rule 375 (String_Function_cpy)



state 983

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1074
    alg_operator	go to state 304



state 984

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    value_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp .   (rule 223)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 223 (value_exp)]
    SUB 	[reduce using rule 223 (value_exp)]
    $default	reduce using rule 223 (value_exp)

    alg_operator	go to state 304



state 985

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    OPEN_PAR	shift, and go to state 1075
    ID  	shift, and go to state 1076
    INTEGER	shift, and go to state 1077



state 986

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    OPEN_PAR	shift, and go to state 1078
    ID  	shift, and go to state 1079
    INTEGER	shift, and go to state 1080



state 987

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    ID  	shift, and go to state 1081
    INTEGER	shift, and go to state 1082



state 988

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    CLOSE_PAR	shift, and go to state 1083



state 989

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 1084



state 990

    option_input  ->  COMMA list option_input .   (rule 62)

    $default	reduce using rule 62 (option_input)



state 991

    option_input  ->  COMMA identifier option_input .   (rule 61)

    $default	reduce using rule 61 (option_input)



state 992

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 231)

    COMMA	shift, and go to state 667

    inner_option_function_identifier	go to state 1085



state 993

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 398)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 84
    MY_TRUE	shift, and go to state 85
    MY_FALSE	shift, and go to state 86
    OPEN_PAR	shift, and go to state 361
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 450
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 364
    BNE 	shift, and go to state 115
    NEGATION	shift, and go to state 116
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 451
    STR 	shift, and go to state 119
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    $default	reduce using rule 232 (option_function_identifier)

    alg_exp	go to state 123
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    option_function_identifier	go to state 1086
    ass_exp	go to state 453
    rightaddrshift	go to state 366
    list_exp	go to state 367
    bool_statement	go to state 368
    prime_bool_statement	go to state 133
    struct_member_exp	go to state 134
    address_exp	go to state 135
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139
    string	go to state 371



state 994

    inner_option_function_identifier  ->  COMMA ass_exp inner_option_function_identifier .   (rule 397)

    $default	reduce using rule 397 (inner_option_function_identifier)



state 995

    option_alg_exp  ->  COMMA alg_exp option_alg_exp .   (rule 122)

    $default	reduce using rule 122 (option_alg_exp)



state 996

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration .   (rule 115)

    $default	reduce using rule 115 (option_identifier_array_declaration)



state 997

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU string inner_option_identifier_array_declaration .   (rule 116)

    $default	reduce using rule 116 (option_identifier_array_declaration)



state 998

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 112)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 117)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . ASS_EQU string inner_option_identifier_array_declaration   (rule 118)

    COMMA	shift, and go to state 458
    ASS_EQU	shift, and go to state 1087

    inner_option_identifier_array_declaration	go to state 1088



state 999

    option_struct_member_exp  ->  DOT list option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (option_struct_member_exp)



state 1000

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (option_struct_member_exp)



state 1001

    option_struct_member_exp  ->  IMPLY list option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (option_struct_member_exp)



state 1002

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (option_struct_member_exp)



state 1003

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    optional_exp_else_statement  ->  ELSE alg_exp .   (rule 128)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    ADD 	[reduce using rule 128 (optional_exp_else_statement)]
    SUB 	[reduce using rule 128 (optional_exp_else_statement)]
    $default	reduce using rule 128 (optional_exp_else_statement)

    alg_operator	go to state 304



state 1004

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 167)

    $default	reduce using rule 167 (type_cast)



state 1005

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 169)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1089
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1006

    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 131)
    type_cast_alg_exp  ->  simple_alg_exp alg_operator simple_alg_exp .   (rule 172)

    INTER_OR	shift, and go to state 306
    CON 	shift, and go to state 307
    ADDRESS	shift, and go to state 308
    LST 	shift, and go to state 311
    RST 	shift, and go to state 312
    MUL 	shift, and go to state 313
    DIV 	shift, and go to state 314
    MOD 	shift, and go to state 315

    INTER_OR	[reduce using rule 172 (type_cast_alg_exp)]
    CON 	[reduce using rule 172 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 172 (type_cast_alg_exp)]
    LST 	[reduce using rule 172 (type_cast_alg_exp)]
    RST 	[reduce using rule 172 (type_cast_alg_exp)]
    MUL 	[reduce using rule 172 (type_cast_alg_exp)]
    DIV 	[reduce using rule 172 (type_cast_alg_exp)]
    MOD 	[reduce using rule 172 (type_cast_alg_exp)]
    $default	reduce using rule 172 (type_cast_alg_exp)

    mul_operator	go to state 316



state 1007

    casted_element  ->  MALLOC OPEN_PAR . alg_exp CLOSE_PAR   (rule 174)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1090
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1008

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 161)

    $default	reduce using rule 161 (type_cast)



state 1009

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 164)

    $default	reduce using rule 164 (type_cast)



state 1010

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 166)

    $default	reduce using rule 166 (type_cast)



state 1011

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 163)

    $default	reduce using rule 163 (type_cast)



state 1012

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 1065
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1015
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1013

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 156)

    $default	reduce using rule 156 (type_cast)



state 1014

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 162)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1091
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1015

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 159)

    $default	reduce using rule 159 (type_cast)



state 1016

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 165)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1092
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1017

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 170)

    $default	reduce using rule 170 (type_cast)



state 1018

    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 203)

    $default	reduce using rule 203 (Float_Function)



state 1019

    Float_Function  ->  POW OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 204)

    $default	reduce using rule 204 (Float_Function)



state 1020

    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 205)

    $default	reduce using rule 205 (Float_Function)



state 1021

    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 206)

    $default	reduce using rule 206 (Float_Function)



state 1022

    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 207)

    $default	reduce using rule 207 (Float_Function)



state 1023

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    ID  	shift, and go to state 1076



state 1024

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    ID  	shift, and go to state 1079



state 1025

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    ID  	shift, and go to state 1081



state 1026

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    CLOSE_PAR	shift, and go to state 1093



state 1027

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA identifier . CLOSE_PAR   (rule 318)

    CLOSE_PAR	shift, and go to state 1094



state 1028

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 30)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    $default	reduce using rule 40 (empty_statement)

    statement	go to state 1095
    empty_statement	go to state 1096
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 1029

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 309)

    OPEN_PAR	shift, and go to state 1097



state 1030

    inner_optional_define_identifier  ->  COMMA ID identifier ARRAY inner_optional_define_identifier .   (rule 305)

    $default	reduce using rule 305 (inner_optional_define_identifier)



state 1031

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_optional_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_optional_define_identifier)



state 1032

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_optional_define_identifier .   (rule 306)

    $default	reduce using rule 306 (inner_optional_define_identifier)



state 1033

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_optional_define_identifier   (rule 308)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1098



state 1034

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier inner_optional_define_identifier .   (rule 314)

    $default	reduce using rule 314 (inner_optional_define_identifier)



state 1035

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 313)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1099
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1036

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_optional_define_identifier .   (rule 307)

    $default	reduce using rule 307 (inner_optional_define_identifier)



state 1037

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 311)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp . COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 312)

    COMMA	shift, and go to state 1100
    CLOSE_MPAR	shift, and go to state 1101
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 1038

    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 37)

    $default	reduce using rule 37 (statement)



state 1039

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 27)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    statement	go to state 1102
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 1040

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control . CLOSE_PAR big_par   (rule 63)

    CLOSE_PAR	shift, and go to state 1103



state 1041

    for_sta_control  ->  ass_statement .   (rule 70)

    $default	reduce using rule 70 (for_sta_control)



state 1042

    pbool_expression  ->  alg_exp relation_operator alg_exp .   (rule 69)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    $default	reduce using rule 69 (pbool_expression)

    alg_operator	go to state 304



state 1043

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement . CLOSE_PAR   (rule 15)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 267)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 268)

    CLOSE_PAR	shift, and go to state 1104
    OR  	shift, and go to state 319
    AND 	shift, and go to state 320



state 1044

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)

    CLOSE_PAR	shift, and go to state 1105



state 1045

    inner_option_list_value  ->  COMMA alg_exp inner_option_list_value .   (rule 392)

    $default	reduce using rule 392 (inner_option_list_value)



state 1046

    inner_option_list_value  ->  COMMA list_exp inner_option_list_value .   (rule 395)

    $default	reduce using rule 395 (inner_option_list_value)



state 1047

    inner_option_list_value  ->  COMMA charliteral inner_option_list_value .   (rule 394)

    $default	reduce using rule 394 (inner_option_list_value)



state 1048

    inner_option_list_value  ->  COMMA string inner_option_list_value .   (rule 393)

    $default	reduce using rule 393 (inner_option_list_value)



state 1049

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_optional_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 1106



state 1050

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 294)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1107



state 1051

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 293)

    CLOSE_MPAR	shift, and go to state 1108
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 1052

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 292)

    $default	reduce using rule 292 (option_function_parameter_list)



state 1053

    inner_option_array_declaration  ->  COMMA . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 108)
    inner_option_array_declaration  ->  COMMA . error   (rule 110)

    error	shift, and go to state 1109
    ID  	shift, and go to state 1110



state 1054

    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration .   (rule 107)

    $default	reduce using rule 107 (option_array_declaration)



state 1055

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 1111
    CHARDECLARATION	shift, and go to state 1112
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 1113
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 1056

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    OPEN_MPAR	shift, and go to state 1114



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)

    OPEN_MPAR	shift, and go to state 1115



state 1058

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 1116
    CHARDECLARATION	shift, and go to state 1117
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 1118
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 1059

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    OPEN_MPAR	shift, and go to state 1119



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)

    OPEN_MPAR	shift, and go to state 1120



state 1061

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    OPEN_MPAR	shift, and go to state 1121



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    OPEN_MPAR	shift, and go to state 1122



state 1063

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    identifier  ->  ID .   (rule 428)

    CLOSE_PAR	shift, and go to state 1123
    OPEN_MPAR	shift, and go to state 220

    CLOSE_PAR	[reduce using rule 428 (identifier)]
    $default	reduce using rule 428 (identifier)



state 1064

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 245
    CHARDECLARATION	shift, and go to state 246
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 248
    OPEN_PAR	shift, and go to state 1124
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 250
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 1065

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    identifier  ->  ID .   (rule 428)

    CLOSE_PAR	shift, and go to state 1125
    OPEN_MPAR	shift, and go to state 220

    CLOSE_PAR	[reduce using rule 428 (identifier)]
    $default	reduce using rule 428 (identifier)



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1126

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1067

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 104)

    CLOSE_PAR	shift, and go to state 1127



state 1068

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 211)

    CLOSE_PAR	shift, and go to state 1128

    CLOSE_PAR	[reduce using rule 211 (list)]
    $default	reduce using rule 211 (list)



state 1069

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 103)

    $default	reduce using rule 103 (declaration)



state 1070

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 26)

    $default	reduce using rule 26 (statement)



state 1071

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 222)

    $default	reduce using rule 222 (value_exp)



state 1072

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 31)

    CLOSE_BPAR	shift, and go to state 1129
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 1073

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 32)

    IF  	shift, and go to state 1
    EMPTY	shift, and go to state 2
    AWAIT	shift, and go to state 3
    STRUCT	shift, and go to state 4
    UNION	shift, and go to state 5
    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FILEDECLARATION	shift, and go to state 8
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    MORE	shift, and go to state 13
    DEFINE	shift, and go to state 14
    EXIST	shift, and go to state 15
    FRAME	shift, and go to state 16
    FOR 	shift, and go to state 17
    WHILE	shift, and go to state 18
    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    REPEAT	shift, and go to state 21
    DISPLAY	shift, and go to state 22
    SKIP	shift, and go to state 23
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    POINTERDECLARATION	shift, and go to state 26
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    LISTDECLARATION	shift, and go to state 30
    OPEN_PAR	shift, and go to state 31
    OPEN_BPAR	shift, and go to state 32
    FUNCTION	shift, and go to state 33
    PROCESS	shift, and go to state 34
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    SYSTEM	shift, and go to state 41
    UNSIGNED	shift, and go to state 42
    SIGNED	shift, and go to state 43
    FREE	shift, and go to state 44
    MUL 	shift, and go to state 45
    NEXT	shift, and go to state 46
    LENGTH	shift, and go to state 47
    REQUEST	shift, and go to state 48
    FINAL	shift, and go to state 49
    KEEP	shift, and go to state 50
    ALWAYS	shift, and go to state 51
    PREFIX	shift, and go to state 52
    ID  	shift, and go to state 53
    STRUCT_TYPE	shift, and go to state 54

    $default	reduce using rule 40 (empty_statement)

    statement	go to state 1095
    empty_statement	go to state 1130
    display_statement	go to state 56
    request_statement	go to state 57
    extend_for_statement	go to state 58
    for_statement	go to state 59
    while_statement	go to state 60
    if_statement	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    list	go to state 66
    value_exp	go to state 67
    function	go to state 68
    ass_statement	go to state 69
    ass_ident	go to state 70
    file_statement	go to state 71
    leftaddrshift	go to state 72
    String_Function	go to state 73
    struct_member_exp	go to state 74
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80
    type_define	go to state 81
    identifier	go to state 82



state 1074

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    CLOSE_MPAR	shift, and go to state 1131



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    OPEN_PAR	shift, and go to state 1132



state 1076

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    CLOSE_PAR	shift, and go to state 1056



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 326)

    CLOSE_PAR	shift, and go to state 1057



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    OPEN_PAR	shift, and go to state 1133



state 1079

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    CLOSE_PAR	shift, and go to state 1059



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 324)

    CLOSE_PAR	shift, and go to state 1060



state 1081

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    CLOSE_PAR	shift, and go to state 1061



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    CLOSE_PAR	shift, and go to state 1062



state 1083

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    ID  	shift, and go to state 1134



state 1084

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    OPEN_PAR	shift, and go to state 1135
    ID  	shift, and go to state 1136
    INTEGER	shift, and go to state 1137



state 1085

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 231)

    $default	reduce using rule 231 (option_function_identifier)



state 1086

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 398)

    CLOSE_PAR	shift, and go to state 1138



state 1087

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU . list_exp inner_option_identifier_array_declaration   (rule 117)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU . string inner_option_identifier_array_declaration   (rule 118)

    OPEN_PAR	shift, and go to state 795
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363
    STR 	shift, and go to state 119

    list_exp	go to state 1139
    option_list_value	go to state 369
    option_struct_list_value	go to state 370
    string	go to state 1140



state 1088

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 112)

    $default	reduce using rule 112 (option_identifier_array_declaration)



state 1089

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 169)

    $default	reduce using rule 169 (type_cast)



state 1090

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    casted_element  ->  MALLOC OPEN_PAR alg_exp . CLOSE_PAR   (rule 174)

    CLOSE_PAR	shift, and go to state 1141
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 1091

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 162)

    $default	reduce using rule 162 (type_cast)



state 1092

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 165)

    $default	reduce using rule 165 (type_cast)



state 1093

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    ID  	shift, and go to state 1136



state 1094

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR .   (rule 318)

    $default	reduce using rule 318 (file_statement)



state 1095

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    empty_statement  ->  statement .   (rule 39)

    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228

    $default	reduce using rule 39 (empty_statement)



state 1096

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 30)

    CLOSE_BPAR	shift, and go to state 1142



state 1097

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 309)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 1143
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 1098

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_optional_define_identifier .   (rule 308)

    $default	reduce using rule 308 (inner_optional_define_identifier)



state 1099

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 313)

    CLOSE_MPAR	shift, and go to state 1144
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 1100

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 312)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1145
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1101

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 311)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1146



state 1102

    statement  ->  statement . AND statement   (rule 1)
    statement  ->  statement . OR statement   (rule 2)
    statement  ->  statement . CHOP statement   (rule 3)
    statement  ->  statement . PARALLEL statement   (rule 25)
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 1147
    CHOP	shift, and go to state 225
    OR  	shift, and go to state 226
    PARALLEL	shift, and go to state 227
    AND 	shift, and go to state 228



state 1103

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR . big_par   (rule 63)

    error	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 358

    big_par	go to state 1148



state 1104

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR .   (rule 15)

    $default	reduce using rule 15 (statement)



state 1105

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 247)

    OPEN_PAR	shift, and go to state 1149



state 1106

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_optional_define_identifier   (rule 298)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1150



state 1107

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 294)

    $default	reduce using rule 294 (option_function_parameter_list)



state 1108

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 293)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1151



state 1109

    inner_option_array_declaration  ->  COMMA error .   (rule 110)

    $default	reduce using rule 110 (inner_option_array_declaration)



state 1110

    inner_option_array_declaration  ->  COMMA ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 108)

    OPEN_MPAR	shift, and go to state 1152



state 1111

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 1153



state 1112

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 1154



state 1113

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    INTDECLARATION	shift, and go to state 711
    CHARDECLARATION	shift, and go to state 1155



state 1114

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 212)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1156
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 326)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1157
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1116

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 1158



state 1117

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 1159



state 1118

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    INTDECLARATION	shift, and go to state 711
    CHARDECLARATION	shift, and go to state 1160



state 1119

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 215)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1161
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 324)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1162
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1121

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 214)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1163
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 327)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1164
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1123

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    OPEN_MPAR	shift, and go to state 1165



state 1124

    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 141)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 149)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 151)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 152)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 157)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 160)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 161)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 163)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 164)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 166)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 167)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 168)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 169)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 170)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 222)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 225)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 351)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 355)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 364)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 429)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    STRUCT	shift, and go to state 244
    INTDECLARATION	shift, and go to state 1166
    CHARDECLARATION	shift, and go to state 1167
    VOIDDECLARATION	shift, and go to state 247
    FLOATDECLARATION	shift, and go to state 496
    OPEN_PAR	shift, and go to state 432
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    UNSIGNED	shift, and go to state 1168
    SIGNED	shift, and go to state 251
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    STRUCT_TYPE	shift, and go to state 252
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 351
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 254
    pre_next	go to state 130
    value_exp	go to state 255
    struct_member_exp	go to state 257
    address_exp	go to state 258
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 259
    integer	go to state 139



state 1125

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    OPEN_MPAR	shift, and go to state 1169



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)

    OPEN_MPAR	shift, and go to state 1170



state 1127

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 104)

    $default	reduce using rule 104 (declaration)



state 1128

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    OPEN_PAR	shift, and go to state 1171



state 1129

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 31)

    $default	reduce using rule 31 (statement)



state 1130

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 32)

    CLOSE_BPAR	shift, and go to state 1172



state 1131

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    CLOSE_PAR	shift, and go to state 1128



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    INTDECLARATION	shift, and go to state 1173
    CHARDECLARATION	shift, and go to state 1174
    UNSIGNED	shift, and go to state 1175



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    INTDECLARATION	shift, and go to state 1176
    CHARDECLARATION	shift, and go to state 1177
    UNSIGNED	shift, and go to state 1178



state 1134

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    CLOSE_PAR	shift, and go to state 1123



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    OPEN_PAR	shift, and go to state 1179



state 1136

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    CLOSE_PAR	shift, and go to state 1125



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 325)

    CLOSE_PAR	shift, and go to state 1126



state 1138

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 398)

    COMMA	shift, and go to state 667

    inner_option_function_identifier	go to state 1180



state 1139

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp . inner_option_identifier_array_declaration   (rule 117)
    list_exp  ->  list_exp . CON list_exp   (rule 251)

    COMMA	shift, and go to state 458
    CON 	shift, and go to state 592

    inner_option_identifier_array_declaration	go to state 1181



state 1140

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string . inner_option_identifier_array_declaration   (rule 118)

    COMMA	shift, and go to state 458

    inner_option_identifier_array_declaration	go to state 1182



state 1141

    casted_element  ->  MALLOC OPEN_PAR alg_exp CLOSE_PAR .   (rule 174)

    $default	reduce using rule 174 (casted_element)



state 1142

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 30)

    $default	reduce using rule 30 (statement)



state 1143

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_optional_define_identifier   (rule 309)

    CLOSE_PAR	shift, and go to state 1183



state 1144

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 313)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1184



state 1145

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 312)

    CLOSE_MPAR	shift, and go to state 1185
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    alg_operator	go to state 304



state 1146

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_optional_define_identifier)



state 1147

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (statement)



state 1148

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par .   (rule 63)

    $default	reduce using rule 63 (extend_for_statement)



state 1149

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 247)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 1186
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 1150

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier .   (rule 298)

    $default	reduce using rule 298 (option_function_parameter_list)



state 1151

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 293)

    $default	reduce using rule 293 (option_function_parameter_list)



state 1152

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 108)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1187
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1153

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 1188
    MUL 	shift, and go to state 699



state 1154

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    CLOSE_PAR	shift, and go to state 1189
    MUL 	shift, and go to state 702



state 1155

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 1190



state 1156

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 212)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1191
    alg_operator	go to state 304



state 1157

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 326)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1192
    alg_operator	go to state 304



state 1158

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 1193
    MUL 	shift, and go to state 699



state 1159

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    CLOSE_PAR	shift, and go to state 1194
    MUL 	shift, and go to state 702



state 1160

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 1195



state 1161

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 215)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1196
    alg_operator	go to state 304



state 1162

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 324)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1197
    alg_operator	go to state 304



state 1163

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 214)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1198
    alg_operator	go to state 304



state 1164

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 327)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1199
    alg_operator	go to state 304



state 1165

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 213)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1200
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1166

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 148)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 487
    MUL 	shift, and go to state 1201



state 1167

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    CLOSE_PAR	shift, and go to state 489
    MUL 	shift, and go to state 1202



state 1168

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 162)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    INTDECLARATION	shift, and go to state 711
    CHARDECLARATION	shift, and go to state 1203



state 1169

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 216)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1204
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1170

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 325)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1205
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1171

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 106)

    FILEDECLARATION	shift, and go to state 8
    INTDECLARATION	shift, and go to state 24
    STRDECLARATION	shift, and go to state 25
    CHARDECLARATION	shift, and go to state 27
    VOIDDECLARATION	shift, and go to state 28
    FLOATDECLARATION	shift, and go to state 29
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 166
    ID  	shift, and go to state 167
    STRUCT_TYPE	shift, and go to state 168

    $default	reduce using rule 299 (option_function_parameter_list)

    option_function_parameter_list	go to state 1206
    all_type_define	go to state 170
    type_define	go to state 171
    sign_type_define	go to state 172



state 1172

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 32)

    $default	reduce using rule 32 (statement)



state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    MUL 	shift, and go to state 1207



state 1174

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    MUL 	shift, and go to state 1208



state 1175

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    CHARDECLARATION	shift, and go to state 1209



state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    MUL 	shift, and go to state 1210



state 1177

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    MUL 	shift, and go to state 1211



state 1178

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    CHARDECLARATION	shift, and go to state 1212



state 1179

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    INTDECLARATION	shift, and go to state 1213
    CHARDECLARATION	shift, and go to state 1214
    UNSIGNED	shift, and go to state 1215



state 1180

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 398)

    $default	reduce using rule 398 (inner_option_function_identifier)



state 1181

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration .   (rule 117)

    $default	reduce using rule 117 (option_identifier_array_declaration)



state 1182

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration .   (rule 118)

    $default	reduce using rule 118 (option_identifier_array_declaration)



state 1183

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_optional_define_identifier   (rule 309)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1216



state 1184

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 313)

    $default	reduce using rule 313 (inner_optional_define_identifier)



state 1185

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 312)

    COMMA	shift, and go to state 339

    COMMA	[reduce using rule 310 (inner_optional_define_identifier)]
    $default	reduce using rule 310 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1217



state 1186

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 247)

    CLOSE_PAR	shift, and go to state 1218



state 1187

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 108)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1219
    alg_operator	go to state 304



state 1188

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 155)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 961
    INTEGER	shift, and go to state 1220
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 872
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1189

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 964
    INTEGER	shift, and go to state 1221
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 874
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1190

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    CLOSE_PAR	shift, and go to state 1222
    MUL 	shift, and go to state 889



state 1191

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 212)

    CLOSE_MPAR	shift, and go to state 1223



state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 326)

    CLOSE_MPAR	shift, and go to state 1224



state 1193

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 155)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 961
    INTEGER	shift, and go to state 1225
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 872
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1194

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 964
    INTEGER	shift, and go to state 1226
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 874
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1195

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    CLOSE_PAR	shift, and go to state 1227
    MUL 	shift, and go to state 889



state 1196

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 215)

    CLOSE_MPAR	shift, and go to state 1228



state 1197

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 324)

    CLOSE_MPAR	shift, and go to state 1229



state 1198

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 214)

    CLOSE_MPAR	shift, and go to state 1230



state 1199

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 327)

    CLOSE_MPAR	shift, and go to state 1231



state 1200

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 213)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1232
    alg_operator	go to state 304



state 1201

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 155)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 1233
    MUL 	shift, and go to state 699



state 1202

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 158)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    CLOSE_PAR	shift, and go to state 1234
    MUL 	shift, and go to state 702



state 1203

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 154)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 1235



state 1204

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 216)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1236
    alg_operator	go to state 304



state 1205

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 325)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1237
    alg_operator	go to state 304



state 1206

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU list_exp   (rule 106)

    CLOSE_PAR	shift, and go to state 1238



state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 1239



state 1208

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    CLOSE_PAR	shift, and go to state 1240



state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    MUL 	shift, and go to state 1241



state 1210

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 1242



state 1211

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    CLOSE_PAR	shift, and go to state 1243



state 1212

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    MUL 	shift, and go to state 1244



state 1213

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    MUL 	shift, and go to state 1245



state 1214

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    MUL 	shift, and go to state 1246



state 1215

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    CHARDECLARATION	shift, and go to state 1247



state 1216

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_optional_define_identifier)



state 1217

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 312)

    $default	reduce using rule 312 (inner_optional_define_identifier)



state 1218

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 247)

    FOPEN	shift, and go to state 6
    FCLOSE	shift, and go to state 7
    FGETS	shift, and go to state 9
    FPUTS	shift, and go to state 10
    FGETC	shift, and go to state 11
    FPUTC	shift, and go to state 12
    OPEN_PAR	shift, and go to state 1248
    STRFUNCHEAD	shift, and go to state 35
    STRFUNCTAIL	shift, and go to state 36
    STRFUNCCAT	shift, and go to state 37
    STRFUNCCMP	shift, and go to state 38
    STRFUNCCPY	shift, and go to state 39
    STRFUNCLEN	shift, and go to state 40
    ID  	shift, and go to state 1249

    list	go to state 1250
    function	go to state 1251
    file_statement	go to state 71
    String_Function	go to state 73
    String_Function_head	go to state 75
    String_Function_tail	go to state 76
    String_Function_cat	go to state 77
    String_Function_cpy	go to state 78
    String_Function_cmp	go to state 79
    String_Function_len	go to state 80



state 1219

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_array_declaration   (rule 108)

    CLOSE_MPAR	shift, and go to state 1252



state 1220

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1253

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1221

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1254

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1222

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 1065
    INTEGER	shift, and go to state 1255
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1015
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1223

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 212)

    $default	reduce using rule 212 (list)



state 1224

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 326)

    $default	reduce using rule 326 (leftaddrshift)



state 1225

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1256

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1226

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1257

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1227

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 1065
    INTEGER	shift, and go to state 1258
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1015
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1228

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 215)

    $default	reduce using rule 215 (list)



state 1229

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 324)

    $default	reduce using rule 324 (leftaddrshift)



state 1230

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 214)

    $default	reduce using rule 214 (list)



state 1231

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 327)

    $default	reduce using rule 327 (leftaddrshift)



state 1232

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 213)

    CLOSE_MPAR	shift, and go to state 1259



state 1233

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 155)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 961
    INTEGER	shift, and go to state 1260
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 872
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1234

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 964
    INTEGER	shift, and go to state 1261
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 874
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1235

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 159)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    CLOSE_PAR	shift, and go to state 1262
    MUL 	shift, and go to state 889



state 1236

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 216)

    CLOSE_MPAR	shift, and go to state 1263



state 1237

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 325)

    CLOSE_MPAR	shift, and go to state 1264



state 1238

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 105)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU list_exp   (rule 106)

    ASS_EQU	shift, and go to state 1265

    $default	reduce using rule 105 (declaration)



state 1239

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    INTEGER	shift, and go to state 1266



state 1240

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    INTEGER	shift, and go to state 1267



state 1241

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    CLOSE_PAR	shift, and go to state 1268



state 1242

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    INTEGER	shift, and go to state 1269



state 1243

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    INTEGER	shift, and go to state 1270



state 1244

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    CLOSE_PAR	shift, and go to state 1271



state 1245

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 1272



state 1246

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    CLOSE_PAR	shift, and go to state 1273



state 1247

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    MUL 	shift, and go to state 1274



state 1248

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)

    OPEN_PAR	shift, and go to state 1275
    ID  	shift, and go to state 1276

    list	go to state 553



state 1249

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 226)

    OPEN_PAR	shift, and go to state 219
    OPEN_MPAR	shift, and go to state 220



state 1250

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 227)

    OPEN_PAR	shift, and go to state 231



state 1251

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 247)

    $default	reduce using rule 247 (ass_exp)



state 1252

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_array_declaration   (rule 108)

    COMMA	shift, and go to state 1053

    COMMA	[reduce using rule 109 (inner_option_array_declaration)]
    $default	reduce using rule 109 (inner_option_array_declaration)

    inner_option_array_declaration	go to state 1277



state 1253

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 1278



state 1254

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    CLOSE_PAR	shift, and go to state 1279



state 1255

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1280

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1256

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 1281



state 1257

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    CLOSE_PAR	shift, and go to state 1282



state 1258

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1283

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1259

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 213)

    $default	reduce using rule 213 (list)



state 1260

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1284

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1261

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1285

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1262

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    MALLOC	shift, and go to state 870
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 1065
    INTEGER	shift, and go to state 1286
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    simple_alg_exp	go to state 696
    factor	go to state 125
    type_cast	go to state 126
    type_cast_alg_exp	go to state 871
    casted_element	go to state 1015
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1263

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 216)

    $default	reduce using rule 216 (list)



state 1264

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 325)

    $default	reduce using rule 325 (leftaddrshift)



state 1265

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . list_exp   (rule 106)

    OPEN_PAR	shift, and go to state 795
    OPEN_BPAR	shift, and go to state 362
    OPEN_MPAR	shift, and go to state 363

    list_exp	go to state 1287
    option_list_value	go to state 369
    option_struct_list_value	go to state 370



state 1266

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    CLOSE_PAR	shift, and go to state 1253



state 1267

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    CLOSE_PAR	shift, and go to state 1254



state 1268

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    INTEGER	shift, and go to state 1288



state 1269

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    CLOSE_PAR	shift, and go to state 1256



state 1270

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    CLOSE_PAR	shift, and go to state 1257



state 1271

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    INTEGER	shift, and go to state 1289



state 1272

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    INTEGER	shift, and go to state 1290



state 1273

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    INTEGER	shift, and go to state 1291



state 1274

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    CLOSE_PAR	shift, and go to state 1292



state 1275

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 212)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 213)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 214)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 215)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 216)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 217)

    INTDECLARATION	shift, and go to state 737
    CHARDECLARATION	shift, and go to state 738
    FLOATDECLARATION	shift, and go to state 739
    OPEN_PAR	shift, and go to state 1275
    UNSIGNED	shift, and go to state 740
    ID  	shift, and go to state 1276

    list	go to state 553



state 1276

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 211)

    OPEN_MPAR	shift, and go to state 220



state 1277

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration .   (rule 108)

    $default	reduce using rule 108 (inner_option_array_declaration)



state 1278

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    OPEN_MPAR	shift, and go to state 1293



state 1279

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    OPEN_MPAR	shift, and go to state 1294



state 1280

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    CLOSE_PAR	shift, and go to state 1295



state 1281

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    OPEN_MPAR	shift, and go to state 1296



state 1282

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    OPEN_MPAR	shift, and go to state 1297



state 1283

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    CLOSE_PAR	shift, and go to state 1298



state 1284

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 1299



state 1285

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    CLOSE_PAR	shift, and go to state 1300



state 1286

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1301

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1287

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp .   (rule 106)
    list_exp  ->  list_exp . CON list_exp   (rule 251)

    CON 	shift, and go to state 592

    $default	reduce using rule 106 (declaration)



state 1288

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    CLOSE_PAR	shift, and go to state 1280



state 1289

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    CLOSE_PAR	shift, and go to state 1283



state 1290

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    CLOSE_PAR	shift, and go to state 1284



state 1291

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    CLOSE_PAR	shift, and go to state 1285



state 1292

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    INTEGER	shift, and go to state 1302



state 1293

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 336)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1303
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1294

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 334)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1304
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1295

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    OPEN_MPAR	shift, and go to state 1305



state 1296

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 330)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1306
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1297

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 328)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1307
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1298

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    OPEN_MPAR	shift, and go to state 1308



state 1299

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    OPEN_MPAR	shift, and go to state 1309



state 1300

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    OPEN_MPAR	shift, and go to state 1310



state 1301

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    CLOSE_PAR	shift, and go to state 1311



state 1302

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    CLOSE_PAR	shift, and go to state 1301



state 1303

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 336)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1312
    alg_operator	go to state 304



state 1304

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 334)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1313
    alg_operator	go to state 304



state 1305

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 335)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1314
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1306

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 330)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1315
    alg_operator	go to state 304



state 1307

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 328)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1316
    alg_operator	go to state 304



state 1308

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 329)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1317
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1309

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 333)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1318
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1310

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 331)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1319
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1311

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    OPEN_MPAR	shift, and go to state 1320



state 1312

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 336)

    CLOSE_MPAR	shift, and go to state 1321



state 1313

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 334)

    CLOSE_MPAR	shift, and go to state 1322



state 1314

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 335)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1323
    alg_operator	go to state 304



state 1315

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 330)

    CLOSE_MPAR	shift, and go to state 1324



state 1316

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 328)

    CLOSE_MPAR	shift, and go to state 1325



state 1317

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 329)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1326
    alg_operator	go to state 304



state 1318

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 333)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1327
    alg_operator	go to state 304



state 1319

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 331)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1328
    alg_operator	go to state 304



state 1320

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 332)

    IF  	shift, and go to state 83
    POINTERNULL	shift, and go to state 157
    OPEN_PAR	shift, and go to state 261
    SIZEOF	shift, and go to state 88
    CEIL	shift, and go to state 89
    FLOOR	shift, and go to state 90
    ROUND	shift, and go to state 91
    SIN 	shift, and go to state 92
    COS 	shift, and go to state 93
    TAN 	shift, and go to state 94
    ASIN	shift, and go to state 95
    ACOS	shift, and go to state 96
    ATAN	shift, and go to state 97
    SINH	shift, and go to state 98
    COSH	shift, and go to state 99
    TANH	shift, and go to state 100
    EXP 	shift, and go to state 101
    LOG 	shift, and go to state 102
    LOG10	shift, and go to state 103
    SQRT	shift, and go to state 104
    ATAN2	shift, and go to state 105
    POW 	shift, and go to state 106
    ABS 	shift, and go to state 107
    FABS	shift, and go to state 108
    LABS	shift, and go to state 109
    FMOD	shift, and go to state 110
    MODF	shift, and go to state 111
    LDEXP	shift, and go to state 112
    ADDRESS	shift, and go to state 113
    SUB 	shift, and go to state 114
    MUL 	shift, and go to state 45
    BNE 	shift, and go to state 115
    PREVIOUS	shift, and go to state 117
    ID  	shift, and go to state 118
    INTEGER	shift, and go to state 120
    FLOATLITERAL	shift, and go to state 121
    CHARLITERAL	shift, and go to state 122

    alg_exp	go to state 1329
    simple_alg_exp	go to state 124
    factor	go to state 125
    type_cast	go to state 126
    size_of	go to state 127
    Float_Function	go to state 128
    list	go to state 129
    pre_next	go to state 130
    value_exp	go to state 131
    struct_member_exp	go to state 134
    address_exp	go to state 135
    floatliteral	go to state 136
    charliteral	go to state 137
    identifier	go to state 138
    integer	go to state 139



state 1321

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 336)

    $default	reduce using rule 336 (leftaddrshift)



state 1322

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 334)

    $default	reduce using rule 334 (leftaddrshift)



state 1323

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 335)

    CLOSE_MPAR	shift, and go to state 1330



state 1324

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 330)

    $default	reduce using rule 330 (leftaddrshift)



state 1325

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 328)

    $default	reduce using rule 328 (leftaddrshift)



state 1326

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 329)

    CLOSE_MPAR	shift, and go to state 1331



state 1327

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 333)

    CLOSE_MPAR	shift, and go to state 1332



state 1328

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 331)

    CLOSE_MPAR	shift, and go to state 1333



state 1329

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 332)

    COMMA	shift, and go to state 669
    ADD 	shift, and go to state 302
    SUB 	shift, and go to state 303

    option_alg_exp	go to state 1334
    alg_operator	go to state 304



state 1330

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 335)

    $default	reduce using rule 335 (leftaddrshift)



state 1331

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 329)

    $default	reduce using rule 329 (leftaddrshift)



state 1332

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 333)

    $default	reduce using rule 333 (leftaddrshift)



state 1333

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 331)

    $default	reduce using rule 331 (leftaddrshift)



state 1334

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 332)

    CLOSE_MPAR	shift, and go to state 1335



state 1335

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 332)

    $default	reduce using rule 332 (leftaddrshift)



state 1336

    $   	go to state 1337



state 1337

    $default	accept
