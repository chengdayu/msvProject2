Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

<<<<<<< HEAD
   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   CHANNEL
   PUT
   GET
=======
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
   ERROR_TOKEN
   FREXP
<<<<<<< HEAD
   PREFIX
=======
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5


Useless rules:

<<<<<<< HEAD
#109   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#110   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#111   inner_option_array_declaration :	;
#112   inner_option_array_declaration :	 COMMA error;


Conflict in state 106 between rule 13 and token CHOP resolved as reduce.
Conflict in state 106 between rule 13 and token IFF resolved as reduce.
Conflict in state 106 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 106 between rule 13 and token OR resolved as reduce.
Conflict in state 106 between rule 13 and token AND resolved as reduce.
Conflict in state 106 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 107 between rule 22 and token CHOP resolved as reduce.
Conflict in state 107 between rule 22 and token IFF resolved as reduce.
Conflict in state 107 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 107 between rule 22 and token OR resolved as reduce.
Conflict in state 107 between rule 22 and token AND resolved as reduce.
Conflict in state 107 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 157 between rule 21 and token CHOP resolved as reduce.
Conflict in state 157 between rule 21 and token IFF resolved as reduce.
Conflict in state 157 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 157 between rule 21 and token OR resolved as reduce.
Conflict in state 157 between rule 21 and token AND resolved as reduce.
Conflict in state 157 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 158 between rule 10 and token CHOP resolved as reduce.
Conflict in state 158 between rule 10 and token IFF resolved as reduce.
Conflict in state 158 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 158 between rule 10 and token OR resolved as reduce.
Conflict in state 158 between rule 10 and token AND resolved as reduce.
Conflict in state 158 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 159 between rule 9 and token CHOP resolved as reduce.
Conflict in state 159 between rule 9 and token IFF resolved as reduce.
Conflict in state 159 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 159 between rule 9 and token OR resolved as reduce.
Conflict in state 159 between rule 9 and token AND resolved as reduce.
Conflict in state 159 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 160 between rule 20 and token CHOP resolved as reduce.
Conflict in state 160 between rule 20 and token IFF resolved as reduce.
Conflict in state 160 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 160 between rule 20 and token OR resolved as reduce.
Conflict in state 160 between rule 20 and token AND resolved as reduce.
Conflict in state 160 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 161 between rule 12 and token CHOP resolved as reduce.
Conflict in state 161 between rule 12 and token IFF resolved as reduce.
Conflict in state 161 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 161 between rule 12 and token OR resolved as reduce.
Conflict in state 161 between rule 12 and token AND resolved as reduce.
Conflict in state 161 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 162 between rule 11 and token CHOP resolved as reduce.
Conflict in state 162 between rule 11 and token IFF resolved as reduce.
Conflict in state 162 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 162 between rule 11 and token OR resolved as reduce.
Conflict in state 162 between rule 11 and token AND resolved as reduce.
Conflict in state 162 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 316 between rule 219 and token IMPLY resolved as reduce.
Conflict in state 319 between rule 218 and token IMPLY resolved as reduce.
Conflict in state 340 between rule 8 and token CHOP resolved as reduce.
Conflict in state 340 between rule 8 and token IFF resolved as shift.
Conflict in state 340 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 340 between rule 8 and token OR resolved as shift.
Conflict in state 340 between rule 8 and token AND resolved as shift.
Conflict in state 340 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 341 between rule 6 and token CHOP resolved as reduce.
Conflict in state 341 between rule 6 and token IFF resolved as reduce.
Conflict in state 341 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 341 between rule 6 and token OR resolved as shift.
Conflict in state 341 between rule 6 and token AND resolved as shift.
Conflict in state 341 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 342 between rule 7 and token CHOP resolved as reduce.
Conflict in state 342 between rule 7 and token IFF resolved as reduce.
Conflict in state 342 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 342 between rule 7 and token OR resolved as shift.
Conflict in state 342 between rule 7 and token AND resolved as shift.
Conflict in state 342 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 343 between rule 5 and token CHOP resolved as reduce.
Conflict in state 343 between rule 5 and token IFF resolved as reduce.
Conflict in state 343 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 343 between rule 5 and token OR resolved as reduce.
Conflict in state 343 between rule 5 and token AND resolved as shift.
Conflict in state 343 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 344 between rule 4 and token CHOP resolved as reduce.
Conflict in state 344 between rule 4 and token IFF resolved as reduce.
Conflict in state 344 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 344 between rule 4 and token OR resolved as reduce.
Conflict in state 344 between rule 4 and token AND resolved as reduce.
Conflict in state 344 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 351 between rule 303 and token OR resolved as reduce.
Conflict in state 351 between rule 303 and token AND resolved as reduce.
Conflict in state 419 between rule 398 and token OR resolved as reduce.
Conflict in state 419 between rule 398 and token AND resolved as reduce.
Conflict in state 483 between rule 32 and token CHOP resolved as reduce.
Conflict in state 483 between rule 32 and token OR resolved as shift.
Conflict in state 483 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 483 between rule 32 and token AND resolved as shift.
Conflict in state 484 between rule 31 and token CHOP resolved as reduce.
Conflict in state 484 between rule 31 and token OR resolved as reduce.
Conflict in state 484 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 484 between rule 31 and token AND resolved as shift.
Conflict in state 485 between rule 54 and token CHOP resolved as reduce.
Conflict in state 485 between rule 54 and token OR resolved as reduce.
Conflict in state 485 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 485 between rule 54 and token AND resolved as shift.
Conflict in state 486 between rule 30 and token CHOP resolved as reduce.
Conflict in state 486 between rule 30 and token OR resolved as reduce.
Conflict in state 486 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 486 between rule 30 and token AND resolved as reduce.
Conflict in state 564 between rule 305 and token OR resolved as reduce.
Conflict in state 564 between rule 305 and token AND resolved as shift.
Conflict in state 565 between rule 304 and token OR resolved as reduce.
Conflict in state 565 between rule 304 and token AND resolved as reduce.
Conflict in state 637 between rule 400 and token OR resolved as reduce.
Conflict in state 637 between rule 400 and token AND resolved as shift.
Conflict in state 638 between rule 399 and token OR resolved as reduce.
Conflict in state 638 between rule 399 and token AND resolved as reduce.
Conflict in state 814 between rule 203 and token CON resolved as reduce.
State 143 contains 2 shift/reduce conflicts.
State 144 contains 2 shift/reduce conflicts.
State 146 contains 14 shift/reduce conflicts.
State 152 contains 2 shift/reduce conflicts.
State 171 contains 2 shift/reduce conflicts.
State 209 contains 3 reduce/reduce conflicts.
State 211 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 212 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 213 contains 1 shift/reduce conflict.
State 215 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 217 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 218 contains 1 shift/reduce conflict.
State 253 contains 1 shift/reduce conflict.
State 284 contains 1 shift/reduce conflict.
State 285 contains 1 shift/reduce conflict.
State 287 contains 1 shift/reduce conflict.
State 288 contains 1 shift/reduce conflict.
State 289 contains 1 shift/reduce conflict.
State 291 contains 8 shift/reduce conflicts.
State 292 contains 8 shift/reduce conflicts.
State 293 contains 8 shift/reduce conflicts.
State 294 contains 8 shift/reduce conflicts.
State 295 contains 8 shift/reduce conflicts.
State 296 contains 8 shift/reduce conflicts.
State 297 contains 8 shift/reduce conflicts.
State 298 contains 8 shift/reduce conflicts.
State 299 contains 8 shift/reduce conflicts.
State 300 contains 8 shift/reduce conflicts.
State 301 contains 8 shift/reduce conflicts.
State 302 contains 8 shift/reduce conflicts.
State 303 contains 8 shift/reduce conflicts.
State 304 contains 8 shift/reduce conflicts.
State 305 contains 8 shift/reduce conflicts.
State 306 contains 8 shift/reduce conflicts.
State 309 contains 8 shift/reduce conflicts.
State 310 contains 8 shift/reduce conflicts.
State 311 contains 8 shift/reduce conflicts.
State 316 contains 1 shift/reduce conflict.
State 319 contains 1 shift/reduce conflict.
State 349 contains 1 shift/reduce conflict.
State 352 contains 2 shift/reduce conflicts.
State 353 contains 2 shift/reduce conflicts.
State 380 contains 1 shift/reduce conflict.
State 381 contains 1 shift/reduce conflict.
State 382 contains 1 shift/reduce conflict.
State 383 contains 1 shift/reduce conflict.
State 400 contains 1 shift/reduce conflict.
State 409 contains 1 shift/reduce conflict.
State 410 contains 1 shift/reduce conflict.
State 411 contains 1 shift/reduce conflict.
State 417 contains 1 shift/reduce conflict.
State 460 contains 1 shift/reduce conflict.
State 461 contains 1 shift/reduce conflict.
State 463 contains 1 shift/reduce conflict.
State 464 contains 1 shift/reduce conflict.
State 466 contains 1 shift/reduce conflict.
State 467 contains 1 shift/reduce conflict.
State 490 contains 2 shift/reduce conflicts.
State 491 contains 2 shift/reduce conflicts.
State 493 contains 2 shift/reduce conflicts.
State 494 contains 2 shift/reduce conflicts.
State 495 contains 2 shift/reduce conflicts.
State 496 contains 2 shift/reduce conflicts.
State 497 contains 2 shift/reduce conflicts.
State 498 contains 2 shift/reduce conflicts.
State 500 contains 2 shift/reduce conflicts.
State 501 contains 2 shift/reduce conflicts.
State 503 contains 2 shift/reduce conflicts.
State 504 contains 2 shift/reduce conflicts.
State 527 contains 1 shift/reduce conflict.
State 549 contains 8 shift/reduce conflicts.
State 551 contains 8 shift/reduce conflicts.
State 571 contains 1 shift/reduce conflict.
State 605 contains 1 shift/reduce conflict.
State 606 contains 1 shift/reduce conflict.
State 607 contains 1 shift/reduce conflict.
State 624 contains 1 shift/reduce conflict.
State 625 contains 1 shift/reduce conflict.
State 629 contains 1 shift/reduce conflict.
State 659 contains 1 shift/reduce conflict.
State 660 contains 1 shift/reduce conflict.
State 661 contains 1 shift/reduce conflict.
State 685 contains 1 shift/reduce conflict.
State 705 contains 9 shift/reduce conflicts.
State 708 contains 10 shift/reduce conflicts.
State 825 contains 2 shift/reduce conflicts.
State 826 contains 2 shift/reduce conflicts.
State 842 contains 1 shift/reduce conflict.
State 843 contains 1 shift/reduce conflict.
State 855 contains 1 shift/reduce conflict.
State 856 contains 1 shift/reduce conflict.
State 861 contains 2 shift/reduce conflicts.
State 862 contains 2 shift/reduce conflicts.
State 864 contains 2 shift/reduce conflicts.
State 865 contains 2 shift/reduce conflicts.
State 971 contains 1 shift/reduce conflict.
State 972 contains 1 shift/reduce conflict.
State 974 contains 1 shift/reduce conflict.
State 975 contains 1 shift/reduce conflict.
State 976 contains 1 shift/reduce conflict.
State 977 contains 1 shift/reduce conflict.
State 994 contains 8 shift/reduce conflicts.
State 1002 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1008 contains 1 shift/reduce conflict.
State 1014 contains 8 shift/reduce conflicts.
State 1017 contains 8 shift/reduce conflicts.
State 1083 contains 1 shift/reduce conflict.
State 1085 contains 1 shift/reduce conflict.
State 1086 contains 1 shift/reduce conflict.
State 1088 contains 1 shift/reduce conflict.
State 1163 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1164 contains 1 shift/reduce conflict.
State 1165 contains 1 shift/reduce conflict.
State 1252 contains 1 shift/reduce conflict.
State 1253 contains 1 shift/reduce conflict.
State 1257 contains 1 shift/reduce conflict.
State 1258 contains 1 shift/reduce conflict.
State 1289 contains 1 shift/reduce conflict.
State 1292 contains 1 shift/reduce conflict.
State 1294 contains 1 shift/reduce conflict.
State 1295 contains 1 shift/reduce conflict.
State 1320 contains 1 shift/reduce conflict.
=======
#444   switch_statement :	 SWITCH OPEN_PAR factor CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR;
#445   case_par :	 CASE factor COLON OPEN_PAR statement CLOSE_PAR init_case_par;
#446   case_par :	 DEFAULT COLON OPEN_PAR statement CLOSE_PAR init_case_par;
#447   init_case_par :	 BREAK case_par;
#448   init_case_par :	 case_par;
#449   init_case_par :	;


Conflict in state 118 between rule 13 and token CHOP resolved as reduce.
Conflict in state 118 between rule 13 and token IFF resolved as reduce.
Conflict in state 118 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 118 between rule 13 and token OR resolved as reduce.
Conflict in state 118 between rule 13 and token AND resolved as reduce.
Conflict in state 118 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 119 between rule 23 and token CHOP resolved as reduce.
Conflict in state 119 between rule 23 and token IFF resolved as reduce.
Conflict in state 119 between rule 23 and token PROPIMPLY resolved as reduce.
Conflict in state 119 between rule 23 and token OR resolved as reduce.
Conflict in state 119 between rule 23 and token AND resolved as reduce.
Conflict in state 119 between rule 23 and token CHOPSTAR resolved as an error.
Conflict in state 172 between rule 22 and token CHOP resolved as reduce.
Conflict in state 172 between rule 22 and token IFF resolved as reduce.
Conflict in state 172 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 172 between rule 22 and token OR resolved as reduce.
Conflict in state 172 between rule 22 and token AND resolved as reduce.
Conflict in state 172 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 173 between rule 10 and token CHOP resolved as reduce.
Conflict in state 173 between rule 10 and token IFF resolved as reduce.
Conflict in state 173 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 173 between rule 10 and token OR resolved as reduce.
Conflict in state 173 between rule 10 and token AND resolved as reduce.
Conflict in state 173 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 174 between rule 9 and token CHOP resolved as reduce.
Conflict in state 174 between rule 9 and token IFF resolved as reduce.
Conflict in state 174 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 174 between rule 9 and token OR resolved as reduce.
Conflict in state 174 between rule 9 and token AND resolved as reduce.
Conflict in state 174 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 175 between rule 21 and token CHOP resolved as reduce.
Conflict in state 175 between rule 21 and token IFF resolved as reduce.
Conflict in state 175 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 175 between rule 21 and token OR resolved as reduce.
Conflict in state 175 between rule 21 and token AND resolved as reduce.
Conflict in state 175 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 176 between rule 12 and token CHOP resolved as reduce.
Conflict in state 176 between rule 12 and token IFF resolved as reduce.
Conflict in state 176 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 176 between rule 12 and token OR resolved as reduce.
Conflict in state 176 between rule 12 and token AND resolved as reduce.
Conflict in state 176 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 177 between rule 11 and token CHOP resolved as reduce.
Conflict in state 177 between rule 11 and token IFF resolved as reduce.
Conflict in state 177 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 177 between rule 11 and token OR resolved as reduce.
Conflict in state 177 between rule 11 and token AND resolved as reduce.
Conflict in state 177 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 364 between rule 253 and token IMPLY resolved as reduce.
Conflict in state 367 between rule 252 and token IMPLY resolved as reduce.
Conflict in state 391 between rule 8 and token CHOP resolved as reduce.
Conflict in state 391 between rule 8 and token IFF resolved as shift.
Conflict in state 391 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 391 between rule 8 and token OR resolved as shift.
Conflict in state 391 between rule 8 and token AND resolved as shift.
Conflict in state 391 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 392 between rule 6 and token CHOP resolved as reduce.
Conflict in state 392 between rule 6 and token IFF resolved as reduce.
Conflict in state 392 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 392 between rule 6 and token OR resolved as shift.
Conflict in state 392 between rule 6 and token AND resolved as shift.
Conflict in state 392 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 393 between rule 7 and token CHOP resolved as reduce.
Conflict in state 393 between rule 7 and token IFF resolved as reduce.
Conflict in state 393 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 393 between rule 7 and token OR resolved as shift.
Conflict in state 393 between rule 7 and token AND resolved as shift.
Conflict in state 393 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 394 between rule 5 and token CHOP resolved as reduce.
Conflict in state 394 between rule 5 and token IFF resolved as reduce.
Conflict in state 394 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 394 between rule 5 and token OR resolved as reduce.
Conflict in state 394 between rule 5 and token AND resolved as shift.
Conflict in state 394 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 395 between rule 4 and token CHOP resolved as reduce.
Conflict in state 395 between rule 4 and token IFF resolved as reduce.
Conflict in state 395 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 395 between rule 4 and token OR resolved as reduce.
Conflict in state 395 between rule 4 and token AND resolved as reduce.
Conflict in state 395 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 401 between rule 347 and token OR resolved as reduce.
Conflict in state 401 between rule 347 and token AND resolved as reduce.
Conflict in state 487 between rule 439 and token OR resolved as reduce.
Conflict in state 487 between rule 439 and token AND resolved as reduce.
Conflict in state 557 between rule 34 and token CHOP resolved as reduce.
Conflict in state 557 between rule 34 and token OR resolved as shift.
Conflict in state 557 between rule 34 and token PARALLEL resolved as shift.
Conflict in state 557 between rule 34 and token AND resolved as shift.
Conflict in state 558 between rule 33 and token CHOP resolved as reduce.
Conflict in state 558 between rule 33 and token OR resolved as reduce.
Conflict in state 558 between rule 33 and token PARALLEL resolved as reduce.
Conflict in state 558 between rule 33 and token AND resolved as shift.
Conflict in state 559 between rule 59 and token CHOP resolved as reduce.
Conflict in state 559 between rule 59 and token OR resolved as reduce.
Conflict in state 559 between rule 59 and token PARALLEL resolved as reduce.
Conflict in state 559 between rule 59 and token AND resolved as shift.
Conflict in state 560 between rule 32 and token CHOP resolved as reduce.
Conflict in state 560 between rule 32 and token OR resolved as reduce.
Conflict in state 560 between rule 32 and token PARALLEL resolved as reduce.
Conflict in state 560 between rule 32 and token AND resolved as reduce.
Conflict in state 562 between rule 82 and token CYLINDER resolved as reduce.
Conflict in state 642 between rule 349 and token OR resolved as reduce.
Conflict in state 642 between rule 349 and token AND resolved as shift.
Conflict in state 643 between rule 348 and token OR resolved as reduce.
Conflict in state 643 between rule 348 and token AND resolved as reduce.
Conflict in state 733 between rule 441 and token OR resolved as reduce.
Conflict in state 733 between rule 441 and token AND resolved as shift.
Conflict in state 734 between rule 440 and token OR resolved as reduce.
Conflict in state 734 between rule 440 and token AND resolved as reduce.
Conflict in state 918 between rule 234 and token CON resolved as reduce.
Conflict in state 1143 between rule 88 and token COMMA resolved as reduce.
Conflict in state 1143 between rule 88 and token OVEREP resolved as shift.
Conflict in state 1143 between rule 88 and token INTER_OR resolved as shift.
Conflict in state 1146 between rule 89 and token COMMA resolved as reduce.
Conflict in state 1146 between rule 89 and token OVEREP resolved as shift.
Conflict in state 1146 between rule 89 and token INTER_OR resolved as reduce.
State 156 contains 2 shift/reduce conflicts.
State 157 contains 2 shift/reduce conflicts.
State 159 contains 14 shift/reduce conflicts.
State 167 contains 2 shift/reduce conflicts.
State 168 contains 10 reduce/reduce conflicts.
State 187 contains 2 shift/reduce conflicts.
State 196 contains 14 reduce/reduce conflicts.
State 226 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 235 contains 3 reduce/reduce conflicts.
State 236 contains 3 reduce/reduce conflicts.
State 237 contains 3 reduce/reduce conflicts.
State 238 contains 3 reduce/reduce conflicts.
State 243 contains 1 shift/reduce conflict.
State 244 contains 3 reduce/reduce conflicts.
State 245 contains 3 reduce/reduce conflicts.
State 247 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 248 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 250 contains 1 shift/reduce conflict.
State 251 contains 3 reduce/reduce conflicts.
State 253 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 255 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 256 contains 1 shift/reduce conflict.
State 299 contains 1 shift/reduce conflict.
State 332 contains 1 shift/reduce conflict.
State 333 contains 1 shift/reduce conflict.
State 335 contains 1 shift/reduce conflict.
State 336 contains 1 shift/reduce conflict.
State 337 contains 1 shift/reduce conflict.
State 339 contains 2 shift/reduce conflicts.
State 340 contains 2 shift/reduce conflicts.
State 341 contains 2 shift/reduce conflicts.
State 342 contains 2 shift/reduce conflicts.
State 343 contains 2 shift/reduce conflicts.
State 344 contains 2 shift/reduce conflicts.
State 345 contains 2 shift/reduce conflicts.
State 346 contains 2 shift/reduce conflicts.
State 347 contains 2 shift/reduce conflicts.
State 348 contains 2 shift/reduce conflicts.
State 349 contains 2 shift/reduce conflicts.
State 350 contains 2 shift/reduce conflicts.
State 351 contains 2 shift/reduce conflicts.
State 352 contains 2 shift/reduce conflicts.
State 353 contains 2 shift/reduce conflicts.
State 354 contains 2 shift/reduce conflicts.
State 357 contains 2 shift/reduce conflicts.
State 358 contains 2 shift/reduce conflicts.
State 359 contains 2 shift/reduce conflicts.
State 364 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
State 399 contains 1 shift/reduce conflict.
State 402 contains 10 reduce/reduce conflicts.
State 403 contains 2 shift/reduce conflicts.
State 404 contains 2 shift/reduce conflicts.
State 431 contains 1 shift/reduce conflict.
State 432 contains 1 shift/reduce conflict.
State 433 contains 1 shift/reduce conflict.
State 434 contains 1 shift/reduce conflict.
State 450 contains 9 reduce/reduce conflicts.
State 451 contains 1 shift/reduce conflict.
State 453 contains 9 reduce/reduce conflicts.
State 457 contains 2 shift/reduce conflicts.
State 459 contains 9 reduce/reduce conflicts.
State 463 contains 1 shift/reduce conflict.
State 465 contains 1 shift/reduce conflict.
State 466 contains 1 shift/reduce conflict.
State 468 contains 1 shift/reduce conflict.
State 469 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 475 contains 1 shift/reduce conflict.
State 476 contains 1 shift/reduce conflict.
State 477 contains 1 shift/reduce conflict.
State 480 contains 1 shift/reduce conflict.
State 484 contains 1 shift/reduce conflict.
State 486 contains 3 reduce/reduce conflicts.
State 531 contains 1 shift/reduce conflict.
State 532 contains 1 shift/reduce conflict.
State 534 contains 1 shift/reduce conflict.
State 535 contains 1 shift/reduce conflict.
State 537 contains 1 shift/reduce conflict.
State 538 contains 1 shift/reduce conflict.
State 566 contains 2 shift/reduce conflicts.
State 567 contains 2 shift/reduce conflicts.
State 569 contains 2 shift/reduce conflicts.
State 570 contains 2 shift/reduce conflicts.
State 571 contains 2 shift/reduce conflicts.
State 572 contains 2 shift/reduce conflicts.
State 573 contains 2 shift/reduce conflicts.
State 574 contains 2 shift/reduce conflicts.
State 577 contains 2 shift/reduce conflicts.
State 578 contains 2 shift/reduce conflicts.
State 580 contains 2 shift/reduce conflicts.
State 581 contains 2 shift/reduce conflicts.
State 605 contains 1 shift/reduce conflict.
State 628 contains 8 shift/reduce conflicts.
State 630 contains 2 shift/reduce conflicts.
State 649 contains 1 shift/reduce conflict.
State 664 contains 1 shift/reduce conflict.
State 665 contains 1 shift/reduce conflict.
State 679 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 680 contains 1 shift/reduce conflict.
State 681 contains 1 shift/reduce conflict.
State 682 contains 1 shift/reduce conflict.
State 683 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 688 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 692 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 699 contains 1 shift/reduce conflict.
State 701 contains 1 shift/reduce conflict.
State 702 contains 1 shift/reduce conflict.
State 704 contains 1 shift/reduce conflict.
State 706 contains 1 shift/reduce conflict.
State 707 contains 1 shift/reduce conflict.
State 711 contains 1 shift/reduce conflict.
State 712 contains 1 shift/reduce conflict.
State 720 contains 1 shift/reduce conflict.
State 721 contains 1 shift/reduce conflict.
State 725 contains 1 shift/reduce conflict.
State 758 contains 1 shift/reduce conflict.
State 759 contains 1 shift/reduce conflict.
State 760 contains 1 shift/reduce conflict.
State 787 contains 1 shift/reduce conflict.
State 788 contains 1 shift/reduce conflict and 9 reduce/reduce conflicts.
State 815 contains 3 shift/reduce conflicts.
State 818 contains 10 shift/reduce conflicts.
State 876 contains 1 shift/reduce conflict.
State 878 contains 1 shift/reduce conflict.
State 879 contains 1 shift/reduce conflict.
State 881 contains 1 shift/reduce conflict.
State 921 contains 1 shift/reduce conflict.
State 925 contains 1 shift/reduce conflict.
State 928 contains 1 shift/reduce conflict.
State 929 contains 1 shift/reduce conflict.
State 945 contains 2 shift/reduce conflicts.
State 946 contains 2 shift/reduce conflicts.
State 967 contains 1 shift/reduce conflict.
State 968 contains 1 shift/reduce conflict.
State 980 contains 1 shift/reduce conflict.
State 981 contains 1 shift/reduce conflict.
State 987 contains 2 shift/reduce conflicts.
State 988 contains 2 shift/reduce conflicts.
State 990 contains 2 shift/reduce conflicts.
State 991 contains 2 shift/reduce conflicts.
State 994 contains 1 shift/reduce conflict.
State 1051 contains 1 shift/reduce conflict.
State 1053 contains 1 shift/reduce conflict.
State 1054 contains 1 shift/reduce conflict.
State 1057 contains 1 shift/reduce conflict.
State 1058 contains 1 shift/reduce conflict.
State 1074 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 1093 contains 1 shift/reduce conflict.
State 1094 contains 1 shift/reduce conflict.
State 1096 contains 1 shift/reduce conflict.
State 1097 contains 1 shift/reduce conflict.
State 1099 contains 1 shift/reduce conflict.
State 1100 contains 1 shift/reduce conflict.
State 1101 contains 1 shift/reduce conflict.
State 1102 contains 1 shift/reduce conflict.
State 1123 contains 2 shift/reduce conflicts.
State 1131 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1137 contains 1 shift/reduce conflict.
State 1148 contains 2 shift/reduce conflicts.
State 1151 contains 8 shift/reduce conflicts.
State 1178 contains 1 shift/reduce conflict.
State 1179 contains 10 reduce/reduce conflicts.
State 1195 contains 1 shift/reduce conflict.
State 1208 contains 1 shift/reduce conflict.
State 1210 contains 1 shift/reduce conflict.
State 1211 contains 1 shift/reduce conflict.
State 1213 contains 1 shift/reduce conflict.
State 1247 contains 1 shift/reduce conflict.
State 1252 contains 1 shift/reduce conflict.
State 1254 contains 1 shift/reduce conflict.
State 1284 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1285 contains 1 shift/reduce conflict.
State 1286 contains 1 shift/reduce conflict.
State 1290 contains 1 shift/reduce conflict.
State 1329 contains 1 shift/reduce conflict.
State 1331 contains 1 shift/reduce conflict.
State 1366 contains 1 shift/reduce conflict.
State 1367 contains 1 shift/reduce conflict.
State 1371 contains 1 shift/reduce conflict.
State 1372 contains 1 shift/reduce conflict.
State 1398 contains 1 shift/reduce conflict.
State 1401 contains 1 shift/reduce conflict.
State 1404 contains 1 shift/reduce conflict.
State 1406 contains 1 shift/reduce conflict.
State 1407 contains 1 shift/reduce conflict.
State 1432 contains 1 shift/reduce conflict.
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
<<<<<<< HEAD
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 60   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 61   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 62   statement -> struct_define_statement
rule 63   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 64   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 65   statement -> function
rule 66   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 67   statement -> OPEN_PAR statement CLOSE_PAR
rule 68   option_struct_declaration -> sign_declaration
rule 69   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 70   empty_statement -> statement
rule 71   empty_statement ->		/* empty */
rule 72   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   function -> file_statement
rule 75   function -> String_Function
rule 76   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 77   struct_identifier -> STRUCT ID
rule 78   struct_identifier -> UNION ID
rule 79   sign_declaration -> SIGNED declaration
rule 80   sign_declaration -> UNSIGNED declaration
rule 81   sign_declaration -> declaration
rule 82   declaration -> type_define option_identifier_array_declaration
rule 83   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> STRUCT ID option_identifier_array_declaration
rule 85   declaration -> UNION ID option_identifier_array_declaration
rule 86   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 87   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 88   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 89   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 90   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 91   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 92   type_define -> INTDECLARATION
rule 93   type_define -> FLOATDECLARATION
rule 94   type_define -> CHARDECLARATION
rule 95   type_define -> STRDECLARATION
rule 96   type_define -> VOIDDECLARATION
rule 97   type_define -> FILEDECLARATION
rule 98   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 106  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 107  inner_option_identifier_array_declaration -> COMMA error
rule 108  inner_option_identifier_array_declaration ->		/* empty */
rule 113  file_statement -> FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR
rule 114  file_statement -> FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR
rule 115  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 116  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 117  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 118  file_statement -> FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR
rule 119  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 120  ass_statement -> ass_left assign_operator ass_right
rule 121  ass_left -> identifier
rule 122  ass_left -> struct_member_exp
rule 123  ass_left -> array
rule 124  ass_left -> point_exp
rule 125  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 126  ass_left -> NEXT ass_left
rule 127  ass_left -> leftaddrshift
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 138  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  assign_operator -> ASS_P
rule 142  assign_operator -> ASS_N
rule 143  ass_right -> ari_exp
rule 144  ass_right -> array_exp
rule 145  ass_right -> strliteral
rule 146  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 147  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 148  ass_right -> rightaddrshift
rule 149  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 150  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 151  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 156  array -> OPEN_PAR array CLOSE_PAR
rule 157  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 158  option_ari_exp -> COMMA error
rule 159  option_ari_exp ->		/* empty */
rule 160  point_exp -> MUL identifier
rule 161  point_exp -> MUL point_exp
rule 162  point_exp -> MUL array
rule 163  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 164  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 165  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 166  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 167  ari_exp -> simple_ari_exp
rule 168  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 169  ari_exp -> ari_exp bi_operator simple_ari_exp
rule 170  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 171  type_cast_alg_exp -> simple_ari_exp
rule 172  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 173  option_exp_else_statement -> ELSE ari_exp
rule 174  option_exp_else_statement ->		/* empty */
rule 175  simple_ari_exp -> member_in_exp
rule 176  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 177  member_in_exp -> intliteral
rule 178  member_in_exp -> SUB member_in_exp
rule 179  member_in_exp -> BNE member_in_exp
rule 180  member_in_exp -> POINTERNULL
rule 181  member_in_exp -> floatliteral
rule 182  member_in_exp -> identifier
rule 183  member_in_exp -> array
rule 184  member_in_exp -> point_exp
rule 185  member_in_exp -> function
rule 186  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 187  member_in_exp -> math_function
rule 188  member_in_exp -> charliteral
rule 189  member_in_exp -> address_exp
rule 190  member_in_exp -> type_cast
rule 191  member_in_exp -> struct_member_exp
rule 192  member_in_exp -> size_of
rule 193  bi_operator -> MUL
rule 194  bi_operator -> DIV
rule 195  bi_operator -> MOD
rule 196  bi_operator -> LST
rule 197  bi_operator -> RST
rule 198  bi_operator -> ADDRESS
rule 199  bi_operator -> INTER_OR
rule 200  bi_operator -> CON
rule 201  ari_operator -> ADD
rule 202  ari_operator -> SUB
rule 203  array_exp -> array_exp CON array_exp
rule 204  array_exp -> option_list_value
rule 205  array_exp -> option_struct_list_value
rule 206  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 207  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 208  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 209  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 210  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 211  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 212  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 213  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 214  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 215  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 216  inner_option_list_value ->		/* empty */
rule 217  inner_option_list_value -> COMMA error
rule 218  address_exp -> ADDRESS identifier
rule 219  address_exp -> ADDRESS array
rule 220  address_exp -> ADDRESS struct_member_exp
rule 221  address_exp -> ADDRESS address_exp
rule 222  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 223  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 225  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 226  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 227  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 228  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 240  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 241  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 242  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 243  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 244  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 245  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 246  casted_element -> type_cast_alg_exp
rule 247  casted_element -> MALLOC OPEN_PAR ari_exp CLOSE_PAR
rule 248  all_sizeof_type -> all_type_define
rule 249  all_sizeof_type -> INTDECLARATION MUL
rule 250  all_sizeof_type -> FLOATDECLARATION MUL
rule 251  all_sizeof_type -> CHARDECLARATION MUL
rule 252  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 253  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 254  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 255  all_sizeof_type -> STRUCT_TYPE MUL
rule 256  size_of -> SIZEOF OPEN_PAR ari_exp CLOSE_PAR
rule 257  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 258  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 259  size_of -> SIZEOF OPEN_PAR strliteral CLOSE_PAR
rule 260  String_Function -> String_Function_head
rule 261  String_Function -> String_Function_tail
rule 262  String_Function -> String_Function_cat
rule 263  String_Function -> String_Function_cpy
rule 264  String_Function -> String_Function_cmp
rule 265  String_Function -> String_Function_len
rule 266  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 267  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 268  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 269  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 270  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 271  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 272  str_func_parameter -> identifier
rule 273  str_func_parameter -> array
rule 274  str_func_parameter -> point_exp
rule 275  str_func_parameter -> strliteral
rule 276  str_func_parameter -> String_Function
rule 277  str_func_parameter -> struct_member_exp
rule 278  math_function -> ROUND ari_exp
rule 279  math_function -> CEIL ari_exp
rule 280  math_function -> FLOOR ari_exp
rule 281  math_function -> SIN ari_exp
rule 282  math_function -> COS ari_exp
rule 283  math_function -> TAN ari_exp
rule 284  math_function -> ASIN ari_exp
rule 285  math_function -> ACOS ari_exp
rule 286  math_function -> ATAN ari_exp
rule 287  math_function -> SINH ari_exp
rule 288  math_function -> COSH ari_exp
rule 289  math_function -> TANH ari_exp
rule 290  math_function -> EXP ari_exp
rule 291  math_function -> LOG ari_exp
rule 292  math_function -> LOG10 ari_exp
rule 293  math_function -> SQRT ari_exp
rule 294  math_function -> ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 295  math_function -> POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 296  math_function -> FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 297  math_function -> MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 298  math_function -> LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 299  math_function -> ABS ari_exp
rule 300  math_function -> FABS ari_exp
rule 301  math_function -> LABS ari_exp
rule 302  bool_exp -> prime_bool_exp
rule 303  bool_exp -> NEGATION bool_exp
rule 304  bool_exp -> bool_exp AND bool_exp
rule 305  bool_exp -> bool_exp OR bool_exp
rule 306  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 307  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 308  prime_bool_exp -> MY_TRUE
rule 309  prime_bool_exp -> MY_FALSE
rule 310  prime_bool_exp -> ari_exp
rule 311  prime_bool_exp -> ari_exp EQ strliteral
rule 312  prime_bool_exp -> ari_exp NE strliteral
rule 313  prime_bool_exp -> strliteral EQ ari_exp
rule 314  prime_bool_exp -> strliteral NE ari_exp
rule 315  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 316  prime_bool_exp -> ari_exp NE POINTERNULL
rule 317  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 318  prime_bool_exp -> POINTERNULL NE ari_exp
rule 319  prime_bool_exp -> ari_exp EQ charliteral
rule 320  prime_bool_exp -> ari_exp NE charliteral
rule 321  relation_operator -> GE
rule 322  relation_operator -> LE
rule 323  relation_operator -> NE
rule 324  relation_operator -> GT
rule 325  relation_operator -> LT
rule 326  relation_operator -> EQ
rule 327  sign_type_define -> UNSIGNED INTDECLARATION
rule 328  sign_type_define -> UNSIGNED CHARDECLARATION
rule 329  all_type_define -> sign_type_define
rule 330  all_type_define -> type_define
rule 331  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 332  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 333  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 334  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 335  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 336  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 337  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 338  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 339  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 340  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 341  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 342  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 343  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 344  option_function_parameter_list -> ID inner_option_define_identifier
rule 345  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 346  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 347  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 348  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 349  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 350  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 351  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 352  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 353  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 354  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 355  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 356  option_function_parameter_list ->		/* empty */
rule 357  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 358  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 359  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 360  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 361  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 362  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 363  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 364  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 365  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 366  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 367  inner_option_define_identifier ->		/* empty */
rule 368  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 369  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 370  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 371  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 372  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 373  inner_option_define_identifier -> COMMA error
rule 374  option_function_identifier -> ass_right inner_option_function_identifier
rule 375  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 376  option_function_identifier ->		/* empty */
rule 377  option_function_identifier -> ADDRESS error
rule 378  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 379  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 380  inner_option_function_identifier ->		/* empty */
rule 381  inner_option_function_identifier -> COMMA error
rule 382  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 383  statement_bpar -> error CLOSE_BPAR
rule 384  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 385  bool_par -> error CLOSE_PAR
rule 386  identifier -> ID
rule 387  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 388  strliteral -> STRLITERAL
rule 389  intliteral -> INTLITERAL
rule 390  charliteral -> CHARLITERAL
rule 391  floatliteral -> FLOATLITERAL
rule 392  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 393  option_frame_identifier ->		/* empty */
rule 394  option_frame_identifier -> COMMA error
rule 395  option_projection ->		/* empty */
rule 396  option_projection -> COMMA statement option_projection
rule 397  imply_pre -> prime_bool_exp
rule 398  imply_pre -> NEGATION imply_pre
rule 399  imply_pre -> imply_pre AND imply_pre
rule 400  imply_pre -> imply_pre OR imply_pre
rule 401  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 402  while_statement -> WHILE bool_par statement_bpar
rule 403  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 404  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 405  for_sta_init -> ass_statement
rule 406  for_sta_init -> declaration
rule 407  for_sta_init ->		/* empty */
rule 408  for_sta_condition -> bool_exp
rule 409  for_sta_condition ->		/* empty */
rule 410  for_sta_control -> ass_statement
rule 411  for_sta_control ->		/* empty */
rule 412  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 413  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par
rule 414  option_case_par -> BREAK case_par
rule 415  option_case_par -> case_par
rule 416  option_case_par ->		/* empty */
rule 417  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 418  option_else_statement -> ELSE statement_bpar
rule 419  option_else_statement ->		/* empty */
rule 420  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 421  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 422  option_output ->		/* empty */
rule 423  option_output -> COMMA ass_right option_output
rule 424  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 425  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 426  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 427  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 428  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 429  option_input ->		/* empty */
rule 430  option_input -> COMMA identifier option_input
rule 431  option_input -> COMMA array option_input
rule 432  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 433  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 434  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 435  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 436  struct_member_exp -> array DOT array option_struct_member_exp
rule 437  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 438  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 439  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 440  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 441  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 442  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 443  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 444  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 445  struct_member_exp -> identifier DOT function
rule 446  struct_member_exp -> identifier IMPLY function
rule 447  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 448  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 449  option_struct_member_exp ->		/* empty */
rule 450  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 451  option_struct_member_exp -> DOT array option_struct_member_exp
rule 452  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 453  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 454  option_struct_member_exp -> DOT function
rule 455  option_struct_member_exp -> IMPLY function
=======
rule 17   complexProposition -> LENGTH alg_exp
rule 18   complexProposition -> LENGTH integer
rule 19   complexProposition -> EMPTY
rule 20   complexProposition -> MORE
rule 21   complexProposition -> HALT complexProposition
rule 22   complexProposition -> FINAL complexProposition
rule 23   complexProposition -> NEGATION complexProposition
rule 24   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 25   complexProposition -> ID
rule 26   complexProposition -> DEFINE ID COLON prime_bool_statement
rule 27   complexProposition -> complexProposition CHOPSTAR
rule 28   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 29   poptional_projection -> COMMA complexProposition poptional_projection
rule 30   poptional_projection ->		/* empty */
rule 31   pbool_expression -> alg_exp relation_operator alg_exp
rule 32   statement -> statement AND statement
rule 33   statement -> statement OR statement
rule 34   statement -> statement CHOP statement
rule 35   statement -> PREFIX OPEN_PAR statement CLOSE_PAR
rule 36   statement -> ass_statement
rule 37   statement -> file_statement
rule 38   statement -> sign_declaration
rule 39   statement -> if_statement
rule 40   statement -> while_statement
rule 41   statement -> for_statement
rule 42   statement -> extend_for_statement
rule 43   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 44   statement -> W_NEXT OPEN_PAR statement CLOSE_PAR
rule 45   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 46   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 47   statement -> HALT OPEN_PAR bool_statement CLOSE_PAR
rule 48   statement -> AWAIT OPEN_PAR bool_statement CLOSE_PAR
rule 49   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR
rule 50   statement -> SKIP
rule 51   statement -> EMPTY
rule 52   statement -> MORE
rule 53   statement -> LENGTH OPEN_PAR alg_exp CLOSE_PAR
rule 54   statement -> request_statement
rule 55   statement -> display_statement
rule 56   statement -> MY_TRUE
rule 57   statement -> MY_FALSE
rule 58   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 59   statement -> statement PARALLEL statement
rule 60   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 61   statement -> FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 62   statement -> OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION big_par
rule 63   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION big_par
rule 64   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR
rule 65   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 66   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR
rule 67   statement -> struct_define_statement
rule 68   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 69   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 70   statement -> String_Function
rule 71   statement -> CHANNEL identifier OPEN_PAR integer CLOSE_PAR
rule 72   statement -> SEND OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR
rule 73   statement -> PUT OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR
rule 74   statement -> RECEIVE OPEN_PAR ass_ident COMMA identifier CLOSE_PAR
rule 75   statement -> GET OPEN_PAR ass_ident COMMA identifier CLOSE_PAR
rule 76   statement -> function
rule 77   statement -> EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 78   statement -> OPEN_PAR statement CLOSE_PAR
rule 79   statement -> CYLINDER_STATEMENT
rule 80   option_struct_declaration -> sign_declaration
rule 81   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 82   CYLINDER_STATEMENT -> CYLINDER_STATEMENT CYLINDER CYLINDER_STATEMENT
rule 83   CYLINDER_STATEMENT -> OVER_STATEMENT
rule 84   CYLINDER_STATEMENT -> OPEN_PAR OVER_STATEMENT CLOSE_PAR
rule 85   OVER_STATEMENT -> big_par OVER OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR
rule 86   OVER_STATEMENT -> big_par OVER OPEN_PAR CLOSE_PAR
rule 87   INTERVAL_STATEMENT -> SIG_INTERVAL
rule 88   INTERVAL_STATEMENT -> INTERVAL_STATEMENT COMMA INTERVAL_STATEMENT
rule 89   INTERVAL_STATEMENT -> INTERVAL_STATEMENT INTER_OR INTERVAL_STATEMENT
rule 90   INTERVAL_STATEMENT -> INTERVAL_STATEMENT OVEREP alg_exp
rule 91   INTERVAL_STATEMENT -> INTERVAL_STATEMENT OVEREP NON_DETERMINED
rule 92   INTERVAL_STATEMENT -> OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR
rule 93   SIG_INTERVAL -> alg_exp
rule 94   empty_statement -> statement
rule 95   empty_statement ->		/* empty */
rule 96   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 97   function -> list OPEN_PAR option_function_identifier CLOSE_PAR
rule 98   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 99   struct_identifier -> STRUCT ID
rule 100  struct_identifier -> UNION ID
rule 101  sign_declaration -> SIGNED declaration
rule 102  sign_declaration -> UNSIGNED declaration
rule 103  sign_declaration -> declaration
rule 104  declaration -> type_define option_identifier_array_declaration
rule 105  declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 106  declaration -> STRUCT ID option_identifier_array_declaration
rule 107  declaration -> UNION ID option_identifier_array_declaration
rule 108  declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 109  declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 110  declaration -> POINTERDECLARATION option_function_parameter_list
rule 111  declaration -> LISTDECLARATION option_array_declaration
rule 112  declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 113  declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 114  declaration -> OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 115  declaration -> OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp
rule 116  type_define -> INTDECLARATION
rule 117  type_define -> FLOATDECLARATION
rule 118  type_define -> CHARDECLARATION
rule 119  type_define -> STRDECLARATION
rule 120  type_define -> VOIDDECLARATION
rule 121  type_define -> FILEDECLARATION
rule 122  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 123  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 124  option_identifier_array_declaration -> identifier ASS_EQU ass_exp inner_option_identifier_array_declaration
rule 125  option_identifier_array_declaration -> identifier ASS_EQU string inner_option_identifier_array_declaration
rule 126  option_identifier_array_declaration -> ID ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration
rule 127  option_identifier_array_declaration -> ID ARRAY ASS_EQU string inner_option_identifier_array_declaration
rule 128  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration
rule 129  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration
rule 130  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 131  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 132  inner_option_identifier_array_declaration -> COMMA error
rule 133  inner_option_identifier_array_declaration ->		/* empty */
rule 134  option_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration
rule 135  inner_option_array_declaration -> COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration
rule 136  inner_option_array_declaration ->		/* empty */
rule 137  inner_option_array_declaration -> COMMA error
rule 138  file_statement -> FOPEN OPEN_PAR ass_ident COMMA string CLOSE_PAR
rule 139  file_statement -> FGETS OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR
rule 140  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 141  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 142  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 143  file_statement -> FPUTC OPEN_PAR list COMMA identifier CLOSE_PAR
rule 144  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 145  ass_statement -> ass_ident assign_operator ass_exp
rule 146  ass_ident -> identifier
rule 147  ass_ident -> struct_member_exp
rule 148  ass_ident -> list
rule 149  ass_ident -> value_exp
rule 150  ass_ident -> OPEN_PAR ass_ident CLOSE_PAR
rule 151  ass_ident -> NEXT ass_ident
rule 152  ass_ident -> leftaddrshift
rule 153  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 154  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 155  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 156  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 157  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 158  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 159  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 160  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 161  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 162  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 163  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 164  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 165  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 166  assign_operator -> ASS_EQU
rule 167  assign_operator -> UNITASSIGN
rule 168  ass_exp -> alg_exp
rule 169  ass_exp -> list_exp
rule 170  ass_exp -> string
rule 171  ass_exp -> bool_statement
rule 172  ass_exp -> struct_member_exp
rule 173  ass_exp -> file_statement
rule 174  ass_exp -> OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 175  ass_exp -> OPEN_PAR ass_exp CLOSE_PAR
rule 176  ass_exp -> rightaddrshift
rule 177  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 178  list -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 179  list -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 180  list -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 181  list -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 182  list -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 183  list -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 184  list -> OPEN_PAR list CLOSE_PAR
rule 185  option_alg_exp -> COMMA alg_exp option_alg_exp
rule 186  option_alg_exp -> COMMA error
rule 187  option_alg_exp ->		/* empty */
rule 188  value_exp -> MUL identifier
rule 189  value_exp -> MUL value_exp
rule 190  value_exp -> MUL list
rule 191  value_exp -> OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 192  value_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp
rule 193  value_exp -> MUL OPEN_PAR alg_exp CLOSE_PAR
rule 194  value_exp -> OPEN_PAR value_exp CLOSE_PAR
rule 195  alg_exp -> simple_alg_exp
rule 196  alg_exp -> simple_alg_exp relation_operator alg_exp
rule 197  alg_exp -> alg_exp alg_operator simple_alg_exp
rule 198  alg_exp -> IF bool_statement THEN alg_exp optional_exp_else_statement
rule 199  type_cast_alg_exp -> simple_alg_exp
rule 200  type_cast_alg_exp -> simple_alg_exp alg_operator simple_alg_exp
rule 201  optional_exp_else_statement -> ELSE alg_exp
rule 202  optional_exp_else_statement ->		/* empty */
rule 203  simple_alg_exp -> factor
rule 204  simple_alg_exp -> simple_alg_exp mul_operator factor
rule 205  simple_alg_exp -> String_Function
rule 206  factor -> integer
rule 207  factor -> SUB factor
rule 208  factor -> BNE factor
rule 209  factor -> POINTERNULL
rule 210  factor -> floatliteral
rule 211  factor -> identifier
rule 212  factor -> list
rule 213  factor -> pre_next
rule 214  factor -> value_exp
rule 215  factor -> function
rule 216  factor -> OPEN_PAR alg_exp CLOSE_PAR
rule 217  factor -> Float_Function
rule 218  factor -> charliteral
rule 219  factor -> address_exp
rule 220  factor -> type_cast
rule 221  factor -> struct_member_exp
rule 222  factor -> size_of
rule 223  pre_next -> PREVIOUS OPEN_PAR identifier CLOSE_PAR
rule 224  mul_operator -> MUL
rule 225  mul_operator -> DIV
rule 226  mul_operator -> MOD
rule 227  mul_operator -> LST
rule 228  mul_operator -> RST
rule 229  mul_operator -> ADDRESS
rule 230  mul_operator -> INTER_OR
rule 231  mul_operator -> CON
rule 232  alg_operator -> ADD
rule 233  alg_operator -> SUB
rule 234  list_exp -> list_exp CON list_exp
rule 235  list_exp -> option_list_value
rule 236  list_exp -> option_struct_list_value
rule 237  list_exp -> OPEN_PAR list_exp CLOSE_PAR
rule 238  option_list_value -> OPEN_MPAR alg_exp inner_option_list_value CLOSE_MPAR
rule 239  option_list_value -> OPEN_MPAR string inner_option_list_value CLOSE_MPAR
rule 240  option_list_value -> OPEN_MPAR charliteral inner_option_list_value CLOSE_MPAR
rule 241  option_list_value -> OPEN_MPAR list_exp inner_option_list_value CLOSE_MPAR
rule 242  option_struct_list_value -> OPEN_BPAR alg_exp inner_option_list_value CLOSE_BPAR
rule 243  option_struct_list_value -> OPEN_BPAR string inner_option_list_value CLOSE_BPAR
rule 244  option_struct_list_value -> OPEN_BPAR charliteral inner_option_list_value CLOSE_BPAR
rule 245  option_struct_list_value -> OPEN_BPAR list_exp inner_option_list_value CLOSE_BPAR
rule 246  inner_option_list_value -> COMMA alg_exp inner_option_list_value
rule 247  inner_option_list_value -> COMMA string inner_option_list_value
rule 248  inner_option_list_value -> COMMA charliteral inner_option_list_value
rule 249  inner_option_list_value -> COMMA list_exp inner_option_list_value
rule 250  inner_option_list_value ->		/* empty */
rule 251  inner_option_list_value -> COMMA error
rule 252  address_exp -> ADDRESS identifier
rule 253  address_exp -> ADDRESS list
rule 254  address_exp -> ADDRESS struct_member_exp
rule 255  address_exp -> ADDRESS address_exp
rule 256  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 257  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 258  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 259  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 260  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 261  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 262  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 263  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 264  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 265  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 266  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 267  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 268  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 269  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 270  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 271  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 272  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 273  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 274  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 275  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 276  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 277  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 278  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 279  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 280  casted_element -> type_cast_alg_exp
rule 281  casted_element -> MALLOC OPEN_PAR alg_exp CLOSE_PAR
rule 282  all_sizeof_type -> all_type_define
rule 283  all_sizeof_type -> INTDECLARATION MUL
rule 284  all_sizeof_type -> FLOATDECLARATION MUL
rule 285  all_sizeof_type -> CHARDECLARATION MUL
rule 286  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 287  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 288  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 289  all_sizeof_type -> STRUCT_TYPE MUL
rule 290  size_of -> SIZEOF OPEN_PAR alg_exp CLOSE_PAR
rule 291  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 292  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 293  size_of -> SIZEOF OPEN_PAR string CLOSE_PAR
rule 294  String_Function -> String_Function_head
rule 295  String_Function -> String_Function_tail
rule 296  String_Function -> String_Function_cat
rule 297  String_Function -> String_Function_cpy
rule 298  String_Function -> String_Function_cmp
rule 299  String_Function -> String_Function_len
rule 300  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 301  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 302  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 303  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 304  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 305  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 306  str_func_parameter -> identifier
rule 307  str_func_parameter -> list
rule 308  str_func_parameter -> value_exp
rule 309  str_func_parameter -> string
rule 310  str_func_parameter -> String_Function
rule 311  str_func_parameter -> struct_member_exp
rule 312  Float_Function -> ROUND alg_exp
rule 313  Float_Function -> CEIL alg_exp
rule 314  Float_Function -> FLOOR alg_exp
rule 315  Float_Function -> SIN alg_exp
rule 316  Float_Function -> COS alg_exp
rule 317  Float_Function -> TAN alg_exp
rule 318  Float_Function -> ASIN alg_exp
rule 319  Float_Function -> ACOS alg_exp
rule 320  Float_Function -> ATAN alg_exp
rule 321  Float_Function -> SINH alg_exp
rule 322  Float_Function -> COSH alg_exp
rule 323  Float_Function -> TANH alg_exp
rule 324  Float_Function -> EXP alg_exp
rule 325  Float_Function -> LOG alg_exp
rule 326  Float_Function -> LOG10 alg_exp
rule 327  Float_Function -> SQRT alg_exp
rule 328  Float_Function -> ATAN2 OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 329  Float_Function -> POW OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 330  Float_Function -> FMOD OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 331  Float_Function -> MODF OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 332  Float_Function -> LDEXP OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 333  Float_Function -> ABS alg_exp
rule 334  Float_Function -> FABS alg_exp
rule 335  Float_Function -> LABS alg_exp
rule 336  bool_statement -> prime_bool_statement
rule 337  bool_statement -> alg_exp EQU string
rule 338  bool_statement -> alg_exp NE string
rule 339  bool_statement -> string EQU alg_exp
rule 340  bool_statement -> string NE alg_exp
rule 341  bool_statement -> alg_exp EQU POINTERNULL
rule 342  bool_statement -> alg_exp NE POINTERNULL
rule 343  bool_statement -> POINTERNULL EQU alg_exp
rule 344  bool_statement -> POINTERNULL NE alg_exp
rule 345  bool_statement -> alg_exp EQU charliteral
rule 346  bool_statement -> alg_exp NE charliteral
rule 347  bool_statement -> NEGATION bool_statement
rule 348  bool_statement -> bool_statement AND bool_statement
rule 349  bool_statement -> bool_statement OR bool_statement
rule 350  bool_statement -> OPEN_PAR bool_statement CLOSE_PAR
rule 351  prime_bool_statement -> alg_exp relation_operator alg_exp
rule 352  prime_bool_statement -> NEGATION prime_bool_statement
rule 353  prime_bool_statement -> MY_TRUE
rule 354  prime_bool_statement -> MY_FALSE
rule 355  prime_bool_statement -> MORE
rule 356  prime_bool_statement -> EMPTY
rule 357  prime_bool_statement -> alg_exp
rule 358  prime_bool_statement -> String_Function_cmp
rule 359  prime_bool_statement -> file_statement
rule 360  relation_operator -> GE
rule 361  relation_operator -> LE
rule 362  relation_operator -> NE
rule 363  relation_operator -> GT
rule 364  relation_operator -> LT
rule 365  relation_operator -> EQU
rule 366  sign_type_define -> UNSIGNED INTDECLARATION
rule 367  sign_type_define -> UNSIGNED CHARDECLARATION
rule 368  all_type_define -> sign_type_define
rule 369  all_type_define -> type_define
rule 370  option_function_parameter_list -> all_type_define identifier inner_optional_define_identifier
rule 371  option_function_parameter_list -> all_type_define inner_optional_define_identifier
rule 372  option_function_parameter_list -> STRUCT_TYPE identifier inner_optional_define_identifier
rule 373  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_optional_define_identifier
rule 374  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_optional_define_identifier
rule 375  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_optional_define_identifier
rule 376  option_function_parameter_list -> ID identifier inner_optional_define_identifier
rule 377  option_function_parameter_list -> ID MUL identifier inner_optional_define_identifier
rule 378  option_function_parameter_list -> ID MUL MUL identifier inner_optional_define_identifier
rule 379  option_function_parameter_list -> ID identifier ARRAY inner_optional_define_identifier
rule 380  option_function_parameter_list -> STRUCT_TYPE inner_optional_define_identifier
rule 381  option_function_parameter_list -> STRUCT_TYPE MUL inner_optional_define_identifier
rule 382  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_optional_define_identifier
rule 383  option_function_parameter_list -> ID inner_optional_define_identifier
rule 384  option_function_parameter_list -> ID MUL inner_optional_define_identifier
rule 385  option_function_parameter_list -> ID MUL MUL inner_optional_define_identifier
rule 386  option_function_parameter_list -> all_type_define identifier ARRAY inner_optional_define_identifier
rule 387  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_optional_define_identifier
rule 388  option_function_parameter_list -> all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 389  option_function_parameter_list -> all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 390  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 391  option_function_parameter_list -> all_type_define MUL identifier inner_optional_define_identifier
rule 392  option_function_parameter_list -> all_type_define MUL inner_optional_define_identifier
rule 393  option_function_parameter_list -> all_type_define MUL MUL identifier inner_optional_define_identifier
rule 394  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier
rule 395  option_function_parameter_list ->		/* empty */
rule 396  inner_optional_define_identifier -> COMMA all_type_define identifier inner_optional_define_identifier
rule 397  inner_optional_define_identifier -> COMMA all_type_define inner_optional_define_identifier
rule 398  inner_optional_define_identifier -> COMMA ID identifier inner_optional_define_identifier
rule 399  inner_optional_define_identifier -> COMMA STRUCT_TYPE identifier inner_optional_define_identifier
rule 400  inner_optional_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_optional_define_identifier
rule 401  inner_optional_define_identifier -> COMMA ID identifier ARRAY inner_optional_define_identifier
rule 402  inner_optional_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_optional_define_identifier
rule 403  inner_optional_define_identifier -> COMMA all_type_define identifier ARRAY inner_optional_define_identifier
rule 404  inner_optional_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_optional_define_identifier
rule 405  inner_optional_define_identifier -> COMMA all_type_define MUL identifier inner_optional_define_identifier
rule 406  inner_optional_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier
rule 407  inner_optional_define_identifier ->		/* empty */
rule 408  inner_optional_define_identifier -> COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 409  inner_optional_define_identifier -> COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 410  inner_optional_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 411  inner_optional_define_identifier -> COMMA all_type_define MUL identifier inner_optional_define_identifier
rule 412  inner_optional_define_identifier -> COMMA all_type_define MUL inner_optional_define_identifier
rule 413  inner_optional_define_identifier -> COMMA identifier inner_optional_define_identifier
rule 414  inner_optional_define_identifier -> COMMA error
rule 415  option_function_identifier -> ass_exp inner_option_function_identifier
rule 416  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 417  option_function_identifier ->		/* empty */
rule 418  option_function_identifier -> ADDRESS error
rule 419  inner_option_function_identifier -> COMMA ass_exp inner_option_function_identifier
rule 420  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 421  inner_option_function_identifier ->		/* empty */
rule 422  inner_option_function_identifier -> COMMA error
rule 423  big_par -> OPEN_BPAR statement CLOSE_BPAR
rule 424  big_par -> error CLOSE_BPAR
rule 425  bool_par -> OPEN_PAR bool_statement CLOSE_PAR
rule 426  bool_par -> error CLOSE_PAR
rule 427  identifier -> ID
rule 428  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 429  string -> STR
rule 430  integer -> INTEGER
rule 431  charliteral -> CHARLITERAL
rule 432  floatliteral -> FLOATLITERAL
rule 433  optional_frame_identifier -> COMMA identifier optional_frame_identifier
rule 434  optional_frame_identifier ->		/* empty */
rule 435  optional_frame_identifier -> COMMA error
rule 436  optional_projection ->		/* empty */
rule 437  optional_projection -> COMMA statement optional_projection
rule 438  imply_pre -> prime_bool_statement
rule 439  imply_pre -> NEGATION imply_pre
rule 440  imply_pre -> imply_pre AND imply_pre
rule 441  imply_pre -> imply_pre OR imply_pre
rule 442  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 443  while_statement -> WHILE bool_par big_par
rule 450  for_statement -> FOR alg_exp TIMES DO big_par
rule 451  extend_for_statement -> FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par
rule 452  for_sta_init -> ass_statement
rule 453  for_sta_init -> declaration
rule 454  for_sta_init ->		/* empty */
rule 455  for_sta_condition -> pbool_expression
rule 456  for_sta_condition ->		/* empty */
rule 457  for_sta_control -> ass_statement
rule 458  for_sta_control ->		/* empty */
rule 459  if_statement -> IF bool_statement THEN big_par optional_else_statement
rule 460  optional_else_statement -> ELSE big_par
rule 461  optional_else_statement ->		/* empty */
rule 462  display_statement -> DISPLAY OPEN_PAR ass_exp CLOSE_PAR
rule 463  display_statement -> DISPLAY OPEN_PAR ass_exp option_output CLOSE_PAR
rule 464  option_output ->		/* empty */
rule 465  option_output -> COMMA ass_exp option_output
rule 466  request_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 467  request_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 468  request_statement -> REQUEST OPEN_PAR list CLOSE_PAR
rule 469  request_statement -> REQUEST OPEN_PAR list option_input CLOSE_PAR
rule 470  request_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 471  option_input ->		/* empty */
rule 472  option_input -> COMMA identifier option_input
rule 473  option_input -> COMMA list option_input
rule 474  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 475  struct_member_exp -> list DOT identifier option_struct_member_exp
rule 476  struct_member_exp -> value_exp DOT identifier option_struct_member_exp
rule 477  struct_member_exp -> identifier DOT list option_struct_member_exp
rule 478  struct_member_exp -> list DOT list option_struct_member_exp
rule 479  struct_member_exp -> value_exp DOT list option_struct_member_exp
rule 480  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 481  struct_member_exp -> list IMPLY identifier option_struct_member_exp
rule 482  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 483  struct_member_exp -> value_exp IMPLY identifier option_struct_member_exp
rule 484  struct_member_exp -> identifier IMPLY list option_struct_member_exp
rule 485  struct_member_exp -> list IMPLY list option_struct_member_exp
rule 486  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY list option_struct_member_exp
rule 487  struct_member_exp -> identifier DOT function
rule 488  struct_member_exp -> identifier IMPLY function
rule 489  struct_member_exp -> value_exp IMPLY list option_struct_member_exp
rule 490  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 491  option_struct_member_exp ->		/* empty */
rule 492  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 493  option_struct_member_exp -> DOT list option_struct_member_exp
rule 494  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 495  option_struct_member_exp -> IMPLY list option_struct_member_exp
rule 496  option_struct_member_exp -> DOT function
rule 497  option_struct_member_exp -> IMPLY function
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

Terminals, with rules where they appear

$ (-1)
<<<<<<< HEAD
error (256) 107 112 158 217 373 377 381 383 385 394
SWITCH (258) 412
CASE (259) 413
BREAK (260) 414
IF (261) 170 417
ELSE (262) 173 418
EMPTY (263) 18 46
AWAIT (264) 43
PROJECTION (265) 23 57 58
PBEGIN (266) 2
PEND (267) 2
POINTERNULL (268) 180 315 316 317 318
ARRAY (269) 101 102 336 340 347 348 351 362 363 364 365 370
STRUCT (270) 77 84 86 242 244 254
DOT (271) 432 433 434 435 436 437 445 450 451 454
UNION (272) 78 85 87
FOPEN (273) 113
FCLOSE (274) 119
FILEDECLARATION (275) 97
FGETS (276) 114
FPUTS (277) 116
FGETC (278) 115
FPUTC (279) 117 118
MORE (280) 19 47
DEFINE (281) 25 59
MY_TRUE (282) 15 308
MY_FALSE (283) 16 309
EXIST (284) 66
FRAME (285) 56
FOR (286) 403 404
WHILE (287) 402
DO (288) 403
TRUE (289) 51
FALSE (290) 52
REPEAT (291) 44
UNTIL (292) 44
DISPLAY (293) 420 421
SKIP (294) 14 45
THEN (295) 170 417
COMMA (296) 28 106 107 110 112 113 114 116 117 118 157 158 213 214
    215 217 268 269 270 294 295 296 297 298 350 357 358 359 360 361
    362 363 364 365 366 368 369 370 371 372 373 378 379 381 392 394
    396 404 423 430 431
COLON (297) 25 66 413
INTDECLARATION (298) 92 130 134 137 138 139 140 151 152 223 226 228
    230 231 236 237 249 252 327
STRDECLARATION (299) 95
POINTERDECLARATION (300)
CHARDECLARATION (301) 94 128 129 132 133 134 135 136 137 138 139 154
    155 225 227 229 233 234 239 240 251 253 328
VOIDDECLARATION (302) 96 235 241
FLOATDECLARATION (303) 93 131 153 224 232 238 250
LISTDECLARATION (304)
OPEN_PAR (305) 27 40 41 42 43 44 48 53 55 56 59 60 61 63 64 67 72 73
    88 89 90 91 113 114 115 116 117 118 119 125 128 129 130 131 132
    133 134 135 136 137 138 139 140 146 147 149 151 152 153 154 155
    156 163 164 165 166 186 206 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 247
    256 257 258 259 266 267 268 269 270 271 294 295 296 297 298 306
    355 366 375 379 384 387 401 404 412 413 420 421 424 425 426 427
    428 440 444 448
CLOSE_PAR (306) 27 40 41 42 43 44 48 53 55 56 59 60 61 63 64 67 72
    73 88 89 90 91 113 114 115 116 117 118 119 125 128 129 130 131
    132 133 134 135 136 137 138 139 140 146 147 149 151 152 153 154
    155 156 163 164 165 166 186 206 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
    247 256 257 258 259 266 267 268 269 270 271 294 295 296 297 298
    306 355 366 375 379 384 385 387 401 404 412 413 420 421 424 425
    426 427 428 440 444 448
TIMES (307) 403
OPEN_BPAR (308) 23 44 57 58 59 60 61 66 76 210 211 212 382 412
CLOSE_BPAR (309) 23 44 57 58 59 60 61 66 76 210 211 212 382 383 412
OPEN_MPAR (310) 55 90 91 99 103 104 109 110 128 129 130 131 132 133
    134 135 136 137 138 139 140 150 151 152 153 154 155 163 207 208
    209 349 350 351 368 369 370
CLOSE_MPAR (311) 55 90 91 99 103 104 109 110 128 129 130 131 132 133
    134 135 136 137 138 139 140 150 151 152 153 154 155 163 207 208
    209 349 350 351 368 369 370
FUNCTION (312) 60
OVER (313)
CYLINDER (314)
OVEREP (315)
INTER_OR (316) 199
NON_DETERMINED (317)
SEND (318)
RECEIVE (319)
PROCESS (320) 61
CHANNEL (321)
PUT (322)
GET (323)
ERROR_TOKEN (324)
STRFUNCHEAD (325) 266
STRFUNCTAIL (326) 267
STRFUNCCAT (327) 268
STRFUNCCMP (328) 269
STRFUNCCPY (329) 270
STRFUNCLEN (330) 271
SIZEOF (331) 256 257 258 259
SYSTEM (332) 64
CEIL (333) 279
FLOOR (334) 280
ROUND (335) 278
SIN (336) 281
COS (337) 282
TAN (338) 283
ASIN (339) 284
ACOS (340) 285
ATAN (341) 286
SINH (342) 287
COSH (343) 288
TANH (344) 289
EXP (345) 290
LOG (346) 291
LOG10 (347) 292
SQRT (348) 293
ATAN2 (349) 294
POW (350) 295
ABS (351) 299
FABS (352) 300
LABS (353) 301
FMOD (354) 296
MODF (355) 297
LDEXP (356) 298
FREXP (357)
UNSIGNED (358) 80 129 133 135 136 137 139 152 155 228 229 231 234 237
    240 252 253 327 328
SIGNED (359) 79 226 227
MALLOC (360) 247
FREE (361) 63
CHOP (362) 8 32
IMPLY (363) 55 438 439 440 441 442 443 444 446 447 452 453 455
IFF (364) 6
PROPIMPLY (365) 7
OR (366) 5 31 305 400
PARALLEL (367) 54
AND (368) 4 30 56 69 304 399
ASS_P (369) 59 61 91 100 101 102 103 104 141
ASS_N (370) 142
CON (371) 200 203
ADDRESS (372) 198 218 219 220 221 377
NE (373) 312 314 316 318 320 323
EQ (374) 311 313 315 317 319 326
GE (375) 321
LE (376) 322
GT (377) 324
LT (378) 325
LST (379) 196
RST (380) 197
ADD (381) 201
SUB (382) 178 202
MUL (383) 88 89 90 91 105 128 129 130 131 132 133 134 135 136 137 138
    139 140 149 151 152 153 154 155 160 161 162 164 165 193 230 231
    232 233 234 235 236 237 238 239 240 241 242 243 244 245 249 250
    251 252 253 254 255 334 335 338 339 342 343 345 346 348 352 353
    354 355 361 365 366 371 372
DIV (384) 194
MOD (385) 195
BNE (386) 179
CHOPSTAR (387) 26
NEXT (388) 13 40 126
NEGATION (389) 22 303 398
LENGTH (390) 17 48
REQUEST (391) 424 425 426 427 428
FINAL (392) 21 53
KEEP (393) 10 41
ALWAYS (394) 9 42
HALT (395) 20
W_NEXT (396) 12
PREFIX (397)
SOMETIMES (398) 11
ID (399) 24 25 59 60 61 72 77 78 84 85 90 91 99 101 102 103 104 109
    110 150 151 152 153 154 155 337 338 339 340 344 345 346 359 362
    375 379 386
STRLITERAL (400) 388
STRUCT_TYPE (401) 83 86 87 242 243 244 245 254 255 258 333 334 335
    336 341 342 343 360 361 363
INTLITERAL (402) 128 129 130 131 132 133 134 135 136 137 138 139 140
    389
FLOATLITERAL (403) 391
CHARLITERAL (404) 390
=======
error (256) 132 137 186 251 414 418 422 424 426 435
IF (258) 198 459
ELSE (259) 201 460
EMPTY (260) 19 51 356
AWAIT (261) 48
PROJECTION (262) 24 62 63
PBEGIN (263) 2
PEND (264) 2
POINTERNULL (265) 209 341 342 343 344
ARRAY (266) 126 127 375 379 386 387 390 401 402 403 404 410
STRUCT (267) 99 106 108 276 278 288
DOT (268) 474 475 476 477 478 479 487 492 493 496
UNION (269) 100 107 109
FOPEN (270) 138
FCLOSE (271) 144
FILEDECLARATION (272) 121
FGETS (273) 139
FPUTS (274) 141
FGETC (275) 140
FPUTC (276) 142 143
MORE (277) 20 52 355
DEFINE (278) 26 64
MY_TRUE (279) 15 56 353
MY_FALSE (280) 16 57 354
EXIST (281) 77
FRAME (282) 61
FOR (283) 450 451
WHILE (284) 443
DO (285) 450
REPEAT (286) 49
UNTIL (287) 49
DISPLAY (288) 462 463
SKIP (289) 14 50
THEN (290) 198 459
COMMA (291) 29 72 73 74 75 88 131 132 135 137 138 139 141 142 143 185
    186 246 247 248 249 251 302 303 304 328 329 330 331 332 389 396
    397 398 399 400 401 402 403 404 405 406 408 409 410 411 412 413
    414 419 420 422 433 435 437 465 472 473
COLON (292) 26 77 445 446
INTDECLARATION (293) 116 155 159 162 163 164 165 179 180 257 260 262
    264 265 270 271 283 286 366
STRDECLARATION (294) 119
POINTERDECLARATION (295) 110
CHARDECLARATION (296) 118 153 154 157 158 159 160 161 162 163 164 182
    183 259 261 263 267 268 273 274 285 287 367
VOIDDECLARATION (297) 120 269 275
FLOATDECLARATION (298) 117 156 181 258 266 272 284
LISTDECLARATION (299) 111
OPEN_PAR (300) 28 35 43 44 45 46 47 48 49 53 58 60 61 64 65 66 68 69
    71 72 73 74 75 78 84 85 86 92 96 97 112 113 114 115 138 139 140
    141 142 143 144 150 153 154 155 156 157 158 159 160 161 162 163
    164 165 174 175 177 179 180 181 182 183 184 191 192 193 194 216
    223 237 256 257 258 259 260 261 262 263 264 265 266 267 268 269
    270 271 272 273 274 275 276 277 278 279 281 290 291 292 293 300
    301 302 303 304 305 328 329 330 331 332 350 394 406 416 420 425
    428 442 444 445 446 451 462 463 466 467 468 469 470 482 486 490
CLOSE_PAR (301) 28 35 43 44 45 46 47 48 49 53 58 60 61 64 65 66 68
    69 71 72 73 74 75 78 84 85 86 92 96 97 112 113 114 115 138 139
    140 141 142 143 144 150 153 154 155 156 157 158 159 160 161 162
    163 164 165 174 175 177 179 180 181 182 183 184 191 192 193 194
    216 223 237 256 257 258 259 260 261 262 263 264 265 266 267 268
    269 270 271 272 273 274 275 276 277 278 279 281 290 291 292 293
    300 301 302 303 304 305 328 329 330 331 332 350 394 406 416 420
    425 426 428 442 444 445 446 451 462 463 466 467 468 469 470 482
    486 490
TIMES (302) 450
OPEN_BPAR (303) 24 49 62 63 64 65 66 77 98 242 243 244 245 423 444
CLOSE_BPAR (304) 24 49 62 63 64 65 66 77 98 242 243 244 245 423 424
OPEN_MPAR (305) 60 114 115 123 128 129 134 135 153 154 155 156 157
    158 159 160 161 162 163 164 165 178 179 180 181 182 183 191 238
    239 240 241 388 389 390 408 409 410
CLOSE_MPAR (306) 60 114 115 123 128 129 134 135 153 154 155 156 157
    158 159 160 161 162 163 164 165 178 179 180 181 182 183 191 238
    239 240 241 388 389 390 408 409 410
FUNCTION (307) 65
OVER (308) 85 86
CYLINDER (309) 82
OVEREP (310) 90 91
INTER_OR (311) 89 230
NON_DETERMINED (312) 91
SEND (313) 72
RECEIVE (314) 74
PROCESS (315) 66
CHANNEL (316) 71
PUT (317) 73
GET (318) 75
ERROR_TOKEN (319)
STRFUNCHEAD (320) 300
STRFUNCTAIL (321) 301
STRFUNCCAT (322) 302
STRFUNCCMP (323) 303
STRFUNCCPY (324) 304
STRFUNCLEN (325) 305
SIZEOF (326) 290 291 292 293
SYSTEM (327) 69
SWITCH (328) 444
BREAK (329) 447
CASE (330) 445
DEFAULT (331) 446
CEIL (332) 313
FLOOR (333) 314
ROUND (334) 312
SIN (335) 315
COS (336) 316
TAN (337) 317
ASIN (338) 318
ACOS (339) 319
ATAN (340) 320
SINH (341) 321
COSH (342) 322
TANH (343) 323
EXP (344) 324
LOG (345) 325
LOG10 (346) 326
SQRT (347) 327
ATAN2 (348) 328
POW (349) 329
ABS (350) 333
FABS (351) 334
LABS (352) 335
FMOD (353) 330
MODF (354) 331
LDEXP (355) 332
FREXP (356)
UNSIGNED (357) 102 154 158 160 161 162 164 180 183 262 263 265 268
    271 274 286 287 366 367
SIGNED (358) 101 260 261
MALLOC (359) 281
FREE (360) 68
CHOP (361) 8 34 451
IMPLY (362) 60 480 481 482 483 484 485 486 488 489 494 495 497
IFF (363) 6
PROPIMPLY (364) 7
OR (365) 5 33 349 441
PARALLEL (366) 59
AND (367) 4 32 61 81 348 440
ASS_EQU (368) 64 66 115 124 125 126 127 128 129 166
UNITASSIGN (369) 167
CON (370) 231 234
ADDRESS (371) 229 252 253 254 255 418
NE (372) 338 340 342 344 346 362
EQU (373) 337 339 341 343 345 365
GE (374) 360
LE (375) 361
GT (376) 363
LT (377) 364
LST (378) 227
RST (379) 228
ADD (380) 232
SUB (381) 207 233
MUL (382) 112 113 114 115 130 153 154 155 156 157 158 159 160 161 162
    163 164 165 177 179 180 181 182 183 188 189 190 192 193 224 264
    265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 283
    284 285 286 287 288 289 373 374 377 378 381 382 384 385 387 391
    392 393 394 400 404 405 406 411 412
DIV (383) 225
MOD (384) 226
BNE (385) 208
CHOPSTAR (386) 27
NEXT (387) 13 43 151
NEGATION (388) 23 347 352 439
LENGTH (389) 17 18 53
REQUEST (390) 466 467 468 469 470
FINAL (391) 22 58
KEEP (392) 10 45
ALWAYS (393) 9 46
HALT (394) 21 47
W_NEXT (395) 12 44
PREFIX (396) 35
PREVIOUS (397) 223
SOMETIMES (398) 11
ID (399) 25 26 64 65 66 96 99 100 106 107 114 115 123 126 127 128 129
    134 135 178 179 180 181 182 183 376 377 378 379 383 384 385 398
    401 416 420 427
STR (400) 429
STRUCT_TYPE (401) 105 108 109 276 277 278 279 288 289 292 372 373 374
    375 380 381 382 399 400 402
INTEGER (402) 153 154 155 156 157 158 159 160 161 162 163 164 165 430
FLOATLITERAL (403) 432
CHARLITERAL (404) 431
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

Nonterminals, with rules where they appear

program (150)
    on left: 1
gComplexProposition (151)
    on left: 2 3, on right: 1
complexProposition (152)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
<<<<<<< HEAD
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (153)
    on left: 28 29, on right: 23 28
statement (154)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 60 66 67 70
    382 396 413
option_struct_declaration (155)
    on left: 68 69, on right: 69 76
empty_statement (156)
    on left: 70 71, on right: 59 61
function (157)
    on left: 72 73 74 75, on right: 65 146 185 445 446 454 455
struct_define_statement (158)
    on left: 76, on right: 62
struct_identifier (159)
    on left: 77 78, on right: 76
sign_declaration (160)
    on left: 79 80 81, on right: 34 68 69
declaration (161)
    on left: 82 83 84 85 86 87 88 89 90 91, on right: 79 80 81 406
type_define (162)
    on left: 92 93 94 95 96 97, on right: 82 146 330
option_identifier_array_declaration (163)
    on left: 98 99 100 101 102 103 104 105, on right: 82 83 84 85 86
    87 105 106
inner_option_identifier_array_declaration (164)
    on left: 106 107 108, on right: 98 99 100 101 102 103 104
file_statement (165)
    on left: 113 114 115 116 117 118 119, on right: 74
ass_statement (166)
    on left: 120, on right: 33 405 410
ass_left (167)
    on left: 121 122 123 124 125 126 127, on right: 113 120 125 126
leftaddrshift (168)
    on left: 128 129 130 131 132 133 134 135 136 137 138 139 140,
    on right: 127 149
assign_operator (169)
    on left: 141 142, on right: 120
ass_right (170)
    on left: 143 144 145 146 147 148, on right: 100 120 147 374 378
    420 421 423
rightaddrshift (171)
    on left: 149, on right: 148
array (172)
    on left: 150 151 152 153 154 155 156, on right: 73 118 123 156
    162 183 219 273 426 427 431 433 435 436 437 439 442 443 444 447
    451 453
option_ari_exp (173)
    on left: 157 158 159, on right: 90 91 99 103 104 109 110 128 129
    130 131 132 133 134 135 136 137 138 139 140 150 151 152 153 154
    155 157 163
point_exp (174)
    on left: 160 161 162 163 164 165 166, on right: 124 161 163 166
    184 274 434 437 441 447
ari_exp (175)
    on left: 167 168 169 170, on right: 17 48 90 91 99 103 104 109
    110 128 129 130 131 132 133 134 135 136 137 138 139 140 143 150
    151 152 153 154 155 157 163 164 165 168 169 170 173 186 207 210
    213 247 256 278 279 280 281 282 283 284 285 286 287 288 289 290
    291 292 293 294 295 296 297 298 299 300 301 307 310 311 312 313
    314 315 316 317 318 319 320 349 350 351 368 369 370 403
type_cast_alg_exp (176)
    on left: 171 172, on right: 223 224 225 226 227 228 229 246
option_exp_else_statement (177)
    on left: 173 174, on right: 170
simple_ari_exp (178)
    on left: 175 176, on right: 167 168 169 171 172 176
member_in_exp (179)
    on left: 177 178 179 180 181 182 183 184 185 186 187 188 189 190
    191 192, on right: 175 176 178 179 412 413
bi_operator (180)
    on left: 193 194 195 196 197 198 199 200, on right: 169 176
ari_operator (181)
    on left: 201 202, on right: 172
array_exp (182)
    on left: 203 204 205 206, on right: 91 101 103 144 203 206 209
    212 215
option_list_value (183)
    on left: 207 208 209, on right: 204
option_struct_list_value (184)
    on left: 210 211 212, on right: 205
inner_option_list_value (185)
    on left: 213 214 215 216 217, on right: 207 208 209 210 211 212
    213 214 215
address_exp (186)
    on left: 218 219 220 221 222, on right: 189 221 222 440 444
type_cast (187)
    on left: 223 224 225 226 227 228 229 230 231 232 233 234 235 236
    237 238 239 240 241 242 243 244 245, on right: 190
casted_element (188)
    on left: 246 247, on right: 230 231 232 233 234 235 236 237 238
    239 240 241 242 243 244 245
all_sizeof_type (189)
    on left: 248 249 250 251 252 253 254 255, on right: 257
size_of (190)
    on left: 256 257 258 259, on right: 192
String_Function (191)
    on left: 260 261 262 263 264 265, on right: 75 276
String_Function_head (192)
    on left: 266, on right: 260
String_Function_tail (193)
    on left: 267, on right: 261
String_Function_cat (194)
    on left: 268, on right: 262
String_Function_cmp (195)
    on left: 269, on right: 264
String_Function_cpy (196)
    on left: 270, on right: 263
String_Function_len (197)
    on left: 271, on right: 265
str_func_parameter (198)
    on left: 272 273 274 275 276 277, on right: 64 266 267 268 269
    270 271
math_function (199)
    on left: 278 279 280 281 282 283 284 285 286 287 288 289 290 291
    292 293 294 295 296 297 298 299 300 301, on right: 187
bool_exp (200)
    on left: 302 303 304 305 306, on right: 43 44 170 303 304 305 306
    384 408 417
prime_bool_exp (201)
    on left: 307 308 309 310 311 312 313 314 315 316 317 318 319 320
   , on right: 25 302 397
relation_operator (202)
    on left: 321 322 323 324 325 326, on right: 168 307
sign_type_define (203)
    on left: 327 328, on right: 329
all_type_define (204)
    on left: 329 330, on right: 164 248 331 332 347 348 349 350 351
    352 353 354 357 358 364 365 368 369 370 371 372
option_function_parameter_list (205)
    on left: 331 332 333 334 335 336 337 338 339 340 341 342 343 344
    345 346 347 348 349 350 351 352 353 354 355 356,
    on right: 59 60 61 88 89 90 91 146 355 366
inner_option_define_identifier (206)
    on left: 357 358 359 360 361 362 363 364 365 366 367 368 369 370
    371 372 373, on right: 66 331 332 333 334 335 336 337 338 339 340
    341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 357
    358 359 360 361 362 363 364 365 366 368 369 370 371 372
option_function_identifier (207)
    on left: 374 375 376 377, on right: 72 73 375 379
inner_option_function_identifier (208)
    on left: 378 379 380 381, on right: 374 375 378 379
statement_bpar (209)
    on left: 382 383, on right: 57 58 402 403 404 417 418
bool_par (210)
    on left: 384 385, on right: 402
identifier (211)
    on left: 386 387, on right: 56 63 66 88 89 98 100 114 115 116 117
    118 119 121 160 182 218 272 331 333 334 335 336 337 338 339 340
    347 348 349 350 351 352 354 355 357 359 360 361 362 363 364 365
    366 368 369 370 371 387 392 424 425 430 432 433 434 435 438 439
    440 441 442 445 446 450 452
strliteral (212)
    on left: 388, on right: 102 104 113 145 146 208 211 214 259 275
    311 312 313 314
intliteral (213)
    on left: 389, on right: 114 177
charliteral (214)
    on left: 390, on right: 188 319 320
floatliteral (215)
    on left: 391, on right: 181
option_frame_identifier (216)
    on left: 392 393 394, on right: 56 392
option_projection (217)
    on left: 395 396, on right: 57 396
imply_pre (218)
    on left: 397 398 399 400 401, on right: 55 398 399 400 401
while_statement (219)
    on left: 402, on right: 37
for_statement (220)
    on left: 403, on right: 38
extend_for_statement (221)
    on left: 404, on right: 39
for_sta_init (222)
    on left: 405 406 407, on right: 404
for_sta_condition (223)
    on left: 408 409, on right: 404
for_sta_control (224)
    on left: 410 411, on right: 404
switch_statement (225)
    on left: 412, on right: 35
case_par (226)
    on left: 413, on right: 412 414 415
option_case_par (227)
    on left: 414 415 416, on right: 413
if_statement (228)
    on left: 417, on right: 36
option_else_statement (229)
    on left: 418 419, on right: 417
output_statement (230)
    on left: 420 421, on right: 50
option_output (231)
    on left: 422 423, on right: 421 423
input_statement (232)
    on left: 424 425 426 427 428, on right: 49
option_input (233)
    on left: 429 430 431, on right: 425 427 430 431
struct_member_exp (234)
    on left: 432 433 434 435 436 437 438 439 440 441 442 443 444 445
    446 447 448, on right: 122 191 220 277 428 448
option_struct_member_exp (235)
    on left: 449 450 451 452 453 454 455, on right: 432 433 434 435
    436 437 438 439 440 441 442 443 444 447 450 451 452 453
=======
    24 25 26 27 28, on right: 2 4 5 6 7 8 9 10 11 12 13 21 22 23 24
    27 28 29
poptional_projection (153)
    on left: 29 30, on right: 24 29
pbool_expression (154)
    on left: 31, on right: 455
statement (155)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79, on right: 1 32 33 34 35 43 44 45 46
    49 58 59 60 61 62 63 65 77 78 94 423 437 445 446
option_struct_declaration (156)
    on left: 80 81, on right: 81 98
CYLINDER_STATEMENT (157)
    on left: 82 83 84, on right: 79 82
OVER_STATEMENT (158)
    on left: 85 86, on right: 83 84
INTERVAL_STATEMENT (159)
    on left: 87 88 89 90 91 92, on right: 85 88 89 90 91 92
SIG_INTERVAL (160)
    on left: 93, on right: 87
empty_statement (161)
    on left: 94 95, on right: 64 66
function (162)
    on left: 96 97, on right: 76 174 215 487 488 496 497
struct_define_statement (163)
    on left: 98, on right: 67
struct_identifier (164)
    on left: 99 100, on right: 98
sign_declaration (165)
    on left: 101 102 103, on right: 38 80 81
declaration (166)
    on left: 104 105 106 107 108 109 110 111 112 113 114 115,
    on right: 101 102 103 453
type_define (167)
    on left: 116 117 118 119 120 121, on right: 104 174 369
option_identifier_array_declaration (168)
    on left: 122 123 124 125 126 127 128 129 130, on right: 104 105
    106 107 108 109 130 131
inner_option_identifier_array_declaration (169)
    on left: 131 132 133, on right: 122 123 124 125 126 127 128 129
option_array_declaration (170)
    on left: 134, on right: 111
inner_option_array_declaration (171)
    on left: 135 136 137, on right: 134 135
file_statement (172)
    on left: 138 139 140 141 142 143 144, on right: 37 173 359
ass_statement (173)
    on left: 145, on right: 36 452 457
ass_ident (174)
    on left: 146 147 148 149 150 151 152, on right: 72 73 74 75 138
    145 150 151
leftaddrshift (175)
    on left: 153 154 155 156 157 158 159 160 161 162 163 164 165,
    on right: 152 177
assign_operator (176)
    on left: 166 167, on right: 145
ass_exp (177)
    on left: 168 169 170 171 172 173 174 175 176, on right: 72 73 124
    145 175 415 419 462 463 465
rightaddrshift (178)
    on left: 177, on right: 176
list (179)
    on left: 178 179 180 181 182 183 184, on right: 97 143 148 184
    190 212 253 307 468 469 473 475 477 478 479 481 484 485 486 489
    493 495
option_alg_exp (180)
    on left: 185 186 187, on right: 114 115 123 128 129 134 135 153
    154 155 156 157 158 159 160 161 162 163 164 165 178 179 180 181
    182 183 185 191
value_exp (181)
    on left: 188 189 190 191 192 193 194, on right: 149 189 191 194
    214 308 476 479 483 489
alg_exp (182)
    on left: 195 196 197 198, on right: 17 31 53 90 93 114 115 123
    128 129 134 135 153 154 155 156 157 158 159 160 161 162 163 164
    165 168 178 179 180 181 182 183 185 191 192 193 196 197 198 201
    216 238 242 246 281 290 312 313 314 315 316 317 318 319 320 321
    322 323 324 325 326 327 328 329 330 331 332 333 334 335 337 338
    339 340 341 342 343 344 345 346 351 357 388 389 390 408 409 410
    450
type_cast_alg_exp (183)
    on left: 199 200, on right: 257 258 259 260 261 262 263 280
optional_exp_else_statement (184)
    on left: 201 202, on right: 198
simple_alg_exp (185)
    on left: 203 204 205, on right: 195 196 197 199 200 204
factor (186)
    on left: 206 207 208 209 210 211 212 213 214 215 216 217 218 219
    220 221 222, on right: 203 204 207 208 444 445
pre_next (187)
    on left: 223, on right: 213
mul_operator (188)
    on left: 224 225 226 227 228 229 230 231, on right: 204
alg_operator (189)
    on left: 232 233, on right: 197 200
list_exp (190)
    on left: 234 235 236 237, on right: 115 126 128 169 234 237 241
    245 249
option_list_value (191)
    on left: 238 239 240 241, on right: 235
option_struct_list_value (192)
    on left: 242 243 244 245, on right: 236
inner_option_list_value (193)
    on left: 246 247 248 249 250 251, on right: 238 239 240 241 242
    243 244 245 246 247 248 249
address_exp (194)
    on left: 252 253 254 255 256, on right: 219 255 256 482 486
type_cast (195)
    on left: 257 258 259 260 261 262 263 264 265 266 267 268 269 270
    271 272 273 274 275 276 277 278 279, on right: 220
casted_element (196)
    on left: 280 281, on right: 264 265 266 267 268 269 270 271 272
    273 274 275 276 277 278 279
all_sizeof_type (197)
    on left: 282 283 284 285 286 287 288 289, on right: 291
size_of (198)
    on left: 290 291 292 293, on right: 222
String_Function (199)
    on left: 294 295 296 297 298 299, on right: 70 205 310
String_Function_head (200)
    on left: 300, on right: 294
String_Function_tail (201)
    on left: 301, on right: 295
String_Function_cat (202)
    on left: 302, on right: 296
String_Function_cmp (203)
    on left: 303, on right: 298 358
String_Function_cpy (204)
    on left: 304, on right: 297
String_Function_len (205)
    on left: 305, on right: 299
str_func_parameter (206)
    on left: 306 307 308 309 310 311, on right: 69 300 301 302 303
    304 305
Float_Function (207)
    on left: 312 313 314 315 316 317 318 319 320 321 322 323 324 325
    326 327 328 329 330 331 332 333 334 335, on right: 217
bool_statement (208)
    on left: 336 337 338 339 340 341 342 343 344 345 346 347 348 349
    350, on right: 47 48 49 171 198 347 348 349 350 425 459
prime_bool_statement (209)
    on left: 351 352 353 354 355 356 357 358 359, on right: 26 336
    352 438
relation_operator (210)
    on left: 360 361 362 363 364 365, on right: 31 196 351
sign_type_define (211)
    on left: 366 367, on right: 368
all_type_define (212)
    on left: 368 369, on right: 192 282 370 371 386 387 388 389 390
    391 392 393 396 397 403 404 405 408 409 410 411 412
option_function_parameter_list (213)
    on left: 370 371 372 373 374 375 376 377 378 379 380 381 382 383
    384 385 386 387 388 389 390 391 392 393 394 395,
    on right: 64 65 66 110 112 113 114 115 174 394 406
inner_optional_define_identifier (214)
    on left: 396 397 398 399 400 401 402 403 404 405 406 407 408 409
    410 411 412 413 414, on right: 77 370 371 372 373 374 375 376 377
    378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393
    394 396 397 398 399 400 401 402 403 404 405 406 408 409 410 411
    412 413
option_function_identifier (215)
    on left: 415 416 417 418, on right: 96 97 416 420
inner_option_function_identifier (216)
    on left: 419 420 421 422, on right: 415 416 419 420
big_par (217)
    on left: 423 424, on right: 62 63 85 86 443 450 451 459 460
bool_par (218)
    on left: 425 426, on right: 443
identifier (219)
    on left: 427 428, on right: 61 68 71 74 75 77 112 113 122 124 125
    139 140 141 142 143 144 146 188 211 223 252 306 370 372 373 374
    375 376 377 378 379 386 387 388 389 390 391 393 394 396 398 399
    400 401 402 403 404 405 406 408 409 410 411 413 428 433 466 467
    472 474 475 476 477 480 481 482 483 484 487 488 492 494
string (220)
    on left: 429, on right: 125 127 129 138 170 174 239 243 247 293
    309 337 338 339 340
integer (221)
    on left: 430, on right: 18 71 139 206
charliteral (222)
    on left: 431, on right: 218 240 244 248 345 346
floatliteral (223)
    on left: 432, on right: 210
optional_frame_identifier (224)
    on left: 433 434 435, on right: 61 433
optional_projection (225)
    on left: 436 437, on right: 62 437
imply_pre (226)
    on left: 438 439 440 441 442, on right: 60 439 440 441 442
while_statement (227)
    on left: 443, on right: 40
for_statement (228)
    on left: 450, on right: 41
extend_for_statement (229)
    on left: 451, on right: 42
for_sta_init (230)
    on left: 452 453 454, on right: 451
for_sta_condition (231)
    on left: 455 456, on right: 451
for_sta_control (232)
    on left: 457 458, on right: 451
if_statement (233)
    on left: 459, on right: 39
optional_else_statement (234)
    on left: 460 461, on right: 459
display_statement (235)
    on left: 462 463, on right: 55
option_output (236)
    on left: 464 465, on right: 463 465
request_statement (237)
    on left: 466 467 468 469 470, on right: 54
option_input (238)
    on left: 471 472 473, on right: 467 469 472 473
struct_member_exp (239)
    on left: 474 475 476 477 478 479 480 481 482 483 484 485 486 487
    488 489 490, on right: 147 172 221 254 311 470 490
option_struct_member_exp (240)
    on left: 491 492 493 494 495 496 497, on right: 474 475 476 477
    478 479 480 481 482 483 484 485 486 489 492 493 494 495
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

<<<<<<< HEAD
    program	go to state 1370
=======
    program	go to state 1482
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

<<<<<<< HEAD
    SWITCH	shift, and go to state 22
=======
    error	shift, and go to state 22
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
<<<<<<< HEAD
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
=======
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 74
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 84
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 3

<<<<<<< HEAD
    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)
=======
    complexProposition  ->  EMPTY .   (rule 19)

    $default	reduce using rule 19 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 4

<<<<<<< HEAD
    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)
=======
    complexProposition  ->  MORE .   (rule 20)

    $default	reduce using rule 20 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 5

<<<<<<< HEAD
    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 103
=======
    complexProposition  ->  DEFINE . ID COLON prime_bool_statement   (rule 26)

    ID  	shift, and go to state 115
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

<<<<<<< HEAD
    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)
=======
    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 28)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 104
=======
    complexProposition	go to state 116
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 10

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
=======
    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 105
=======
    complexProposition	go to state 117
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 106
=======
    complexProposition	go to state 118
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 12

<<<<<<< HEAD
    complexProposition  ->  NEGATION . complexProposition   (rule 22)
=======
    complexProposition  ->  NEGATION . complexProposition   (rule 23)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 107
=======
    complexProposition	go to state 119
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 13

<<<<<<< HEAD
    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 145
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  LENGTH . alg_exp   (rule 17)
    complexProposition  ->  LENGTH . integer   (rule 18)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 158
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 168
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 14

<<<<<<< HEAD
    complexProposition  ->  FINAL . complexProposition   (rule 21)
=======
    complexProposition  ->  FINAL . complexProposition   (rule 22)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 157
=======
    complexProposition	go to state 172
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 158
=======
    complexProposition	go to state 173
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 159
=======
    complexProposition	go to state 174
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 17

<<<<<<< HEAD
    complexProposition  ->  HALT . complexProposition   (rule 20)
=======
    complexProposition  ->  HALT . complexProposition   (rule 21)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 160
=======
    complexProposition	go to state 175
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 161
=======
    complexProposition	go to state 176
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 162
=======
    complexProposition	go to state 177
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 20

<<<<<<< HEAD
    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)
=======
    complexProposition  ->  ID .   (rule 25)

    $default	reduce using rule 25 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
<<<<<<< HEAD
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 163
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169
=======
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    PEND	shift, and go to state 178
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 22

<<<<<<< HEAD
    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    OPEN_PAR	shift, and go to state 170
=======
    big_par  ->  error . CLOSE_BPAR   (rule 424)

    CLOSE_BPAR	shift, and go to state 185
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 23

<<<<<<< HEAD
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 417)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
=======
    if_statement  ->  IF . bool_statement THEN big_par optional_else_statement   (rule 459)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 178
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 197
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 24

<<<<<<< HEAD
    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)
=======
    statement  ->  EMPTY .   (rule 51)

    $default	reduce using rule 51 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 25

<<<<<<< HEAD
    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 181
=======
    statement  ->  AWAIT . OPEN_PAR bool_statement CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 201
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 26

<<<<<<< HEAD
    struct_identifier  ->  STRUCT . ID   (rule 77)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)

    ID  	shift, and go to state 182
    STRUCT_TYPE	shift, and go to state 183
=======
    struct_identifier  ->  STRUCT . ID   (rule 99)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)

    ID  	shift, and go to state 202
    STRUCT_TYPE	shift, and go to state 203
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 27

<<<<<<< HEAD
    struct_identifier  ->  UNION . ID   (rule 78)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 184
    STRUCT_TYPE	shift, and go to state 185
=======
    struct_identifier  ->  UNION . ID   (rule 100)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 107)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 109)

    ID  	shift, and go to state 204
    STRUCT_TYPE	shift, and go to state 205
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 28

<<<<<<< HEAD
    file_statement  ->  FOPEN . OPEN_PAR ass_left COMMA strliteral CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 186
=======
    file_statement  ->  FOPEN . OPEN_PAR ass_ident COMMA string CLOSE_PAR   (rule 138)

    OPEN_PAR	shift, and go to state 206
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 29

<<<<<<< HEAD
    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 187
=======
    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 144)

    OPEN_PAR	shift, and go to state 207
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 30

<<<<<<< HEAD
    type_define  ->  FILEDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)
=======
    type_define  ->  FILEDECLARATION .   (rule 121)

    $default	reduce using rule 121 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 31

<<<<<<< HEAD
    file_statement  ->  FGETS . OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 188
=======
    file_statement  ->  FGETS . OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 208
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 32

<<<<<<< HEAD
    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 189
=======
    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 141)

    OPEN_PAR	shift, and go to state 209
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 33

<<<<<<< HEAD
    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 190
=======
    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 140)

    OPEN_PAR	shift, and go to state 210
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 34

<<<<<<< HEAD
    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 117)
    file_statement  ->  FPUTC . OPEN_PAR array COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 191
=======
    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 142)
    file_statement  ->  FPUTC . OPEN_PAR list COMMA identifier CLOSE_PAR   (rule 143)

    OPEN_PAR	shift, and go to state 211
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 35

<<<<<<< HEAD
    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)
=======
    statement  ->  MORE .   (rule 52)

    $default	reduce using rule 52 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 36

<<<<<<< HEAD
    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 192
=======
    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    ID  	shift, and go to state 212
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 37

<<<<<<< HEAD
    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 195
=======
    statement  ->  MY_TRUE .   (rule 56)

    $default	reduce using rule 56 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 38

<<<<<<< HEAD
    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 196
=======
    statement  ->  MY_FALSE .   (rule 57)

    $default	reduce using rule 57 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 39

<<<<<<< HEAD
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 403)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 197
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 198
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  EXIST . identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 215
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 40

<<<<<<< HEAD
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 402)

    error	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200

    bool_par	go to state 201
=======
    statement  ->  FRAME . OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    OPEN_PAR	shift, and go to state 216
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 41

<<<<<<< HEAD
    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)
=======
    for_statement  ->  FOR . alg_exp TIMES DO big_par   (rule 450)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 451)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 217
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 218
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 42

<<<<<<< HEAD
    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)
=======
    while_statement  ->  WHILE . bool_par big_par   (rule 443)

    error	shift, and go to state 219
    OPEN_PAR	shift, and go to state 220

    bool_par	go to state 221
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 43

<<<<<<< HEAD
    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 202
=======
    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    OPEN_BPAR	shift, and go to state 222
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 44

<<<<<<< HEAD
    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 420)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 421)

    OPEN_PAR	shift, and go to state 203
=======
    display_statement  ->  DISPLAY . OPEN_PAR ass_exp CLOSE_PAR   (rule 462)
    display_statement  ->  DISPLAY . OPEN_PAR ass_exp option_output CLOSE_PAR   (rule 463)

    OPEN_PAR	shift, and go to state 223
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 45

<<<<<<< HEAD
    statement  ->  SKIP .   (rule 45)

    $default	reduce using rule 45 (statement)
=======
    statement  ->  SKIP .   (rule 50)

    $default	reduce using rule 50 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 46

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)
=======
    type_define  ->  INTDECLARATION .   (rule 116)

    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 47

<<<<<<< HEAD
    type_define  ->  STRDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)
=======
    type_define  ->  STRDECLARATION .   (rule 119)

    $default	reduce using rule 119 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 48

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)
=======
    declaration  ->  POINTERDECLARATION . option_function_parameter_list   (rule 110)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 231
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 49

<<<<<<< HEAD
    type_define  ->  VOIDDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)
=======
    type_define  ->  CHARDECLARATION .   (rule 118)

    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 50

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)
=======
    type_define  ->  VOIDDECLARATION .   (rule 120)

    $default	reduce using rule 120 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 51

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 204
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 205
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    SYSTEM	shift, and go to state 61
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 207
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    statement	go to state 208
    function	go to state 209
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 213
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 215
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 216
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 217
=======
    type_define  ->  FLOATDECLARATION .   (rule 117)

    $default	reduce using rule 117 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 52

<<<<<<< HEAD
    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 218
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    declaration  ->  LISTDECLARATION . option_array_declaration   (rule 111)

    ID  	shift, and go to state 232
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_array_declaration	go to state 233


<<<<<<< HEAD
state 53

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 219
=======

state 53

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 78)
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    error	shift, and go to state 22
    IF  	shift, and go to state 234
    EMPTY	shift, and go to state 235
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 236
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 237
    MY_FALSE	shift, and go to state 238
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 239
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    SYSTEM	shift, and go to state 68
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 73
    NEGATION	shift, and go to state 241
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    statement	go to state 242
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 243
    function	go to state 244
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 245
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 250
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 251
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    big_par	go to state 106
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 254
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 255
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 54

<<<<<<< HEAD
    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ID  	shift, and go to state 220
=======
    statement  ->  OPEN_BPAR . statement optional_projection CLOSE_BPAR PROJECTION big_par   (rule 62)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION big_par   (rule 63)
    big_par  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 423)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 256
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 55

<<<<<<< HEAD
    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 266)

    OPEN_PAR	shift, and go to state 221
=======
    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    ID  	shift, and go to state 257
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 56

<<<<<<< HEAD
    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 267)

    OPEN_PAR	shift, and go to state 222
=======
    statement  ->  SEND . OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 258
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 57

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 223
=======
    statement  ->  RECEIVE . OPEN_PAR ass_ident COMMA identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 259
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 58

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 224
=======
    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    ID  	shift, and go to state 260
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 59

<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 225
=======
    statement  ->  CHANNEL . identifier OPEN_PAR integer CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 261
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 60

<<<<<<< HEAD
    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 226
=======
    statement  ->  PUT . OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 262
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 61

<<<<<<< HEAD
    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 64)

    OPEN_PAR	shift, and go to state 227
=======
    statement  ->  GET . OPEN_PAR ass_ident COMMA identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 263
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 62

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED . declaration   (rule 80)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 231
    type_define	go to state 80
=======
    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 300)

    OPEN_PAR	shift, and go to state 264
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 63

<<<<<<< HEAD
    sign_declaration  ->  SIGNED . declaration   (rule 79)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 232
    type_define	go to state 80
=======
    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 301)

    OPEN_PAR	shift, and go to state 265
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 64

<<<<<<< HEAD
    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 233
=======
    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 266
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 65

<<<<<<< HEAD
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 234
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 238
=======
    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 303)

    OPEN_PAR	shift, and go to state 267
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 66

<<<<<<< HEAD
    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 126)

    OPEN_PAR	shift, and go to state 239
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 241
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    struct_member_exp	go to state 102
=======
    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 304)

    OPEN_PAR	shift, and go to state 268
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 67

<<<<<<< HEAD
    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 243
=======
    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 305)

    OPEN_PAR	shift, and go to state 269
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 68

<<<<<<< HEAD
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 424)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 244
=======
    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 69)

    OPEN_PAR	shift, and go to state 270
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 69

<<<<<<< HEAD
    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 245
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 102)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 274
    type_define	go to state 92
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 70

<<<<<<< HEAD
    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 246
=======
    sign_declaration  ->  SIGNED . declaration   (rule 101)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 275
    type_define	go to state 92
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 71

<<<<<<< HEAD
    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 247
=======
    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 68)

    OPEN_PAR	shift, and go to state 276
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 72

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)
=======
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 277
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 281
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 73

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 252
    identifier	go to state 253
=======
    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 43)
    ass_ident  ->  NEXT . ass_ident   (rule 151)

    OPEN_PAR	shift, and go to state 282
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 284
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 74

<<<<<<< HEAD
    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 1 (program)
=======
    statement  ->  LENGTH . OPEN_PAR alg_exp CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 286
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 75

<<<<<<< HEAD
    statement  ->  function .   (rule 65)

    $default	reduce using rule 65 (statement)
=======
    request_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 466)
    request_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 467)
    request_statement  ->  REQUEST . OPEN_PAR list CLOSE_PAR   (rule 468)
    request_statement  ->  REQUEST . OPEN_PAR list option_input CLOSE_PAR   (rule 469)
    request_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 470)

    OPEN_PAR	shift, and go to state 287
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 76

<<<<<<< HEAD
    statement  ->  struct_define_statement .   (rule 62)

    $default	reduce using rule 62 (statement)
=======
    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 58)

    OPEN_PAR	shift, and go to state 288
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 77

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 76)

    OPEN_BPAR	shift, and go to state 258
=======
    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 289
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 78

<<<<<<< HEAD
    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)
=======
    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 46)

    OPEN_PAR	shift, and go to state 290
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 79

<<<<<<< HEAD
    sign_declaration  ->  declaration .   (rule 81)

    $default	reduce using rule 81 (sign_declaration)
=======
    statement  ->  HALT . OPEN_PAR bool_statement CLOSE_PAR   (rule 47)

    OPEN_PAR	shift, and go to state 291
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 80

<<<<<<< HEAD
    declaration  ->  type_define . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251
=======
    statement  ->  W_NEXT . OPEN_PAR statement CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 292
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_identifier_array_declaration	go to state 259
    identifier	go to state 253



<<<<<<< HEAD
state 81

    function  ->  file_statement .   (rule 74)

    $default	reduce using rule 74 (function)
=======
    statement  ->  PREFIX . OPEN_PAR statement CLOSE_PAR   (rule 35)

    OPEN_PAR	shift, and go to state 293
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 82

<<<<<<< HEAD
    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 294
    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 83

<<<<<<< HEAD
    ass_statement  ->  ass_left . assign_operator ass_right   (rule 120)
=======
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 298
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    ASS_P	shift, and go to state 260
    ASS_N	shift, and go to state 261

    assign_operator	go to state 262


<<<<<<< HEAD

state 84

    ass_left  ->  leftaddrshift .   (rule 127)

    $default	reduce using rule 127 (ass_left)
=======
    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 1 (program)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 85

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 123)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 265

    $default	reduce using rule 123 (ass_left)
=======
    statement  ->  CYLINDER_STATEMENT .   (rule 79)
    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT . CYLINDER CYLINDER_STATEMENT   (rule 82)

    CYLINDER	shift, and go to state 304

    $default	reduce using rule 79 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 86

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 124)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267

    $default	reduce using rule 124 (ass_left)
=======
    CYLINDER_STATEMENT  ->  OVER_STATEMENT .   (rule 83)

    $default	reduce using rule 83 (CYLINDER_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 87

<<<<<<< HEAD
    function  ->  String_Function .   (rule 75)

    $default	reduce using rule 75 (function)
=======
    statement  ->  function .   (rule 76)

    $default	reduce using rule 76 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 88

<<<<<<< HEAD
    String_Function  ->  String_Function_head .   (rule 260)

    $default	reduce using rule 260 (String_Function)
=======
    statement  ->  struct_define_statement .   (rule 67)

    $default	reduce using rule 67 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 89

<<<<<<< HEAD
    String_Function  ->  String_Function_tail .   (rule 261)

    $default	reduce using rule 261 (String_Function)
=======
    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 98)

    OPEN_BPAR	shift, and go to state 305
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 90

<<<<<<< HEAD
    String_Function  ->  String_Function_cat .   (rule 262)

    $default	reduce using rule 262 (String_Function)
=======
    statement  ->  sign_declaration .   (rule 38)

    $default	reduce using rule 38 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 91

<<<<<<< HEAD
    String_Function  ->  String_Function_cmp .   (rule 264)

    $default	reduce using rule 264 (String_Function)
=======
    sign_declaration  ->  declaration .   (rule 103)

    $default	reduce using rule 103 (sign_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 92

<<<<<<< HEAD
    String_Function  ->  String_Function_cpy .   (rule 263)

    $default	reduce using rule 263 (String_Function)
=======
    declaration  ->  type_define . option_identifier_array_declaration   (rule 104)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 306
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 93

<<<<<<< HEAD
    String_Function  ->  String_Function_len .   (rule 265)

    $default	reduce using rule 265 (String_Function)
=======
    statement  ->  file_statement .   (rule 37)

    $default	reduce using rule 37 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 94

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 121)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    $default	reduce using rule 121 (ass_left)
=======
    statement  ->  ass_statement .   (rule 36)

    $default	reduce using rule 36 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 95

<<<<<<< HEAD
    statement  ->  while_statement .   (rule 37)

    $default	reduce using rule 37 (statement)
=======
    ass_statement  ->  ass_ident . assign_operator ass_exp   (rule 145)

    ASS_EQU	shift, and go to state 307
    UNITASSIGN	shift, and go to state 308

    assign_operator	go to state 309
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 96

<<<<<<< HEAD
    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)
=======
    ass_ident  ->  leftaddrshift .   (rule 152)

    $default	reduce using rule 152 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 97

<<<<<<< HEAD
    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    ass_ident  ->  list .   (rule 148)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 312

    $default	reduce using rule 148 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 98

<<<<<<< HEAD
    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)
=======
    ass_ident  ->  value_exp .   (rule 149)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314

    $default	reduce using rule 149 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 99

<<<<<<< HEAD
    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)
=======
    statement  ->  String_Function .   (rule 70)

    $default	reduce using rule 70 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 100

<<<<<<< HEAD
    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)
=======
    String_Function  ->  String_Function_head .   (rule 294)

    $default	reduce using rule 294 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 101

<<<<<<< HEAD
    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)
=======
    String_Function  ->  String_Function_tail .   (rule 295)

    $default	reduce using rule 295 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 102

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 122)

    $default	reduce using rule 122 (ass_left)
=======
    String_Function  ->  String_Function_cat .   (rule 296)

    $default	reduce using rule 296 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 103

<<<<<<< HEAD
    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 270
=======
    String_Function  ->  String_Function_cmp .   (rule 298)

    $default	reduce using rule 298 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 104

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 271
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169
=======
    String_Function  ->  String_Function_cpy .   (rule 297)

    $default	reduce using rule 297 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 105

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 272
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 273
=======
    String_Function  ->  String_Function_len .   (rule 299)

    $default	reduce using rule 299 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 106

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)
=======
    OVER_STATEMENT  ->  big_par . OVER OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR   (rule 85)
    OVER_STATEMENT  ->  big_par . OVER OPEN_PAR CLOSE_PAR   (rule 86)

    OVER	shift, and go to state 315
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 107

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)
=======
    ass_ident  ->  identifier .   (rule 146)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    IMPLY	shift, and go to state 317

    $default	reduce using rule 146 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 108

<<<<<<< HEAD
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 170)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 274
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  while_statement .   (rule 40)

    $default	reduce using rule 40 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 109

<<<<<<< HEAD
    member_in_exp  ->  POINTERNULL .   (rule 180)
=======
    statement  ->  for_statement .   (rule 41)

    $default	reduce using rule 41 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 180 (member_in_exp)



<<<<<<< HEAD
state 110

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    statement  ->  extend_for_statement .   (rule 42)

    $default	reduce using rule 42 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 111

<<<<<<< HEAD
    size_of  ->  SIZEOF . OPEN_PAR ari_exp CLOSE_PAR   (rule 256)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 257)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF . OPEN_PAR strliteral CLOSE_PAR   (rule 259)

    OPEN_PAR	shift, and go to state 290
=======
    statement  ->  if_statement .   (rule 39)

    $default	reduce using rule 39 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 112

<<<<<<< HEAD
    math_function  ->  CEIL . ari_exp   (rule 279)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 291
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  display_statement .   (rule 55)

    $default	reduce using rule 55 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 113

<<<<<<< HEAD
    math_function  ->  FLOOR . ari_exp   (rule 280)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 292
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  request_statement .   (rule 54)

    $default	reduce using rule 54 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 114

<<<<<<< HEAD
    math_function  ->  ROUND . ari_exp   (rule 278)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 293
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    ass_ident  ->  struct_member_exp .   (rule 147)

    $default	reduce using rule 147 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 115

<<<<<<< HEAD
    math_function  ->  SIN . ari_exp   (rule 281)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 294
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  DEFINE ID . COLON prime_bool_statement   (rule 26)

    COLON	shift, and go to state 318
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 116

<<<<<<< HEAD
    math_function  ->  COS . ari_exp   (rule 282)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 295
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 28)

    CLOSE_PAR	shift, and go to state 319
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 117

<<<<<<< HEAD
    math_function  ->  TAN . ari_exp   (rule 283)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 296
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    COMMA	shift, and go to state 320
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 30 (poptional_projection)

    poptional_projection	go to state 321
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 118

<<<<<<< HEAD
    math_function  ->  ASIN . ari_exp   (rule 284)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 297
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 119

<<<<<<< HEAD
    math_function  ->  ACOS . ari_exp   (rule 285)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 298
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 23 (complexProposition)


<<<<<<< HEAD
    math_function  ->  ATAN . ari_exp   (rule 286)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
=======

state 120

    alg_exp  ->  IF . bool_statement THEN alg_exp optional_exp_else_statement   (rule 198)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 299
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 322
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 121

<<<<<<< HEAD
    math_function  ->  SINH . ari_exp   (rule 287)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 300
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    factor  ->  POINTERNULL .   (rule 209)

    $default	reduce using rule 209 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 122

<<<<<<< HEAD
    math_function  ->  COSH . ari_exp   (rule 288)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 301
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 123

<<<<<<< HEAD
    math_function  ->  TANH . ari_exp   (rule 289)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 302
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    size_of  ->  SIZEOF . OPEN_PAR alg_exp CLOSE_PAR   (rule 290)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 291)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 292)
    size_of  ->  SIZEOF . OPEN_PAR string CLOSE_PAR   (rule 293)

    OPEN_PAR	shift, and go to state 338
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 124

<<<<<<< HEAD
    math_function  ->  EXP . ari_exp   (rule 290)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 303
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  CEIL . alg_exp   (rule 313)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 339
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 125

<<<<<<< HEAD
    math_function  ->  LOG . ari_exp   (rule 291)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 304
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  FLOOR . alg_exp   (rule 314)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 340
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 126

<<<<<<< HEAD
    math_function  ->  LOG10 . ari_exp   (rule 292)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 305
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  ROUND . alg_exp   (rule 312)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 341
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 127

<<<<<<< HEAD
    math_function  ->  SQRT . ari_exp   (rule 293)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 306
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  SIN . alg_exp   (rule 315)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 342
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 128

<<<<<<< HEAD
    math_function  ->  ATAN2 . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 294)

    OPEN_PAR	shift, and go to state 307
=======
    Float_Function  ->  COS . alg_exp   (rule 316)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 343
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 129

<<<<<<< HEAD
    math_function  ->  POW . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 295)

    OPEN_PAR	shift, and go to state 308
=======
    Float_Function  ->  TAN . alg_exp   (rule 317)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 344
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 130

<<<<<<< HEAD
    math_function  ->  ABS . ari_exp   (rule 299)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 309
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  ASIN . alg_exp   (rule 318)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 345
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 131

<<<<<<< HEAD
    math_function  ->  FABS . ari_exp   (rule 300)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 310
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  ACOS . alg_exp   (rule 319)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 346
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 132

<<<<<<< HEAD
    math_function  ->  LABS . ari_exp   (rule 301)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 311
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  ATAN . alg_exp   (rule 320)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 347
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 133

<<<<<<< HEAD
    math_function  ->  FMOD . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    OPEN_PAR	shift, and go to state 312
=======
    Float_Function  ->  SINH . alg_exp   (rule 321)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 348
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 134

<<<<<<< HEAD
    math_function  ->  MODF . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    OPEN_PAR	shift, and go to state 313
=======
    Float_Function  ->  COSH . alg_exp   (rule 322)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 349
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 135

<<<<<<< HEAD
    math_function  ->  LDEXP . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    OPEN_PAR	shift, and go to state 314
=======
    Float_Function  ->  TANH . alg_exp   (rule 323)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 350
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 136

<<<<<<< HEAD
    address_exp  ->  ADDRESS . identifier   (rule 218)
    address_exp  ->  ADDRESS . array   (rule 219)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 220)
    address_exp  ->  ADDRESS . address_exp   (rule 221)

    OPEN_PAR	shift, and go to state 315
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
=======
    Float_Function  ->  EXP . alg_exp   (rule 324)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 351
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    array	go to state 316
    point_exp	go to state 317
    address_exp	go to state 318
    identifier	go to state 319
    struct_member_exp	go to state 320



<<<<<<< HEAD
state 137

    member_in_exp  ->  SUB . member_in_exp   (rule 178)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 321
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  LOG . alg_exp   (rule 325)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 352
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 138

<<<<<<< HEAD
    member_in_exp  ->  BNE . member_in_exp   (rule 179)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 322
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  LOG10 . alg_exp   (rule 326)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 353
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 139

<<<<<<< HEAD
    intliteral  ->  INTLITERAL .   (rule 389)

    $default	reduce using rule 389 (intliteral)
=======
    Float_Function  ->  SQRT . alg_exp   (rule 327)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 354
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 140

<<<<<<< HEAD
    floatliteral  ->  FLOATLITERAL .   (rule 391)

    $default	reduce using rule 391 (floatliteral)
=======
    Float_Function  ->  ATAN2 . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 328)

    OPEN_PAR	shift, and go to state 355
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 141

<<<<<<< HEAD
    charliteral  ->  CHARLITERAL .   (rule 390)

    $default	reduce using rule 390 (charliteral)



state 142

    member_in_exp  ->  function .   (rule 185)

    $default	reduce using rule 185 (member_in_exp)
=======
    Float_Function  ->  POW . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 329)

    OPEN_PAR	shift, and go to state 356



state 142

    Float_Function  ->  ABS . alg_exp   (rule 333)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 357
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 143

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    member_in_exp  ->  array .   (rule 183)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 265

    DOT 	[reduce using rule 183 (member_in_exp)]
    IMPLY	[reduce using rule 183 (member_in_exp)]
    $default	reduce using rule 183 (member_in_exp)
=======
    Float_Function  ->  FABS . alg_exp   (rule 334)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 358
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 144

<<<<<<< HEAD
    member_in_exp  ->  point_exp .   (rule 184)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267

    DOT 	[reduce using rule 184 (member_in_exp)]
    IMPLY	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)
=======
    Float_Function  ->  LABS . alg_exp   (rule 335)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 359
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 145

<<<<<<< HEAD
    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 17 (complexProposition)
=======
    Float_Function  ->  FMOD . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 330)

    OPEN_PAR	shift, and go to state 360
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    bi_operator	go to state 331


<<<<<<< HEAD

state 146

    ari_exp  ->  simple_ari_exp .   (rule 167)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    NE  	shift, and go to state 332
    EQ  	shift, and go to state 333
    GE  	shift, and go to state 334
    LE  	shift, and go to state 335
    GT  	shift, and go to state 336
    LT  	shift, and go to state 337
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 167 (ari_exp)]
    CON 	[reduce using rule 167 (ari_exp)]
    ADDRESS	[reduce using rule 167 (ari_exp)]
    NE  	[reduce using rule 167 (ari_exp)]
    EQ  	[reduce using rule 167 (ari_exp)]
    GE  	[reduce using rule 167 (ari_exp)]
    LE  	[reduce using rule 167 (ari_exp)]
    GT  	[reduce using rule 167 (ari_exp)]
    LT  	[reduce using rule 167 (ari_exp)]
    LST 	[reduce using rule 167 (ari_exp)]
    RST 	[reduce using rule 167 (ari_exp)]
    MUL 	[reduce using rule 167 (ari_exp)]
    DIV 	[reduce using rule 167 (ari_exp)]
    MOD 	[reduce using rule 167 (ari_exp)]
    $default	reduce using rule 167 (ari_exp)

    bi_operator	go to state 338
    relation_operator	go to state 339
=======
state 146

    Float_Function  ->  MODF . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 331)

    OPEN_PAR	shift, and go to state 361
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 147

<<<<<<< HEAD
    simple_ari_exp  ->  member_in_exp .   (rule 175)

    $default	reduce using rule 175 (simple_ari_exp)
=======
    Float_Function  ->  LDEXP . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 332)

    OPEN_PAR	shift, and go to state 362
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 148

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 189)

    $default	reduce using rule 189 (member_in_exp)
=======
    address_exp  ->  ADDRESS . identifier   (rule 252)
    address_exp  ->  ADDRESS . list   (rule 253)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 254)
    address_exp  ->  ADDRESS . address_exp   (rule 255)

    OPEN_PAR	shift, and go to state 363
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 364
    value_exp	go to state 365
    address_exp	go to state 366
    identifier	go to state 367
    struct_member_exp	go to state 368
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 149

<<<<<<< HEAD
    member_in_exp  ->  type_cast .   (rule 190)

    $default	reduce using rule 190 (member_in_exp)
=======
    factor  ->  SUB . factor   (rule 207)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    factor	go to state 369
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 150

<<<<<<< HEAD
    member_in_exp  ->  size_of .   (rule 192)

    $default	reduce using rule 192 (member_in_exp)
=======
    factor  ->  BNE . factor   (rule 208)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    factor	go to state 370
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 151

<<<<<<< HEAD
    member_in_exp  ->  math_function .   (rule 187)

    $default	reduce using rule 187 (member_in_exp)
=======
    pre_next  ->  PREVIOUS . OPEN_PAR identifier CLOSE_PAR   (rule 223)

    OPEN_PAR	shift, and go to state 371
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 152

<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 182)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269
=======
    integer  ->  INTEGER .   (rule 430)

    $default	reduce using rule 430 (integer)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	[reduce using rule 182 (member_in_exp)]
    IMPLY	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



<<<<<<< HEAD
state 153

    member_in_exp  ->  intliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)
=======
    floatliteral  ->  FLOATLITERAL .   (rule 432)

    $default	reduce using rule 432 (floatliteral)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 154

<<<<<<< HEAD
    member_in_exp  ->  charliteral .   (rule 188)

    $default	reduce using rule 188 (member_in_exp)
=======
    charliteral  ->  CHARLITERAL .   (rule 431)

    $default	reduce using rule 431 (charliteral)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 155

<<<<<<< HEAD
    member_in_exp  ->  floatliteral .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)
=======
    factor  ->  function .   (rule 215)

    $default	reduce using rule 215 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 156

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 191)

    $default	reduce using rule 191 (member_in_exp)
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    factor  ->  list .   (rule 212)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 312

    DOT 	[reduce using rule 212 (factor)]
    IMPLY	[reduce using rule 212 (factor)]
    $default	reduce using rule 212 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 157

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)
=======
    factor  ->  value_exp .   (rule 214)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314

    DOT 	[reduce using rule 214 (factor)]
    IMPLY	[reduce using rule 214 (factor)]
    $default	reduce using rule 214 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 158

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)
=======
    complexProposition  ->  LENGTH alg_exp .   (rule 17)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 17 (complexProposition)

    alg_operator	go to state 374


<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)
=======

state 159

    alg_exp  ->  simple_alg_exp .   (rule 195)
    alg_exp  ->  simple_alg_exp . relation_operator alg_exp   (rule 196)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 195 (alg_exp)]
    CON 	[reduce using rule 195 (alg_exp)]
    ADDRESS	[reduce using rule 195 (alg_exp)]
    NE  	[reduce using rule 195 (alg_exp)]
    EQU 	[reduce using rule 195 (alg_exp)]
    GE  	[reduce using rule 195 (alg_exp)]
    LE  	[reduce using rule 195 (alg_exp)]
    GT  	[reduce using rule 195 (alg_exp)]
    LT  	[reduce using rule 195 (alg_exp)]
    LST 	[reduce using rule 195 (alg_exp)]
    RST 	[reduce using rule 195 (alg_exp)]
    MUL 	[reduce using rule 195 (alg_exp)]
    DIV 	[reduce using rule 195 (alg_exp)]
    MOD 	[reduce using rule 195 (alg_exp)]
    $default	reduce using rule 195 (alg_exp)

    mul_operator	go to state 389
    relation_operator	go to state 390
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 160

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)
=======
    simple_alg_exp  ->  factor .   (rule 203)

    $default	reduce using rule 203 (simple_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 161

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)
=======
    factor  ->  pre_next .   (rule 213)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 213 (factor)



<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)
=======
state 162

    factor  ->  address_exp .   (rule 219)

    $default	reduce using rule 219 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 163

<<<<<<< HEAD
    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)
=======
    factor  ->  type_cast .   (rule 220)

    $default	reduce using rule 220 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 164

<<<<<<< HEAD
    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 340
=======
    factor  ->  size_of .   (rule 222)

    $default	reduce using rule 222 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 165

<<<<<<< HEAD
    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 341
=======
    simple_alg_exp  ->  String_Function .   (rule 205)

    $default	reduce using rule 205 (simple_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 166

<<<<<<< HEAD
    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20
=======
    factor  ->  Float_Function .   (rule 217)

    $default	reduce using rule 217 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    complexProposition	go to state 342



<<<<<<< HEAD
state 167

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 343
=======
    factor  ->  identifier .   (rule 211)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    IMPLY	shift, and go to state 317

    DOT 	[reduce using rule 211 (factor)]
    IMPLY	[reduce using rule 211 (factor)]
    $default	reduce using rule 211 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 168

<<<<<<< HEAD
    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 344
=======
    complexProposition  ->  LENGTH integer .   (rule 18)
    factor  ->  integer .   (rule 206)

    PEND	reduce using rule 18 (complexProposition)
    PEND	[reduce using rule 206 (factor)]
    COMMA	reduce using rule 18 (complexProposition)
    COMMA	[reduce using rule 206 (factor)]
    CLOSE_PAR	reduce using rule 18 (complexProposition)
    CLOSE_PAR	[reduce using rule 206 (factor)]
    CLOSE_BPAR	reduce using rule 18 (complexProposition)
    CLOSE_BPAR	[reduce using rule 206 (factor)]
    CHOP	reduce using rule 18 (complexProposition)
    CHOP	[reduce using rule 206 (factor)]
    IFF 	reduce using rule 18 (complexProposition)
    IFF 	[reduce using rule 206 (factor)]
    PROPIMPLY	reduce using rule 18 (complexProposition)
    PROPIMPLY	[reduce using rule 206 (factor)]
    OR  	reduce using rule 18 (complexProposition)
    OR  	[reduce using rule 206 (factor)]
    AND 	reduce using rule 18 (complexProposition)
    AND 	[reduce using rule 206 (factor)]
    CHOPSTAR	reduce using rule 18 (complexProposition)
    CHOPSTAR	[reduce using rule 206 (factor)]
    $default	reduce using rule 206 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 169

<<<<<<< HEAD
    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)
=======
    factor  ->  charliteral .   (rule 218)

    $default	reduce using rule 218 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 170

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 345
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    factor  ->  floatliteral .   (rule 210)

    $default	reduce using rule 210 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 171

<<<<<<< HEAD
    member_in_exp  ->  POINTERNULL .   (rule 180)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 317)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 318)

    NE  	shift, and go to state 346
    EQ  	shift, and go to state 347

    NE  	[reduce using rule 180 (member_in_exp)]
    EQ  	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)
=======
    factor  ->  struct_member_exp .   (rule 221)

    $default	reduce using rule 221 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 172

<<<<<<< HEAD
    prime_bool_exp  ->  MY_TRUE .   (rule 308)

    $default	reduce using rule 308 (prime_bool_exp)
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 173

<<<<<<< HEAD
    prime_bool_exp  ->  MY_FALSE .   (rule 309)

    $default	reduce using rule 309 (prime_bool_exp)
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 174

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 306)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 348
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 350
    prime_bool_exp	go to state 179
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 175

<<<<<<< HEAD
    bool_exp  ->  NEGATION . bool_exp   (rule 303)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 351
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 176

<<<<<<< HEAD
    strliteral  ->  STRLITERAL .   (rule 388)
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 388 (strliteral)


<<<<<<< HEAD

state 177

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 307)
    prime_bool_exp  ->  ari_exp .   (rule 310)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 311)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 315)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 319)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 320)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    NE  	shift, and go to state 352
    EQ  	shift, and go to state 353
    GE  	shift, and go to state 334
    LE  	shift, and go to state 335
    GT  	shift, and go to state 336
    LT  	shift, and go to state 337
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 310 (prime_bool_exp)

    bi_operator	go to state 331
    relation_operator	go to state 354
=======
state 177

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 178

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 417)

    THEN	shift, and go to state 355
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======
    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 179

<<<<<<< HEAD
    bool_exp  ->  prime_bool_exp .   (rule 302)

    $default	reduce using rule 302 (bool_exp)
=======
    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 391
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 180

<<<<<<< HEAD
    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 313)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 314)

    NE  	shift, and go to state 358
    EQ  	shift, and go to state 359
=======
    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    complexProposition	go to state 392



<<<<<<< HEAD
    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 360
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
state 181

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 393
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 182

<<<<<<< HEAD
    struct_identifier  ->  STRUCT ID .   (rule 77)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    $default	reduce using rule 77 (struct_identifier)

    option_identifier_array_declaration	go to state 361
    identifier	go to state 253
=======
    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 394
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 183

<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 362
    identifier	go to state 253
=======
    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 395
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 184

<<<<<<< HEAD
    struct_identifier  ->  UNION ID .   (rule 78)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    $default	reduce using rule 78 (struct_identifier)

    option_identifier_array_declaration	go to state 363
    identifier	go to state 253
=======
    complexProposition  ->  complexProposition CHOPSTAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 185

<<<<<<< HEAD
    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 364
    identifier	go to state 253
=======
    big_par  ->  error CLOSE_BPAR .   (rule 424)

    $default	reduce using rule 424 (big_par)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 186

<<<<<<< HEAD
    file_statement  ->  FOPEN OPEN_PAR . ass_left COMMA strliteral CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 366
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    struct_member_exp	go to state 102
=======
    prime_bool_statement  ->  EMPTY .   (rule 356)

    $default	reduce using rule 356 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 187

<<<<<<< HEAD
    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 367
=======
    factor  ->  POINTERNULL .   (rule 209)
    bool_statement  ->  POINTERNULL . EQU alg_exp   (rule 343)
    bool_statement  ->  POINTERNULL . NE alg_exp   (rule 344)

    NE  	shift, and go to state 396
    EQU 	shift, and go to state 397

    NE  	[reduce using rule 209 (factor)]
    EQU 	[reduce using rule 209 (factor)]
    $default	reduce using rule 209 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 188

<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR . identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 368
=======
    prime_bool_statement  ->  MORE .   (rule 355)

    $default	reduce using rule 355 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 189

<<<<<<< HEAD
    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 369
=======
    prime_bool_statement  ->  MY_TRUE .   (rule 353)

    $default	reduce using rule 353 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 190

<<<<<<< HEAD
    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 370
=======
    prime_bool_statement  ->  MY_FALSE .   (rule 354)

    $default	reduce using rule 354 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 191

<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 117)
    file_statement  ->  FPUTC OPEN_PAR . array COMMA identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 372
    identifier	go to state 373
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 399
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 400
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 192

<<<<<<< HEAD
    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 374
=======
    bool_statement  ->  NEGATION . bool_statement   (rule 347)
    prime_bool_statement  ->  NEGATION . prime_bool_statement   (rule 352)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 401
    prime_bool_statement	go to state 402
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 193

<<<<<<< HEAD
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 375
=======
    string  ->  STR .   (rule 429)

    $default	reduce using rule 429 (string)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 194

<<<<<<< HEAD
    identifier  ->  ID .   (rule 386)

    $default	reduce using rule 386 (identifier)
=======
    prime_bool_statement  ->  file_statement .   (rule 359)

    $default	reduce using rule 359 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 195

<<<<<<< HEAD
    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 377
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 196

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 378
=======
    String_Function  ->  String_Function_cmp .   (rule 298)
    prime_bool_statement  ->  String_Function_cmp .   (rule 358)

    $   	reduce using rule 298 (String_Function)
    $   	[reduce using rule 358 (prime_bool_statement)]
    PEND	reduce using rule 298 (String_Function)
    PEND	[reduce using rule 358 (prime_bool_statement)]
    THEN	reduce using rule 298 (String_Function)
    THEN	[reduce using rule 358 (prime_bool_statement)]
    COMMA	reduce using rule 298 (String_Function)
    COMMA	[reduce using rule 358 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 298 (String_Function)
    CLOSE_PAR	[reduce using rule 358 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 298 (String_Function)
    CLOSE_BPAR	[reduce using rule 358 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 298 (String_Function)
    CLOSE_MPAR	[reduce using rule 358 (prime_bool_statement)]
    CHOP	reduce using rule 298 (String_Function)
    CHOP	[reduce using rule 358 (prime_bool_statement)]
    IFF 	reduce using rule 298 (String_Function)
    IFF 	[reduce using rule 358 (prime_bool_statement)]
    PROPIMPLY	reduce using rule 298 (String_Function)
    PROPIMPLY	[reduce using rule 358 (prime_bool_statement)]
    OR  	reduce using rule 298 (String_Function)
    OR  	[reduce using rule 358 (prime_bool_statement)]
    PARALLEL	reduce using rule 298 (String_Function)
    PARALLEL	[reduce using rule 358 (prime_bool_statement)]
    AND 	reduce using rule 298 (String_Function)
    AND 	[reduce using rule 358 (prime_bool_statement)]
    CHOPSTAR	reduce using rule 298 (String_Function)
    CHOPSTAR	[reduce using rule 358 (prime_bool_statement)]
    $default	reduce using rule 298 (String_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 197

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 379
    UNION	shift, and go to state 229
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 380
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 381
    VOIDDECLARATION	shift, and go to state 382
    FLOATDECLARATION	shift, and go to state 383
    OPEN_PAR	shift, and go to state 384
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 385
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 407 (for_sta_init)

    function	go to state 142
    declaration	go to state 386
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 387
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 215
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    for_sta_init	go to state 388
    struct_member_exp	go to state 217
=======
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    if_statement  ->  IF bool_statement . THEN big_par optional_else_statement   (rule 459)

    THEN	shift, and go to state 406
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 198

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 403)

    TIMES	shift, and go to state 389
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    bool_statement  ->  prime_bool_statement .   (rule 336)

    $default	reduce using rule 336 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 199

<<<<<<< HEAD
    bool_par  ->  error . CLOSE_PAR   (rule 385)

    CLOSE_PAR	shift, and go to state 390
=======
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 200

<<<<<<< HEAD
    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 384)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 391
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    factor  ->  integer .   (rule 206)

    $default	reduce using rule 206 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 201

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par . statement_bpar   (rule 402)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393
=======
    statement  ->  AWAIT OPEN_PAR . bool_statement CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 411
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement_bpar	go to state 394



<<<<<<< HEAD
state 202

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 395
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    struct_identifier  ->  STRUCT ID .   (rule 99)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    $default	reduce using rule 99 (struct_identifier)

    option_identifier_array_declaration	go to state 412
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 203

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 420)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 421)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 400
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 413
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 204

<<<<<<< HEAD
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 170)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 417)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 407
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    struct_identifier  ->  UNION ID .   (rule 100)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    $default	reduce using rule 100 (struct_identifier)

    option_identifier_array_declaration	go to state 414
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 205

<<<<<<< HEAD
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 401)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 204
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 408
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 409
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 382
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 205
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    SYSTEM	shift, and go to state 61
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 413
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 207
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 385
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    statement	go to state 208
    function	go to state 209
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 215
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 414
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 217
=======
    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 109)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 415
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 206

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 234
    MUL 	shift, and go to state 415
    ID  	shift, and go to state 416
=======
    file_statement  ->  FOPEN OPEN_PAR . ass_ident COMMA string CLOSE_PAR   (rule 138)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 417
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 417



<<<<<<< HEAD
state 207

    imply_pre  ->  NEGATION . imply_pre   (rule 398)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 418
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 419
    struct_member_exp	go to state 156
=======
    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 144)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 418
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 208

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 67)

    CLOSE_PAR	shift, and go to state 420
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    file_statement  ->  FGETS OPEN_PAR . identifier COMMA integer COMMA identifier CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 419
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 209

<<<<<<< HEAD
    statement  ->  function .   (rule 65)
    member_in_exp  ->  function .   (rule 185)

    CLOSE_PAR	reduce using rule 65 (statement)
    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    CHOP	reduce using rule 65 (statement)
    OR  	reduce using rule 65 (statement)
    OR  	[reduce using rule 185 (member_in_exp)]
    PARALLEL	reduce using rule 65 (statement)
    AND 	reduce using rule 65 (statement)
    AND 	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)
=======
    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 141)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 420
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 210

<<<<<<< HEAD
    ass_statement  ->  ass_left . assign_operator ass_right   (rule 120)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 125)

    CLOSE_PAR	shift, and go to state 421
    ASS_P	shift, and go to state 260
    ASS_N	shift, and go to state 261

    assign_operator	go to state 262
=======
    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 140)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 421
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 211

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 123)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    member_in_exp  ->  array .   (rule 183)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    CLOSE_PAR	[reduce using rule 183 (member_in_exp)]
    ASS_P	reduce using rule 123 (ass_left)
    ASS_N	reduce using rule 123 (ass_left)
    $default	reduce using rule 183 (member_in_exp)
=======
    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 142)
    file_statement  ->  FPUTC OPEN_PAR . list COMMA identifier CLOSE_PAR   (rule 143)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 423
    identifier	go to state 424
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 212

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 124)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    member_in_exp  ->  point_exp .   (rule 184)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    ASS_P	reduce using rule 124 (ass_left)
    ASS_N	reduce using rule 124 (ass_left)
    $default	reduce using rule 184 (member_in_exp)
=======
    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 425
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 213

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 189)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 424

    CLOSE_PAR	[reduce using rule 189 (member_in_exp)]
    $default	reduce using rule 189 (member_in_exp)
=======
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 426
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 214

<<<<<<< HEAD
    imply_pre  ->  prime_bool_exp .   (rule 397)

    $default	reduce using rule 397 (imply_pre)
=======
    identifier  ->  ID .   (rule 427)

    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 215

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 121)
    member_in_exp  ->  identifier .   (rule 182)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 121 (ass_left)]
    CLOSE_PAR	[reduce using rule 182 (member_in_exp)]
    ASS_P	reduce using rule 121 (ass_left)
    ASS_N	reduce using rule 121 (ass_left)
    $default	reduce using rule 182 (member_in_exp)
=======
    statement  ->  EXIST identifier . inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    COMMA	shift, and go to state 427

    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 428
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 216

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)

    CLOSE_PAR	shift, and go to state 426
    OR  	shift, and go to state 427
    AND 	shift, and go to state 428
=======
    statement  ->  FRAME OPEN_PAR . identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 429
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 217

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 122)
    member_in_exp  ->  struct_member_exp .   (rule 191)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429

    CLOSE_PAR	[reduce using rule 122 (ass_left)]
    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    ASS_P	reduce using rule 122 (ass_left)
    ASS_N	reduce using rule 122 (ass_left)
    $default	reduce using rule 191 (member_in_exp)
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 451)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 430
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 431
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 432
    VOIDDECLARATION	shift, and go to state 433
    FLOATDECLARATION	shift, and go to state 434
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 283
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 436
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 454 (for_sta_init)

    function	go to state 155
    declaration	go to state 437
    type_define	go to state 92
    ass_statement	go to state 438
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    for_sta_init	go to state 439
    struct_member_exp	go to state 255
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 218

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    COMMA	shift, and go to state 430
    CLOSE_BPAR	shift, and go to state 431
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    CLOSE_BPAR	[reduce using rule 395 (option_projection)]
    $default	reduce using rule 395 (option_projection)

    option_projection	go to state 432
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    for_statement  ->  FOR alg_exp . TIMES DO big_par   (rule 450)

    TIMES	shift, and go to state 440
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 219

<<<<<<< HEAD
    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 433
=======
    bool_par  ->  error . CLOSE_PAR   (rule 426)

    CLOSE_PAR	shift, and go to state 441
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 220

<<<<<<< HEAD
    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)
=======
    bool_par  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 425)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 442
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_PAR	shift, and go to state 434



<<<<<<< HEAD
state 221

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 266)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 439
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    while_statement  ->  WHILE bool_par . big_par   (rule 443)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 444
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 222

<<<<<<< HEAD
    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 267)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 443
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 445
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 223

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 444
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    display_statement  ->  DISPLAY OPEN_PAR . ass_exp CLOSE_PAR   (rule 462)
    display_statement  ->  DISPLAY OPEN_PAR . ass_exp option_output CLOSE_PAR   (rule 463)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 451
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 224

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 445
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    MUL 	shift, and go to state 460
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 225

<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 446
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 366)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 367)

    INTDECLARATION	shift, and go to state 461
    CHARDECLARATION	shift, and go to state 462
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 226

<<<<<<< HEAD
    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 447
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    option_function_parameter_list  ->  ID . identifier inner_optional_define_identifier   (rule 376)
    option_function_parameter_list  ->  ID . MUL identifier inner_optional_define_identifier   (rule 377)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_optional_define_identifier   (rule 378)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_optional_define_identifier   (rule 379)
    option_function_parameter_list  ->  ID . inner_optional_define_identifier   (rule 383)
    option_function_parameter_list  ->  ID . MUL inner_optional_define_identifier   (rule 384)
    option_function_parameter_list  ->  ID . MUL MUL inner_optional_define_identifier   (rule 385)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 463
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 464
    identifier	go to state 465

<<<<<<< HEAD
    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 64)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 448
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5


state 227

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_optional_define_identifier   (rule 372)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_optional_define_identifier   (rule 373)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_optional_define_identifier   (rule 374)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_optional_define_identifier   (rule 375)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_optional_define_identifier   (rule 380)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_optional_define_identifier   (rule 381)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_optional_define_identifier   (rule 382)

<<<<<<< HEAD
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)

    ID  	shift, and go to state 449
    STRUCT_TYPE	shift, and go to state 183
=======
    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 466
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    inner_optional_define_identifier	go to state 467
    identifier	go to state 468


<<<<<<< HEAD
state 229

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 185
=======

state 228

    all_type_define  ->  type_define .   (rule 369)

    $default	reduce using rule 369 (all_type_define)



state 229

    all_type_define  ->  sign_type_define .   (rule 368)

    $default	reduce using rule 368 (all_type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 230

<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    MUL 	shift, and go to state 451
=======
    option_function_parameter_list  ->  all_type_define . identifier inner_optional_define_identifier   (rule 370)
    option_function_parameter_list  ->  all_type_define . inner_optional_define_identifier   (rule 371)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_optional_define_identifier   (rule 386)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_optional_define_identifier   (rule 387)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_optional_define_identifier   (rule 391)
    option_function_parameter_list  ->  all_type_define . MUL inner_optional_define_identifier   (rule 392)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_optional_define_identifier   (rule 393)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 469
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 470
    identifier	go to state 471
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 231

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED declaration .   (rule 80)
=======
    declaration  ->  POINTERDECLARATION option_function_parameter_list .   (rule 110)

    $default	reduce using rule 110 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 80 (sign_declaration)



<<<<<<< HEAD
state 232

    sign_declaration  ->  SIGNED declaration .   (rule 79)

    $default	reduce using rule 79 (sign_declaration)
=======
    option_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 134)

    OPEN_MPAR	shift, and go to state 472
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 233

<<<<<<< HEAD
    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 452
=======
    declaration  ->  LISTDECLARATION option_array_declaration .   (rule 111)

    $default	reduce using rule 111 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 234

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
=======
    alg_exp  ->  IF . bool_statement THEN alg_exp optional_exp_else_statement   (rule 198)
    if_statement  ->  IF . bool_statement THEN big_par optional_else_statement   (rule 459)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 453
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    type_define	go to state 454
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 455
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    sign_type_define	go to state 456
    all_type_define	go to state 457
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 473
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 235

<<<<<<< HEAD
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 386)

    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)
=======
    statement  ->  EMPTY .   (rule 51)
    prime_bool_statement  ->  EMPTY .   (rule 356)

    CLOSE_PAR	reduce using rule 51 (statement)
    CLOSE_PAR	[reduce using rule 356 (prime_bool_statement)]
    OR  	reduce using rule 51 (statement)
    OR  	[reduce using rule 356 (prime_bool_statement)]
    AND 	reduce using rule 51 (statement)
    AND 	[reduce using rule 356 (prime_bool_statement)]
    $default	reduce using rule 51 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 236

<<<<<<< HEAD
    point_exp  ->  MUL array .   (rule 162)

    $default	reduce using rule 162 (point_exp)
=======
    statement  ->  MORE .   (rule 52)
    prime_bool_statement  ->  MORE .   (rule 355)

    CLOSE_PAR	reduce using rule 52 (statement)
    CLOSE_PAR	[reduce using rule 355 (prime_bool_statement)]
    OR  	reduce using rule 52 (statement)
    OR  	[reduce using rule 355 (prime_bool_statement)]
    AND 	reduce using rule 52 (statement)
    AND 	[reduce using rule 355 (prime_bool_statement)]
    $default	reduce using rule 52 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 237

<<<<<<< HEAD
    point_exp  ->  MUL point_exp .   (rule 161)

    $default	reduce using rule 161 (point_exp)
=======
    statement  ->  MY_TRUE .   (rule 56)
    prime_bool_statement  ->  MY_TRUE .   (rule 353)

    CLOSE_PAR	reduce using rule 56 (statement)
    CLOSE_PAR	[reduce using rule 353 (prime_bool_statement)]
    OR  	reduce using rule 56 (statement)
    OR  	[reduce using rule 353 (prime_bool_statement)]
    AND 	reduce using rule 56 (statement)
    AND 	[reduce using rule 353 (prime_bool_statement)]
    $default	reduce using rule 56 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 238

<<<<<<< HEAD
    point_exp  ->  MUL identifier .   (rule 160)

    $default	reduce using rule 160 (point_exp)
=======
    statement  ->  MY_FALSE .   (rule 57)
    prime_bool_statement  ->  MY_FALSE .   (rule 354)

    CLOSE_PAR	reduce using rule 57 (statement)
    CLOSE_PAR	[reduce using rule 354 (prime_bool_statement)]
    OR  	reduce using rule 57 (statement)
    OR  	[reduce using rule 354 (prime_bool_statement)]
    AND 	reduce using rule 57 (statement)
    AND 	[reduce using rule 354 (prime_bool_statement)]
    $default	reduce using rule 57 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 239

<<<<<<< HEAD
    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 78)
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 442)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    error	shift, and go to state 22
    IF  	shift, and go to state 234
    EMPTY	shift, and go to state 235
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 474
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 458
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 459
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 460
    point_exp	go to state 461
    address_exp	go to state 462
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 463
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 464
=======
    MORE	shift, and go to state 236
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 237
    MY_FALSE	shift, and go to state 238
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 475
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 476
    VOIDDECLARATION	shift, and go to state 433
    FLOATDECLARATION	shift, and go to state 477
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 239
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    SYSTEM	shift, and go to state 68
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 478
    SIGNED	shift, and go to state 479
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 73
    NEGATION	shift, and go to state 241
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 436
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    statement	go to state 242
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 243
    function	go to state 244
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 245
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 480
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 251
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    big_par	go to state 106
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 481
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 255
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 240

<<<<<<< HEAD
    ass_left  ->  NEXT . ass_left   (rule 126)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 241
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    struct_member_exp	go to state 102
=======
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_PAR	shift, and go to state 277
    MUL 	shift, and go to state 482
    ID  	shift, and go to state 483

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 484


<<<<<<< HEAD
    ass_left  ->  NEXT ass_left .   (rule 126)

    $default	reduce using rule 126 (ass_left)
=======

state 241

    prime_bool_statement  ->  NEGATION . prime_bool_statement   (rule 352)
    imply_pre  ->  NEGATION . imply_pre   (rule 439)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 485
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 486
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 487
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 242

<<<<<<< HEAD
    ass_left  ->  array .   (rule 123)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    IMPLY	shift, and go to state 265

    $default	reduce using rule 123 (ass_left)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 78)

    CLOSE_PAR	shift, and go to state 488
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 243

<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 465
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    CYLINDER_STATEMENT  ->  OVER_STATEMENT .   (rule 83)
    CYLINDER_STATEMENT  ->  OPEN_PAR OVER_STATEMENT . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 489

    CLOSE_PAR	[reduce using rule 83 (CYLINDER_STATEMENT)]
    $default	reduce using rule 83 (CYLINDER_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 244

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 424)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 435
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 466
    point_exp	go to state 317
    identifier	go to state 467
    struct_member_exp	go to state 468
=======
    statement  ->  function .   (rule 76)
    factor  ->  function .   (rule 215)

    CLOSE_PAR	reduce using rule 76 (statement)
    CLOSE_PAR	[reduce using rule 215 (factor)]
    CHOP	reduce using rule 76 (statement)
    OR  	reduce using rule 76 (statement)
    OR  	[reduce using rule 215 (factor)]
    PARALLEL	reduce using rule 76 (statement)
    AND 	reduce using rule 76 (statement)
    AND 	[reduce using rule 215 (factor)]
    $default	reduce using rule 215 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 245

<<<<<<< HEAD
    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 469
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    statement  ->  file_statement .   (rule 37)
    prime_bool_statement  ->  file_statement .   (rule 359)

    CLOSE_PAR	reduce using rule 37 (statement)
    CLOSE_PAR	[reduce using rule 359 (prime_bool_statement)]
    OR  	reduce using rule 37 (statement)
    OR  	[reduce using rule 359 (prime_bool_statement)]
    AND 	reduce using rule 37 (statement)
    AND 	[reduce using rule 359 (prime_bool_statement)]
    $default	reduce using rule 37 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 246

<<<<<<< HEAD
    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 470
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    ass_statement  ->  ass_ident . assign_operator ass_exp   (rule 145)
    ass_ident  ->  OPEN_PAR ass_ident . CLOSE_PAR   (rule 150)

    CLOSE_PAR	shift, and go to state 490
    ASS_EQU	shift, and go to state 307
    UNITASSIGN	shift, and go to state 308

    assign_operator	go to state 309
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 247

<<<<<<< HEAD
    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 471
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    ass_ident  ->  list .   (rule 148)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    factor  ->  list .   (rule 212)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 148 (ass_ident)]
    CLOSE_PAR	[reduce using rule 212 (factor)]
    ASS_EQU	reduce using rule 148 (ass_ident)
    UNITASSIGN	reduce using rule 148 (ass_ident)
    $default	reduce using rule 212 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 248

<<<<<<< HEAD
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 475
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    ass_ident  ->  value_exp .   (rule 149)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    factor  ->  value_exp .   (rule 214)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314

    CLOSE_PAR	[reduce using rule 149 (ass_ident)]
    CLOSE_PAR	[reduce using rule 214 (factor)]
    ASS_EQU	reduce using rule 149 (ass_ident)
    UNITASSIGN	reduce using rule 149 (ass_ident)
    $default	reduce using rule 214 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 249

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 476
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 250

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253
=======
    factor  ->  address_exp .   (rule 219)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)

    CLOSE_PAR	shift, and go to state 493

    CLOSE_PAR	[reduce using rule 219 (factor)]
    $default	reduce using rule 219 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 251

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)
    identifier  ->  ID .   (rule 386)

    ARRAY	shift, and go to state 478
    OPEN_MPAR	shift, and go to state 479

    $default	reduce using rule 386 (identifier)
=======
    statement  ->  String_Function .   (rule 70)
    simple_alg_exp  ->  String_Function .   (rule 205)

    CLOSE_PAR	reduce using rule 70 (statement)
    CLOSE_PAR	[reduce using rule 205 (simple_alg_exp)]
    CHOP	reduce using rule 70 (statement)
    OR  	reduce using rule 70 (statement)
    OR  	[reduce using rule 205 (simple_alg_exp)]
    PARALLEL	reduce using rule 70 (statement)
    AND 	reduce using rule 70 (statement)
    AND 	[reduce using rule 205 (simple_alg_exp)]
    $default	reduce using rule 205 (simple_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 252

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)
=======
    imply_pre  ->  prime_bool_statement .   (rule 438)

    $default	reduce using rule 438 (imply_pre)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 253

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 480
    ASS_P	shift, and go to state 481

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 482
=======
    ass_ident  ->  identifier .   (rule 146)
    factor  ->  identifier .   (rule 211)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 428)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 146 (ass_ident)]
    CLOSE_PAR	[reduce using rule 211 (factor)]
    ASS_EQU	reduce using rule 146 (ass_ident)
    UNITASSIGN	reduce using rule 146 (ass_ident)
    $default	reduce using rule 211 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 254

<<<<<<< HEAD
    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 483
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 440)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 441)

    CLOSE_PAR	shift, and go to state 495
    OR  	shift, and go to state 496
    AND 	shift, and go to state 497
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 255

<<<<<<< HEAD
    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 484
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    ass_ident  ->  struct_member_exp .   (rule 147)
    factor  ->  struct_member_exp .   (rule 221)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 490)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 147 (ass_ident)]
    CLOSE_PAR	[reduce using rule 221 (factor)]
    ASS_EQU	reduce using rule 147 (ass_ident)
    UNITASSIGN	reduce using rule 147 (ass_ident)
    $default	reduce using rule 221 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 256

<<<<<<< HEAD
    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 485
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  OPEN_BPAR statement . optional_projection CLOSE_BPAR PROJECTION big_par   (rule 62)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION big_par   (rule 63)
    big_par  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 423)

    COMMA	shift, and go to state 499
    CLOSE_BPAR	shift, and go to state 500
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_BPAR	[reduce using rule 436 (optional_projection)]
    $default	reduce using rule 436 (optional_projection)

    optional_projection	go to state 501


<<<<<<< HEAD
    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 486
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======

state 257

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    OPEN_PAR	shift, and go to state 502
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 258

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 76)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 487
    sign_declaration	go to state 488
    declaration	go to state 79
    type_define	go to state 80
=======
    statement  ->  SEND OPEN_PAR . ass_ident COMMA ass_exp CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 503
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 259

<<<<<<< HEAD
    declaration  ->  type_define option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)
=======
    statement  ->  RECEIVE OPEN_PAR . ass_ident COMMA identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 504
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 260

<<<<<<< HEAD
    assign_operator  ->  ASS_P .   (rule 141)
=======
    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 505
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 141 (assign_operator)


<<<<<<< HEAD
=======
state 261

    statement  ->  CHANNEL identifier . OPEN_PAR integer CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 506
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 261

    assign_operator  ->  ASS_N .   (rule 142)

    $default	reduce using rule 142 (assign_operator)

<<<<<<< HEAD


state 262

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 120)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 489
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  PUT OPEN_PAR . ass_ident COMMA ass_exp CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 507
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 263

<<<<<<< HEAD
    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 436)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 490
    identifier	go to state 491
=======
    statement  ->  GET OPEN_PAR . ass_ident COMMA identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 508
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 264

<<<<<<< HEAD
    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 492
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 300)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 513
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 265

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 443)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 493
    identifier	go to state 494
=======
    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 301)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 517
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 266

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 437)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 495
    identifier	go to state 496
=======
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 518
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 267

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 447)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 497
    identifier	go to state 498
=======
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 303)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 519
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 268

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier DOT . function   (rule 445)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 499
    file_statement	go to state 81
    array	go to state 500
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 501
=======
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 304)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 520
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 269

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier IMPLY . function   (rule 446)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 502
    file_statement	go to state 81
    array	go to state 503
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 504
=======
    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 305)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 521
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 270

<<<<<<< HEAD
    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 505
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 69)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 522
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 271

<<<<<<< HEAD
    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)
=======
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)

    ID  	shift, and go to state 523
    STRUCT_TYPE	shift, and go to state 203
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 272

<<<<<<< HEAD
    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 506
=======
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 107)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 109)

    ID  	shift, and go to state 524
    STRUCT_TYPE	shift, and go to state 205
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 273

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 507
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    MUL 	shift, and go to state 525
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 274

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 170)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)

    THEN	shift, and go to state 508
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======
    sign_declaration  ->  UNSIGNED declaration .   (rule 102)

    $default	reduce using rule 102 (sign_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 275

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)

    STRUCT_TYPE	shift, and go to state 509
=======
    sign_declaration  ->  SIGNED declaration .   (rule 101)

    $default	reduce using rule 101 (sign_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 276

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 511
=======
    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 68)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 526
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 277

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 513
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL OPEN_PAR . alg_exp CLOSE_PAR   (rule 193)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 225
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    type_define	go to state 228
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 527
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    sign_type_define	go to state 229
    all_type_define	go to state 528
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171


>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 278

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    identifier  ->  ID .   (rule 427)

    OPEN_MPAR	shift, and go to state 295

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    MUL 	shift, and go to state 514
=======
    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 279

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 516

=======
    value_exp  ->  MUL list .   (rule 190)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 190 (value_exp)


<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289



state 281
=======

state 280

    value_exp  ->  MUL value_exp .   (rule 189)

    $default	reduce using rule 189 (value_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 521
    CHARDECLARATION	shift, and go to state 522


<<<<<<< HEAD

state 282

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)

    INTDECLARATION	shift, and go to state 523
    CHARDECLARATION	shift, and go to state 524
=======
    value_exp  ->  MUL identifier .   (rule 188)

    $default	reduce using rule 188 (value_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 283

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 245)

    MUL 	shift, and go to state 525



state 284

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    member_in_exp  ->  array .   (rule 183)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 183 (member_in_exp)]
    $default	reduce using rule 183 (member_in_exp)
=======
    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 43)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 529
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 530
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 531
    value_exp	go to state 532
    address_exp	go to state 533
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 534
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 535



state 283

    ass_ident  ->  NEXT . ass_ident   (rule 151)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 284
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 285

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    member_in_exp  ->  point_exp .   (rule 184)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)
=======
    ass_ident  ->  NEXT ass_ident .   (rule 151)

    $default	reduce using rule 151 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)


<<<<<<< HEAD
=======
    ass_ident  ->  list .   (rule 148)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    IMPLY	shift, and go to state 312

    $default	reduce using rule 148 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 286

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 186)

    CLOSE_PAR	shift, and go to state 526
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

<<<<<<< HEAD
    bi_operator	go to state 331
=======
    statement  ->  LENGTH OPEN_PAR . alg_exp CLOSE_PAR   (rule 53)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 536
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 287

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 189)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 222)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 527

    CLOSE_PAR	[reduce using rule 189 (member_in_exp)]
    $default	reduce using rule 189 (member_in_exp)
=======
    request_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 466)
    request_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 467)
    request_statement  ->  REQUEST OPEN_PAR . list CLOSE_PAR   (rule 468)
    request_statement  ->  REQUEST OPEN_PAR . list option_input CLOSE_PAR   (rule 469)
    request_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 470)

    OPEN_PAR	shift, and go to state 509
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 537
    value_exp	go to state 365
    identifier	go to state 538
    struct_member_exp	go to state 539
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 288

<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 182)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)
=======
    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 58)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 540
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 289

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 191)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429
=======
    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 45)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 541
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 191 (member_in_exp)]
    $default	reduce using rule 191 (member_in_exp)



<<<<<<< HEAD
state 290

    size_of  ->  SIZEOF OPEN_PAR . ari_exp CLOSE_PAR   (rule 256)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 257)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF OPEN_PAR . strliteral CLOSE_PAR   (rule 259)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 528
=======
    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 46)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 529
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 530
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 531
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 532
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 533
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    type_define	go to state 454
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 534
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    all_sizeof_type	go to state 535
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    sign_type_define	go to state 456
    all_type_define	go to state 536
    identifier	go to state 152
    strliteral	go to state 537
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 542
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 291

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  CEIL ari_exp .   (rule 279)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 279 (math_function)]
    CON 	[reduce using rule 279 (math_function)]
    ADDRESS	[reduce using rule 279 (math_function)]
    LST 	[reduce using rule 279 (math_function)]
    RST 	[reduce using rule 279 (math_function)]
    MUL 	[reduce using rule 279 (math_function)]
    DIV 	[reduce using rule 279 (math_function)]
    MOD 	[reduce using rule 279 (math_function)]
    $default	reduce using rule 279 (math_function)

    bi_operator	go to state 331
=======
    statement  ->  HALT OPEN_PAR . bool_statement CLOSE_PAR   (rule 47)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 543
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 292

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FLOOR ari_exp .   (rule 280)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 280 (math_function)]
    CON 	[reduce using rule 280 (math_function)]
    ADDRESS	[reduce using rule 280 (math_function)]
    LST 	[reduce using rule 280 (math_function)]
    RST 	[reduce using rule 280 (math_function)]
    MUL 	[reduce using rule 280 (math_function)]
    DIV 	[reduce using rule 280 (math_function)]
    MOD 	[reduce using rule 280 (math_function)]
    $default	reduce using rule 280 (math_function)

    bi_operator	go to state 331
=======
    statement  ->  W_NEXT OPEN_PAR . statement CLOSE_PAR   (rule 44)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 544
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 293

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ROUND ari_exp .   (rule 278)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 278 (math_function)]
    CON 	[reduce using rule 278 (math_function)]
    ADDRESS	[reduce using rule 278 (math_function)]
    LST 	[reduce using rule 278 (math_function)]
    RST 	[reduce using rule 278 (math_function)]
    MUL 	[reduce using rule 278 (math_function)]
    DIV 	[reduce using rule 278 (math_function)]
    MOD 	[reduce using rule 278 (math_function)]
    $default	reduce using rule 278 (math_function)

    bi_operator	go to state 331
=======
    statement  ->  PREFIX OPEN_PAR . statement CLOSE_PAR   (rule 35)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 545
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 294

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  SIN ari_exp .   (rule 281)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 281 (math_function)]
    CON 	[reduce using rule 281 (math_function)]
    ADDRESS	[reduce using rule 281 (math_function)]
    LST 	[reduce using rule 281 (math_function)]
    RST 	[reduce using rule 281 (math_function)]
    MUL 	[reduce using rule 281 (math_function)]
    DIV 	[reduce using rule 281 (math_function)]
    MOD 	[reduce using rule 281 (math_function)]
    $default	reduce using rule 281 (math_function)

    bi_operator	go to state 331
=======
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 96)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 417 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 549
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 295

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  COS ari_exp .   (rule 282)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 282 (math_function)]
    CON 	[reduce using rule 282 (math_function)]
    ADDRESS	[reduce using rule 282 (math_function)]
    LST 	[reduce using rule 282 (math_function)]
    RST 	[reduce using rule 282 (math_function)]
    MUL 	[reduce using rule 282 (math_function)]
    DIV 	[reduce using rule 282 (math_function)]
    MOD 	[reduce using rule 282 (math_function)]
    $default	reduce using rule 282 (math_function)

    bi_operator	go to state 331
=======
    list  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 550
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 296

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  TAN ari_exp .   (rule 283)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 283 (math_function)]
    CON 	[reduce using rule 283 (math_function)]
    ADDRESS	[reduce using rule 283 (math_function)]
    LST 	[reduce using rule 283 (math_function)]
    RST 	[reduce using rule 283 (math_function)]
    MUL 	[reduce using rule 283 (math_function)]
    DIV 	[reduce using rule 283 (math_function)]
    MOD 	[reduce using rule 283 (math_function)]
    $default	reduce using rule 283 (math_function)

    bi_operator	go to state 331
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 297

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ASIN ari_exp .   (rule 284)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 284 (math_function)]
    CON 	[reduce using rule 284 (math_function)]
    ADDRESS	[reduce using rule 284 (math_function)]
    LST 	[reduce using rule 284 (math_function)]
    RST 	[reduce using rule 284 (math_function)]
    MUL 	[reduce using rule 284 (math_function)]
    DIV 	[reduce using rule 284 (math_function)]
    MOD 	[reduce using rule 284 (math_function)]
    $default	reduce using rule 284 (math_function)

    bi_operator	go to state 331
=======
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 126)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_EQU string inner_option_identifier_array_declaration   (rule 127)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)
    identifier  ->  ID .   (rule 427)

    ARRAY	shift, and go to state 552
    OPEN_MPAR	shift, and go to state 553

    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 298

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ACOS ari_exp .   (rule 285)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 285 (math_function)]
    CON 	[reduce using rule 285 (math_function)]
    ADDRESS	[reduce using rule 285 (math_function)]
    LST 	[reduce using rule 285 (math_function)]
    RST 	[reduce using rule 285 (math_function)]
    MUL 	[reduce using rule 285 (math_function)]
    DIV 	[reduce using rule 285 (math_function)]
    MOD 	[reduce using rule 285 (math_function)]
    $default	reduce using rule 285 (math_function)

    bi_operator	go to state 331
=======
    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 299

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ATAN ari_exp .   (rule 286)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 286 (math_function)]
    CON 	[reduce using rule 286 (math_function)]
    ADDRESS	[reduce using rule 286 (math_function)]
    LST 	[reduce using rule 286 (math_function)]
    RST 	[reduce using rule 286 (math_function)]
    MUL 	[reduce using rule 286 (math_function)]
    DIV 	[reduce using rule 286 (math_function)]
    MOD 	[reduce using rule 286 (math_function)]
    $default	reduce using rule 286 (math_function)

    bi_operator	go to state 331
=======
    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 122)
    option_identifier_array_declaration  ->  identifier . ASS_EQU ass_exp inner_option_identifier_array_declaration   (rule 124)
    option_identifier_array_declaration  ->  identifier . ASS_EQU string inner_option_identifier_array_declaration   (rule 125)

    COMMA	shift, and go to state 554
    ASS_EQU	shift, and go to state 555
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 556


<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  SINH ari_exp .   (rule 287)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 287 (math_function)]
    CON 	[reduce using rule 287 (math_function)]
    ADDRESS	[reduce using rule 287 (math_function)]
    LST 	[reduce using rule 287 (math_function)]
    RST 	[reduce using rule 287 (math_function)]
    MUL 	[reduce using rule 287 (math_function)]
    DIV 	[reduce using rule 287 (math_function)]
    MOD 	[reduce using rule 287 (math_function)]
    $default	reduce using rule 287 (math_function)

    bi_operator	go to state 331
=======

state 300
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement  ->  statement CHOP . statement   (rule 34)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 557
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  COSH ari_exp .   (rule 288)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 288 (math_function)]
    CON 	[reduce using rule 288 (math_function)]
    ADDRESS	[reduce using rule 288 (math_function)]
    LST 	[reduce using rule 288 (math_function)]
    RST 	[reduce using rule 288 (math_function)]
    MUL 	[reduce using rule 288 (math_function)]
    DIV 	[reduce using rule 288 (math_function)]
    MOD 	[reduce using rule 288 (math_function)]
    $default	reduce using rule 288 (math_function)

    bi_operator	go to state 331
=======
state 301

    statement  ->  statement OR . statement   (rule 33)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 558
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 302

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  TANH ari_exp .   (rule 289)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 289 (math_function)]
    CON 	[reduce using rule 289 (math_function)]
    ADDRESS	[reduce using rule 289 (math_function)]
    LST 	[reduce using rule 289 (math_function)]
    RST 	[reduce using rule 289 (math_function)]
    MUL 	[reduce using rule 289 (math_function)]
    DIV 	[reduce using rule 289 (math_function)]
    MOD 	[reduce using rule 289 (math_function)]
    $default	reduce using rule 289 (math_function)

    bi_operator	go to state 331
=======
    statement  ->  statement PARALLEL . statement   (rule 59)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 559
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 303

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  EXP ari_exp .   (rule 290)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 290 (math_function)]
    CON 	[reduce using rule 290 (math_function)]
    ADDRESS	[reduce using rule 290 (math_function)]
    LST 	[reduce using rule 290 (math_function)]
    RST 	[reduce using rule 290 (math_function)]
    MUL 	[reduce using rule 290 (math_function)]
    DIV 	[reduce using rule 290 (math_function)]
    MOD 	[reduce using rule 290 (math_function)]
    $default	reduce using rule 290 (math_function)

    bi_operator	go to state 331
=======
    statement  ->  statement AND . statement   (rule 32)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 560
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 304

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LOG ari_exp .   (rule 291)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 291 (math_function)]
    CON 	[reduce using rule 291 (math_function)]
    ADDRESS	[reduce using rule 291 (math_function)]
    LST 	[reduce using rule 291 (math_function)]
    RST 	[reduce using rule 291 (math_function)]
    MUL 	[reduce using rule 291 (math_function)]
    DIV 	[reduce using rule 291 (math_function)]
    MOD 	[reduce using rule 291 (math_function)]
    $default	reduce using rule 291 (math_function)

    bi_operator	go to state 331
=======
    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT CYLINDER . CYLINDER_STATEMENT   (rule 82)

    error	shift, and go to state 22
    OPEN_PAR	shift, and go to state 561
    OPEN_BPAR	shift, and go to state 443

    CYLINDER_STATEMENT	go to state 562
    OVER_STATEMENT	go to state 86
    big_par	go to state 106
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 305

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LOG10 ari_exp .   (rule 292)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 292 (math_function)]
    CON 	[reduce using rule 292 (math_function)]
    ADDRESS	[reduce using rule 292 (math_function)]
    LST 	[reduce using rule 292 (math_function)]
    RST 	[reduce using rule 292 (math_function)]
    MUL 	[reduce using rule 292 (math_function)]
    DIV 	[reduce using rule 292 (math_function)]
    MOD 	[reduce using rule 292 (math_function)]
    $default	reduce using rule 292 (math_function)

    bi_operator	go to state 331
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 98)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    STRUCT_TYPE	shift, and go to state 83

    option_struct_declaration	go to state 563
    sign_declaration	go to state 564
    declaration	go to state 91
    type_define	go to state 92
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 306

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  SQRT ari_exp .   (rule 293)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
    declaration  ->  type_define option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    INTER_OR	[reduce using rule 293 (math_function)]
    CON 	[reduce using rule 293 (math_function)]
    ADDRESS	[reduce using rule 293 (math_function)]
    LST 	[reduce using rule 293 (math_function)]
    RST 	[reduce using rule 293 (math_function)]
    MUL 	[reduce using rule 293 (math_function)]
    DIV 	[reduce using rule 293 (math_function)]
    MOD 	[reduce using rule 293 (math_function)]
    $default	reduce using rule 293 (math_function)

    bi_operator	go to state 331


<<<<<<< HEAD

state 307
=======
    assign_operator  ->  ASS_EQU .   (rule 166)

    $default	reduce using rule 166 (assign_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    math_function  ->  ATAN2 OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 294)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 538
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



<<<<<<< HEAD
state 308

    math_function  ->  POW OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 295)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 539
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    assign_operator  ->  UNITASSIGN .   (rule 167)

    $default	reduce using rule 167 (assign_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 309

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ABS ari_exp .   (rule 299)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 299 (math_function)]
    CON 	[reduce using rule 299 (math_function)]
    ADDRESS	[reduce using rule 299 (math_function)]
    LST 	[reduce using rule 299 (math_function)]
    RST 	[reduce using rule 299 (math_function)]
    MUL 	[reduce using rule 299 (math_function)]
    DIV 	[reduce using rule 299 (math_function)]
    MOD 	[reduce using rule 299 (math_function)]
    $default	reduce using rule 299 (math_function)

    bi_operator	go to state 331
=======
    ass_statement  ->  ass_ident assign_operator . ass_exp   (rule 145)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 565
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 310

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FABS ari_exp .   (rule 300)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 300 (math_function)]
    CON 	[reduce using rule 300 (math_function)]
    ADDRESS	[reduce using rule 300 (math_function)]
    LST 	[reduce using rule 300 (math_function)]
    RST 	[reduce using rule 300 (math_function)]
    MUL 	[reduce using rule 300 (math_function)]
    DIV 	[reduce using rule 300 (math_function)]
    MOD 	[reduce using rule 300 (math_function)]
    $default	reduce using rule 300 (math_function)

    bi_operator	go to state 331
=======
    struct_member_exp  ->  list DOT . identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list DOT . list option_struct_member_exp   (rule 478)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    list	go to state 566
    identifier	go to state 567



<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LABS ari_exp .   (rule 301)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
state 311

    function  ->  list OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 97)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 417 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 568
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    INTER_OR	[reduce using rule 301 (math_function)]
    CON 	[reduce using rule 301 (math_function)]
    ADDRESS	[reduce using rule 301 (math_function)]
    LST 	[reduce using rule 301 (math_function)]
    RST 	[reduce using rule 301 (math_function)]
    MUL 	[reduce using rule 301 (math_function)]
    DIV 	[reduce using rule 301 (math_function)]
    MOD 	[reduce using rule 301 (math_function)]
    $default	reduce using rule 301 (math_function)

    bi_operator	go to state 331


<<<<<<< HEAD

state 312
=======
    struct_member_exp  ->  list IMPLY . identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list IMPLY . list option_struct_member_exp   (rule 485)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 569
    identifier	go to state 570
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    math_function  ->  FMOD OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 540
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156



<<<<<<< HEAD
state 313

    math_function  ->  MODF OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 541
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    struct_member_exp  ->  value_exp DOT . identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp DOT . list option_struct_member_exp   (rule 479)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 571
    identifier	go to state 572
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 314

<<<<<<< HEAD
    math_function  ->  LDEXP OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 542
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    struct_member_exp  ->  value_exp IMPLY . identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp IMPLY . list option_struct_member_exp   (rule 489)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 573
    identifier	go to state 574
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 315

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    OPEN_PAR	shift, and go to state 543
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 544
    point_exp	go to state 545
    address_exp	go to state 546
    identifier	go to state 547
    struct_member_exp	go to state 548
=======
    OVER_STATEMENT  ->  big_par OVER . OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR   (rule 85)
    OVER_STATEMENT  ->  big_par OVER . OPEN_PAR CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 575
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 316

<<<<<<< HEAD
    address_exp  ->  ADDRESS array .   (rule 219)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263

    DOT 	[reduce using rule 219 (address_exp)]
    $default	reduce using rule 219 (address_exp)
=======
    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier DOT . list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier DOT . function   (rule 487)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 576
    list	go to state 577
    identifier	go to state 578
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 317

<<<<<<< HEAD
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267
=======
    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier IMPLY . list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier IMPLY . function   (rule 488)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    function	go to state 579
    list	go to state 580
    identifier	go to state 581


<<<<<<< HEAD
state 318

    address_exp  ->  ADDRESS address_exp .   (rule 221)

    $default	reduce using rule 221 (address_exp)
=======

state 318

    complexProposition  ->  DEFINE ID COLON . prime_bool_statement   (rule 26)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 582
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 583
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 319

<<<<<<< HEAD
    address_exp  ->  ADDRESS identifier .   (rule 218)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268

    DOT 	[reduce using rule 218 (address_exp)]
    $default	reduce using rule 218 (address_exp)
=======
    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 28)

    $default	reduce using rule 28 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 320

<<<<<<< HEAD
    address_exp  ->  ADDRESS struct_member_exp .   (rule 220)

    $default	reduce using rule 220 (address_exp)
=======
    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 29)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 584
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 321

<<<<<<< HEAD
    member_in_exp  ->  SUB member_in_exp .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    CLOSE_BPAR	shift, and go to state 585
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 322

<<<<<<< HEAD
    member_in_exp  ->  BNE member_in_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)
=======
    alg_exp  ->  IF bool_statement . THEN alg_exp optional_exp_else_statement   (rule 198)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    THEN	shift, and go to state 586
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 323

<<<<<<< HEAD
    bi_operator  ->  INTER_OR .   (rule 199)

    $default	reduce using rule 199 (bi_operator)
=======
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)

    STRUCT_TYPE	shift, and go to state 587
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 324

<<<<<<< HEAD
    bi_operator  ->  CON .   (rule 200)

    $default	reduce using rule 200 (bi_operator)
=======
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 325

<<<<<<< HEAD
    bi_operator  ->  ADDRESS .   (rule 198)

    $default	reduce using rule 198 (bi_operator)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 591
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 326

<<<<<<< HEAD
    bi_operator  ->  LST .   (rule 196)

    $default	reduce using rule 196 (bi_operator)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 275)

    MUL 	shift, and go to state 592
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 327

<<<<<<< HEAD
    bi_operator  ->  RST .   (rule 197)

    $default	reduce using rule 197 (bi_operator)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 328

<<<<<<< HEAD
    bi_operator  ->  MUL .   (rule 193)

    $default	reduce using rule 193 (bi_operator)
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 329

<<<<<<< HEAD
    bi_operator  ->  DIV .   (rule 194)

    $default	reduce using rule 194 (bi_operator)
=======
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 599
    CHARDECLARATION	shift, and go to state 600
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 330

<<<<<<< HEAD
    bi_operator  ->  MOD .   (rule 195)

    $default	reduce using rule 195 (bi_operator)
=======
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 331

<<<<<<< HEAD
    ari_exp  ->  ari_exp bi_operator . simple_ari_exp   (rule 169)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    simple_ari_exp	go to state 549
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 279)

    MUL 	shift, and go to state 603
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 332

<<<<<<< HEAD
    relation_operator  ->  NE .   (rule 323)

    $default	reduce using rule 323 (relation_operator)
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    factor  ->  list .   (rule 212)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 212 (factor)]
    $default	reduce using rule 212 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 333

<<<<<<< HEAD
    relation_operator  ->  EQ .   (rule 326)

    $default	reduce using rule 326 (relation_operator)
=======
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    factor  ->  value_exp .   (rule 214)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314

    CLOSE_PAR	[reduce using rule 214 (factor)]
    $default	reduce using rule 214 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 334

<<<<<<< HEAD
    relation_operator  ->  GE .   (rule 321)

    $default	reduce using rule 321 (relation_operator)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)

    CLOSE_PAR	shift, and go to state 604
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 335

<<<<<<< HEAD
    relation_operator  ->  LE .   (rule 322)

    $default	reduce using rule 322 (relation_operator)
=======
    factor  ->  address_exp .   (rule 219)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 256)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)

    CLOSE_PAR	shift, and go to state 605

    CLOSE_PAR	[reduce using rule 219 (factor)]
    $default	reduce using rule 219 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 336

<<<<<<< HEAD
    relation_operator  ->  GT .   (rule 324)

    $default	reduce using rule 324 (relation_operator)
=======
    factor  ->  identifier .   (rule 211)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 428)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 211 (factor)]
    $default	reduce using rule 211 (factor)



<<<<<<< HEAD
    relation_operator  ->  LT .   (rule 325)

    $default	reduce using rule 325 (relation_operator)
=======
state 337

    factor  ->  struct_member_exp .   (rule 221)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 490)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 221 (factor)]
    $default	reduce using rule 221 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 338

<<<<<<< HEAD
    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 176)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 550
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    size_of  ->  SIZEOF OPEN_PAR . alg_exp CLOSE_PAR   (rule 290)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 291)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 292)
    size_of  ->  SIZEOF OPEN_PAR . string CLOSE_PAR   (rule 293)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 606
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 607
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 608
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 609
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 610
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 611
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    type_define	go to state 228
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 612
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    all_sizeof_type	go to state 613
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    sign_type_define	go to state 229
    all_type_define	go to state 614
    identifier	go to state 167
    string	go to state 615
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 339

<<<<<<< HEAD
    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 168)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 551
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  CEIL alg_exp .   (rule 313)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 313 (Float_Function)]
    SUB 	[reduce using rule 313 (Float_Function)]
    $default	reduce using rule 313 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 340

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FLOOR alg_exp .   (rule 314)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 314 (Float_Function)]
    SUB 	[reduce using rule 314 (Float_Function)]
    $default	reduce using rule 314 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 8 (complexProposition)



<<<<<<< HEAD
state 341

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 6 (complexProposition)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ROUND alg_exp .   (rule 312)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 312 (Float_Function)]
    SUB 	[reduce using rule 312 (Float_Function)]
    $default	reduce using rule 312 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 342

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 7 (complexProposition)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  SIN alg_exp .   (rule 315)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 315 (Float_Function)]
    SUB 	[reduce using rule 315 (Float_Function)]
    $default	reduce using rule 315 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 343

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 5 (complexProposition)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  COS alg_exp .   (rule 316)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 316 (Float_Function)]
    SUB 	[reduce using rule 316 (Float_Function)]
    $default	reduce using rule 316 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 344

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 169

    $default	reduce using rule 4 (complexProposition)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  TAN alg_exp .   (rule 317)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 317 (Float_Function)]
    SUB 	[reduce using rule 317 (Float_Function)]
    $default	reduce using rule 317 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 345

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    CLOSE_PAR	shift, and go to state 552
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ASIN alg_exp .   (rule 318)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 318 (Float_Function)]
    SUB 	[reduce using rule 318 (Float_Function)]
    $default	reduce using rule 318 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 346

<<<<<<< HEAD
    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 318)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 553
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ACOS alg_exp .   (rule 319)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 319 (Float_Function)]
    SUB 	[reduce using rule 319 (Float_Function)]
    $default	reduce using rule 319 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 347

<<<<<<< HEAD
    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 317)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 554
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ATAN alg_exp .   (rule 320)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 320 (Float_Function)]
    SUB 	[reduce using rule 320 (Float_Function)]
    $default	reduce using rule 320 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 348

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 306)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 348
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 350
    prime_bool_exp	go to state 179
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  SINH alg_exp .   (rule 321)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 321 (Float_Function)]
    SUB 	[reduce using rule 321 (Float_Function)]
    $default	reduce using rule 321 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 349

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 186)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 307)
    prime_bool_exp  ->  ari_exp .   (rule 310)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 311)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 315)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 319)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 320)

    CLOSE_PAR	shift, and go to state 526
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    NE  	shift, and go to state 352
    EQ  	shift, and go to state 353
    GE  	shift, and go to state 334
    LE  	shift, and go to state 335
    GT  	shift, and go to state 336
    LT  	shift, and go to state 337
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    CLOSE_PAR	[reduce using rule 310 (prime_bool_exp)]
    $default	reduce using rule 310 (prime_bool_exp)

    bi_operator	go to state 331
    relation_operator	go to state 354
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  COSH alg_exp .   (rule 322)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 322 (Float_Function)]
    SUB 	[reduce using rule 322 (Float_Function)]
    $default	reduce using rule 322 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 350

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 306)

    CLOSE_PAR	shift, and go to state 555
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  TANH alg_exp .   (rule 323)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 323 (Float_Function)]
    SUB 	[reduce using rule 323 (Float_Function)]
    $default	reduce using rule 323 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 351

<<<<<<< HEAD
    bool_exp  ->  NEGATION bool_exp .   (rule 303)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)


    $default	reduce using rule 303 (bool_exp)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  EXP alg_exp .   (rule 324)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 324 (Float_Function)]
    SUB 	[reduce using rule 324 (Float_Function)]
    $default	reduce using rule 324 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 352

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 320)
    relation_operator  ->  NE .   (rule 323)

    POINTERNULL	shift, and go to state 556
    STRLITERAL	shift, and go to state 176
    CHARLITERAL	shift, and go to state 141

    POINTERNULL	[reduce using rule 323 (relation_operator)]
    CHARLITERAL	[reduce using rule 323 (relation_operator)]
    $default	reduce using rule 323 (relation_operator)

    strliteral	go to state 557
    charliteral	go to state 558
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LOG alg_exp .   (rule 325)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 325 (Float_Function)]
    SUB 	[reduce using rule 325 (Float_Function)]
    $default	reduce using rule 325 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 353

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 311)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 315)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 319)
    relation_operator  ->  EQ .   (rule 326)

    POINTERNULL	shift, and go to state 559
    STRLITERAL	shift, and go to state 176
    CHARLITERAL	shift, and go to state 141
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LOG10 alg_exp .   (rule 326)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 326 (Float_Function)]
    SUB 	[reduce using rule 326 (Float_Function)]
    $default	reduce using rule 326 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    POINTERNULL	[reduce using rule 326 (relation_operator)]
    CHARLITERAL	[reduce using rule 326 (relation_operator)]
    $default	reduce using rule 326 (relation_operator)

    strliteral	go to state 560
    charliteral	go to state 561


<<<<<<< HEAD

state 354

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 307)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 562
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  SQRT alg_exp .   (rule 327)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    ADD 	[reduce using rule 327 (Float_Function)]
    SUB 	[reduce using rule 327 (Float_Function)]
    $default	reduce using rule 327 (Float_Function)

    alg_operator	go to state 374



<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 417)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393
=======
state 355

    Float_Function  ->  ATAN2 OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 328)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 616
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement_bpar	go to state 563



<<<<<<< HEAD
state 356

    bool_exp  ->  bool_exp OR . bool_exp   (rule 305)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 564
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    Float_Function  ->  POW OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 329)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 617
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 357

<<<<<<< HEAD
    bool_exp  ->  bool_exp AND . bool_exp   (rule 304)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 565
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ABS alg_exp .   (rule 333)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 333 (Float_Function)]
    SUB 	[reduce using rule 333 (Float_Function)]
    $default	reduce using rule 333 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 358

<<<<<<< HEAD
    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 314)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 566
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FABS alg_exp .   (rule 334)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 334 (Float_Function)]
    SUB 	[reduce using rule 334 (Float_Function)]
    $default	reduce using rule 334 (Float_Function)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 359

<<<<<<< HEAD
    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 313)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 567
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LABS alg_exp .   (rule 335)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    ADD 	[reduce using rule 335 (Float_Function)]
    SUB 	[reduce using rule 335 (Float_Function)]
    $default	reduce using rule 335 (Float_Function)

    alg_operator	go to state 374


<<<<<<< HEAD
    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)

    CLOSE_PAR	shift, and go to state 568
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======

state 360

    Float_Function  ->  FMOD OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 330)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 618
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 361

<<<<<<< HEAD
    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)
=======
    Float_Function  ->  MODF OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 331)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 619
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 362

<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)
=======
    Float_Function  ->  LDEXP OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 332)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 620
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 363

<<<<<<< HEAD
    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 85)
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    OPEN_PAR	shift, and go to state 621
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 622
    value_exp	go to state 623
    address_exp	go to state 624
    identifier	go to state 625
    struct_member_exp	go to state 626
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 85 (declaration)



<<<<<<< HEAD
state 364

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)
=======
    address_exp  ->  ADDRESS list .   (rule 253)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310

    DOT 	[reduce using rule 253 (address_exp)]
    $default	reduce using rule 253 (address_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 365

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    OPEN_PAR	shift, and go to state 569
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 571
    point_exp	go to state 461
    address_exp	go to state 462
    identifier	go to state 463
    struct_member_exp	go to state 464
=======
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 366

<<<<<<< HEAD
    file_statement  ->  FOPEN OPEN_PAR ass_left . COMMA strliteral CLOSE_PAR   (rule 113)

    COMMA	shift, and go to state 572
=======
    address_exp  ->  ADDRESS address_exp .   (rule 255)

    $default	reduce using rule 255 (address_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 367

<<<<<<< HEAD
    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 119)

    CLOSE_PAR	shift, and go to state 573
=======
    address_exp  ->  ADDRESS identifier .   (rule 252)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316

    DOT 	[reduce using rule 252 (address_exp)]
    $default	reduce using rule 252 (address_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 368

<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR identifier . COMMA intliteral COMMA identifier CLOSE_PAR   (rule 114)

    COMMA	shift, and go to state 574
=======
    address_exp  ->  ADDRESS struct_member_exp .   (rule 254)

    $default	reduce using rule 254 (address_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 369

<<<<<<< HEAD
    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 116)

    COMMA	shift, and go to state 575
=======
    factor  ->  SUB factor .   (rule 207)

    $default	reduce using rule 207 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 370

<<<<<<< HEAD
    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 576
=======
    factor  ->  BNE factor .   (rule 208)

    $default	reduce using rule 208 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 371

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 577
    ID  	shift, and go to state 235

    array	go to state 578
    identifier	go to state 375
=======
    pre_next  ->  PREVIOUS OPEN_PAR . identifier CLOSE_PAR   (rule 223)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 627
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 372

<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR array . COMMA identifier CLOSE_PAR   (rule 118)

    COMMA	shift, and go to state 579
=======
    alg_operator  ->  ADD .   (rule 232)

    $default	reduce using rule 232 (alg_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 373

<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 117)

    COMMA	shift, and go to state 580
=======
    alg_operator  ->  SUB .   (rule 233)

    $default	reduce using rule 233 (alg_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 374

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583
=======
    alg_exp  ->  alg_exp alg_operator . simple_alg_exp   (rule 197)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    simple_alg_exp	go to state 628
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 585


<<<<<<< HEAD

state 375

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)

    CLOSE_PAR	shift, and go to state 425
=======
    mul_operator  ->  INTER_OR .   (rule 230)

    $default	reduce using rule 230 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 376

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 357)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 363)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA . error   (rule 373)

    error	shift, and go to state 586
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 587
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 588
    STRUCT_TYPE	shift, and go to state 589

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 590
=======
    mul_operator  ->  CON .   (rule 231)

    $default	reduce using rule 231 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 377

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COLON	shift, and go to state 591
=======
    mul_operator  ->  ADDRESS .   (rule 229)

    $default	reduce using rule 229 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 378

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 592

    $default	reduce using rule 393 (option_frame_identifier)

    option_frame_identifier	go to state 593
=======
    relation_operator  ->  NE .   (rule 362)

    $default	reduce using rule 362 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 379

<<<<<<< HEAD
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)

    ID  	shift, and go to state 449
    STRUCT_TYPE	shift, and go to state 594
=======
    relation_operator  ->  EQU .   (rule 365)

    $default	reduce using rule 365 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 380

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 511

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)
=======
    relation_operator  ->  GE .   (rule 360)

    $default	reduce using rule 360 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 381

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 513

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)
=======
    relation_operator  ->  LE .   (rule 361)

    $default	reduce using rule 361 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 382

<<<<<<< HEAD
    type_define  ->  VOIDDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    MUL 	shift, and go to state 514
=======
    relation_operator  ->  GT .   (rule 363)

    $default	reduce using rule 363 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



<<<<<<< HEAD
state 383

    type_define  ->  FLOATDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 516

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)
=======
    relation_operator  ->  LT .   (rule 364)

    $default	reduce using rule 364 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 384

<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 595
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 215
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 217
=======
    mul_operator  ->  LST .   (rule 227)

    $default	reduce using rule 227 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 385

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 596
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 252
    identifier	go to state 253
=======
    mul_operator  ->  RST .   (rule 228)

    $default	reduce using rule 228 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 386

<<<<<<< HEAD
    for_sta_init  ->  declaration .   (rule 406)

    $default	reduce using rule 406 (for_sta_init)
=======
    mul_operator  ->  MUL .   (rule 224)

    $default	reduce using rule 224 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 387

<<<<<<< HEAD
    for_sta_init  ->  ass_statement .   (rule 405)

    $default	reduce using rule 405 (for_sta_init)
=======
    mul_operator  ->  DIV .   (rule 225)

    $default	reduce using rule 225 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 388

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    COMMA	shift, and go to state 597
=======
    mul_operator  ->  MOD .   (rule 226)

    $default	reduce using rule 226 (mul_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 389

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 403)

    DO  	shift, and go to state 598
=======
    simple_alg_exp  ->  simple_alg_exp mul_operator . factor   (rule 204)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    factor	go to state 629
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 390

<<<<<<< HEAD
    bool_par  ->  error CLOSE_PAR .   (rule 385)
=======
    alg_exp  ->  simple_alg_exp relation_operator . alg_exp   (rule 196)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 630
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 385 (bool_par)



<<<<<<< HEAD
state 391

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 384)

    CLOSE_PAR	shift, and go to state 599
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 8 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 392

<<<<<<< HEAD
    statement_bpar  ->  error . CLOSE_BPAR   (rule 383)

    CLOSE_BPAR	shift, and go to state 600
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 6 (complexProposition)



<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 382)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 601
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
state 393

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 7 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 394

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 402)

    $default	reduce using rule 402 (while_statement)
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 5 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 395

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_BPAR	shift, and go to state 602
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 4 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 396

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 603
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 604
    rightaddrshift	go to state 401
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 605
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 606
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    strliteral	go to state 607
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    bool_statement  ->  POINTERNULL NE . alg_exp   (rule 344)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 631
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 397

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 210)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 211)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 212)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 609
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 610
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 611
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    bool_statement  ->  POINTERNULL EQU . alg_exp   (rule 343)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 632
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 398

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 207)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 208)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 209)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 612
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 613
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 614
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 399
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 400
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337


>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 399

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    CLOSE_PAR	shift, and go to state 604
    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

<<<<<<< HEAD
    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 149)
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 615
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 238
=======
    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 400

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 420)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 421)

    COMMA	shift, and go to state 616
    CLOSE_PAR	shift, and go to state 617

    CLOSE_PAR	[reduce using rule 422 (option_output)]
    $default	reduce using rule 422 (option_output)

    option_output	go to state 618
=======
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_statement  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 350)

    CLOSE_PAR	shift, and go to state 633
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 401

<<<<<<< HEAD
    ass_right  ->  rightaddrshift .   (rule 148)

    $default	reduce using rule 148 (ass_right)
=======
    bool_statement  ->  NEGATION bool_statement .   (rule 347)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)


    $default	reduce using rule 347 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 402

<<<<<<< HEAD
    ass_right  ->  ari_exp .   (rule 143)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 143 (ass_right)

    bi_operator	go to state 331
=======
    bool_statement  ->  prime_bool_statement .   (rule 336)
    prime_bool_statement  ->  NEGATION prime_bool_statement .   (rule 352)

    $   	reduce using rule 336 (bool_statement)
    $   	[reduce using rule 352 (prime_bool_statement)]
    THEN	reduce using rule 336 (bool_statement)
    THEN	[reduce using rule 352 (prime_bool_statement)]
    COMMA	reduce using rule 336 (bool_statement)
    COMMA	[reduce using rule 352 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 336 (bool_statement)
    CLOSE_PAR	[reduce using rule 352 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 336 (bool_statement)
    CLOSE_BPAR	[reduce using rule 352 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 336 (bool_statement)
    CLOSE_MPAR	[reduce using rule 352 (prime_bool_statement)]
    CHOP	reduce using rule 336 (bool_statement)
    CHOP	[reduce using rule 352 (prime_bool_statement)]
    OR  	reduce using rule 336 (bool_statement)
    OR  	[reduce using rule 352 (prime_bool_statement)]
    PARALLEL	reduce using rule 336 (bool_statement)
    PARALLEL	[reduce using rule 352 (prime_bool_statement)]
    AND 	reduce using rule 336 (bool_statement)
    AND 	[reduce using rule 352 (prime_bool_statement)]
    $default	reduce using rule 336 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 403

<<<<<<< HEAD
    ass_right  ->  array_exp .   (rule 144)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    CON 	shift, and go to state 619
=======
    bool_statement  ->  alg_exp NE . string   (rule 338)
    bool_statement  ->  alg_exp NE . POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp NE . charliteral   (rule 346)
    relation_operator  ->  NE .   (rule 362)

    POINTERNULL	shift, and go to state 634
    STR 	shift, and go to state 193
    CHARLITERAL	shift, and go to state 154

    POINTERNULL	[reduce using rule 362 (relation_operator)]
    CHARLITERAL	[reduce using rule 362 (relation_operator)]
    $default	reduce using rule 362 (relation_operator)

    string	go to state 635
    charliteral	go to state 636
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 144 (ass_right)



<<<<<<< HEAD
state 404

    array_exp  ->  option_list_value .   (rule 204)

    $default	reduce using rule 204 (array_exp)
=======
    bool_statement  ->  alg_exp EQU . string   (rule 337)
    bool_statement  ->  alg_exp EQU . POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp EQU . charliteral   (rule 345)
    relation_operator  ->  EQU .   (rule 365)

    POINTERNULL	shift, and go to state 637
    STR 	shift, and go to state 193
    CHARLITERAL	shift, and go to state 154

    POINTERNULL	[reduce using rule 365 (relation_operator)]
    CHARLITERAL	[reduce using rule 365 (relation_operator)]
    $default	reduce using rule 365 (relation_operator)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    string	go to state 638
    charliteral	go to state 639



<<<<<<< HEAD
    array_exp  ->  option_struct_list_value .   (rule 205)

    $default	reduce using rule 205 (array_exp)
=======
state 405

    prime_bool_statement  ->  alg_exp relation_operator . alg_exp   (rule 351)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 640
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 406

<<<<<<< HEAD
    ass_right  ->  strliteral .   (rule 145)

    $default	reduce using rule 145 (ass_right)
=======
    if_statement  ->  IF bool_statement THEN . big_par optional_else_statement   (rule 459)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    big_par	go to state 641



<<<<<<< HEAD
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 170)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 417)

    THEN	shift, and go to state 620
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======
state 407

    bool_statement  ->  bool_statement OR . bool_statement   (rule 349)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 642
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 408

<<<<<<< HEAD
    struct_identifier  ->  STRUCT . ID   (rule 77)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 84)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)

    ID  	shift, and go to state 182
    STRUCT_TYPE	shift, and go to state 594
=======
    bool_statement  ->  bool_statement AND . bool_statement   (rule 348)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 643
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 409

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)
=======
    bool_statement  ->  string NE . alg_exp   (rule 340)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 644
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 621

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)


<<<<<<< HEAD

state 410
=======
    bool_statement  ->  string EQU . alg_exp   (rule 339)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 645
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 622

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)

<<<<<<< HEAD

=======
    statement  ->  AWAIT OPEN_PAR bool_statement . CLOSE_PAR   (rule 48)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    CLOSE_PAR	shift, and go to state 646
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 411

    type_define  ->  FLOATDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 623

<<<<<<< HEAD
    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 412
=======
    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    sign_declaration  ->  UNSIGNED . declaration   (rule 80)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 624
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 625
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 231
    type_define	go to state 80



<<<<<<< HEAD
state 413

    sign_declaration  ->  SIGNED . declaration   (rule 79)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 626
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 232
    type_define	go to state 80
=======
    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 108)

    $default	reduce using rule 108 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 414

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 401)

    CLOSE_PAR	shift, and go to state 628
    OR  	shift, and go to state 427
    AND 	shift, and go to state 428
=======
    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 107)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 107 (declaration)



<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    point_exp  ->  MUL . identifier   (rule 160)
    point_exp  ->  MUL . point_exp   (rule 161)
    point_exp  ->  MUL . array   (rule 162)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 165)

    OPEN_PAR	shift, and go to state 234
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 236
    point_exp	go to state 237
    identifier	go to state 629
=======
state 415

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 109)

    $default	reduce using rule 109 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 416

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 386)

    OPEN_MPAR	shift, and go to state 630

    $default	reduce using rule 386 (identifier)
=======
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    OPEN_PAR	shift, and go to state 647
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 649
    value_exp	go to state 532
    address_exp	go to state 533
    identifier	go to state 534
    struct_member_exp	go to state 535
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 417

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    point_exp  ->  MUL identifier .   (rule 160)

    CLOSE_PAR	shift, and go to state 631
=======
    file_statement  ->  FOPEN OPEN_PAR ass_ident . COMMA string CLOSE_PAR   (rule 138)

    COMMA	shift, and go to state 650
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)



<<<<<<< HEAD
state 418

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 401)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 632
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 633
    struct_member_exp	go to state 289
=======
    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 144)

    CLOSE_PAR	shift, and go to state 651
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 419

<<<<<<< HEAD
    imply_pre  ->  NEGATION imply_pre .   (rule 398)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)

=======
    file_statement  ->  FGETS OPEN_PAR identifier . COMMA integer COMMA identifier CLOSE_PAR   (rule 139)

    COMMA	shift, and go to state 652
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 398 (imply_pre)



<<<<<<< HEAD
state 420

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 67)

    $default	reduce using rule 67 (statement)
=======
    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 141)

    COMMA	shift, and go to state 653
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 421

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 125)

    $default	reduce using rule 125 (ass_left)
=======
    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 140)

    CLOSE_PAR	shift, and go to state 654
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 422

<<<<<<< HEAD
    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 156)

    $default	reduce using rule 156 (array)
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 655
    ID  	shift, and go to state 278

    list	go to state 656
    identifier	go to state 426
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 423

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 166)

    OPEN_MPAR	shift, and go to state 634

    $default	reduce using rule 166 (point_exp)
=======
    file_statement  ->  FPUTC OPEN_PAR list . COMMA identifier CLOSE_PAR   (rule 143)

    COMMA	shift, and go to state 657
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 424

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 444)

    IMPLY	shift, and go to state 635
=======
    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 142)

    COMMA	shift, and go to state 658
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 425

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 387)

    $default	reduce using rule 387 (identifier)
=======
    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 659
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 426

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    IMPLY	shift, and go to state 636
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 428)

    CLOSE_PAR	shift, and go to state 494
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 427

<<<<<<< HEAD
    imply_pre  ->  imply_pre OR . imply_pre   (rule 400)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 418
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 637
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier inner_optional_define_identifier   (rule 396)
    inner_optional_define_identifier  ->  COMMA . all_type_define inner_optional_define_identifier   (rule 397)
    inner_optional_define_identifier  ->  COMMA . ID identifier inner_optional_define_identifier   (rule 398)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_optional_define_identifier   (rule 399)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_optional_define_identifier   (rule 400)
    inner_optional_define_identifier  ->  COMMA . ID identifier ARRAY inner_optional_define_identifier   (rule 401)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_optional_define_identifier   (rule 402)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier inner_optional_define_identifier   (rule 411)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL inner_optional_define_identifier   (rule 412)
    inner_optional_define_identifier  ->  COMMA . identifier inner_optional_define_identifier   (rule 413)
    inner_optional_define_identifier  ->  COMMA . error   (rule 414)

    error	shift, and go to state 660
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 661
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 662
    STRUCT_TYPE	shift, and go to state 663

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 664
    identifier	go to state 665
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 428

<<<<<<< HEAD
    imply_pre  ->  imply_pre AND . imply_pre   (rule 399)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 418
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 638
    struct_member_exp	go to state 156
=======
    statement  ->  EXIST identifier inner_optional_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    COLON	shift, and go to state 666
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 429

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 448)

    $default	reduce using rule 448 (struct_member_exp)
=======
    statement  ->  FRAME OPEN_PAR identifier . optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    COMMA	shift, and go to state 667

    $default	reduce using rule 434 (optional_frame_identifier)

    optional_frame_identifier	go to state 668
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 430

<<<<<<< HEAD
    option_projection  ->  COMMA . statement option_projection   (rule 396)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 639
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)

    ID  	shift, and go to state 523
    STRUCT_TYPE	shift, and go to state 669
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 431

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 640
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 432

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    CLOSE_BPAR	shift, and go to state 641
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 591

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 433

<<<<<<< HEAD
    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 642
=======
    type_define  ->  VOIDDECLARATION .   (rule 120)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 275)

    MUL 	shift, and go to state 592

    MUL 	[reduce using rule 120 (type_define)]
    $default	reduce using rule 120 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 434

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 643
=======
    type_define  ->  FLOATDECLARATION .   (rule 117)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594

    MUL 	[reduce using rule 117 (type_define)]
    $default	reduce using rule 117 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 435

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    OPEN_PAR	shift, and go to state 543
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 544
    point_exp	go to state 545
    address_exp	go to state 462
    identifier	go to state 547
    struct_member_exp	go to state 548
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 670
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 283
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 255
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 436

<<<<<<< HEAD
    str_func_parameter  ->  array .   (rule 273)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    IMPLY	shift, and go to state 265

    $default	reduce using rule 273 (str_func_parameter)
=======
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 279)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 671
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 298
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 437

<<<<<<< HEAD
    str_func_parameter  ->  point_exp .   (rule 274)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    IMPLY	shift, and go to state 267

    $default	reduce using rule 274 (str_func_parameter)
=======
    for_sta_init  ->  declaration .   (rule 453)

    $default	reduce using rule 453 (for_sta_init)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 438

<<<<<<< HEAD
    str_func_parameter  ->  String_Function .   (rule 276)

    $default	reduce using rule 276 (str_func_parameter)
=======
    for_sta_init  ->  ass_statement .   (rule 452)

    $default	reduce using rule 452 (for_sta_init)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 439

<<<<<<< HEAD
    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 266)

    CLOSE_PAR	shift, and go to state 644
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 451)

    CHOP	shift, and go to state 672
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 440

<<<<<<< HEAD
    str_func_parameter  ->  identifier .   (rule 272)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269
=======
    for_statement  ->  FOR alg_exp TIMES . DO big_par   (rule 450)

    DO  	shift, and go to state 673
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 272 (str_func_parameter)



<<<<<<< HEAD
state 441

    str_func_parameter  ->  strliteral .   (rule 275)

    $default	reduce using rule 275 (str_func_parameter)
=======
    bool_par  ->  error CLOSE_PAR .   (rule 426)

    $default	reduce using rule 426 (bool_par)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 442

<<<<<<< HEAD
    str_func_parameter  ->  struct_member_exp .   (rule 277)

    $default	reduce using rule 277 (str_func_parameter)
=======
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_par  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 425)

    CLOSE_PAR	shift, and go to state 674
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 443

<<<<<<< HEAD
    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 267)

    CLOSE_PAR	shift, and go to state 645
=======
    big_par  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 423)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 675
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 444

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 268)

    COMMA	shift, and go to state 646
=======
    while_statement  ->  WHILE bool_par big_par .   (rule 443)

    $default	reduce using rule 443 (while_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 445

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 269)

    COMMA	shift, and go to state 647
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_BPAR	shift, and go to state 676
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 446

<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 270)

    COMMA	shift, and go to state 648
=======
    ass_exp  ->  OPEN_PAR . string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)
    ass_exp  ->  OPEN_PAR . ass_exp CLOSE_PAR   (rule 175)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 677
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 678
    rightaddrshift	go to state 452
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 679
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 680
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 681
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 682
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 683
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 447

<<<<<<< HEAD
    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 271)

    CLOSE_PAR	shift, and go to state 649
=======
    option_struct_list_value  ->  OPEN_BPAR . alg_exp inner_option_list_value CLOSE_BPAR   (rule 242)
    option_struct_list_value  ->  OPEN_BPAR . string inner_option_list_value CLOSE_BPAR   (rule 243)
    option_struct_list_value  ->  OPEN_BPAR . charliteral inner_option_list_value CLOSE_BPAR   (rule 244)
    option_struct_list_value  ->  OPEN_BPAR . list_exp inner_option_list_value CLOSE_BPAR   (rule 245)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 684
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 685
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 686
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    string	go to state 687
    integer	go to state 200
    charliteral	go to state 688
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 448

<<<<<<< HEAD
    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 650
=======
    option_list_value  ->  OPEN_MPAR . alg_exp inner_option_list_value CLOSE_MPAR   (rule 238)
    option_list_value  ->  OPEN_MPAR . string inner_option_list_value CLOSE_MPAR   (rule 239)
    option_list_value  ->  OPEN_MPAR . charliteral inner_option_list_value CLOSE_MPAR   (rule 240)
    option_list_value  ->  OPEN_MPAR . list_exp inner_option_list_value CLOSE_MPAR   (rule 241)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 684
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 689
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 690
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    string	go to state 691
    integer	go to state 200
    charliteral	go to state 692
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 449

<<<<<<< HEAD
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 361
    identifier	go to state 253
=======
    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 177)
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_PAR	shift, and go to state 693
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 281


<<<<<<< HEAD
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 363
    identifier	go to state 253
=======

state 450

    ass_exp  ->  file_statement .   (rule 173)
    prime_bool_statement  ->  file_statement .   (rule 359)

    $   	reduce using rule 173 (ass_exp)
    $   	[reduce using rule 359 (prime_bool_statement)]
    COMMA	reduce using rule 173 (ass_exp)
    COMMA	[reduce using rule 359 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 173 (ass_exp)
    CLOSE_PAR	[reduce using rule 359 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 173 (ass_exp)
    CLOSE_BPAR	[reduce using rule 359 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 173 (ass_exp)
    CLOSE_MPAR	[reduce using rule 359 (prime_bool_statement)]
    CHOP	reduce using rule 173 (ass_exp)
    CHOP	[reduce using rule 359 (prime_bool_statement)]
    OR  	reduce using rule 173 (ass_exp)
    OR  	[reduce using rule 359 (prime_bool_statement)]
    PARALLEL	reduce using rule 173 (ass_exp)
    PARALLEL	[reduce using rule 359 (prime_bool_statement)]
    AND 	reduce using rule 173 (ass_exp)
    AND 	[reduce using rule 359 (prime_bool_statement)]
    $default	reduce using rule 173 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 451

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 651
    ID  	shift, and go to state 652

    identifier	go to state 653
=======
    display_statement  ->  DISPLAY OPEN_PAR ass_exp . CLOSE_PAR   (rule 462)
    display_statement  ->  DISPLAY OPEN_PAR ass_exp . option_output CLOSE_PAR   (rule 463)

    COMMA	shift, and go to state 694
    CLOSE_PAR	shift, and go to state 695

    CLOSE_PAR	[reduce using rule 464 (option_output)]
    $default	reduce using rule 464 (option_output)

    option_output	go to state 696
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 452

<<<<<<< HEAD
    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 63)

    CLOSE_PAR	shift, and go to state 654
=======
    ass_exp  ->  rightaddrshift .   (rule 176)

    $default	reduce using rule 176 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 453

<<<<<<< HEAD
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 327)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 328)

    INTDECLARATION	shift, and go to state 655
    CHARDECLARATION	shift, and go to state 656
=======
    ass_exp  ->  alg_exp .   (rule 168)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $   	reduce using rule 168 (ass_exp)
    $   	[reduce using rule 357 (prime_bool_statement)]
    COMMA	reduce using rule 168 (ass_exp)
    COMMA	[reduce using rule 357 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 168 (ass_exp)
    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 168 (ass_exp)
    CLOSE_BPAR	[reduce using rule 357 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 168 (ass_exp)
    CLOSE_MPAR	[reduce using rule 357 (prime_bool_statement)]
    CHOP	reduce using rule 168 (ass_exp)
    CHOP	[reduce using rule 357 (prime_bool_statement)]
    OR  	reduce using rule 168 (ass_exp)
    OR  	[reduce using rule 357 (prime_bool_statement)]
    PARALLEL	reduce using rule 168 (ass_exp)
    PARALLEL	[reduce using rule 357 (prime_bool_statement)]
    AND 	reduce using rule 168 (ass_exp)
    AND 	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 168 (ass_exp)

    alg_operator	go to state 374
    relation_operator	go to state 405
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 454

<<<<<<< HEAD
    all_type_define  ->  type_define .   (rule 330)

    $default	reduce using rule 330 (all_type_define)
=======
    ass_exp  ->  list_exp .   (rule 169)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    CON 	shift, and go to state 697

    $default	reduce using rule 169 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 455

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 165)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    CLOSE_PAR	shift, and go to state 657
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    list_exp  ->  option_list_value .   (rule 235)

    $default	reduce using rule 235 (list_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 456

<<<<<<< HEAD
    all_type_define  ->  sign_type_define .   (rule 329)

    $default	reduce using rule 329 (all_type_define)
=======
    list_exp  ->  option_struct_list_value .   (rule 236)

    $default	reduce using rule 236 (list_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 457

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 164)
=======
    ass_exp  ->  bool_statement .   (rule 171)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    OR  	shift, and go to state 407
    AND 	shift, and go to state 408

    OR  	[reduce using rule 171 (ass_exp)]
    AND 	[reduce using rule 171 (ass_exp)]
    $default	reduce using rule 171 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    MUL 	shift, and go to state 658


<<<<<<< HEAD

state 458

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 204
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 659
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 660
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 661
    OPEN_PAR	shift, and go to state 205
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    SYSTEM	shift, and go to state 61
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 662
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 206
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 66
    NEGATION	shift, and go to state 207
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 73
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    statement	go to state 208
    function	go to state 209
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 210
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 215
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 216
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 217
=======
state 458

    ass_exp  ->  string .   (rule 170)
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410

    $default	reduce using rule 170 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 459

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 663
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    ass_exp  ->  struct_member_exp .   (rule 172)
    factor  ->  struct_member_exp .   (rule 221)

    $   	reduce using rule 172 (ass_exp)
    $   	[reduce using rule 221 (factor)]
    COMMA	reduce using rule 172 (ass_exp)
    COMMA	[reduce using rule 221 (factor)]
    CLOSE_PAR	reduce using rule 172 (ass_exp)
    CLOSE_PAR	[reduce using rule 221 (factor)]
    CLOSE_BPAR	reduce using rule 172 (ass_exp)
    CLOSE_BPAR	[reduce using rule 221 (factor)]
    CLOSE_MPAR	reduce using rule 172 (ass_exp)
    CLOSE_MPAR	[reduce using rule 221 (factor)]
    CHOP	reduce using rule 172 (ass_exp)
    CHOP	[reduce using rule 221 (factor)]
    OR  	reduce using rule 172 (ass_exp)
    OR  	[reduce using rule 221 (factor)]
    PARALLEL	reduce using rule 172 (ass_exp)
    PARALLEL	[reduce using rule 221 (factor)]
    AND 	reduce using rule 172 (ass_exp)
    AND 	[reduce using rule 221 (factor)]
    $default	reduce using rule 221 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 460

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 123)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    OPEN_PAR	shift, and go to state 264
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    $default	reduce using rule 123 (ass_left)
=======
    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    identifier	go to state 698



<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 124)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    $default	reduce using rule 124 (ass_left)
=======
state 461

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 366)

    $default	reduce using rule 366 (sign_type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 462

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 424
=======
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 367)

    $default	reduce using rule 367 (sign_type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 463

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 121)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 121 (ass_left)]
    $default	reduce using rule 121 (ass_left)
=======
    option_function_parameter_list  ->  ID MUL . identifier inner_optional_define_identifier   (rule 377)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_optional_define_identifier   (rule 378)
    option_function_parameter_list  ->  ID MUL . inner_optional_define_identifier   (rule 384)
    option_function_parameter_list  ->  ID MUL . MUL inner_optional_define_identifier   (rule 385)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 699
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    inner_optional_define_identifier	go to state 700
    identifier	go to state 701



<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 122)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429

    CLOSE_PAR	[reduce using rule 122 (ass_left)]
    $default	reduce using rule 122 (ass_left)
=======
state 464

    option_function_parameter_list  ->  ID inner_optional_define_identifier .   (rule 383)

    $default	reduce using rule 383 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 465

<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    CLOSE_PAR	shift, and go to state 664
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    option_function_parameter_list  ->  ID identifier . inner_optional_define_identifier   (rule 376)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_optional_define_identifier   (rule 379)

    ARRAY	shift, and go to state 702
    COMMA	shift, and go to state 427
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 703



<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 427)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    COMMA	shift, and go to state 665
    CLOSE_PAR	shift, and go to state 666
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 429 (option_input)]
    $default	reduce using rule 429 (option_input)

    option_input	go to state 667
=======
state 466

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_optional_define_identifier   (rule 373)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_optional_define_identifier   (rule 374)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_optional_define_identifier   (rule 381)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_optional_define_identifier   (rule 382)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 704
    ID  	shift, and go to state 214
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 705
    identifier	go to state 706


<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 424)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 425)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    COMMA	shift, and go to state 665
    CLOSE_PAR	shift, and go to state 668
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 429 (option_input)]
    $default	reduce using rule 429 (option_input)

    option_input	go to state 669
=======

state 467

    option_function_parameter_list  ->  STRUCT_TYPE inner_optional_define_identifier .   (rule 380)

    $default	reduce using rule 380 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 468

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 428)

    CLOSE_PAR	shift, and go to state 670
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_optional_define_identifier   (rule 372)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_optional_define_identifier   (rule 375)

    ARRAY	shift, and go to state 707
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 708
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 469

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 671
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_optional_define_identifier   (rule 387)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_optional_define_identifier   (rule 391)
    option_function_parameter_list  ->  all_type_define MUL . inner_optional_define_identifier   (rule 392)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_optional_define_identifier   (rule 393)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 709
    ID  	shift, and go to state 214
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 710
    identifier	go to state 711


<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 672
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======

state 470

    option_function_parameter_list  ->  all_type_define inner_optional_define_identifier .   (rule 371)

    $default	reduce using rule 371 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 471

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 673
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    option_function_parameter_list  ->  all_type_define identifier . inner_optional_define_identifier   (rule 370)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_optional_define_identifier   (rule 386)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    ARRAY	shift, and go to state 712
    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 713

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 714
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 472

<<<<<<< HEAD
    address_exp  ->  ADDRESS . identifier   (rule 218)
    address_exp  ->  ADDRESS . array   (rule 219)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 220)
    address_exp  ->  ADDRESS . address_exp   (rule 221)
    option_function_identifier  ->  ADDRESS . error   (rule 377)

    error	shift, and go to state 674
    OPEN_PAR	shift, and go to state 315
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 316
    point_exp	go to state 317
    address_exp	go to state 318
    identifier	go to state 319
    struct_member_exp	go to state 320
=======
    option_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 134)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 715
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 473

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 375)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 675
    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)
=======
    alg_exp  ->  IF bool_statement . THEN alg_exp optional_exp_else_statement   (rule 198)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    if_statement  ->  IF bool_statement . THEN big_par optional_else_statement   (rule 459)

    THEN	shift, and go to state 716
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 474

<<<<<<< HEAD
    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 374)

    COMMA	shift, and go to state 676

    $default	reduce using rule 380 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 677
=======
    struct_identifier  ->  STRUCT . ID   (rule 99)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)

    ID  	shift, and go to state 202
    STRUCT_TYPE	shift, and go to state 669
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 475

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 678
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 717

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 476

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 718

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 680
    bi_operator	go to state 331


<<<<<<< HEAD

state 477

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)
=======
    type_define  ->  FLOATDECLARATION .   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 719

    MUL 	[reduce using rule 117 (type_define)]
    $default	reduce using rule 117 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 478

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    ASS_P	shift, and go to state 681
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 102)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 720
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 721
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 274
    type_define	go to state 92
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 479

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 682
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    sign_declaration  ->  SIGNED . declaration   (rule 101)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 722
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 723
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 275
    type_define	go to state 92
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 480

<<<<<<< HEAD
    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 106)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 107)

    error	shift, and go to state 683
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 684
    identifier	go to state 253
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    CLOSE_PAR	shift, and go to state 604
    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 481

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 685
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 440)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 441)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 442)

    CLOSE_PAR	shift, and go to state 724
    OR  	shift, and go to state 496
    AND 	shift, and go to state 497
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 482

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)


=======
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 277
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 725
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 483

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

<<<<<<< HEAD
    $default	reduce using rule 32 (statement)

=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    identifier  ->  ID .   (rule 427)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_MPAR	shift, and go to state 726

<<<<<<< HEAD
state 484

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 257

    $default	reduce using rule 31 (statement)
=======
    $default	reduce using rule 427 (identifier)



state 484
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    value_exp  ->  MUL identifier .   (rule 188)

    CLOSE_PAR	shift, and go to state 727

    CLOSE_PAR	[reduce using rule 188 (value_exp)]
    $default	reduce using rule 188 (value_exp)

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 257

    $default	reduce using rule 54 (statement)
=======


state 485

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 442)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 728
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 480
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 729
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 486

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)
=======
    prime_bool_statement  ->  NEGATION prime_bool_statement .   (rule 352)
    imply_pre  ->  prime_bool_statement .   (rule 438)

    CLOSE_PAR	reduce using rule 352 (prime_bool_statement)
    CLOSE_PAR	[reduce using rule 438 (imply_pre)]
    OR  	reduce using rule 352 (prime_bool_statement)
    OR  	[reduce using rule 438 (imply_pre)]
    AND 	reduce using rule 352 (prime_bool_statement)
    AND 	[reduce using rule 438 (imply_pre)]
    $default	reduce using rule 352 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 487

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 76)

    CLOSE_BPAR	shift, and go to state 686
=======
    imply_pre  ->  NEGATION imply_pre .   (rule 439)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 440)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 441)


    $default	reduce using rule 439 (imply_pre)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 488

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration .   (rule 68)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 69)

    AND 	shift, and go to state 687

    $default	reduce using rule 68 (option_struct_declaration)
=======
    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 78)

    $default	reduce using rule 78 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 489

<<<<<<< HEAD
    ass_statement  ->  ass_left assign_operator ass_right .   (rule 120)

    $default	reduce using rule 120 (ass_statement)
=======
    CYLINDER_STATEMENT  ->  OPEN_PAR OVER_STATEMENT CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (CYLINDER_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 490

<<<<<<< HEAD
    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 436)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 690
=======
    ass_ident  ->  OPEN_PAR ass_ident CLOSE_PAR .   (rule 150)

    $default	reduce using rule 150 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 491

<<<<<<< HEAD
    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 433)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 691
=======
    list  ->  OPEN_PAR list CLOSE_PAR .   (rule 184)

    $default	reduce using rule 184 (list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 492

<<<<<<< HEAD
    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 692
=======
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR .   (rule 194)

    OPEN_MPAR	shift, and go to state 730

    $default	reduce using rule 194 (value_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 493

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 693
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY list option_struct_member_exp   (rule 486)

    IMPLY	shift, and go to state 731
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 494

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 439)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 694
=======
    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 428)

    $default	reduce using rule 428 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 495

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 437)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 695
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)

    IMPLY	shift, and go to state 732
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 496

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 434)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 696
=======
    imply_pre  ->  imply_pre OR . imply_pre   (rule 441)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 485
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 733
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 497

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 697
=======
    imply_pre  ->  imply_pre AND . imply_pre   (rule 440)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 485
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 734
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 498

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 441)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 698
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 490)

    $default	reduce using rule 490 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 499

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT function .   (rule 445)

    $default	reduce using rule 445 (struct_member_exp)
=======
    optional_projection  ->  COMMA . statement optional_projection   (rule 437)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 735
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 500

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 435)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 699
=======
    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION big_par   (rule 63)
    big_par  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 423)

    PROJECTION	shift, and go to state 736

    $default	reduce using rule 423 (big_par)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 501

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 432)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 700
=======
    statement  ->  OPEN_BPAR statement optional_projection . CLOSE_BPAR PROJECTION big_par   (rule 62)

    CLOSE_BPAR	shift, and go to state 737
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 502

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY function .   (rule 446)

    $default	reduce using rule 446 (struct_member_exp)
=======
    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 738
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 503

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 442)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 701
=======
    statement  ->  SEND OPEN_PAR ass_ident . COMMA ass_exp CLOSE_PAR   (rule 72)

    COMMA	shift, and go to state 739
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 504

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 438)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689
=======
    statement  ->  RECEIVE OPEN_PAR ass_ident . COMMA identifier CLOSE_PAR   (rule 74)

    COMMA	shift, and go to state 740
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 702



<<<<<<< HEAD
state 505

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)
=======
    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 741
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 506

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 272
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169
=======
    statement  ->  CHANNEL identifier OPEN_PAR . integer CLOSE_PAR   (rule 71)

    INTEGER	shift, and go to state 152

    integer	go to state 742
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 29 (poptional_projection)

<<<<<<< HEAD
    poptional_projection	go to state 703



state 507
=======

state 507

    statement  ->  PUT OPEN_PAR ass_ident . COMMA ass_exp CLOSE_PAR   (rule 73)

    COMMA	shift, and go to state 743
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 704


<<<<<<< HEAD

state 508

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 170)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 705
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  GET OPEN_PAR ass_ident . COMMA identifier CLOSE_PAR   (rule 75)

    COMMA	shift, and go to state 744
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 509

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 244)

    MUL 	shift, and go to state 706
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    OPEN_PAR	shift, and go to state 621
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 622
    value_exp	go to state 623
    address_exp	go to state 533
    identifier	go to state 625
    struct_member_exp	go to state 626
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 510

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 223)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 707
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    str_func_parameter  ->  list .   (rule 307)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    IMPLY	shift, and go to state 312

    $default	reduce using rule 307 (str_func_parameter)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 511

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 709
    MUL 	shift, and go to state 710
=======
    str_func_parameter  ->  value_exp .   (rule 308)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 308 (str_func_parameter)



<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 225)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
state 512

    str_func_parameter  ->  String_Function .   (rule 310)

    $default	reduce using rule 310 (str_func_parameter)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 513

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 712
    MUL 	shift, and go to state 713
=======
    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 300)

    CLOSE_PAR	shift, and go to state 745
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 514

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 714
    MUL 	shift, and go to state 715
=======
    str_func_parameter  ->  identifier .   (rule 306)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    IMPLY	shift, and go to state 317

    $default	reduce using rule 306 (str_func_parameter)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 515

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 224)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 716
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    str_func_parameter  ->  string .   (rule 309)

    $default	reduce using rule 309 (str_func_parameter)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 516

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 717
    MUL 	shift, and go to state 718
=======
    str_func_parameter  ->  struct_member_exp .   (rule 311)

    $default	reduce using rule 311 (str_func_parameter)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 517

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 719
=======
    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 301)

    CLOSE_PAR	shift, and go to state 746
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 518

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 720
=======
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 302)

    COMMA	shift, and go to state 747
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 519

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 721
=======
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 303)

    COMMA	shift, and go to state 748
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 520

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 723
=======
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 304)

    COMMA	shift, and go to state 749
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 521

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725
=======
    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 305)

    CLOSE_PAR	shift, and go to state 750
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 522

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 727
=======
    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 751
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 523

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)

    CLOSE_PAR	shift, and go to state 728
=======
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 412
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 524

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)

    CLOSE_PAR	shift, and go to state 729
=======
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 414
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 525

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 245)

    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 731
=======
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 752
    ID  	shift, and go to state 753

    identifier	go to state 754
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 526

<<<<<<< HEAD
    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 186)

    $default	reduce using rule 186 (member_in_exp)
=======
    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 68)

    CLOSE_PAR	shift, and go to state 755
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 527

<<<<<<< HEAD
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 222)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 444)

    IMPLY	shift, and go to state 635

    IMPLY	[reduce using rule 222 (address_exp)]
    $default	reduce using rule 222 (address_exp)
=======
    value_exp  ->  MUL OPEN_PAR alg_exp . CLOSE_PAR   (rule 193)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    CLOSE_PAR	shift, and go to state 756
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 528

<<<<<<< HEAD
    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 254)

    STRUCT_TYPE	shift, and go to state 732
=======
    value_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR alg_exp   (rule 192)

    MUL 	shift, and go to state 757
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 529

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 249)

    MUL 	shift, and go to state 733

    $default	reduce using rule 92 (type_define)
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 78)
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    error	shift, and go to state 22
    IF  	shift, and go to state 234
    EMPTY	shift, and go to state 235
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 236
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 237
    MY_FALSE	shift, and go to state 238
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 758
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 759
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 760
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 239
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    SYSTEM	shift, and go to state 68
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 761
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 73
    NEGATION	shift, and go to state 241
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    statement	go to state 242
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 243
    function	go to state 244
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 245
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 251
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    big_par	go to state 106
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 254
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 255
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 530

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)
    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 251)

    MUL 	shift, and go to state 734

    $default	reduce using rule 94 (type_define)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 762
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 531

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 93)
    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 250)

    MUL 	shift, and go to state 735

    $default	reduce using rule 93 (type_define)
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    ass_ident  ->  list .   (rule 148)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 148 (ass_ident)]
    $default	reduce using rule 148 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 532

<<<<<<< HEAD
    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 252)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 253)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 327)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 328)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 737
=======
    ass_ident  ->  value_exp .   (rule 149)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314

    CLOSE_PAR	[reduce using rule 149 (ass_ident)]
    $default	reduce using rule 149 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 533

<<<<<<< HEAD
    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 255)
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 258)

    CLOSE_PAR	shift, and go to state 738
    MUL 	shift, and go to state 739
=======
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)

    CLOSE_PAR	shift, and go to state 493
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 534

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    size_of  ->  SIZEOF OPEN_PAR ari_exp . CLOSE_PAR   (rule 256)

    CLOSE_PAR	shift, and go to state 740
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    ass_ident  ->  identifier .   (rule 146)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 428)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 146 (ass_ident)]
    $default	reduce using rule 146 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 535

<<<<<<< HEAD
    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 257)

    CLOSE_PAR	shift, and go to state 741
=======
    ass_ident  ->  struct_member_exp .   (rule 147)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 490)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 147 (ass_ident)]
    $default	reduce using rule 147 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 536

<<<<<<< HEAD
    all_sizeof_type  ->  all_type_define .   (rule 248)

    $default	reduce using rule 248 (all_sizeof_type)
=======
    statement  ->  LENGTH OPEN_PAR alg_exp . CLOSE_PAR   (rule 53)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    CLOSE_PAR	shift, and go to state 763
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 537

<<<<<<< HEAD
    size_of  ->  SIZEOF OPEN_PAR strliteral . CLOSE_PAR   (rule 259)

    CLOSE_PAR	shift, and go to state 742
=======
    request_statement  ->  REQUEST OPEN_PAR list . CLOSE_PAR   (rule 468)
    request_statement  ->  REQUEST OPEN_PAR list . option_input CLOSE_PAR   (rule 469)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    COMMA	shift, and go to state 764
    CLOSE_PAR	shift, and go to state 765
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 471 (option_input)]
    $default	reduce using rule 471 (option_input)

    option_input	go to state 766
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 538

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ATAN2 OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 294)

    COMMA	shift, and go to state 743
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    request_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 466)
    request_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 467)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    COMMA	shift, and go to state 764
    CLOSE_PAR	shift, and go to state 767
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 471 (option_input)]
    $default	reduce using rule 471 (option_input)

    option_input	go to state 768
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 539

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  POW OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 295)

    COMMA	shift, and go to state 744
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    request_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 470)

    CLOSE_PAR	shift, and go to state 769
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 540

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FMOD OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 296)

    COMMA	shift, and go to state 745
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 58)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 770
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 541

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  MODF OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 297)

    COMMA	shift, and go to state 746
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 771
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 542

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LDEXP OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 298)

    COMMA	shift, and go to state 747
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 46)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 772
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 543

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    INTDECLARATION	shift, and go to state 748
    CHARDECLARATION	shift, and go to state 749
    FLOATDECLARATION	shift, and go to state 750
    OPEN_PAR	shift, and go to state 543
    UNSIGNED	shift, and go to state 751
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235

    array	go to state 544
    point_exp	go to state 545
    address_exp	go to state 546
    identifier	go to state 547
    struct_member_exp	go to state 548
=======
    statement  ->  HALT OPEN_PAR bool_statement . CLOSE_PAR   (rule 47)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    CLOSE_PAR	shift, and go to state 773
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 544

<<<<<<< HEAD
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  W_NEXT OPEN_PAR statement . CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 774
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 545

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 166)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 447)

    DOT 	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 423
    IMPLY	shift, and go to state 267
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  PREFIX OPEN_PAR statement . CLOSE_PAR   (rule 35)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 775
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 546

<<<<<<< HEAD
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 222)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)

    CLOSE_PAR	shift, and go to state 527
=======
    address_exp  ->  ADDRESS . identifier   (rule 252)
    address_exp  ->  ADDRESS . list   (rule 253)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 254)
    address_exp  ->  ADDRESS . address_exp   (rule 255)
    option_function_identifier  ->  ADDRESS . error   (rule 418)

    error	shift, and go to state 776
    OPEN_PAR	shift, and go to state 363
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 364
    value_exp	go to state 365
    address_exp	go to state 366
    identifier	go to state 367
    struct_member_exp	go to state 368
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 547

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 387)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 432)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 435)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 438)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 442)
    struct_member_exp  ->  identifier . DOT function   (rule 445)
    struct_member_exp  ->  identifier . IMPLY function   (rule 446)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 425
    IMPLY	shift, and go to state 269
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 416)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 777
    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 548

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 448)

    CLOSE_PAR	shift, and go to state 429
=======
    option_function_identifier  ->  ass_exp . inner_option_function_identifier   (rule 415)

    COMMA	shift, and go to state 778
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 421 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 779


<<<<<<< HEAD
    ari_exp  ->  ari_exp bi_operator simple_ari_exp .   (rule 169)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 169 (ari_exp)]
    CON 	[reduce using rule 169 (ari_exp)]
    ADDRESS	[reduce using rule 169 (ari_exp)]
    LST 	[reduce using rule 169 (ari_exp)]
    RST 	[reduce using rule 169 (ari_exp)]
    MUL 	[reduce using rule 169 (ari_exp)]
    DIV 	[reduce using rule 169 (ari_exp)]
    MOD 	[reduce using rule 169 (ari_exp)]
    $default	reduce using rule 169 (ari_exp)
=======

state 549

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 96)

    CLOSE_PAR	shift, and go to state 780
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    bi_operator	go to state 338



<<<<<<< HEAD
state 550

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 176)

    $default	reduce using rule 176 (simple_ari_exp)
=======
    list  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 178)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 782
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 551

<<<<<<< HEAD
    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 168)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 130)

    $default	reduce using rule 130 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    INTER_OR	[reduce using rule 168 (ari_exp)]
    CON 	[reduce using rule 168 (ari_exp)]
    ADDRESS	[reduce using rule 168 (ari_exp)]
    LST 	[reduce using rule 168 (ari_exp)]
    RST 	[reduce using rule 168 (ari_exp)]
    MUL 	[reduce using rule 168 (ari_exp)]
    DIV 	[reduce using rule 168 (ari_exp)]
    MOD 	[reduce using rule 168 (ari_exp)]
    $default	reduce using rule 168 (ari_exp)

    bi_operator	go to state 331



<<<<<<< HEAD
state 552

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 412)

    OPEN_BPAR	shift, and go to state 752
=======
    option_identifier_array_declaration  ->  ID ARRAY . ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 126)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_EQU string inner_option_identifier_array_declaration   (rule 127)

    ASS_EQU	shift, and go to state 783
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 553

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 318)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 318 (prime_bool_exp)

    bi_operator	go to state 331
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 784
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 554

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 317)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 317 (prime_bool_exp)
=======
    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 131)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 132)

    error	shift, and go to state 785
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 786
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    bi_operator	go to state 331



<<<<<<< HEAD
state 555

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 306)

    $default	reduce using rule 306 (bool_exp)
=======
    option_identifier_array_declaration  ->  identifier ASS_EQU . ass_exp inner_option_identifier_array_declaration   (rule 124)
    option_identifier_array_declaration  ->  identifier ASS_EQU . string inner_option_identifier_array_declaration   (rule 125)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 787
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 788
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 556

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 316)

    $default	reduce using rule 316 (prime_bool_exp)
=======
    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 122)

    $default	reduce using rule 122 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 557

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 312)

    $default	reduce using rule 312 (prime_bool_exp)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement CHOP statement .   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)

    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 34 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 558

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 320)

    $default	reduce using rule 320 (prime_bool_exp)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement OR statement .   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)

    AND 	shift, and go to state 303

    $default	reduce using rule 33 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 559

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 315)

    $default	reduce using rule 315 (prime_bool_exp)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  statement PARALLEL statement .   (rule 59)

    AND 	shift, and go to state 303

    $default	reduce using rule 59 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 560

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 311)

    $default	reduce using rule 311 (prime_bool_exp)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement AND statement .   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)


    $default	reduce using rule 32 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 561

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 319)

    $default	reduce using rule 319 (prime_bool_exp)


=======
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    OVER_STATEMENT	go to state 789
    big_par	go to state 106
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 562

    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 307)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

<<<<<<< HEAD
    $default	reduce using rule 307 (prime_bool_exp)

    bi_operator	go to state 331
=======
    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT . CYLINDER CYLINDER_STATEMENT   (rule 82)
    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT CYLINDER CYLINDER_STATEMENT .   (rule 82)

>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 82 (CYLINDER_STATEMENT)



<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 417)

    ELSE	shift, and go to state 753

    $default	reduce using rule 419 (option_else_statement)

    option_else_statement	go to state 754
=======
state 563

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 98)

    CLOSE_BPAR	shift, and go to state 790
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 564

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 305)

    AND 	shift, and go to state 357

    $default	reduce using rule 305 (bool_exp)
=======
    option_struct_declaration  ->  sign_declaration .   (rule 80)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 81)

    AND 	shift, and go to state 791
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 80 (option_struct_declaration)



<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)


    $default	reduce using rule 304 (bool_exp)
=======
state 565

    ass_statement  ->  ass_ident assign_operator ass_exp .   (rule 145)

    $default	reduce using rule 145 (ass_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 566

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 314)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 314 (prime_bool_exp)

    bi_operator	go to state 331
=======
    struct_member_exp  ->  list DOT list . option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 794
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 567

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 313)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 313 (prime_bool_exp)
=======
    struct_member_exp  ->  list DOT identifier . option_struct_member_exp   (rule 475)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 795
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    bi_operator	go to state 331



<<<<<<< HEAD
state 568
=======
    function  ->  list OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 97)

    CLOSE_PAR	shift, and go to state 796
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)


<<<<<<< HEAD

state 569

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    INTDECLARATION	shift, and go to state 755
    CHARDECLARATION	shift, and go to state 756
    FLOATDECLARATION	shift, and go to state 757
    OPEN_PAR	shift, and go to state 569
    UNSIGNED	shift, and go to state 758
    ADDRESS	shift, and go to state 136
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235

    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 571
    point_exp	go to state 461
    address_exp	go to state 546
    identifier	go to state 463
    struct_member_exp	go to state 464
=======
    struct_member_exp  ->  list IMPLY list . option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 797
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 570

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 125)

    CLOSE_PAR	shift, and go to state 421
=======
    struct_member_exp  ->  list IMPLY identifier . option_struct_member_exp   (rule 481)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 798
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 571

<<<<<<< HEAD
    ass_left  ->  array .   (rule 123)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 263
    CLOSE_PAR	shift, and go to state 422
    IMPLY	shift, and go to state 265

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    $default	reduce using rule 123 (ass_left)
=======
    struct_member_exp  ->  value_exp DOT list . option_struct_member_exp   (rule 479)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 799
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 572

<<<<<<< HEAD
    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA . strliteral CLOSE_PAR   (rule 113)

    STRLITERAL	shift, and go to state 176

    strliteral	go to state 759
=======
    struct_member_exp  ->  value_exp DOT identifier . option_struct_member_exp   (rule 476)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 800
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 573

<<<<<<< HEAD
    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 119)

    $default	reduce using rule 119 (file_statement)
=======
    struct_member_exp  ->  value_exp IMPLY list . option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 801
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 574

<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR identifier COMMA . intliteral COMMA identifier CLOSE_PAR   (rule 114)

    INTLITERAL	shift, and go to state 139

    intliteral	go to state 760
=======
    struct_member_exp  ->  value_exp IMPLY identifier . option_struct_member_exp   (rule 483)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 802


<<<<<<< HEAD
    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 761
=======

state 575

    OVER_STATEMENT  ->  big_par OVER OPEN_PAR . INTERVAL_STATEMENT CLOSE_PAR   (rule 85)
    OVER_STATEMENT  ->  big_par OVER OPEN_PAR . CLOSE_PAR   (rule 86)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 803
    CLOSE_PAR	shift, and go to state 804
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 805
    SIG_INTERVAL	go to state 806
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 807
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 576

<<<<<<< HEAD
    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 115)

    $default	reduce using rule 115 (file_statement)
=======
    struct_member_exp  ->  identifier DOT function .   (rule 487)

    $default	reduce using rule 487 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 577

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    INTDECLARATION	shift, and go to state 748
    CHARDECLARATION	shift, and go to state 749
    FLOATDECLARATION	shift, and go to state 750
    OPEN_PAR	shift, and go to state 577
    UNSIGNED	shift, and go to state 751
    ID  	shift, and go to state 235

    array	go to state 578
    identifier	go to state 375
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    struct_member_exp  ->  identifier DOT list . option_struct_member_exp   (rule 477)

    DOT 	shift, and go to state 792
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 808
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 578

<<<<<<< HEAD
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 156)

    CLOSE_PAR	shift, and go to state 422
=======
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 474)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 809
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 579

<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR array COMMA . identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 762
=======
    struct_member_exp  ->  identifier IMPLY function .   (rule 488)

    $default	reduce using rule 488 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 580

<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 763
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    struct_member_exp  ->  identifier IMPLY list . option_struct_member_exp   (rule 484)

    DOT 	shift, and go to state 792
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_struct_member_exp	go to state 810


<<<<<<< HEAD
state 581

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    MUL 	shift, and go to state 764
=======

state 581

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 480)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 811

<<<<<<< HEAD
    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 344)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 345)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 346)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 765
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766
    identifier	go to state 767
=======


state 582

    prime_bool_statement  ->  NEGATION . prime_bool_statement   (rule 352)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 582
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 812
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 583

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 341)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 342)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 343)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 768
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 769
    identifier	go to state 770
=======
    complexProposition  ->  DEFINE ID COLON prime_bool_statement .   (rule 26)

    $default	reduce using rule 26 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 584

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 331)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 332)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 354)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 771
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 772
    identifier	go to state 773
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 29)

    COMMA	shift, and go to state 320
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 30 (poptional_projection)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    poptional_projection	go to state 813



<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 774
=======
state 585

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    PROJECTION	shift, and go to state 814
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 586

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA error .   (rule 373)

    $default	reduce using rule 373 (inner_option_define_identifier)
=======
    alg_exp  ->  IF bool_statement THEN . alg_exp optional_exp_else_statement   (rule 198)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 815
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 587

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    MUL 	shift, and go to state 775
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 278)

    MUL 	shift, and go to state 816
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 588

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 362)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 776
=======
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 257)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 817
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 589

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 363)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 194

    identifier	go to state 778
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 819
    MUL 	shift, and go to state 820
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 590

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 357)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 372)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 779
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 780
    identifier	go to state 781
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 259)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 821
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 591

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 782
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 822
    MUL 	shift, and go to state 823
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 592

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 392)
    option_frame_identifier  ->  COMMA . error   (rule 394)

    error	shift, and go to state 783
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 784
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 275)

    CLOSE_PAR	shift, and go to state 824
    MUL 	shift, and go to state 825
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 593

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 785
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 258)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 826
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 594

<<<<<<< HEAD
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 244)

    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 786
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 362
    identifier	go to state 253
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 827
    MUL 	shift, and go to state 828
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 595

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 787
    CHARDECLARATION	shift, and go to state 788
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 789
    OPEN_PAR	shift, and go to state 595
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 790
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_left	go to state 570
    leftaddrshift	go to state 84
    array	go to state 211
    point_exp	go to state 212
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 215
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 217
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 829
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 596

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 791
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 830
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 597

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 409 (for_sta_condition)

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 792
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    for_sta_condition	go to state 793
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 831
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 598

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 403)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 832
    CHARDECLARATION	shift, and go to state 833
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement_bpar	go to state 794


<<<<<<< HEAD

state 599

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 384)

    $default	reduce using rule 384 (bool_par)
=======
state 599

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 834
    MUL 	shift, and go to state 835
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 600

<<<<<<< HEAD
    statement_bpar  ->  error CLOSE_BPAR .   (rule 383)

    $default	reduce using rule 383 (statement_bpar)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 837
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 601

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 382)

    CLOSE_BPAR	shift, and go to state 795
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 260)

    CLOSE_PAR	shift, and go to state 838
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 602

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 796
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 261)

    CLOSE_PAR	shift, and go to state 839
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 603

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 603
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 604
    rightaddrshift	go to state 401
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 605
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 606
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    strliteral	go to state 607
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 279)

    CLOSE_PAR	shift, and go to state 840
    MUL 	shift, and go to state 841
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 604

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 147)

    CLOSE_PAR	shift, and go to state 797
=======
    factor  ->  OPEN_PAR alg_exp CLOSE_PAR .   (rule 216)

    $default	reduce using rule 216 (factor)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 605

<<<<<<< HEAD
    ass_right  ->  ari_exp .   (rule 143)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 186)

    CLOSE_PAR	shift, and go to state 526
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    CLOSE_PAR	[reduce using rule 143 (ass_right)]
    $default	reduce using rule 143 (ass_right)

    bi_operator	go to state 331
=======
    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 256)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY list option_struct_member_exp   (rule 486)

    IMPLY	shift, and go to state 731

    IMPLY	[reduce using rule 256 (address_exp)]
    $default	reduce using rule 256 (address_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 606

<<<<<<< HEAD
    ass_right  ->  array_exp .   (rule 144)
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 206)

    CLOSE_PAR	shift, and go to state 798
    CON 	shift, and go to state 619
=======
    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 288)

    STRUCT_TYPE	shift, and go to state 842
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 144 (ass_right)]
    $default	reduce using rule 144 (ass_right)



<<<<<<< HEAD
state 607

    ass_right  ->  strliteral .   (rule 145)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    CLOSE_PAR	shift, and go to state 799

    CLOSE_PAR	[reduce using rule 145 (ass_right)]
    $default	reduce using rule 145 (ass_right)
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 283)

    MUL 	shift, and go to state 843

    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 608

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 800
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 801
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 285)

    MUL 	shift, and go to state 844

    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 609

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 210)

    COMMA	shift, and go to state 802
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 216 (inner_option_list_value)

    bi_operator	go to state 331
    inner_option_list_value	go to state 803
=======
    type_define  ->  FLOATDECLARATION .   (rule 117)
    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 284)

    MUL 	shift, and go to state 845
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 117 (type_define)



<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 212)

    COMMA	shift, and go to state 802
    CON 	shift, and go to state 619

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 804
=======
state 610

    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 286)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 287)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 366)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 367)

    INTDECLARATION	shift, and go to state 846
    CHARDECLARATION	shift, and go to state 847
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 611

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 211)

    COMMA	shift, and go to state 802

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 805
=======
    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 289)
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 292)

    CLOSE_PAR	shift, and go to state 848
    MUL 	shift, and go to state 849
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 612

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 207)

    COMMA	shift, and go to state 802
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 216 (inner_option_list_value)

    bi_operator	go to state 331
    inner_option_list_value	go to state 806
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    size_of  ->  SIZEOF OPEN_PAR alg_exp . CLOSE_PAR   (rule 290)

    CLOSE_PAR	shift, and go to state 850
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 613

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 209)

    COMMA	shift, and go to state 802
    CON 	shift, and go to state 619
=======
    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 291)

    CLOSE_PAR	shift, and go to state 851
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 807


<<<<<<< HEAD

state 614
=======
    all_sizeof_type  ->  all_type_define .   (rule 282)

    $default	reduce using rule 282 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 208)

    COMMA	shift, and go to state 802

    $default	reduce using rule 216 (inner_option_list_value)

<<<<<<< HEAD
    inner_option_list_value	go to state 808


=======
    size_of  ->  SIZEOF OPEN_PAR string . CLOSE_PAR   (rule 293)

    CLOSE_PAR	shift, and go to state 852
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 615

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 164)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 165)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 809
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 453
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    type_define	go to state 454
    file_statement	go to state 81
    leftaddrshift	go to state 810
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 455
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    sign_type_define	go to state 456
    all_type_define	go to state 457
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156


<<<<<<< HEAD

state 616

    option_output  ->  COMMA . ass_right option_output   (rule 423)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 811
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 328)

    COMMA	shift, and go to state 853
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 617

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 420)

    $default	reduce using rule 420 (output_statement)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  POW OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 329)

    COMMA	shift, and go to state 854
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 618

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 421)

    CLOSE_PAR	shift, and go to state 812
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FMOD OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 330)

    COMMA	shift, and go to state 855
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 619

<<<<<<< HEAD
    array_exp  ->  array_exp CON . array_exp   (rule 203)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398

    array_exp	go to state 814
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  MODF OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 331)

    COMMA	shift, and go to state 856
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 620

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 170)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 417)

    error	shift, and go to state 392
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    OPEN_BPAR	shift, and go to state 393
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 705
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    statement_bpar	go to state 563
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LDEXP OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 332)

    COMMA	shift, and go to state 857
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 621

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 815
    MUL 	shift, and go to state 710
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    INTDECLARATION	shift, and go to state 858
    CHARDECLARATION	shift, and go to state 859
    FLOATDECLARATION	shift, and go to state 860
    OPEN_PAR	shift, and go to state 621
    UNSIGNED	shift, and go to state 861
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 622
    value_exp	go to state 623
    address_exp	go to state 624
    identifier	go to state 625
    struct_member_exp	go to state 626
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 622

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 816
    MUL 	shift, and go to state 713
=======
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 623

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 817
    MUL 	shift, and go to state 718
=======
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 483)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 489)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 624

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 818

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)
=======
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 256)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)

    CLOSE_PAR	shift, and go to state 605
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 625

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 819

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 428)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 480)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 484)
    struct_member_exp  ->  identifier . DOT function   (rule 487)
    struct_member_exp  ->  identifier . IMPLY function   (rule 488)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 626

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)

    CLOSE_PAR	shift, and go to state 728

    $default	reduce using rule 92 (type_define)
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 490)

    CLOSE_PAR	shift, and go to state 498
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 627

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)

    CLOSE_PAR	shift, and go to state 729

    $default	reduce using rule 94 (type_define)
=======
    pre_next  ->  PREVIOUS OPEN_PAR identifier . CLOSE_PAR   (rule 223)

    CLOSE_PAR	shift, and go to state 862
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 628

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 401)

    IMPLY	shift, and go to state 636

    $default	reduce using rule 401 (imply_pre)



state 629
=======
    alg_exp  ->  alg_exp alg_operator simple_alg_exp .   (rule 197)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 197 (alg_exp)]
    CON 	[reduce using rule 197 (alg_exp)]
    ADDRESS	[reduce using rule 197 (alg_exp)]
    LST 	[reduce using rule 197 (alg_exp)]
    RST 	[reduce using rule 197 (alg_exp)]
    MUL 	[reduce using rule 197 (alg_exp)]
    DIV 	[reduce using rule 197 (alg_exp)]
    MOD 	[reduce using rule 197 (alg_exp)]
    $default	reduce using rule 197 (alg_exp)

    mul_operator	go to state 389



state 629

    simple_alg_exp  ->  simple_alg_exp mul_operator factor .   (rule 204)

    $default	reduce using rule 204 (simple_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    point_exp  ->  MUL identifier .   (rule 160)

    CLOSE_PAR	shift, and go to state 820

    CLOSE_PAR	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)

<<<<<<< HEAD


state 630

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 821
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  simple_alg_exp relation_operator alg_exp .   (rule 196)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 196 (alg_exp)]
    SUB 	[reduce using rule 196 (alg_exp)]
    $default	reduce using rule 196 (alg_exp)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 631

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)

    OPEN_PAR	shift, and go to state 822
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  POINTERNULL NE alg_exp .   (rule 344)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 344 (bool_statement)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 632

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 401)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 632
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 207
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 349
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    prime_bool_exp	go to state 214
    identifier	go to state 288
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    imply_pre	go to state 633
    struct_member_exp	go to state 289
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  POINTERNULL EQU alg_exp .   (rule 343)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 343 (bool_statement)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 633

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 401)

    CLOSE_PAR	shift, and go to state 823
    OR  	shift, and go to state 427
    AND 	shift, and go to state 428
=======
    bool_statement  ->  OPEN_PAR bool_statement CLOSE_PAR .   (rule 350)

    $default	reduce using rule 350 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 634

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 163)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 824
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    bool_statement  ->  alg_exp NE POINTERNULL .   (rule 342)

    $default	reduce using rule 342 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 635

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 444)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 825
    identifier	go to state 826
=======
    bool_statement  ->  alg_exp NE string .   (rule 338)

    $default	reduce using rule 338 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 636

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 827
=======
    bool_statement  ->  alg_exp NE charliteral .   (rule 346)

    $default	reduce using rule 346 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 637

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 400)

    AND 	shift, and go to state 428

    $default	reduce using rule 400 (imply_pre)
=======
    bool_statement  ->  alg_exp EQU POINTERNULL .   (rule 341)

    $default	reduce using rule 341 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 638

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 399)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 399)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 400)


    $default	reduce using rule 399 (imply_pre)
=======
    bool_statement  ->  alg_exp EQU string .   (rule 337)

    $default	reduce using rule 337 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 639

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 396)

    COMMA	shift, and go to state 430
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 395 (option_projection)

    option_projection	go to state 828
=======
    bool_statement  ->  alg_exp EQU charliteral .   (rule 345)

    $default	reduce using rule 345 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 640

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 829
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    prime_bool_statement  ->  alg_exp relation_operator alg_exp .   (rule 351)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 351 (prime_bool_statement)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 641

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 830
=======
    if_statement  ->  IF bool_statement THEN big_par . optional_else_statement   (rule 459)

    ELSE	shift, and go to state 863

    $default	reduce using rule 461 (optional_else_statement)

    optional_else_statement	go to state 864
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 642

<<<<<<< HEAD
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 831
=======
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_statement  ->  bool_statement OR bool_statement .   (rule 349)

    AND 	shift, and go to state 408

    $default	reduce using rule 349 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 643

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    CLOSE_PAR	shift, and go to state 832
=======
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement AND bool_statement .   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)


    $default	reduce using rule 348 (bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 644

<<<<<<< HEAD
    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 266)

    $default	reduce using rule 266 (String_Function_head)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  string NE alg_exp .   (rule 340)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 340 (bool_statement)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 645

<<<<<<< HEAD
    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 267)

    $default	reduce using rule 267 (String_Function_tail)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  string EQU alg_exp .   (rule 339)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 339 (bool_statement)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 646

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 833
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    statement  ->  AWAIT OPEN_PAR bool_statement CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 647

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 834
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    INTDECLARATION	shift, and go to state 865
    CHARDECLARATION	shift, and go to state 866
    FLOATDECLARATION	shift, and go to state 867
    OPEN_PAR	shift, and go to state 647
    UNSIGNED	shift, and go to state 868
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 649
    value_exp	go to state 532
    address_exp	go to state 624
    identifier	go to state 534
    struct_member_exp	go to state 535
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 648

<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 65
    ID  	shift, and go to state 235
    STRLITERAL	shift, and go to state 176

    array	go to state 436
    point_exp	go to state 437
    String_Function	go to state 438
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    str_func_parameter	go to state 835
    identifier	go to state 440
    strliteral	go to state 441
    struct_member_exp	go to state 442
=======
    ass_ident  ->  OPEN_PAR ass_ident . CLOSE_PAR   (rule 150)

    CLOSE_PAR	shift, and go to state 490
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 649

<<<<<<< HEAD
    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 271)

    $default	reduce using rule 271 (String_Function_len)
=======
    ass_ident  ->  list .   (rule 148)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 478)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 481)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 310
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 148 (ass_ident)]
    $default	reduce using rule 148 (ass_ident)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 650

<<<<<<< HEAD
    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)
=======
    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA . string CLOSE_PAR   (rule 138)

    STR 	shift, and go to state 193

    string	go to state 869
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 651

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 836
=======
    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 144)

    $default	reduce using rule 144 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 652

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    identifier  ->  ID .   (rule 386)

    OPEN_MPAR	shift, and go to state 837

    $default	reduce using rule 386 (identifier)
=======
    file_statement  ->  FGETS OPEN_PAR identifier COMMA . integer COMMA identifier CLOSE_PAR   (rule 139)

    INTEGER	shift, and go to state 152

    integer	go to state 870
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 653

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)

    CLOSE_PAR	shift, and go to state 631
=======
    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 141)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    identifier	go to state 871



<<<<<<< HEAD
    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 63)

    $default	reduce using rule 63 (statement)
=======
state 654

    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 140)

    $default	reduce using rule 140 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 655

<<<<<<< HEAD
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 327)

    $default	reduce using rule 327 (sign_type_define)
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)

    INTDECLARATION	shift, and go to state 858
    CHARDECLARATION	shift, and go to state 859
    FLOATDECLARATION	shift, and go to state 860
    OPEN_PAR	shift, and go to state 655
    UNSIGNED	shift, and go to state 861
    ID  	shift, and go to state 278

    list	go to state 656
    identifier	go to state 426
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 656

<<<<<<< HEAD
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 328)

    $default	reduce using rule 328 (sign_type_define)
=======
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)

    CLOSE_PAR	shift, and go to state 491
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 657

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 165)

    $default	reduce using rule 165 (point_exp)
=======
    file_statement  ->  FPUTC OPEN_PAR list COMMA . identifier CLOSE_PAR   (rule 143)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 872
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 658

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 164)

    CLOSE_PAR	shift, and go to state 838
=======
    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 142)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 873
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 659

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 839

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    CLOSE_PAR	shift, and go to state 874
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 660

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 840

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)
=======
    inner_optional_define_identifier  ->  COMMA error .   (rule 414)

    $default	reduce using rule 414 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 661

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 841

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 875
    ID  	shift, and go to state 214

    identifier	go to state 426
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 662

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED . declaration   (rule 80)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 842
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 843
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    STRUCT_TYPE	shift, and go to state 73

    declaration	go to state 231
    type_define	go to state 80
=======
    inner_optional_define_identifier  ->  COMMA ID . identifier inner_optional_define_identifier   (rule 398)
    inner_optional_define_identifier  ->  COMMA ID . identifier ARRAY inner_optional_define_identifier   (rule 401)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    $default	reduce using rule 427 (identifier)

    identifier	go to state 876
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 663

<<<<<<< HEAD
    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_optional_define_identifier   (rule 399)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_optional_define_identifier   (rule 400)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_optional_define_identifier   (rule 402)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 877
    ID  	shift, and go to state 214

    identifier	go to state 878
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 664

<<<<<<< HEAD
    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier inner_optional_define_identifier   (rule 396)
    inner_optional_define_identifier  ->  COMMA all_type_define . inner_optional_define_identifier   (rule 397)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier inner_optional_define_identifier   (rule 411)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL inner_optional_define_identifier   (rule 412)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 879
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 880
    identifier	go to state 881
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 665

<<<<<<< HEAD
    option_input  ->  COMMA . identifier option_input   (rule 430)
    option_input  ->  COMMA . array option_input   (rule 431)

    OPEN_PAR	shift, and go to state 371
    ID  	shift, and go to state 235

    array	go to state 844
    identifier	go to state 845
=======
    inner_optional_define_identifier  ->  COMMA identifier . inner_optional_define_identifier   (rule 413)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 882
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 666

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 426)

    $default	reduce using rule 426 (input_statement)
=======
    statement  ->  EXIST identifier inner_optional_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    OPEN_BPAR	shift, and go to state 883
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 667

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 427)

    CLOSE_PAR	shift, and go to state 846
=======
    optional_frame_identifier  ->  COMMA . identifier optional_frame_identifier   (rule 433)
    optional_frame_identifier  ->  COMMA . error   (rule 435)

    error	shift, and go to state 884
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 885
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 668

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 424)

    $default	reduce using rule 424 (input_statement)
=======
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    CLOSE_PAR	shift, and go to state 886
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 669

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 425)

    CLOSE_PAR	shift, and go to state 847
=======
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 278)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 887
    ID  	shift, and go to state 297
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_identifier_array_declaration	go to state 413
    identifier	go to state 299



<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 428)

    $default	reduce using rule 428 (input_statement)
=======
state 670

    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 888
    CHARDECLARATION	shift, and go to state 889
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 890
    OPEN_PAR	shift, and go to state 670
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 891
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 283
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 255
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 671

<<<<<<< HEAD
    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 279)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 840
    MUL 	shift, and go to state 892
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 672

<<<<<<< HEAD
    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP . for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 451)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 456 (for_sta_condition)

    pbool_expression	go to state 893
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 894
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    for_sta_condition	go to state 895
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 673

<<<<<<< HEAD
    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)
=======
    for_statement  ->  FOR alg_exp TIMES DO . big_par   (rule 450)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 896
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 674

<<<<<<< HEAD
    option_function_identifier  ->  ADDRESS error .   (rule 377)

    $default	reduce using rule 377 (option_function_identifier)
=======
    bool_par  ->  OPEN_PAR bool_statement CLOSE_PAR .   (rule 425)

    $default	reduce using rule 425 (bool_par)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 675

<<<<<<< HEAD
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 375)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 848
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    big_par  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 423)

    CLOSE_BPAR	shift, and go to state 897
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 676

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 378)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 379)
    inner_option_function_identifier  ->  COMMA . error   (rule 381)

    error	shift, and go to state 849
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 850
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 851
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    UNTIL	shift, and go to state 898
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 677

<<<<<<< HEAD
    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 374)

    $default	reduce using rule 374 (option_function_identifier)
=======
    ass_exp  ->  OPEN_PAR . string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)
    ass_exp  ->  OPEN_PAR . ass_exp CLOSE_PAR   (rule 175)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 677
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 678
    rightaddrshift	go to state 452
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 679
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 680
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 681
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 682
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 683
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 678

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)
=======
    ass_exp  ->  OPEN_PAR ass_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 899
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 679

<<<<<<< HEAD
    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 157)
    option_ari_exp  ->  COMMA . error   (rule 158)

    error	shift, and go to state 852
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 853
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    ass_exp  ->  alg_exp .   (rule 168)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    CLOSE_PAR	shift, and go to state 604
    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    CLOSE_PAR	[reduce using rule 168 (ass_exp)]
    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 680

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 854
=======
    ass_exp  ->  list_exp .   (rule 169)
    list_exp  ->  list_exp . CON list_exp   (rule 234)
    list_exp  ->  OPEN_PAR list_exp . CLOSE_PAR   (rule 237)

    CLOSE_PAR	shift, and go to state 900
    CON 	shift, and go to state 697

    CLOSE_PAR	[reduce using rule 169 (ass_exp)]
    $default	reduce using rule 169 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 681

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRLITERAL	shift, and go to state 176

    array_exp	go to state 855
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    strliteral	go to state 856
=======
    ass_exp  ->  bool_statement .   (rule 171)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_statement  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 350)

    CLOSE_PAR	shift, and go to state 633
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408

    CLOSE_PAR	[reduce using rule 171 (ass_exp)]
    $default	reduce using rule 171 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 682

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 857
    bi_operator	go to state 331
=======
    ass_exp  ->  string .   (rule 170)
    ass_exp  ->  OPEN_PAR string . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    CLOSE_PAR	shift, and go to state 901
    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410

    CLOSE_PAR	[reduce using rule 170 (ass_exp)]
    $default	reduce using rule 170 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 683

<<<<<<< HEAD
    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 107)

    $default	reduce using rule 107 (inner_option_identifier_array_declaration)
=======
    ass_exp  ->  struct_member_exp .   (rule 172)
    factor  ->  struct_member_exp .   (rule 221)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 490)

    CLOSE_PAR	shift, and go to state 498
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 172 (ass_exp)]
    CLOSE_PAR	[reduce using rule 221 (factor)]
    $default	reduce using rule 221 (factor)



<<<<<<< HEAD
    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (inner_option_identifier_array_declaration)
=======
state 684

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 902
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 903
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 685

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 480

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 858
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR alg_exp . inner_option_list_value CLOSE_BPAR   (rule 242)

    COMMA	shift, and go to state 904
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 250 (inner_option_list_value)

    alg_operator	go to state 374
    inner_option_list_value	go to state 905
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 686

<<<<<<< HEAD
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 76)

    $default	reduce using rule 76 (struct_define_statement)
=======
    list_exp  ->  list_exp . CON list_exp   (rule 234)
    option_struct_list_value  ->  OPEN_BPAR list_exp . inner_option_list_value CLOSE_BPAR   (rule 245)

    COMMA	shift, and go to state 904
    CON 	shift, and go to state 697

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 906
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 687

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 69)

    STRUCT	shift, and go to state 228
    UNION	shift, and go to state 229
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 230
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    STRUCT_TYPE	shift, and go to state 73

    option_struct_declaration	go to state 859
    sign_declaration	go to state 488
    declaration	go to state 79
    type_define	go to state 80
=======
    option_struct_list_value  ->  OPEN_BPAR string . inner_option_list_value CLOSE_BPAR   (rule 243)

    COMMA	shift, and go to state 904

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 907
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 688

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 450)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 451)
    option_struct_member_exp  ->  DOT . function   (rule 454)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 860
    file_statement	go to state 81
    array	go to state 861
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 862
=======
    factor  ->  charliteral .   (rule 218)
    option_struct_list_value  ->  OPEN_BPAR charliteral . inner_option_list_value CLOSE_BPAR   (rule 244)

    COMMA	shift, and go to state 904

    COMMA	[reduce using rule 218 (factor)]
    CLOSE_BPAR	reduce using rule 218 (factor)
    CLOSE_BPAR	[reduce using rule 250 (inner_option_list_value)]
    $default	reduce using rule 218 (factor)

    inner_option_list_value	go to state 908
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 689

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 452)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 453)
    option_struct_member_exp  ->  IMPLY . function   (rule 455)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 371
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 72

    function	go to state 863
    file_statement	go to state 81
    array	go to state 864
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 865
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_list_value  ->  OPEN_MPAR alg_exp . inner_option_list_value CLOSE_MPAR   (rule 238)

    COMMA	shift, and go to state 904
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 250 (inner_option_list_value)

    alg_operator	go to state 374
    inner_option_list_value	go to state 909
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 690

<<<<<<< HEAD
    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 436)

    $default	reduce using rule 436 (struct_member_exp)
=======
    list_exp  ->  list_exp . CON list_exp   (rule 234)
    option_list_value  ->  OPEN_MPAR list_exp . inner_option_list_value CLOSE_MPAR   (rule 241)

    COMMA	shift, and go to state 904
    CON 	shift, and go to state 697

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 910
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 691

<<<<<<< HEAD
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 433)

    $default	reduce using rule 433 (struct_member_exp)
=======
    option_list_value  ->  OPEN_MPAR string . inner_option_list_value CLOSE_MPAR   (rule 239)

    COMMA	shift, and go to state 904
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 911


<<<<<<< HEAD
    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)
=======

state 692
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    factor  ->  charliteral .   (rule 218)
    option_list_value  ->  OPEN_MPAR charliteral . inner_option_list_value CLOSE_MPAR   (rule 240)

    COMMA	shift, and go to state 904

    COMMA	[reduce using rule 218 (factor)]
    CLOSE_MPAR	reduce using rule 218 (factor)
    CLOSE_MPAR	[reduce using rule 250 (inner_option_list_value)]
    $default	reduce using rule 218 (factor)

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 443)

    $default	reduce using rule 443 (struct_member_exp)
=======
    inner_option_list_value	go to state 912

>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5


state 693

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 177)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL OPEN_PAR . alg_exp CLOSE_PAR   (rule 193)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 913
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 225
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    type_define	go to state 228
    leftaddrshift	go to state 914
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 527
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    sign_type_define	go to state 229
    all_type_define	go to state 528
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 439)

    $default	reduce using rule 439 (struct_member_exp)
=======


state 694

    option_output  ->  COMMA . ass_exp option_output   (rule 465)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 915
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 695

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 437)

    $default	reduce using rule 437 (struct_member_exp)
=======
    display_statement  ->  DISPLAY OPEN_PAR ass_exp CLOSE_PAR .   (rule 462)

    $default	reduce using rule 462 (display_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 696

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 434)

    $default	reduce using rule 434 (struct_member_exp)
=======
    display_statement  ->  DISPLAY OPEN_PAR ass_exp option_output . CLOSE_PAR   (rule 463)

    CLOSE_PAR	shift, and go to state 916
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 697

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 447)

    $default	reduce using rule 447 (struct_member_exp)
=======
    list_exp  ->  list_exp CON . list_exp   (rule 234)

    OPEN_PAR	shift, and go to state 917
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448

    list_exp	go to state 918
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 698

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 441)

    $default	reduce using rule 441 (struct_member_exp)
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    CLOSE_PAR	shift, and go to state 919
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 699

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 435)

    $default	reduce using rule 435 (struct_member_exp)
=======
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_optional_define_identifier   (rule 378)
    option_function_parameter_list  ->  ID MUL MUL . inner_optional_define_identifier   (rule 385)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 920
    identifier	go to state 921
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 700

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 432)

    $default	reduce using rule 432 (struct_member_exp)
=======
    option_function_parameter_list  ->  ID MUL inner_optional_define_identifier .   (rule 384)

    $default	reduce using rule 384 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 701

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 442)

    $default	reduce using rule 442 (struct_member_exp)
=======
    option_function_parameter_list  ->  ID MUL identifier . inner_optional_define_identifier   (rule 377)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 922
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 702

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 438)

    $default	reduce using rule 438 (struct_member_exp)
=======
    option_function_parameter_list  ->  ID identifier ARRAY . inner_optional_define_identifier   (rule 379)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 923
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 703

<<<<<<< HEAD
    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)
=======
    option_function_parameter_list  ->  ID identifier inner_optional_define_identifier .   (rule 376)

    $default	reduce using rule 376 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 704

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 866
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_optional_define_identifier   (rule 374)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_optional_define_identifier   (rule 382)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 924
    identifier	go to state 925
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 705

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 170)

    ELSE	shift, and go to state 867
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    ELSE	[reduce using rule 174 (option_exp_else_statement)]
    INTER_OR	[reduce using rule 174 (option_exp_else_statement)]
    CON 	[reduce using rule 174 (option_exp_else_statement)]
    ADDRESS	[reduce using rule 174 (option_exp_else_statement)]
    LST 	[reduce using rule 174 (option_exp_else_statement)]
    RST 	[reduce using rule 174 (option_exp_else_statement)]
    MUL 	[reduce using rule 174 (option_exp_else_statement)]
    DIV 	[reduce using rule 174 (option_exp_else_statement)]
    MOD 	[reduce using rule 174 (option_exp_else_statement)]
    $default	reduce using rule 174 (option_exp_else_statement)

    option_exp_else_statement	go to state 868
    bi_operator	go to state 331
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_optional_define_identifier .   (rule 381)

    $default	reduce using rule 381 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 706

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 244)

    CLOSE_PAR	shift, and go to state 869
    MUL 	shift, and go to state 870
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_optional_define_identifier   (rule 373)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 926
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 707

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 223)

    $default	reduce using rule 223 (type_cast)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_optional_define_identifier   (rule 375)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 927
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 708

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp .   (rule 171)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 172)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    ADD 	shift, and go to state 871
    SUB 	shift, and go to state 872
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 171 (type_cast_alg_exp)]
    CON 	[reduce using rule 171 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 171 (type_cast_alg_exp)]
    LST 	[reduce using rule 171 (type_cast_alg_exp)]
    RST 	[reduce using rule 171 (type_cast_alg_exp)]
    ADD 	[reduce using rule 171 (type_cast_alg_exp)]
    SUB 	[reduce using rule 171 (type_cast_alg_exp)]
    MUL 	[reduce using rule 171 (type_cast_alg_exp)]
    DIV 	[reduce using rule 171 (type_cast_alg_exp)]
    MOD 	[reduce using rule 171 (type_cast_alg_exp)]
    $default	reduce using rule 171 (type_cast_alg_exp)

    bi_operator	go to state 338
    ari_operator	go to state 873
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_optional_define_identifier .   (rule 372)

    $default	reduce using rule 372 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 709

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_optional_define_identifier   (rule 393)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 928
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 710

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 877
=======
    option_function_parameter_list  ->  all_type_define MUL inner_optional_define_identifier .   (rule 392)

    $default	reduce using rule 392 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 711

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 225)

    $default	reduce using rule 225 (type_cast)
=======
    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_optional_define_identifier   (rule 387)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_optional_define_identifier   (rule 391)

    ARRAY	shift, and go to state 929
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 930
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 712

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_optional_define_identifier   (rule 386)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 931

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 932
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 713

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 879
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 933
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 714

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 880
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_function_parameter_list  ->  all_type_define identifier inner_optional_define_identifier .   (rule 370)

    $default	reduce using rule 370 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 715

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 881
=======
    option_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 134)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 934
    alg_operator	go to state 374


<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 224)

    $default	reduce using rule 224 (type_cast)
=======

state 716

    alg_exp  ->  IF bool_statement THEN . alg_exp optional_exp_else_statement   (rule 198)
    if_statement  ->  IF bool_statement THEN . big_par optional_else_statement   (rule 459)

    error	shift, and go to state 22
    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    OPEN_BPAR	shift, and go to state 443
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 815
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    big_par	go to state 641
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 717

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 882
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 935
    MUL 	shift, and go to state 820
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 718

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 883
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 936
    MUL 	shift, and go to state 823
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 719

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 884
    MUL 	shift, and go to state 710
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 937
    MUL 	shift, and go to state 828
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 720

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 885
    MUL 	shift, and go to state 713
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 834
    MUL 	shift, and go to state 938

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 721

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 886
    MUL 	shift, and go to state 718
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 939

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 722

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 818
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 260)

    CLOSE_PAR	shift, and go to state 838

    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 723

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 887
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 261)

    CLOSE_PAR	shift, and go to state 839

    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 724

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 228)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 888
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 442)

    IMPLY	shift, and go to state 732

    $default	reduce using rule 442 (imply_pre)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 725

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 889
    MUL 	shift, and go to state 890
=======
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    value_exp  ->  MUL identifier .   (rule 188)

    CLOSE_PAR	shift, and go to state 940

    CLOSE_PAR	[reduce using rule 188 (value_exp)]
    $default	reduce using rule 188 (value_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 726

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 229)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 891
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 941
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 727

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 892
    MUL 	shift, and go to state 893
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)

    OPEN_PAR	shift, and go to state 942
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 728

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 226)

    POINTERNULL	shift, and go to state 109
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 442)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 894
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 728
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 480
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 729
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 729

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 227)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 895
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 440)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 441)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 442)

    CLOSE_PAR	shift, and go to state 943
    OR  	shift, and go to state 496
    AND 	shift, and go to state 497
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 730

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 243)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 896
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 191)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 944
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 731

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 245)

    CLOSE_PAR	shift, and go to state 897
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . list option_struct_member_exp   (rule 486)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 945
    identifier	go to state 946
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 732

<<<<<<< HEAD
    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 254)

    MUL 	shift, and go to state 898
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 60)

    OPEN_MPAR	shift, and go to state 947
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 733

<<<<<<< HEAD
    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 249)

    $default	reduce using rule 249 (all_sizeof_type)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 440)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 441)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 441)

    AND 	shift, and go to state 497

    $default	reduce using rule 441 (imply_pre)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 734

<<<<<<< HEAD
    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 251)

    $default	reduce using rule 251 (all_sizeof_type)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 440)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 440)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 441)


    $default	reduce using rule 440 (imply_pre)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 735

<<<<<<< HEAD
    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 250)

    $default	reduce using rule 250 (all_sizeof_type)
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    optional_projection  ->  COMMA statement . optional_projection   (rule 437)

    COMMA	shift, and go to state 499
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 436 (optional_projection)

    optional_projection	go to state 948
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 736

<<<<<<< HEAD
    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 252)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 327)

    MUL 	shift, and go to state 899

    $default	reduce using rule 327 (sign_type_define)
=======
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . big_par   (rule 63)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 949
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 737

<<<<<<< HEAD
    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 253)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 328)

    MUL 	shift, and go to state 900

    $default	reduce using rule 328 (sign_type_define)
=======
    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR . PROJECTION big_par   (rule 62)

    PROJECTION	shift, and go to state 950
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 738

<<<<<<< HEAD
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 258)

    $default	reduce using rule 258 (size_of)
=======
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    CLOSE_PAR	shift, and go to state 951
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 739

<<<<<<< HEAD
    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 255)

    $default	reduce using rule 255 (all_sizeof_type)
=======
    statement  ->  SEND OPEN_PAR ass_ident COMMA . ass_exp CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 952
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 740

<<<<<<< HEAD
    size_of  ->  SIZEOF OPEN_PAR ari_exp CLOSE_PAR .   (rule 256)

    $default	reduce using rule 256 (size_of)
=======
    statement  ->  RECEIVE OPEN_PAR ass_ident COMMA . identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 953
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 741

<<<<<<< HEAD
    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 257)

    $default	reduce using rule 257 (size_of)
=======
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    CLOSE_PAR	shift, and go to state 954
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 742

<<<<<<< HEAD
    size_of  ->  SIZEOF OPEN_PAR strliteral CLOSE_PAR .   (rule 259)

    $default	reduce using rule 259 (size_of)
=======
    statement  ->  CHANNEL identifier OPEN_PAR integer . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 955
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 743

<<<<<<< HEAD
    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 294)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
=======
    statement  ->  PUT OPEN_PAR ass_ident COMMA . ass_exp CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 901
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 956
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 744

<<<<<<< HEAD
    math_function  ->  POW OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 295)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 902
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  GET OPEN_PAR ass_ident COMMA . identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 957
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 745

<<<<<<< HEAD
    math_function  ->  FMOD OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 903
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 300)

    $default	reduce using rule 300 (String_Function_head)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 746

<<<<<<< HEAD
    math_function  ->  MODF OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 904
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 301)

    $default	reduce using rule 301 (String_Function_tail)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 747

<<<<<<< HEAD
    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 905
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 958
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 748

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 906
=======
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 303)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 959
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 749

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 907
=======
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 304)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 960
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 750

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 908
=======
    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 305)

    $default	reduce using rule 305 (String_Function_len)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 751

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    INTDECLARATION	shift, and go to state 909
    CHARDECLARATION	shift, and go to state 910
=======
    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 752

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 412)

    CASE	shift, and go to state 911

    case_par	go to state 912
=======
    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 961
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 753

<<<<<<< HEAD
    option_else_statement  ->  ELSE . statement_bpar   (rule 418)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 913
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    identifier  ->  ID .   (rule 427)

    OPEN_MPAR	shift, and go to state 962

    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 754

<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 417)

    $default	reduce using rule 417 (if_statement)
=======
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)

    CLOSE_PAR	shift, and go to state 727
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 755

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 839
=======
    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 68)

    $default	reduce using rule 68 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 756

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 840
=======
    value_exp  ->  MUL OPEN_PAR alg_exp CLOSE_PAR .   (rule 193)

    $default	reduce using rule 193 (value_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 757

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 841
=======
    value_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR alg_exp   (rule 192)

    CLOSE_PAR	shift, and go to state 963
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 758

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    INTDECLARATION	shift, and go to state 909
    CHARDECLARATION	shift, and go to state 914
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    MUL 	shift, and go to state 964

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 759

<<<<<<< HEAD
    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral . CLOSE_PAR   (rule 113)

    CLOSE_PAR	shift, and go to state 915
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    MUL 	shift, and go to state 965
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)



<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral . COMMA identifier CLOSE_PAR   (rule 114)

    COMMA	shift, and go to state 916
=======
state 760

    type_define  ->  FLOATDECLARATION .   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    MUL 	shift, and go to state 966

    MUL 	[reduce using rule 117 (type_define)]
    $default	reduce using rule 117 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 761

<<<<<<< HEAD
    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 917
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 102)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 967
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 968
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 274
    type_define	go to state 92


<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier . CLOSE_PAR   (rule 118)

    CLOSE_PAR	shift, and go to state 918
=======

state 762
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)


<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 117)

    CLOSE_PAR	shift, and go to state 919
=======

state 763

    statement  ->  LENGTH OPEN_PAR alg_exp CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 764

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 920
=======
    option_input  ->  COMMA . identifier option_input   (rule 472)
    option_input  ->  COMMA . list option_input   (rule 473)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    list	go to state 969
    identifier	go to state 970



<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 345)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 346)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 921
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 922
    identifier	go to state 923
=======
state 765

    request_statement  ->  REQUEST OPEN_PAR list CLOSE_PAR .   (rule 468)

    $default	reduce using rule 468 (request_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 766

<<<<<<< HEAD
    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 344)

    $default	reduce using rule 344 (option_function_parameter_list)
=======
    request_statement  ->  REQUEST OPEN_PAR list option_input . CLOSE_PAR   (rule 469)

    CLOSE_PAR	shift, and go to state 971
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 767

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 340)

    ARRAY	shift, and go to state 924
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 925
=======
    request_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 466)

    $default	reduce using rule 466 (request_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 768

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 342)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 343)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 926
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 927
    identifier	go to state 928
=======
    request_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 467)

    CLOSE_PAR	shift, and go to state 972
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 769

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 341)

    $default	reduce using rule 341 (option_function_parameter_list)
=======
    request_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 470)

    $default	reduce using rule 470 (request_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 770

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 336)

    ARRAY	shift, and go to state 929
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 930
=======
    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 58)

    $default	reduce using rule 58 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 771

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 354)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    MUL 	shift, and go to state 931
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 932
    identifier	go to state 933
=======
    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 772

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 332)

    $default	reduce using rule 332 (option_function_parameter_list)
=======
    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 46)

    $default	reduce using rule 46 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 773

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 331)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    ARRAY	shift, and go to state 934
    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 935

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 936
=======
    statement  ->  HALT OPEN_PAR bool_statement CLOSE_PAR .   (rule 47)

    $default	reduce using rule 47 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 774

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    ASS_P	shift, and go to state 937
=======
    statement  ->  W_NEXT OPEN_PAR statement CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 775

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 938
=======
    statement  ->  PREFIX OPEN_PAR statement CLOSE_PAR .   (rule 35)

    $default	reduce using rule 35 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 776

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 362)

    ARRAY	shift, and go to state 939
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 940
=======
    option_function_identifier  ->  ADDRESS error .   (rule 418)

    $default	reduce using rule 418 (option_function_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 777

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 361)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 941
=======
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 96)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 416)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 417 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 973
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 778

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 363)

    ARRAY	shift, and go to state 942
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 943
=======
    inner_option_function_identifier  ->  COMMA . ass_exp inner_option_function_identifier   (rule 419)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 420)
    inner_option_function_identifier  ->  COMMA . error   (rule 422)

    error	shift, and go to state 974
    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 975
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 976
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 779

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 372)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 944
    identifier	go to state 945
=======
    option_function_identifier  ->  ass_exp inner_option_function_identifier .   (rule 415)

    $default	reduce using rule 415 (option_function_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 780

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 358)

    $default	reduce using rule 358 (inner_option_define_identifier)
=======
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 96)

    $default	reduce using rule 96 (function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 781

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 357)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    ARRAY	shift, and go to state 946
    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 947

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 948
=======
    option_alg_exp  ->  COMMA . alg_exp option_alg_exp   (rule 185)
    option_alg_exp  ->  COMMA . error   (rule 186)

    error	shift, and go to state 977
    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 978
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 782

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 66)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 949
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 178)

    CLOSE_MPAR	shift, and go to state 979
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 783

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA error .   (rule 394)

    $default	reduce using rule 394 (option_frame_identifier)
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU . list_exp inner_option_identifier_array_declaration   (rule 126)
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU . string inner_option_identifier_array_declaration   (rule 127)

    OPEN_PAR	shift, and go to state 917
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STR 	shift, and go to state 193

    list_exp	go to state 980
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    string	go to state 981
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 784

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 392)

    COMMA	shift, and go to state 592

    $default	reduce using rule 393 (option_frame_identifier)

    option_frame_identifier	go to state 950
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 982
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 785

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 951
=======
    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 132)

    $default	reduce using rule 132 (inner_option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 786

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 244)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 869
    MUL 	shift, and go to state 952
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253
=======
    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 131)

    $default	reduce using rule 131 (inner_option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 787

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 621
=======
    option_identifier_array_declaration  ->  identifier ASS_EQU ass_exp . inner_option_identifier_array_declaration   (rule 124)

    COMMA	shift, and go to state 554

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 983
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 788

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 622
=======
    option_identifier_array_declaration  ->  identifier ASS_EQU string . inner_option_identifier_array_declaration   (rule 125)
    ass_exp  ->  string .   (rule 170)
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    COMMA	shift, and go to state 554
    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410

    $   	reduce using rule 133 (inner_option_identifier_array_declaration)
    $   	[reduce using rule 170 (ass_exp)]
    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    COMMA	[reduce using rule 170 (ass_exp)]
    CLOSE_PAR	reduce using rule 133 (inner_option_identifier_array_declaration)
    CLOSE_PAR	[reduce using rule 170 (ass_exp)]
    CLOSE_BPAR	reduce using rule 133 (inner_option_identifier_array_declaration)
    CLOSE_BPAR	[reduce using rule 170 (ass_exp)]
    CLOSE_MPAR	reduce using rule 133 (inner_option_identifier_array_declaration)
    CLOSE_MPAR	[reduce using rule 170 (ass_exp)]
    CHOP	reduce using rule 133 (inner_option_identifier_array_declaration)
    CHOP	[reduce using rule 170 (ass_exp)]
    OR  	reduce using rule 133 (inner_option_identifier_array_declaration)
    OR  	[reduce using rule 170 (ass_exp)]
    PARALLEL	reduce using rule 133 (inner_option_identifier_array_declaration)
    PARALLEL	[reduce using rule 170 (ass_exp)]
    AND 	reduce using rule 133 (inner_option_identifier_array_declaration)
    AND 	[reduce using rule 170 (ass_exp)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 984
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 789

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 623
=======
    CYLINDER_STATEMENT  ->  OPEN_PAR OVER_STATEMENT . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 489
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 790

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 953
=======
    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 98)

    $default	reduce using rule 98 (struct_define_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 791

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 245)
=======
    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 81)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    STRUCT_TYPE	shift, and go to state 83

    option_struct_declaration	go to state 985
    sign_declaration	go to state 564
    declaration	go to state 91
    type_define	go to state 92
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 897
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253


<<<<<<< HEAD

state 792

    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)
    for_sta_condition  ->  bool_exp .   (rule 408)
=======
    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 492)
    option_struct_member_exp  ->  DOT . list option_struct_member_exp   (rule 493)
    option_struct_member_exp  ->  DOT . function   (rule 496)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 986
    list	go to state 987
    identifier	go to state 988
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OR  	shift, and go to state 356
    AND 	shift, and go to state 357

<<<<<<< HEAD
    $default	reduce using rule 408 (for_sta_condition)



state 793

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    COMMA	shift, and go to state 954
=======

state 793

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 494)
    option_struct_member_exp  ->  IMPLY . list option_struct_member_exp   (rule 495)
    option_struct_member_exp  ->  IMPLY . function   (rule 497)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 989
    list	go to state 990
    identifier	go to state 991
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 794

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 403)

    $default	reduce using rule 403 (for_statement)
=======
    struct_member_exp  ->  list DOT list option_struct_member_exp .   (rule 478)

    $default	reduce using rule 478 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 795

<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 382)

    $default	reduce using rule 382 (statement_bpar)
=======
    struct_member_exp  ->  list DOT identifier option_struct_member_exp .   (rule 475)

    $default	reduce using rule 475 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 796

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 955
=======
    function  ->  list OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 97)

    $default	reduce using rule 97 (function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 797

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 147)

    $default	reduce using rule 147 (ass_right)
=======
    struct_member_exp  ->  list IMPLY list option_struct_member_exp .   (rule 485)

    $default	reduce using rule 485 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 798

<<<<<<< HEAD
    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 206)

    $default	reduce using rule 206 (array_exp)
=======
    struct_member_exp  ->  list IMPLY identifier option_struct_member_exp .   (rule 481)

    $default	reduce using rule 481 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 799

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    OPEN_PAR	shift, and go to state 956
=======
    struct_member_exp  ->  value_exp DOT list option_struct_member_exp .   (rule 479)

    $default	reduce using rule 479 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 800

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 800
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 801
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    struct_member_exp  ->  value_exp DOT identifier option_struct_member_exp .   (rule 476)

    $default	reduce using rule 476 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 801

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 206)

    CLOSE_PAR	shift, and go to state 798
    CON 	shift, and go to state 619
=======
    struct_member_exp  ->  value_exp IMPLY list option_struct_member_exp .   (rule 489)

    $default	reduce using rule 489 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 802

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 213)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 214)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 215)
    inner_option_list_value  ->  COMMA . error   (rule 217)

    error	shift, and go to state 957
    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 958
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 959
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    strliteral	go to state 960
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    struct_member_exp  ->  value_exp IMPLY identifier option_struct_member_exp .   (rule 483)

    $default	reduce using rule 483 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 803

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 210)

    CLOSE_BPAR	shift, and go to state 961
=======
    INTERVAL_STATEMENT  ->  OPEN_PAR . INTERVAL_STATEMENT CLOSE_PAR   (rule 92)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 992
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 993
    SIG_INTERVAL	go to state 806
    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 994
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 804

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 212)

    CLOSE_BPAR	shift, and go to state 962
=======
    OVER_STATEMENT  ->  big_par OVER OPEN_PAR CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (OVER_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 805

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 211)

    CLOSE_BPAR	shift, and go to state 963
=======
    OVER_STATEMENT  ->  big_par OVER OPEN_PAR INTERVAL_STATEMENT . CLOSE_PAR   (rule 85)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)

    COMMA	shift, and go to state 995
    CLOSE_PAR	shift, and go to state 996
    OVEREP	shift, and go to state 997
    INTER_OR	shift, and go to state 998
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 806

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 207)

    CLOSE_MPAR	shift, and go to state 964
=======
    INTERVAL_STATEMENT  ->  SIG_INTERVAL .   (rule 87)

    $default	reduce using rule 87 (INTERVAL_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 807

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 209)

    CLOSE_MPAR	shift, and go to state 965
=======
    SIG_INTERVAL  ->  alg_exp .   (rule 93)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 93 (SIG_INTERVAL)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 808

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 208)

    CLOSE_MPAR	shift, and go to state 966
=======
    struct_member_exp  ->  identifier DOT list option_struct_member_exp .   (rule 477)

    $default	reduce using rule 477 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 809

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 517
    CHARDECLARATION	shift, and go to state 518
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 967
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 520
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 474)

    $default	reduce using rule 474 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 810

<<<<<<< HEAD
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 149)

    CLOSE_PAR	shift, and go to state 968
=======
    struct_member_exp  ->  identifier IMPLY list option_struct_member_exp .   (rule 484)

    $default	reduce using rule 484 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 811

<<<<<<< HEAD
    option_output  ->  COMMA ass_right . option_output   (rule 423)

    COMMA	shift, and go to state 616

    $default	reduce using rule 422 (option_output)

    option_output	go to state 969
=======
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 480)

    $default	reduce using rule 480 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 812

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 421)

    $default	reduce using rule 421 (output_statement)
=======
    prime_bool_statement  ->  NEGATION prime_bool_statement .   (rule 352)

    $default	reduce using rule 352 (prime_bool_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 813

<<<<<<< HEAD
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 206)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398

    array_exp	go to state 801
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
=======
    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 29)

    $default	reduce using rule 29 (poptional_projection)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 814

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    array_exp  ->  array_exp CON array_exp .   (rule 203)


    $default	reduce using rule 203 (array_exp)
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    OPEN_BPAR	shift, and go to state 999
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 815

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 970
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 972
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    alg_exp  ->  IF bool_statement THEN alg_exp . optional_exp_else_statement   (rule 198)

    ELSE	shift, and go to state 1000
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ELSE	[reduce using rule 202 (optional_exp_else_statement)]
    ADD 	[reduce using rule 202 (optional_exp_else_statement)]
    SUB 	[reduce using rule 202 (optional_exp_else_statement)]
    $default	reduce using rule 202 (optional_exp_else_statement)

    optional_exp_else_statement	go to state 1001
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 816

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 973
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 975
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 278)

    CLOSE_PAR	shift, and go to state 1002
    MUL 	shift, and go to state 1003
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 817

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 977
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 882
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 257)

    $default	reduce using rule 257 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 818

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 978
    MUL 	shift, and go to state 890
=======
    type_cast_alg_exp  ->  simple_alg_exp .   (rule 199)
    type_cast_alg_exp  ->  simple_alg_exp . alg_operator simple_alg_exp   (rule 200)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 199 (type_cast_alg_exp)]
    CON 	[reduce using rule 199 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 199 (type_cast_alg_exp)]
    LST 	[reduce using rule 199 (type_cast_alg_exp)]
    RST 	[reduce using rule 199 (type_cast_alg_exp)]
    ADD 	[reduce using rule 199 (type_cast_alg_exp)]
    SUB 	[reduce using rule 199 (type_cast_alg_exp)]
    MUL 	[reduce using rule 199 (type_cast_alg_exp)]
    DIV 	[reduce using rule 199 (type_cast_alg_exp)]
    MOD 	[reduce using rule 199 (type_cast_alg_exp)]
    $default	reduce using rule 199 (type_cast_alg_exp)

    mul_operator	go to state 389
    alg_operator	go to state 1004
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 819

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 979
    MUL 	shift, and go to state 893
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 820

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    OPEN_PAR	shift, and go to state 980


=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1008
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 821

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

<<<<<<< HEAD
    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 981
    bi_operator	go to state 331
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 259)

    $default	reduce using rule 259 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 822

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 88)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 982

<<<<<<< HEAD


state 823

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 401)

    $default	reduce using rule 401 (imply_pre)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1010
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 824

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 163)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 983
    bi_operator	go to state 331
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 269)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1011
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 825

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 984
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 275)

    CLOSE_PAR	shift, and go to state 1012
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 826

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 440)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 258)

    $default	reduce using rule 258 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 985


<<<<<<< HEAD

state 827
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 266)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1013
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 986
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102



<<<<<<< HEAD
state 828

    option_projection  ->  COMMA statement option_projection .   (rule 396)

    $default	reduce using rule 396 (option_projection)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 1014
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 829

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1015
    MUL 	shift, and go to state 820
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 830

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 987
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1016
    MUL 	shift, and go to state 823
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 831

<<<<<<< HEAD
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 988
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 1017
    MUL 	shift, and go to state 828
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 832

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ASS_P	shift, and go to state 989
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 834
    MUL 	shift, and go to state 938
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 833

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 268)

    CLOSE_PAR	shift, and go to state 990
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 1018
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 834

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 269)

    CLOSE_PAR	shift, and go to state 991
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 262)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1019
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 835

<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 270)

    CLOSE_PAR	shift, and go to state 992
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 1020
    MUL 	shift, and go to state 1021
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 836

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 263)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1022
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	shift, and go to state 820



<<<<<<< HEAD
state 837

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 993
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1023
    MUL 	shift, and go to state 1024
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 838

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 164)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 994
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 260)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1025
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 839

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 995
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 261)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1026
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 840

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 996
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 277)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1027
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 841

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 997
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 279)

    CLOSE_PAR	shift, and go to state 1028
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 842

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 92)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 998

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)
=======
    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 288)

    MUL 	shift, and go to state 1029
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 843

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 999

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)
=======
    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 283)

    $default	reduce using rule 283 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 844

<<<<<<< HEAD
    option_input  ->  COMMA array . option_input   (rule 431)

    COMMA	shift, and go to state 665

    $default	reduce using rule 429 (option_input)

    option_input	go to state 1000
=======
    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 285)

    $default	reduce using rule 285 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 845

<<<<<<< HEAD
    option_input  ->  COMMA identifier . option_input   (rule 430)

    COMMA	shift, and go to state 665

    $default	reduce using rule 429 (option_input)

    option_input	go to state 1001
=======
    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 284)

    $default	reduce using rule 284 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 846

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 427)

    $default	reduce using rule 427 (input_statement)
=======
    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 286)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 366)

    MUL 	shift, and go to state 1030

    $default	reduce using rule 366 (sign_type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 847

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 425)

    $default	reduce using rule 425 (input_statement)
=======
    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 287)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 367)

    MUL 	shift, and go to state 1031
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 367 (sign_type_define)



<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 375)

    CLOSE_PAR	shift, and go to state 1002
=======
state 848

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 292)

    $default	reduce using rule 292 (size_of)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 849

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA error .   (rule 381)

    $default	reduce using rule 381 (inner_option_function_identifier)
=======
    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 289)

    $default	reduce using rule 289 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 850

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 379)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 1003
    OPEN_MPAR	shift, and go to state 249

    $default	reduce using rule 386 (identifier)
=======
    size_of  ->  SIZEOF OPEN_PAR alg_exp CLOSE_PAR .   (rule 290)

    $default	reduce using rule 290 (size_of)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 851

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 378)

    COMMA	shift, and go to state 676

    $default	reduce using rule 380 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 1004
=======
    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 291)

    $default	reduce using rule 291 (size_of)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 852

<<<<<<< HEAD
    option_ari_exp  ->  COMMA error .   (rule 158)

    $default	reduce using rule 158 (option_ari_exp)
=======
    size_of  ->  SIZEOF OPEN_PAR string CLOSE_PAR .   (rule 293)

    $default	reduce using rule 293 (size_of)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 853

<<<<<<< HEAD
    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 157)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)
=======
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 328)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1032
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_ari_exp	go to state 1005
    bi_operator	go to state 331



<<<<<<< HEAD
state 854

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    $default	reduce using rule 150 (array)
=======
    Float_Function  ->  POW OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 329)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1033
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 855

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 101)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    COMMA	shift, and go to state 480
    CON 	shift, and go to state 619

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1006
=======
    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 330)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1034
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 856

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 102)

    COMMA	shift, and go to state 480

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1007
=======
    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 331)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1035
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 857

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    CLOSE_MPAR	shift, and go to state 1008
=======
    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 332)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1036
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 858

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    MUL 	shift, and go to state 1037
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 859

<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 69)

    $default	reduce using rule 69 (option_struct_declaration)
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    MUL 	shift, and go to state 1038
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 860

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT function .   (rule 454)

    $default	reduce using rule 454 (option_struct_member_exp)
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    MUL 	shift, and go to state 1039
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 861

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 451)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1009
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    INTDECLARATION	shift, and go to state 1040
    CHARDECLARATION	shift, and go to state 1041
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 862

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 450)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1010
=======
    pre_next  ->  PREVIOUS OPEN_PAR identifier CLOSE_PAR .   (rule 223)

    $default	reduce using rule 223 (pre_next)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 863

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY function .   (rule 455)

    $default	reduce using rule 455 (option_struct_member_exp)
=======
    optional_else_statement  ->  ELSE . big_par   (rule 460)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 1042


<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 453)

    DOT 	shift, and go to state 688
    OPEN_PAR	shift, and go to state 264
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1011
=======

state 864

    if_statement  ->  IF bool_statement THEN big_par optional_else_statement .   (rule 459)

    $default	reduce using rule 459 (if_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 865

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 452)

    DOT 	shift, and go to state 688
    IMPLY	shift, and go to state 689

    DOT 	[reduce using rule 449 (option_struct_member_exp)]
    IMPLY	[reduce using rule 449 (option_struct_member_exp)]
    $default	reduce using rule 449 (option_struct_member_exp)

    option_struct_member_exp	go to state 1012
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    MUL 	shift, and go to state 964
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 866

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 1013
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    MUL 	shift, and go to state 965
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 867

<<<<<<< HEAD
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 173)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1014
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    MUL 	shift, and go to state 966
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 868

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 170)

    $default	reduce using rule 170 (ari_exp)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    INTDECLARATION	shift, and go to state 1040
    CHARDECLARATION	shift, and go to state 1043
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 869

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 242)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1015
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA string . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1044
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 870

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 244)

    CLOSE_PAR	shift, and go to state 1016
=======
    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer . COMMA identifier CLOSE_PAR   (rule 139)

    COMMA	shift, and go to state 1045
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 871

<<<<<<< HEAD
    ari_operator  ->  ADD .   (rule 201)

    $default	reduce using rule 201 (ari_operator)
=======
    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1046
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 872

<<<<<<< HEAD
    ari_operator  ->  SUB .   (rule 202)

    $default	reduce using rule 202 (ari_operator)
=======
    file_statement  ->  FPUTC OPEN_PAR list COMMA identifier . CLOSE_PAR   (rule 143)

    CLOSE_PAR	shift, and go to state 1047
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 873

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 172)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    simple_ari_exp	go to state 1017
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 142)

    CLOSE_PAR	shift, and go to state 1048
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 874

<<<<<<< HEAD
    casted_element  ->  MALLOC . OPEN_PAR ari_exp CLOSE_PAR   (rule 247)

    OPEN_PAR	shift, and go to state 1018
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    ASS_EQU	shift, and go to state 1049
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 875

<<<<<<< HEAD
    casted_element  ->  type_cast_alg_exp .   (rule 246)

    $default	reduce using rule 246 (casted_element)
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 1050
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 876

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)
=======
    inner_optional_define_identifier  ->  COMMA ID identifier . inner_optional_define_identifier   (rule 398)
    inner_optional_define_identifier  ->  COMMA ID identifier . ARRAY inner_optional_define_identifier   (rule 401)

    ARRAY	shift, and go to state 1051
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1052
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 877

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1019
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_optional_define_identifier   (rule 400)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 1053
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 878

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_optional_define_identifier   (rule 399)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_optional_define_identifier   (rule 402)

    ARRAY	shift, and go to state 1054
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1055
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 879

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1020
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier inner_optional_define_identifier   (rule 411)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . inner_optional_define_identifier   (rule 412)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1056
    identifier	go to state 1057
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 880

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define inner_optional_define_identifier .   (rule 397)

    $default	reduce using rule 397 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 881

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 241)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1021
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . inner_optional_define_identifier   (rule 396)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    ARRAY	shift, and go to state 1058
    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 1059

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1060
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 882

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)
=======
    inner_optional_define_identifier  ->  COMMA identifier inner_optional_define_identifier .   (rule 413)

    $default	reduce using rule 413 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 883

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
=======
    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 77)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1022
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1061
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 884

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    optional_frame_identifier  ->  COMMA error .   (rule 435)

    $default	reduce using rule 435 (optional_frame_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 885

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    optional_frame_identifier  ->  COMMA identifier . optional_frame_identifier   (rule 433)

    COMMA	shift, and go to state 667

    $default	reduce using rule 434 (optional_frame_identifier)

    optional_frame_identifier	go to state 1062
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 886

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 882
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    AND 	shift, and go to state 1063
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 887

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1023
    MUL 	shift, and go to state 893
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 278)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 1002
    MUL 	shift, and go to state 1064
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 888

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 228)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 717
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 228 (type_cast)



<<<<<<< HEAD
state 889

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1024
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 718
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 890

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 1025
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 719
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 891

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 229)

    $default	reduce using rule 229 (type_cast)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 832
    CHARDECLARATION	shift, and go to state 1065
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 892

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 279)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 1028
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 893

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1027
=======
    for_sta_condition  ->  pbool_expression .   (rule 455)

    $default	reduce using rule 455 (for_sta_condition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 894

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 226)

    $default	reduce using rule 226 (type_cast)
=======
    pbool_expression  ->  alg_exp . relation_operator alg_exp   (rule 31)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
    relation_operator	go to state 1066
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 895

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 227)

    $default	reduce using rule 227 (type_cast)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition . CHOP for_sta_control CLOSE_PAR big_par   (rule 451)

    CHOP	shift, and go to state 1067
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 896

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 243)

    $default	reduce using rule 243 (type_cast)
=======
    for_statement  ->  FOR alg_exp TIMES DO big_par .   (rule 450)

    $default	reduce using rule 450 (for_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 897

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 245)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1028
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    big_par  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 423)

    $default	reduce using rule 423 (big_par)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 898

<<<<<<< HEAD
    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 254)

    $default	reduce using rule 254 (all_sizeof_type)
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 1068
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 899

<<<<<<< HEAD
    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 252)

    $default	reduce using rule 252 (all_sizeof_type)
=======
    ass_exp  ->  OPEN_PAR ass_exp CLOSE_PAR .   (rule 175)

    $default	reduce using rule 175 (ass_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 900

<<<<<<< HEAD
    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 253)

    $default	reduce using rule 253 (all_sizeof_type)
=======
    list_exp  ->  OPEN_PAR list_exp CLOSE_PAR .   (rule 237)

    $default	reduce using rule 237 (list_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 901

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 294)

    CLOSE_PAR	shift, and go to state 1029
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    OPEN_PAR	shift, and go to state 1069
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 902

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 295)

    CLOSE_PAR	shift, and go to state 1030
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 902
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 903
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 903

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 296)

    CLOSE_PAR	shift, and go to state 1031
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    list_exp  ->  list_exp . CON list_exp   (rule 234)
    list_exp  ->  OPEN_PAR list_exp . CLOSE_PAR   (rule 237)

    CLOSE_PAR	shift, and go to state 900
    CON 	shift, and go to state 697
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 904

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 297)

    CLOSE_PAR	shift, and go to state 1032
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    inner_option_list_value  ->  COMMA . alg_exp inner_option_list_value   (rule 246)
    inner_option_list_value  ->  COMMA . string inner_option_list_value   (rule 247)
    inner_option_list_value  ->  COMMA . charliteral inner_option_list_value   (rule 248)
    inner_option_list_value  ->  COMMA . list_exp inner_option_list_value   (rule 249)
    inner_option_list_value  ->  COMMA . error   (rule 251)

    error	shift, and go to state 1070
    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 684
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1071
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 1072
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    string	go to state 1073
    integer	go to state 200
    charliteral	go to state 1074
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 905

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 298)

    CLOSE_PAR	shift, and go to state 1033
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    option_struct_list_value  ->  OPEN_BPAR alg_exp inner_option_list_value . CLOSE_BPAR   (rule 242)

    CLOSE_BPAR	shift, and go to state 1075
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 906

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 1034
=======
    option_struct_list_value  ->  OPEN_BPAR list_exp inner_option_list_value . CLOSE_BPAR   (rule 245)

    CLOSE_BPAR	shift, and go to state 1076
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 907

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1035
=======
    option_struct_list_value  ->  OPEN_BPAR string inner_option_list_value . CLOSE_BPAR   (rule 243)

    CLOSE_BPAR	shift, and go to state 1077
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 908

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1036
=======
    option_struct_list_value  ->  OPEN_BPAR charliteral inner_option_list_value . CLOSE_BPAR   (rule 244)

    CLOSE_BPAR	shift, and go to state 1078
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 909

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 998
=======
    option_list_value  ->  OPEN_MPAR alg_exp inner_option_list_value . CLOSE_MPAR   (rule 238)

    CLOSE_MPAR	shift, and go to state 1079
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 910

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 1037
=======
    option_list_value  ->  OPEN_MPAR list_exp inner_option_list_value . CLOSE_MPAR   (rule 241)

    CLOSE_MPAR	shift, and go to state 1080
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 911

<<<<<<< HEAD
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par   (rule 413)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    member_in_exp	go to state 1038
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_list_value  ->  OPEN_MPAR string inner_option_list_value . CLOSE_MPAR   (rule 239)

    CLOSE_MPAR	shift, and go to state 1081
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 912

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 412)

    CLOSE_BPAR	shift, and go to state 1039
=======
    option_list_value  ->  OPEN_MPAR charliteral inner_option_list_value . CLOSE_MPAR   (rule 240)

    CLOSE_MPAR	shift, and go to state 1082
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 913

<<<<<<< HEAD
    option_else_statement  ->  ELSE statement_bpar .   (rule 418)

    $default	reduce using rule 418 (option_else_statement)
=======
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 1083
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 914

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 999
=======
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 1084
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 915

<<<<<<< HEAD
    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR .   (rule 113)

    $default	reduce using rule 113 (file_statement)
=======
    option_output  ->  COMMA ass_exp . option_output   (rule 465)

    COMMA	shift, and go to state 694
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 464 (option_output)

    option_output	go to state 1085


<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA . identifier CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 1040
=======

state 916

    display_statement  ->  DISPLAY OPEN_PAR ass_exp option_output CLOSE_PAR .   (rule 463)

    $default	reduce using rule 463 (display_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 917

<<<<<<< HEAD
    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (file_statement)
=======
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)

    OPEN_PAR	shift, and go to state 917
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    list_exp	go to state 903
    option_list_value	go to state 455
    option_struct_list_value	go to state 456



<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR .   (rule 118)

    $default	reduce using rule 118 (file_statement)
=======
state 918

    list_exp  ->  list_exp . CON list_exp   (rule 234)
    list_exp  ->  list_exp CON list_exp .   (rule 234)


    $default	reduce using rule 234 (list_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 919

<<<<<<< HEAD
    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 117)

    $default	reduce using rule 117 (file_statement)
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    OPEN_PAR	shift, and go to state 1086
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 920

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    CLOSE_PAR	shift, and go to state 1041
=======
    option_function_parameter_list  ->  ID MUL MUL inner_optional_define_identifier .   (rule 385)

    $default	reduce using rule 385 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 921

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 346)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1042
    identifier	go to state 1043
=======
    option_function_parameter_list  ->  ID MUL MUL identifier . inner_optional_define_identifier   (rule 378)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1087
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 922

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 345)

    $default	reduce using rule 345 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  ID MUL identifier inner_optional_define_identifier .   (rule 377)

    $default	reduce using rule 377 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 923

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 338)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1044
=======
    option_function_parameter_list  ->  ID identifier ARRAY inner_optional_define_identifier .   (rule 379)

    $default	reduce using rule 379 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 924

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 340)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1045
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_optional_define_identifier .   (rule 382)

    $default	reduce using rule 382 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 925

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 337)

    $default	reduce using rule 337 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_optional_define_identifier   (rule 374)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1088
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 926

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 343)

    COMMA	shift, and go to state 376
    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1046
    identifier	go to state 1047
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_optional_define_identifier .   (rule 373)

    $default	reduce using rule 373 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 927

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 342)

    $default	reduce using rule 342 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_optional_define_identifier .   (rule 375)

    $default	reduce using rule 375 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 928

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 334)

    COMMA	shift, and go to state 376
=======
    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_optional_define_identifier   (rule 393)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1089
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1048


<<<<<<< HEAD

state 929

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 336)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1049
=======
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_optional_define_identifier   (rule 387)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1090
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 930

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 333)

    $default	reduce using rule 333 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  all_type_define MUL identifier inner_optional_define_identifier .   (rule 391)

    $default	reduce using rule 391 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 931

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 354)

    OPEN_PAR	shift, and go to state 193
    ID  	shift, and go to state 194

    identifier	go to state 1050
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1091
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 932
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_optional_define_identifier .   (rule 386)

    $default	reduce using rule 386 (option_function_parameter_list)


<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 353)

    $default	reduce using rule 353 (option_function_parameter_list)
=======
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 933

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp . COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    COMMA	shift, and go to state 1092
    CLOSE_MPAR	shift, and go to state 1093
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 352)

    ARRAY	shift, and go to state 1051
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1052
=======
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 934

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 347)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 1053

    $default	reduce using rule 367 (inner_option_define_identifier)
=======
    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_array_declaration   (rule 134)

    CLOSE_MPAR	shift, and go to state 1094
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    inner_option_define_identifier	go to state 1054



<<<<<<< HEAD
state 935

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1055
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 1095
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1096
    INTEGER	shift, and go to state 1097
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 936

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 331)

    $default	reduce using rule 331 (option_function_parameter_list)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 1098
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 1100
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 937

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 1056
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 266)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1101
    INTEGER	shift, and go to state 1102
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1013
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 938

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    CLOSE_PAR	shift, and go to state 1057
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 1103
    MUL 	shift, and go to state 1021
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 939

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 362)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1058
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1104
    MUL 	shift, and go to state 1024
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 940

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 359)

    $default	reduce using rule 359 (inner_option_define_identifier)
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 1105
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 941

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 361)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1059
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 178)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1106
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 942

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 363)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1060
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 112)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1107
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 943

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 360)

    $default	reduce using rule 360 (inner_option_define_identifier)
=======
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 442)

    $default	reduce using rule 442 (imply_pre)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 944

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 372)

    $default	reduce using rule 372 (inner_option_define_identifier)
=======
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 191)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1108
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 945

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 371)

    ARRAY	shift, and go to state 1061
    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1062
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY list . option_struct_member_exp   (rule 486)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 1109
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 946

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 376
    OPEN_MPAR	shift, and go to state 1063

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1064
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_struct_member_exp	go to state 1110


<<<<<<< HEAD
state 947

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
=======

state 947

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 60)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1065
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1111
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 948

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 357)

    $default	reduce using rule 357 (inner_option_define_identifier)
=======
    optional_projection  ->  COMMA statement optional_projection .   (rule 437)

    $default	reduce using rule 437 (optional_projection)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 949

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1066
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION big_par .   (rule 63)

    $default	reduce using rule 63 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 950

<<<<<<< HEAD
    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 392)

    $default	reduce using rule 392 (option_frame_identifier)
=======
    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION . big_par   (rule 62)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 1112


<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 1067
=======

state 951

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    OPEN_BPAR	shift, and go to state 1113
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 952

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 244)

    OPEN_PAR	shift, and go to state 193
    CLOSE_PAR	shift, and go to state 1016
    MUL 	shift, and go to state 250
    ID  	shift, and go to state 251

    option_identifier_array_declaration	go to state 477
    identifier	go to state 253
=======
    statement  ->  SEND OPEN_PAR ass_ident COMMA ass_exp . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 1114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 953

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 819
=======
    statement  ->  RECEIVE OPEN_PAR ass_ident COMMA identifier . CLOSE_PAR   (rule 74)

    CLOSE_PAR	shift, and go to state 1115
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 954

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 404)

    OPEN_PAR	shift, and go to state 365
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 240
    ID  	shift, and go to state 235
=======
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    ASS_EQU	shift, and go to state 1116
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 411 (for_sta_control)

    ass_statement	go to state 1068
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 242
    point_exp	go to state 86
    identifier	go to state 94
    for_sta_control	go to state 1069
    struct_member_exp	go to state 102


<<<<<<< HEAD

state 955

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 171
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 172
    MY_FALSE	shift, and go to state 173
    OPEN_PAR	shift, and go to state 174
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    NEGATION	shift, and go to state 175
    ID  	shift, and go to state 72
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 177
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    bool_exp	go to state 1070
    prime_bool_exp	go to state 179
    identifier	go to state 152
    strliteral	go to state 180
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  CHANNEL identifier OPEN_PAR integer CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 956

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50

    type_define	go to state 1071
=======
    statement  ->  PUT OPEN_PAR ass_ident COMMA ass_exp . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 1117
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 957

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA error .   (rule 217)

    $default	reduce using rule 217 (inner_option_list_value)

=======
    statement  ->  GET OPEN_PAR ass_ident COMMA identifier . CLOSE_PAR   (rule 75)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	shift, and go to state 1118


<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 213)

    COMMA	shift, and go to state 802
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 216 (inner_option_list_value)

    bi_operator	go to state 331
    inner_option_list_value	go to state 1072
=======

state 958

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 302)

    CLOSE_PAR	shift, and go to state 1119
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 959

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 203)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 215)

    COMMA	shift, and go to state 802
    CON 	shift, and go to state 619

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 1073
=======
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 303)

    CLOSE_PAR	shift, and go to state 1120
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 960

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 214)
=======
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 304)

    CLOSE_PAR	shift, and go to state 1121
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 802

    $default	reduce using rule 216 (inner_option_list_value)

    inner_option_list_value	go to state 1074

<<<<<<< HEAD


state 961
=======
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)

    CLOSE_PAR	shift, and go to state 940
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 210)

    $default	reduce using rule 210 (option_struct_list_value)


<<<<<<< HEAD

state 962

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 212)

    $default	reduce using rule 212 (option_struct_list_value)
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1122
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 963

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 211)
=======
    value_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . alg_exp   (rule 192)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1123
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 211 (option_struct_list_value)



<<<<<<< HEAD
state 964

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 207)

    $default	reduce using rule 207 (option_list_value)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    CLOSE_PAR	shift, and go to state 1124
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 965

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 209)

    $default	reduce using rule 209 (option_list_value)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    CLOSE_PAR	shift, and go to state 1125
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 966

<<<<<<< HEAD
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 208)

    $default	reduce using rule 208 (option_list_value)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    CLOSE_PAR	shift, and go to state 1126
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 967

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 787
    CHARDECLARATION	shift, and go to state 788
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 789
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 790
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    type_define  ->  INTDECLARATION .   (rule 116)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    MUL 	shift, and go to state 1127

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 968

<<<<<<< HEAD
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 149)
=======
    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    MUL 	shift, and go to state 1128

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 149 (rightaddrshift)


<<<<<<< HEAD
=======
state 969

    option_input  ->  COMMA list . option_input   (rule 473)

    COMMA	shift, and go to state 764

    $default	reduce using rule 471 (option_input)

    option_input	go to state 1129
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 969

    option_output  ->  COMMA ass_right option_output .   (rule 423)

    $default	reduce using rule 423 (option_output)

<<<<<<< HEAD


state 970

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 1075
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    option_input  ->  COMMA identifier . option_input   (rule 472)

    COMMA	shift, and go to state 764

    $default	reduce using rule 471 (option_input)

    option_input	go to state 1130
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 971

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1076
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)
=======
    request_statement  ->  REQUEST OPEN_PAR list option_input CLOSE_PAR .   (rule 469)

    $default	reduce using rule 469 (request_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 972

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1077
=======
    request_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 467)

    $default	reduce using rule 467 (request_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



<<<<<<< HEAD
state 973

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 1078
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 96)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 416)

    CLOSE_PAR	shift, and go to state 1131
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 974

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1079
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)
=======
    inner_option_function_identifier  ->  COMMA error .   (rule 422)

    $default	reduce using rule 422 (inner_option_function_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 975

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1080

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 420)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 1132
    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 976

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1081
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)
=======
    inner_option_function_identifier  ->  COMMA ass_exp . inner_option_function_identifier   (rule 419)

    COMMA	shift, and go to state 778

    $default	reduce using rule 421 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 1133
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 977

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1082

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    option_alg_exp  ->  COMMA error .   (rule 186)

    $default	reduce using rule 186 (option_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 978

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1083
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1024
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_alg_exp  ->  COMMA alg_exp . option_alg_exp   (rule 185)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1134
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 979

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 1084
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1086
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 178)

    $default	reduce using rule 178 (list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 980

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 89)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1087
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU list_exp . inner_option_identifier_array_declaration   (rule 126)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    COMMA	shift, and go to state 554
    CON 	shift, and go to state 697

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1135
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 981

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 1088
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU string . inner_option_identifier_array_declaration   (rule 127)

    COMMA	shift, and go to state 554

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1136
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 982

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 88)

    CLOSE_PAR	shift, and go to state 1089
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)

    CLOSE_MPAR	shift, and go to state 1137
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 983

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 163)

    CLOSE_MPAR	shift, and go to state 1090
=======
    option_identifier_array_declaration  ->  identifier ASS_EQU ass_exp inner_option_identifier_array_declaration .   (rule 124)

    $default	reduce using rule 124 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 984

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 444)

    $default	reduce using rule 444 (struct_member_exp)
=======
    option_identifier_array_declaration  ->  identifier ASS_EQU string inner_option_identifier_array_declaration .   (rule 125)

    $default	reduce using rule 125 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 985

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 440)

    $default	reduce using rule 440 (struct_member_exp)
=======
    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 81)

    $default	reduce using rule 81 (option_struct_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 986

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 1091
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    option_struct_member_exp  ->  DOT function .   (rule 496)

    $default	reduce using rule 496 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 987

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    option_struct_member_exp  ->  DOT list . option_struct_member_exp   (rule 493)

    DOT 	shift, and go to state 792
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 1138
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 988

<<<<<<< HEAD
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1092
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 492)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 1139
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 989

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 1093
=======
    option_struct_member_exp  ->  IMPLY function .   (rule 497)

    $default	reduce using rule 497 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 990

<<<<<<< HEAD
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 268)

    $default	reduce using rule 268 (String_Function_cat)
=======
    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    option_struct_member_exp  ->  IMPLY list . option_struct_member_exp   (rule 495)

    DOT 	shift, and go to state 792
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 793

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 1140
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 991

<<<<<<< HEAD
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 269)

    $default	reduce using rule 269 (String_Function_cmp)
=======
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 494)

    DOT 	shift, and go to state 792
    IMPLY	shift, and go to state 793
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    DOT 	[reduce using rule 491 (option_struct_member_exp)]
    IMPLY	[reduce using rule 491 (option_struct_member_exp)]
    $default	reduce using rule 491 (option_struct_member_exp)

    option_struct_member_exp	go to state 1141


<<<<<<< HEAD
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 270)

    $default	reduce using rule 270 (String_Function_cpy)
=======

state 992

    INTERVAL_STATEMENT  ->  OPEN_PAR . INTERVAL_STATEMENT CLOSE_PAR   (rule 92)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 992
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 993
    SIG_INTERVAL	go to state 806
    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 994
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 993

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1094
    bi_operator	go to state 331
=======
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)
    INTERVAL_STATEMENT  ->  OPEN_PAR INTERVAL_STATEMENT . CLOSE_PAR   (rule 92)

    COMMA	shift, and go to state 995
    CLOSE_PAR	shift, and go to state 1142
    OVEREP	shift, and go to state 997
    INTER_OR	shift, and go to state 998
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 994

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 164)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 164 (point_exp)]
    CON 	[reduce using rule 164 (point_exp)]
    ADDRESS	[reduce using rule 164 (point_exp)]
    LST 	[reduce using rule 164 (point_exp)]
    RST 	[reduce using rule 164 (point_exp)]
    MUL 	[reduce using rule 164 (point_exp)]
    DIV 	[reduce using rule 164 (point_exp)]
    MOD 	[reduce using rule 164 (point_exp)]
    $default	reduce using rule 164 (point_exp)

    bi_operator	go to state 331
=======
    SIG_INTERVAL  ->  alg_exp .   (rule 93)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)

    CLOSE_PAR	shift, and go to state 604
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 93 (SIG_INTERVAL)]
    $default	reduce using rule 93 (SIG_INTERVAL)

    alg_operator	go to state 374



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_PAR	shift, and go to state 1095
    ID  	shift, and go to state 1096
    INTLITERAL	shift, and go to state 1097
=======
state 995

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT COMMA . INTERVAL_STATEMENT   (rule 88)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 803
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 1143
    SIG_INTERVAL	go to state 806
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 807
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 996

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    OPEN_PAR	shift, and go to state 1098
    ID  	shift, and go to state 1099
    INTLITERAL	shift, and go to state 1100
=======
    OVER_STATEMENT  ->  big_par OVER OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (OVER_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 997

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    ID  	shift, and go to state 1101
    INTLITERAL	shift, and go to state 1102
=======
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP . alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP . NON_DETERMINED   (rule 91)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    NON_DETERMINED	shift, and go to state 1144
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1145
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 998

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1103
=======
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT INTER_OR . INTERVAL_STATEMENT   (rule 89)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 803
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 1146
    SIG_INTERVAL	go to state 806
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 807
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 999

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1104
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 24)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    complexProposition	go to state 1147



<<<<<<< HEAD
    option_input  ->  COMMA array option_input .   (rule 431)

    $default	reduce using rule 431 (option_input)
=======
state 1000

    optional_exp_else_statement  ->  ELSE . alg_exp   (rule 201)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1148
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1001

<<<<<<< HEAD
    option_input  ->  COMMA identifier option_input .   (rule 430)

    $default	reduce using rule 430 (option_input)
=======
    alg_exp  ->  IF bool_statement THEN alg_exp optional_exp_else_statement .   (rule 198)

    $default	reduce using rule 198 (alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1002

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 375)
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 276)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1149
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 676

    COMMA	[reduce using rule 72 (function)]
    CLOSE_PAR	reduce using rule 72 (function)
    CLOSE_PAR	[reduce using rule 380 (inner_option_function_identifier)]
    $default	reduce using rule 72 (function)

    inner_option_function_identifier	go to state 1105

<<<<<<< HEAD


state 1003

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 379)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 472
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 399
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 473
    STRLITERAL	shift, and go to state 176
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    $default	reduce using rule 376 (option_function_identifier)

    function	go to state 142
    file_statement	go to state 81
    ass_right	go to state 474
    rightaddrshift	go to state 401
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 402
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    array_exp	go to state 403
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    option_function_identifier	go to state 1106
    identifier	go to state 152
    strliteral	go to state 406
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 278)

    CLOSE_PAR	shift, and go to state 1150
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1004

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 378)

    $default	reduce using rule 378 (inner_option_function_identifier)
=======
    type_cast_alg_exp  ->  simple_alg_exp alg_operator . simple_alg_exp   (rule 200)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    simple_alg_exp	go to state 1151
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1005

<<<<<<< HEAD
    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 157)

    $default	reduce using rule 157 (option_ari_exp)
=======
    casted_element  ->  MALLOC . OPEN_PAR alg_exp CLOSE_PAR   (rule 281)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_PAR	shift, and go to state 1152

<<<<<<< HEAD

state 1006

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)
=======


state 1006

    casted_element  ->  type_cast_alg_exp .   (rule 280)

    $default	reduce using rule 280 (casted_element)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1007

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 264)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 264 (type_cast)



<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 104)

    COMMA	shift, and go to state 480
    ASS_P	shift, and go to state 1107

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1108
=======
state 1008

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 270)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1153
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1009

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 451)

    $default	reduce using rule 451 (option_struct_member_exp)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 267)

    $default	reduce using rule 267 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1010

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 450)

    $default	reduce using rule 450 (option_struct_member_exp)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 273)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1154
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1011

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 453)

    $default	reduce using rule 453 (option_struct_member_exp)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 269)

    $default	reduce using rule 269 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1012

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 452)

    $default	reduce using rule 452 (option_struct_member_exp)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 275)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1155
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1013

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 1109
    CHOP	shift, and go to state 164
    IFF 	shift, and go to state 165
    PROPIMPLY	shift, and go to state 166
    OR  	shift, and go to state 167
    AND 	shift, and go to state 168
    CHOPSTAR	shift, and go to state 169
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 266)

    $default	reduce using rule 266 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1014

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 173)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 173 (option_exp_else_statement)]
    CON 	[reduce using rule 173 (option_exp_else_statement)]
    ADDRESS	[reduce using rule 173 (option_exp_else_statement)]
    LST 	[reduce using rule 173 (option_exp_else_statement)]
    RST 	[reduce using rule 173 (option_exp_else_statement)]
    MUL 	[reduce using rule 173 (option_exp_else_statement)]
    DIV 	[reduce using rule 173 (option_exp_else_statement)]
    MOD 	[reduce using rule 173 (option_exp_else_statement)]
    $default	reduce using rule 173 (option_exp_else_statement)

    bi_operator	go to state 331
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 272)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1156
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1015

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 242)

    $default	reduce using rule 242 (type_cast)
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1096
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1016

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 244)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1110
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1017

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 172)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 176)

    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    INTER_OR	[reduce using rule 172 (type_cast_alg_exp)]
    CON 	[reduce using rule 172 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 172 (type_cast_alg_exp)]
    LST 	[reduce using rule 172 (type_cast_alg_exp)]
    RST 	[reduce using rule 172 (type_cast_alg_exp)]
    MUL 	[reduce using rule 172 (type_cast_alg_exp)]
    DIV 	[reduce using rule 172 (type_cast_alg_exp)]
    MOD 	[reduce using rule 172 (type_cast_alg_exp)]
    $default	reduce using rule 172 (type_cast_alg_exp)

    bi_operator	go to state 338
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 266)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1101
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1013
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1018

<<<<<<< HEAD
    casted_element  ->  MALLOC OPEN_PAR . ari_exp CLOSE_PAR   (rule 247)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1111
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1157
    MUL 	shift, and go to state 1024
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1019

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 262)

    $default	reduce using rule 262 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1020

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 265)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1021

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 241)

    $default	reduce using rule 241 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 1159
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1022

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 263)

    $default	reduce using rule 263 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1023

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1024

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1161
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1025

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1112
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 260)

    $default	reduce using rule 260 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1026

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 261)

    $default	reduce using rule 261 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1027

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 240)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1113
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 277)

    $default	reduce using rule 277 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1028

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 245)

    $default	reduce using rule 245 (type_cast)
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 279)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1162
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1029

<<<<<<< HEAD
    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 294)

    $default	reduce using rule 294 (math_function)
=======
    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 288)

    $default	reduce using rule 288 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1030

<<<<<<< HEAD
    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 295)

    $default	reduce using rule 295 (math_function)
=======
    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 286)

    $default	reduce using rule 286 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1031

<<<<<<< HEAD
    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 296)

    $default	reduce using rule 296 (math_function)
=======
    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 287)

    $default	reduce using rule 287 (all_sizeof_type)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1032

<<<<<<< HEAD
    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 297)

    $default	reduce using rule 297 (math_function)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 328)

    CLOSE_PAR	shift, and go to state 1163
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    alg_operator	go to state 374



<<<<<<< HEAD
    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 298)

    $default	reduce using rule 298 (math_function)
=======
state 1033

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  POW OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 329)

    CLOSE_PAR	shift, and go to state 1164
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1034

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    ID  	shift, and go to state 1096
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 330)

    CLOSE_PAR	shift, and go to state 1165
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1035

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    ID  	shift, and go to state 1099
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 331)

    CLOSE_PAR	shift, and go to state 1166
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1036

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    ID  	shift, and go to state 1101
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 332)

    CLOSE_PAR	shift, and go to state 1167
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    alg_operator	go to state 374



<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1114
=======
state 1037

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    CLOSE_PAR	shift, and go to state 1168
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1038

<<<<<<< HEAD
    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR option_case_par   (rule 413)

    COLON	shift, and go to state 1115
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    CLOSE_PAR	shift, and go to state 1169
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1039

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 412)

    $default	reduce using rule 412 (switch_statement)
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    CLOSE_PAR	shift, and go to state 1170
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1040

<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 1116
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    MUL 	shift, and go to state 1127
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1041

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    OPEN_PAR	shift, and go to state 1117
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    MUL 	shift, and go to state 1171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1042

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 346)

    $default	reduce using rule 346 (option_function_parameter_list)


=======
    optional_else_statement  ->  ELSE big_par .   (rule 460)

    $default	reduce using rule 460 (optional_else_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

state 1043

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 339)

    COMMA	shift, and go to state 376

<<<<<<< HEAD
    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1118
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    MUL 	shift, and go to state 1128
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1044

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 338)

    $default	reduce using rule 338 (option_function_parameter_list)
=======
    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA string CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1045

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 340)

    $default	reduce using rule 340 (option_function_parameter_list)
=======
    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA . identifier CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 1172
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1046

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 343)

    $default	reduce using rule 343 (option_function_parameter_list)
=======
    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 141)

    $default	reduce using rule 141 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1047

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 335)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1119
=======
    file_statement  ->  FPUTC OPEN_PAR list COMMA identifier CLOSE_PAR .   (rule 143)

    $default	reduce using rule 143 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1048

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 334)

    $default	reduce using rule 334 (option_function_parameter_list)
=======
    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 142)

    $default	reduce using rule 142 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1049

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 336)

    $default	reduce using rule 336 (option_function_parameter_list)
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 1173
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1050

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 354)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1120
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    CLOSE_PAR	shift, and go to state 1174
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1051

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 348)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1121
=======
    inner_optional_define_identifier  ->  COMMA ID identifier ARRAY . inner_optional_define_identifier   (rule 401)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1175
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1052

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 352)

    $default	reduce using rule 352 (option_function_parameter_list)
=======
    inner_optional_define_identifier  ->  COMMA ID identifier inner_optional_define_identifier .   (rule 398)

    $default	reduce using rule 398 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1053

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1122
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_optional_define_identifier   (rule 400)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1176
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1054

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 347)

    $default	reduce using rule 347 (option_function_parameter_list)
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_optional_define_identifier   (rule 402)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1177
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1055

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_optional_define_identifier .   (rule 399)

    $default	reduce using rule 399 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 1123
    CLOSE_MPAR	shift, and go to state 1124
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



<<<<<<< HEAD
state 1056

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 59)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1125
    empty_statement	go to state 1126
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    inner_optional_define_identifier  ->  COMMA all_type_define MUL inner_optional_define_identifier .   (rule 412)

    $default	reduce using rule 412 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1057

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    OPEN_PAR	shift, and go to state 1127
=======
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . inner_optional_define_identifier   (rule 411)

    ARRAY	shift, and go to state 1178
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1179
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1058

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 362)

    $default	reduce using rule 362 (inner_option_define_identifier)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 1180
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1181


<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 361)

    $default	reduce using rule 361 (inner_option_define_identifier)
=======

state 1059

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1182
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1060

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 363)

    $default	reduce using rule 363 (inner_option_define_identifier)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier inner_optional_define_identifier .   (rule 396)

    $default	reduce using rule 396 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1061

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 365)

    COMMA	shift, and go to state 376
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 77)

    CLOSE_BPAR	shift, and go to state 1183
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1128


<<<<<<< HEAD

state 1062
=======
    optional_frame_identifier  ->  COMMA identifier optional_frame_identifier .   (rule 433)

    $default	reduce using rule 433 (optional_frame_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 371)

    $default	reduce using rule 371 (inner_option_define_identifier)


<<<<<<< HEAD

state 1063

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1129
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 61)

    OPEN_PAR	shift, and go to state 1184
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1064

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 364)

    $default	reduce using rule 364 (inner_option_define_identifier)
=======
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 278)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 1150
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299



<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 368)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)

    COMMA	shift, and go to state 1130
    CLOSE_MPAR	shift, and go to state 1131
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 939
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1066

<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)
=======
    pbool_expression  ->  alg_exp relation_operator . alg_exp   (rule 31)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1185
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1067

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1132
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP . for_sta_control CLOSE_PAR big_par   (rule 451)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 458 (for_sta_control)

    ass_statement	go to state 1186
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    for_sta_control	go to state 1187
    struct_member_exp	go to state 114


<<<<<<< HEAD
    for_sta_control  ->  ass_statement .   (rule 410)

    $default	reduce using rule 410 (for_sta_control)
=======

state 1068

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_statement CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 1188
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1069

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 404)

    CLOSE_PAR	shift, and go to state 1133
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51

    type_define	go to state 1189
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1070

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 304)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 305)

    CLOSE_PAR	shift, and go to state 1134
    OR  	shift, and go to state 356
    AND 	shift, and go to state 357
=======
    inner_option_list_value  ->  COMMA error .   (rule 251)

    $default	reduce using rule 251 (inner_option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1071

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)

    CLOSE_PAR	shift, and go to state 1135
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_option_list_value  ->  COMMA alg_exp . inner_option_list_value   (rule 246)

    COMMA	shift, and go to state 904
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 250 (inner_option_list_value)

    alg_operator	go to state 374
    inner_option_list_value	go to state 1190
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1072

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 213)

    $default	reduce using rule 213 (inner_option_list_value)
=======
    list_exp  ->  list_exp . CON list_exp   (rule 234)
    inner_option_list_value  ->  COMMA list_exp . inner_option_list_value   (rule 249)

    COMMA	shift, and go to state 904
    CON 	shift, and go to state 697

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 1191
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1073

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 215)

    $default	reduce using rule 215 (inner_option_list_value)
=======
    inner_option_list_value  ->  COMMA string . inner_option_list_value   (rule 247)

    COMMA	shift, and go to state 904

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 1192
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1074

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 214)

    $default	reduce using rule 214 (inner_option_list_value)
=======
    factor  ->  charliteral .   (rule 218)
    inner_option_list_value  ->  COMMA charliteral . inner_option_list_value   (rule 248)

    COMMA	shift, and go to state 904

    COMMA	[reduce using rule 218 (factor)]
    CLOSE_BPAR	reduce using rule 218 (factor)
    CLOSE_BPAR	[reduce using rule 250 (inner_option_list_value)]
    CLOSE_MPAR	reduce using rule 218 (factor)
    CLOSE_MPAR	[reduce using rule 250 (inner_option_list_value)]
    $default	reduce using rule 218 (factor)

    inner_option_list_value	go to state 1193
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1075

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1136
    CHARDECLARATION	shift, and go to state 1137
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 1138
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    option_struct_list_value  ->  OPEN_BPAR alg_exp inner_option_list_value CLOSE_BPAR .   (rule 242)

    $default	reduce using rule 242 (option_struct_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1076

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 1139
=======
    option_struct_list_value  ->  OPEN_BPAR list_exp inner_option_list_value CLOSE_BPAR .   (rule 245)

    $default	reduce using rule 245 (option_struct_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1077

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1140
=======
    option_struct_list_value  ->  OPEN_BPAR string inner_option_list_value CLOSE_BPAR .   (rule 243)

    $default	reduce using rule 243 (option_struct_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1078

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1141
    CHARDECLARATION	shift, and go to state 1142
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 1143
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    option_struct_list_value  ->  OPEN_BPAR charliteral inner_option_list_value CLOSE_BPAR .   (rule 244)

    $default	reduce using rule 244 (option_struct_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1079

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    OPEN_MPAR	shift, and go to state 1144
=======
    option_list_value  ->  OPEN_MPAR alg_exp inner_option_list_value CLOSE_MPAR .   (rule 238)

    $default	reduce using rule 238 (option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1080

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1145
=======
    option_list_value  ->  OPEN_MPAR list_exp inner_option_list_value CLOSE_MPAR .   (rule 241)

    $default	reduce using rule 241 (option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1081

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    OPEN_MPAR	shift, and go to state 1146
=======
    option_list_value  ->  OPEN_MPAR string inner_option_list_value CLOSE_MPAR .   (rule 239)

    $default	reduce using rule 239 (option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1082

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1147
=======
    option_list_value  ->  OPEN_MPAR charliteral inner_option_list_value CLOSE_MPAR .   (rule 240)

    $default	reduce using rule 240 (option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1083

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1148
    OPEN_MPAR	shift, and go to state 249
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 888
    CHARDECLARATION	shift, and go to state 889
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 890
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 891
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)



<<<<<<< HEAD
state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 276
    CHARDECLARATION	shift, and go to state 277
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 279
    OPEN_PAR	shift, and go to state 1149
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 281
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======
    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (rightaddrshift)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1085

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    identifier  ->  ID .   (rule 386)

    OPEN_PAR	shift, and go to state 248
    CLOSE_PAR	shift, and go to state 1150
    OPEN_MPAR	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 386 (identifier)]
    $default	reduce using rule 386 (identifier)
=======
    option_output  ->  COMMA ass_exp option_output .   (rule 465)

    $default	reduce using rule 465 (option_output)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1086

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1151

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1194


<<<<<<< HEAD
state 1087

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 1152
=======

state 1087

    option_function_parameter_list  ->  ID MUL MUL identifier inner_optional_define_identifier .   (rule 378)

    $default	reduce using rule 378 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1088

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    CLOSE_PAR	shift, and go to state 1153

    CLOSE_PAR	[reduce using rule 150 (array)]
    $default	reduce using rule 150 (array)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_optional_define_identifier .   (rule 374)

    $default	reduce using rule 374 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1089

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 88)

    $default	reduce using rule 88 (declaration)
=======
    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_optional_define_identifier .   (rule 393)

    $default	reduce using rule 393 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1090

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 163)

    $default	reduce using rule 163 (point_exp)
=======
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_optional_define_identifier .   (rule 387)

    $default	reduce using rule 387 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1091

<<<<<<< HEAD
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    CLOSE_MPAR	shift, and go to state 1195
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    alg_operator	go to state 374



<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1154
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
state 1092

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1196
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1093

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1125
    empty_statement	go to state 1155
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 388)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1197
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1094

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    CLOSE_MPAR	shift, and go to state 1156
=======
    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_array_declaration   (rule 134)

    COMMA	shift, and go to state 1198
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 136 (inner_option_array_declaration)]
    $default	reduce using rule 136 (inner_option_array_declaration)

    inner_option_array_declaration	go to state 1199


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 1157
=======

state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 1200
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1096

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 1076
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1201
    OPEN_MPAR	shift, and go to state 295
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 427 (identifier)]
    $default	reduce using rule 427 (identifier)



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1077
=======
state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1202

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1098

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_PAR	shift, and go to state 1158
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 1203
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1099

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1079
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1204
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 427 (identifier)]
    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1100

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1205

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	shift, and go to state 1080


<<<<<<< HEAD

state 1101

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1081
=======
state 1101

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1206
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 427 (identifier)]
    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1102

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1082
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    integer  ->  INTEGER .   (rule 430)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	shift, and go to state 1207

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)


<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    ID  	shift, and go to state 1159
=======

state 1103

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 265)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1208
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1104

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_PAR	shift, and go to state 1160
    ID  	shift, and go to state 1161
    INTLITERAL	shift, and go to state 1162
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 1209
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1210
    INTEGER	shift, and go to state 1211
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1105

<<<<<<< HEAD
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 375)

    $default	reduce using rule 375 (option_function_identifier)
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 113)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1212


<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 379)

    CLOSE_PAR	shift, and go to state 1163
=======

state 1106

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 178)

    CLOSE_MPAR	shift, and go to state 1213
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1107

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 104)
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 112)

    CLOSE_PAR	shift, and go to state 1214
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398
    STRLITERAL	shift, and go to state 176

    array_exp	go to state 1164
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
    strliteral	go to state 1165


<<<<<<< HEAD

state 1108

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)
=======
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 191)

    CLOSE_MPAR	shift, and go to state 1215
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1109

<<<<<<< HEAD
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY list option_struct_member_exp .   (rule 486)

    $default	reduce using rule 486 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1110

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 244)

    $default	reduce using rule 244 (type_cast)
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 482)

    $default	reduce using rule 482 (struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1111

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    casted_element  ->  MALLOC OPEN_PAR ari_exp . CLOSE_PAR   (rule 247)

    CLOSE_PAR	shift, and go to state 1166
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 60)

    CLOSE_MPAR	shift, and go to state 1216
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1112

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)
=======
    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION big_par .   (rule 62)

    $default	reduce using rule 62 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1113

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 240)

    $default	reduce using rule 240 (type_cast)
=======
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 65)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1217
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1114

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    ID  	shift, and go to state 1161
=======
    statement  ->  SEND OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1115

<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR option_case_par   (rule 413)

    OPEN_PAR	shift, and go to state 1167
=======
    statement  ->  RECEIVE OPEN_PAR ass_ident COMMA identifier CLOSE_PAR .   (rule 74)

    $default	reduce using rule 74 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1116

<<<<<<< HEAD
    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (file_statement)
=======
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 1218
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1117

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 355)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1168
=======
    statement  ->  PUT OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1118

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 339)

    $default	reduce using rule 339 (option_function_parameter_list)
=======
    statement  ->  GET OPEN_PAR ass_ident COMMA identifier CLOSE_PAR .   (rule 75)

    $default	reduce using rule 75 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1119

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 335)

    $default	reduce using rule 335 (option_function_parameter_list)
=======
    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 302)

    $default	reduce using rule 302 (String_Function_cat)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1120

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 354)

    $default	reduce using rule 354 (option_function_parameter_list)
=======
    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 303)

    $default	reduce using rule 303 (String_Function_cmp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1121

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 348)

    $default	reduce using rule 348 (option_function_parameter_list)
=======
    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 304)

    $default	reduce using rule 304 (String_Function_cpy)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1122

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 351)
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1219
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_MPAR	shift, and go to state 1169
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331



<<<<<<< HEAD
state 1123

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1170
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    value_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp .   (rule 192)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 192 (value_exp)]
    SUB 	[reduce using rule 192 (value_exp)]
    $default	reduce using rule 192 (value_exp)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1124

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 349)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1171
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    OPEN_PAR	shift, and go to state 1220
    ID  	shift, and go to state 1221
    INTEGER	shift, and go to state 1222
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1125

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 70)

    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257

    $default	reduce using rule 70 (empty_statement)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    OPEN_PAR	shift, and go to state 1223
    ID  	shift, and go to state 1224
    INTEGER	shift, and go to state 1225
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1126

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 1172
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    ID  	shift, and go to state 1226
    INTEGER	shift, and go to state 1227
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1127

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 366)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1173
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    CLOSE_PAR	shift, and go to state 1228
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1128

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 365)

    $default	reduce using rule 365 (inner_option_define_identifier)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    CLOSE_PAR	shift, and go to state 1229
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1129

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 370)

    CLOSE_MPAR	shift, and go to state 1174
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
    option_input  ->  COMMA list option_input .   (rule 473)

    $default	reduce using rule 473 (option_input)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    bi_operator	go to state 331



<<<<<<< HEAD
state 1130

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1175
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_input  ->  COMMA identifier option_input .   (rule 472)

    $default	reduce using rule 472 (option_input)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1131

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 368)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1176
=======
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 96)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 416)

    COMMA	shift, and go to state 778
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 96 (function)]
    CLOSE_PAR	reduce using rule 96 (function)
    CLOSE_PAR	[reduce using rule 421 (inner_option_function_identifier)]
    $default	reduce using rule 96 (function)

    inner_option_function_identifier	go to state 1230


<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 1177
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======

state 1132

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 96)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 420)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 417 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 1231
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1133

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 404)

    error	shift, and go to state 392
    OPEN_BPAR	shift, and go to state 393

    statement_bpar	go to state 1178
=======
    inner_option_function_identifier  ->  COMMA ass_exp inner_option_function_identifier .   (rule 419)

    $default	reduce using rule 419 (inner_option_function_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1134

<<<<<<< HEAD
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)
=======
    option_alg_exp  ->  COMMA alg_exp option_alg_exp .   (rule 185)

    $default	reduce using rule 185 (option_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1135

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 146)
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration .   (rule 126)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 126 (option_identifier_array_declaration)



state 1136

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 1180
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU string inner_option_identifier_array_declaration .   (rule 127)

    $default	reduce using rule 127 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1137

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 1181
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . ASS_EQU string inner_option_identifier_array_declaration   (rule 129)

    COMMA	shift, and go to state 554
    ASS_EQU	shift, and go to state 1232
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1233


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 1182
=======

state 1138

    option_struct_member_exp  ->  DOT list option_struct_member_exp .   (rule 493)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 493 (option_struct_member_exp)



<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1183
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
state 1139

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 492)

    $default	reduce using rule 492 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1140

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1184
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_struct_member_exp  ->  IMPLY list option_struct_member_exp .   (rule 495)

    $default	reduce using rule 495 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1141

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 1185
=======
    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 494)

    $default	reduce using rule 494 (option_struct_member_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1142

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 1186
=======
    INTERVAL_STATEMENT  ->  OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR .   (rule 92)

    $default	reduce using rule 92 (INTERVAL_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1143

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 1187
=======
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT COMMA INTERVAL_STATEMENT .   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    OVEREP	shift, and go to state 997
    INTER_OR	shift, and go to state 998

    $default	reduce using rule 88 (INTERVAL_STATEMENT)


<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1188
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======

state 1144

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP NON_DETERMINED .   (rule 91)

    $default	reduce using rule 91 (INTERVAL_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1145

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1189
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP alg_exp .   (rule 90)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 90 (INTERVAL_STATEMENT)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1146

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1190
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT INTER_OR INTERVAL_STATEMENT .   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)

    OVEREP	shift, and go to state 997

    $default	reduce using rule 89 (INTERVAL_STATEMENT)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1147

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1191
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 24)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    CLOSE_BPAR	shift, and go to state 1234
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1148

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    OPEN_MPAR	shift, and go to state 1192
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    optional_exp_else_statement  ->  ELSE alg_exp .   (rule 201)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    ADD 	[reduce using rule 201 (optional_exp_else_statement)]
    SUB 	[reduce using rule 201 (optional_exp_else_statement)]
    $default	reduce using rule 201 (optional_exp_else_statement)

    alg_operator	go to state 374


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 163)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 166)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 186)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 387)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 444)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 448)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    STRUCT	shift, and go to state 275
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1193
    CHARDECLARATION	shift, and go to state 1194
    VOIDDECLARATION	shift, and go to state 278
    FLOATDECLARATION	shift, and go to state 519
    OPEN_PAR	shift, and go to state 280
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    UNSIGNED	shift, and go to state 1195
    SIGNED	shift, and go to state 282
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 283
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 284
    point_exp	go to state 285
    ari_exp	go to state 286
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 287
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 288
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 289
=======

state 1149

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 276)

    $default	reduce using rule 276 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1150

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_MPAR	shift, and go to state 1196
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 278)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1235
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1151

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1197
=======
    type_cast_alg_exp  ->  simple_alg_exp alg_operator simple_alg_exp .   (rule 200)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 200 (type_cast_alg_exp)]
    CON 	[reduce using rule 200 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 200 (type_cast_alg_exp)]
    LST 	[reduce using rule 200 (type_cast_alg_exp)]
    RST 	[reduce using rule 200 (type_cast_alg_exp)]
    MUL 	[reduce using rule 200 (type_cast_alg_exp)]
    DIV 	[reduce using rule 200 (type_cast_alg_exp)]
    MOD 	[reduce using rule 200 (type_cast_alg_exp)]
    $default	reduce using rule 200 (type_cast_alg_exp)

    mul_operator	go to state 389
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1152

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 89)

    $default	reduce using rule 89 (declaration)
=======
    casted_element  ->  MALLOC OPEN_PAR . alg_exp CLOSE_PAR   (rule 281)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1236
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1153

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    OPEN_PAR	shift, and go to state 1198
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 270)

    $default	reduce using rule 270 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1154

<<<<<<< HEAD
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 273)

    $default	reduce using rule 273 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1155

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 61)

    CLOSE_BPAR	shift, and go to state 1199
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 275)

    $default	reduce using rule 275 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1156

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    CLOSE_PAR	shift, and go to state 1153
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 272)

    $default	reduce using rule 272 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1157

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    INTDECLARATION	shift, and go to state 1200
    CHARDECLARATION	shift, and go to state 1201
    UNSIGNED	shift, and go to state 1202
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1210
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1158

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTDECLARATION	shift, and go to state 1203
    CHARDECLARATION	shift, and go to state 1204
    UNSIGNED	shift, and go to state 1205
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 265)

    $default	reduce using rule 265 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1159

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1148
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 271)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1237
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1160

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_PAR	shift, and go to state 1206
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 268)

    $default	reduce using rule 268 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1161

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1150
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 274)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1238
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1162

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1151
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 279)

    $default	reduce using rule 279 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1163

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 379)

    COMMA	shift, and go to state 676

    COMMA	[reduce using rule 72 (function)]
    CLOSE_PAR	reduce using rule 72 (function)
    CLOSE_PAR	[reduce using rule 380 (inner_option_function_identifier)]
    $default	reduce using rule 72 (function)

    inner_option_function_identifier	go to state 1207
=======
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 328)

    $default	reduce using rule 328 (Float_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1164

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 103)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    COMMA	shift, and go to state 480
    CON 	shift, and go to state 619

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1208
=======
    Float_Function  ->  POW OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 329)

    $default	reduce using rule 329 (Float_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1165

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 104)

    COMMA	shift, and go to state 480

    COMMA	[reduce using rule 108 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 108 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1209
=======
    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 330)

    $default	reduce using rule 330 (Float_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1166

<<<<<<< HEAD
    casted_element  ->  MALLOC OPEN_PAR ari_exp CLOSE_PAR .   (rule 247)

    $default	reduce using rule 247 (casted_element)
=======
    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 331)

    $default	reduce using rule 331 (Float_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1167

<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR option_case_par   (rule 413)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    UNSIGNED	shift, and go to state 62
    SIGNED	shift, and go to state 63
    FREE	shift, and go to state 64
    MUL 	shift, and go to state 65
    NEXT	shift, and go to state 66
    LENGTH	shift, and go to state 67
    REQUEST	shift, and go to state 68
    FINAL	shift, and go to state 69
    KEEP	shift, and go to state 70
    ALWAYS	shift, and go to state 71
    ID  	shift, and go to state 72
    STRUCT_TYPE	shift, and go to state 73

    statement	go to state 1210
    function	go to state 75
    struct_define_statement	go to state 76
    struct_identifier	go to state 77
    sign_declaration	go to state 78
    declaration	go to state 79
    type_define	go to state 80
    file_statement	go to state 81
    ass_statement	go to state 82
    ass_left	go to state 83
    leftaddrshift	go to state 84
    array	go to state 85
    point_exp	go to state 86
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    identifier	go to state 94
    while_statement	go to state 95
    for_statement	go to state 96
    extend_for_statement	go to state 97
    switch_statement	go to state 98
    if_statement	go to state 99
    output_statement	go to state 100
    input_statement	go to state 101
    struct_member_exp	go to state 102
=======
    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 332)

    $default	reduce using rule 332 (Float_Function)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1168

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 355)

    CLOSE_PAR	shift, and go to state 1211
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    ID  	shift, and go to state 1221
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1169

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1212
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    ID  	shift, and go to state 1224



<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 350)

    CLOSE_MPAR	shift, and go to state 1213
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
state 1170

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    ID  	shift, and go to state 1226
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1171

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 349)

    $default	reduce using rule 349 (option_function_parameter_list)
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    CLOSE_PAR	shift, and go to state 1239
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1172

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)
=======
    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA identifier . CLOSE_PAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1240
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1173

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 366)

    CLOSE_PAR	shift, and go to state 1214
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 64)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    CLOSE_BPAR	reduce using rule 95 (empty_statement)

    statement	go to state 1241
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    empty_statement	go to state 1242
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1174

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1215
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    OPEN_PAR	shift, and go to state 1243
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1175

<<<<<<< HEAD
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 369)

    CLOSE_MPAR	shift, and go to state 1216
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    bi_operator	go to state 331
=======
    inner_optional_define_identifier  ->  COMMA ID identifier ARRAY inner_optional_define_identifier .   (rule 401)

    $default	reduce using rule 401 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1176

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 368)

    $default	reduce using rule 368 (inner_option_define_identifier)
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_optional_define_identifier .   (rule 400)

    $default	reduce using rule 400 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1177

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (statement)
=======
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_optional_define_identifier .   (rule 402)

    $default	reduce using rule 402 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1178

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 404)

    $default	reduce using rule 404 (extend_for_statement)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_optional_define_identifier   (rule 404)

    COMMA	shift, and go to state 427
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1244



<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 146)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1217
=======
state 1179

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier inner_optional_define_identifier .   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier inner_optional_define_identifier .   (rule 411)

    $   	reduce using rule 405 (inner_optional_define_identifier)
    $   	[reduce using rule 411 (inner_optional_define_identifier)]
    COMMA	reduce using rule 405 (inner_optional_define_identifier)
    COMMA	[reduce using rule 411 (inner_optional_define_identifier)]
    COLON	reduce using rule 405 (inner_optional_define_identifier)
    COLON	[reduce using rule 411 (inner_optional_define_identifier)]
    CLOSE_PAR	reduce using rule 405 (inner_optional_define_identifier)
    CLOSE_PAR	[reduce using rule 411 (inner_optional_define_identifier)]
    CLOSE_BPAR	reduce using rule 405 (inner_optional_define_identifier)
    CLOSE_BPAR	[reduce using rule 411 (inner_optional_define_identifier)]
    CLOSE_MPAR	reduce using rule 405 (inner_optional_define_identifier)
    CLOSE_MPAR	[reduce using rule 411 (inner_optional_define_identifier)]
    CHOP	reduce using rule 405 (inner_optional_define_identifier)
    CHOP	[reduce using rule 411 (inner_optional_define_identifier)]
    OR  	reduce using rule 405 (inner_optional_define_identifier)
    OR  	[reduce using rule 411 (inner_optional_define_identifier)]
    PARALLEL	reduce using rule 405 (inner_optional_define_identifier)
    PARALLEL	[reduce using rule 411 (inner_optional_define_identifier)]
    AND 	reduce using rule 405 (inner_optional_define_identifier)
    AND 	[reduce using rule 411 (inner_optional_define_identifier)]
    $default	reduce using rule 405 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1180

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 1218
    MUL 	shift, and go to state 710
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1245
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1181

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1219
    MUL 	shift, and go to state 713
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_optional_define_identifier .   (rule 403)

    $default	reduce using rule 403 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1182

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 1220
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp . COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    COMMA	shift, and go to state 1246
    CLOSE_MPAR	shift, and go to state 1247
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    alg_operator	go to state 374


<<<<<<< HEAD
state 1183

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1221
    bi_operator	go to state 331
=======

state 1183

    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 77)

    $default	reduce using rule 77 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1184

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 61)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1248
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1222
    bi_operator	go to state 331


<<<<<<< HEAD

state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 1223
    MUL 	shift, and go to state 710
=======
    pbool_expression  ->  alg_exp relation_operator alg_exp .   (rule 31)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 31 (pbool_expression)

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1186

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1224
    MUL 	shift, and go to state 713
=======
    for_sta_control  ->  ass_statement .   (rule 457)

    $default	reduce using rule 457 (for_sta_control)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1187

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 1225
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control . CLOSE_PAR big_par   (rule 451)

    CLOSE_PAR	shift, and go to state 1249
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1188

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement . CLOSE_PAR   (rule 49)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    CLOSE_PAR	shift, and go to state 1250
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1226
    bi_operator	go to state 331

<<<<<<< HEAD
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    CLOSE_PAR	shift, and go to state 1251
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5


state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

<<<<<<< HEAD
    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1227
    bi_operator	go to state 331



state 1190

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1228
    bi_operator	go to state 331
=======
    inner_option_list_value  ->  COMMA alg_exp inner_option_list_value .   (rule 246)

    $default	reduce using rule 246 (inner_option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1191

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330
=======
    inner_option_list_value  ->  COMMA list_exp inner_option_list_value .   (rule 249)

    $default	reduce using rule 249 (inner_option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1229
    bi_operator	go to state 331



<<<<<<< HEAD
state 1192

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1230
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_option_list_value  ->  COMMA string inner_option_list_value .   (rule 247)

    $default	reduce using rule 247 (inner_option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1193

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 510
    MUL 	shift, and go to state 1231
=======
    inner_option_list_value  ->  COMMA charliteral inner_option_list_value .   (rule 248)

    $default	reduce using rule 248 (inner_option_list_value)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1194

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 512
    MUL 	shift, and go to state 1232
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_optional_define_identifier   (rule 394)

    CLOSE_PAR	shift, and go to state 1252
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1195

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)

    INTDECLARATION	shift, and go to state 722
    CHARDECLARATION	shift, and go to state 1233
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 390)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1253
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1196

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1234
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    CLOSE_MPAR	shift, and go to state 1254
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1197

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1235
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 388)

    $default	reduce using rule 388 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1198

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 91)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 581
    UNSIGNED	shift, and go to state 453
    ID  	shift, and go to state 582
    STRUCT_TYPE	shift, and go to state 583

    $default	reduce using rule 356 (option_function_parameter_list)

    type_define	go to state 454
    sign_type_define	go to state 456
    all_type_define	go to state 584
    option_function_parameter_list	go to state 1236
=======
    inner_option_array_declaration  ->  COMMA . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)
    inner_option_array_declaration  ->  COMMA . error   (rule 137)

    error	shift, and go to state 1255
    ID  	shift, and go to state 1256
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1199

<<<<<<< HEAD
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 61)

    $default	reduce using rule 61 (statement)
=======
    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration .   (rule 134)

    $default	reduce using rule 134 (option_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1200

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 1237
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 1257
    CHARDECLARATION	shift, and go to state 1258
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 1259
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1201

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    MUL 	shift, and go to state 1238
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    OPEN_MPAR	shift, and go to state 1260
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1202

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CHARDECLARATION	shift, and go to state 1239
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)

    OPEN_MPAR	shift, and go to state 1261
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1203

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1240
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 1262
    CHARDECLARATION	shift, and go to state 1263
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 1264
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1204

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1241
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    OPEN_MPAR	shift, and go to state 1265
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1205

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CHARDECLARATION	shift, and go to state 1242
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)

    OPEN_MPAR	shift, and go to state 1266
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1206

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    INTDECLARATION	shift, and go to state 1243
    CHARDECLARATION	shift, and go to state 1244
    UNSIGNED	shift, and go to state 1245
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    OPEN_MPAR	shift, and go to state 1267
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1207

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 379)

    $default	reduce using rule 379 (inner_option_function_identifier)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)

    OPEN_MPAR	shift, and go to state 1268
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1208

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1269
    OPEN_MPAR	shift, and go to state 295
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 427 (identifier)]
    $default	reduce using rule 427 (identifier)



<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)
=======
state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 1270
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1210

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR option_case_par   (rule 413)

    CLOSE_PAR	shift, and go to state 1246
    CHOP	shift, and go to state 254
    OR  	shift, and go to state 255
    PARALLEL	shift, and go to state 256
    AND 	shift, and go to state 257
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    identifier  ->  ID .   (rule 427)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1271
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 427 (identifier)]
    $default	reduce using rule 427 (identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1211

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 355)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1247
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1272

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1212

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 351)

    $default	reduce using rule 351 (option_function_parameter_list)
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 113)

    CLOSE_PAR	shift, and go to state 1273
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1213

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 350)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1248
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 178)

    CLOSE_PAR	shift, and go to state 1274

    CLOSE_PAR	[reduce using rule 178 (list)]
    $default	reduce using rule 178 (list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1214

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 366)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1249
=======
    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 112)

    $default	reduce using rule 112 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1215

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 370)

    $default	reduce using rule 370 (inner_option_define_identifier)
=======
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 191)

    $default	reduce using rule 191 (value_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1216

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 369)

    COMMA	shift, and go to state 376

    $default	reduce using rule 367 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1250
=======
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 60)

    $default	reduce using rule 60 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1217

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 146)

    CLOSE_PAR	shift, and go to state 1251
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 65)

    CLOSE_BPAR	shift, and go to state 1275
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1218

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
=======
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 66)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 1252
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    CLOSE_BPAR	reduce using rule 95 (empty_statement)

    statement	go to state 1241
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    empty_statement	go to state 1276
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1219

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 1253
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    CLOSE_MPAR	shift, and go to state 1277
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1220

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1254
    MUL 	shift, and go to state 893
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    OPEN_PAR	shift, and go to state 1278
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1221

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

    CLOSE_MPAR	shift, and go to state 1255
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    CLOSE_PAR	shift, and go to state 1201
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1222

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1202
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_MPAR	shift, and go to state 1256



<<<<<<< HEAD
state 1223

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 1257
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    OPEN_PAR	shift, and go to state 1279
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1224

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 1258
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    CLOSE_PAR	shift, and go to state 1204
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1225

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1259
    MUL 	shift, and go to state 893
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1205
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1226

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 1260
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    CLOSE_PAR	shift, and go to state 1206
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1227

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1261
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1207
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1228

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1262
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    ID  	shift, and go to state 1280
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1229

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1263
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    OPEN_PAR	shift, and go to state 1281
    ID  	shift, and go to state 1282
    INTEGER	shift, and go to state 1283
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1230

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1264
    bi_operator	go to state 331
=======
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 416)

    $default	reduce using rule 416 (option_function_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1231

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 1265
    MUL 	shift, and go to state 710
=======
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 96)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 420)

    CLOSE_PAR	shift, and go to state 1284
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1232

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 1266
    MUL 	shift, and go to state 713
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU . list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU . string inner_option_identifier_array_declaration   (rule 129)

    OPEN_PAR	shift, and go to state 917
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STR 	shift, and go to state 193

    list_exp	go to state 1285
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    string	go to state 1286
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1233

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 726
    MUL 	shift, and go to state 1267
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 123)

    $default	reduce using rule 123 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1234

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 155)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1268
    bi_operator	go to state 331
=======
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 24)

    $default	reduce using rule 24 (complexProposition)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1235

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1269
    bi_operator	go to state 331
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 278)

    $default	reduce using rule 278 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1236

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 91)

    CLOSE_PAR	shift, and go to state 1270
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    casted_element  ->  MALLOC OPEN_PAR alg_exp . CLOSE_PAR   (rule 281)

    CLOSE_PAR	shift, and go to state 1287
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1237

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1271
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 271)

    $default	reduce using rule 271 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1238

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1272
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 274)

    $default	reduce using rule 274 (type_cast)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1239

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    MUL 	shift, and go to state 1273
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    ID  	shift, and go to state 1282
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1240

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1274
=======
    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR .   (rule 139)

    $default	reduce using rule 139 (file_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1241

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1275
=======
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    empty_statement  ->  statement .   (rule 94)

    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 94 (empty_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1242

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1276
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 1288
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1243

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    MUL 	shift, and go to state 1277
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1289
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1244

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1278
=======
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_optional_define_identifier .   (rule 404)

    $default	reduce using rule 404 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1245

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CHARDECLARATION	shift, and go to state 1279
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    CLOSE_MPAR	shift, and go to state 1290
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    alg_operator	go to state 374



<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . option_case_par   (rule 413)

    CASE	shift, and go to state 911
    BREAK	shift, and go to state 1280

    $default	reduce using rule 416 (option_case_par)

    case_par	go to state 1281
    option_case_par	go to state 1282
=======
state 1246

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1291
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1247

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 355)

    $default	reduce using rule 355 (option_function_parameter_list)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 408)

    COMMA	shift, and go to state 427
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1292


<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 350)

    $default	reduce using rule 350 (option_function_parameter_list)
=======

state 1248

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 61)

    CLOSE_PAR	shift, and go to state 1293
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1249

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 366)

    $default	reduce using rule 366 (inner_option_define_identifier)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR . big_par   (rule 451)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 1294
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1250

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 369)

    $default	reduce using rule 369 (inner_option_define_identifier)
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1251

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 146)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 1283
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    ID  	shift, and go to state 1284

    function	go to state 1285
    file_statement	go to state 81
    array	go to state 1286
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    OPEN_PAR	shift, and go to state 1295
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1252

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1287

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_optional_define_identifier   (rule 394)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1296
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1253

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1288
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 390)

    $default	reduce using rule 390 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)



<<<<<<< HEAD
state 1254

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1289
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 389)

    COMMA	shift, and go to state 427
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1297


<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    $default	reduce using rule 151 (array)
=======

state 1255

    inner_option_array_declaration  ->  COMMA error .   (rule 137)

    $default	reduce using rule 137 (inner_option_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1256

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)
=======
    inner_option_array_declaration  ->  COMMA ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)

    OPEN_MPAR	shift, and go to state 1298
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1257

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1290

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1299
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1258

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1291

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1300
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1259

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1292
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 832
    CHARDECLARATION	shift, and go to state 1301
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1260

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (array)
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1302
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1261

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1303
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1262

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (array)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1304
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1263

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1305
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1264

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 1293
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 832
    CHARDECLARATION	shift, and go to state 1306
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1265

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 971
    INTLITERAL	shift, and go to state 1294
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 876
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1307
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1266

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 974
    INTLITERAL	shift, and go to state 1295
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 878
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1308
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1267

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1296
    MUL 	shift, and go to state 893
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1309
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1268

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 155)

    CLOSE_MPAR	shift, and go to state 1297
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 156)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1310
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1269

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1298
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    OPEN_MPAR	shift, and go to state 1311
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1270

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 90)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 91)

    ASS_P	shift, and go to state 1299

    $default	reduce using rule 90 (declaration)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 428)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 482)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 486)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 490)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 1312
    CHARDECLARATION	shift, and go to state 1313
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 1314
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1271

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    INTLITERAL	shift, and go to state 1300
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    OPEN_MPAR	shift, and go to state 1315
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1272

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    INTLITERAL	shift, and go to state 1301
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)

    OPEN_MPAR	shift, and go to state 1316
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1273

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1302
=======
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 113)

    $default	reduce using rule 113 (declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1274

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1303
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    OPEN_PAR	shift, and go to state 1317
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1275

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    INTLITERAL	shift, and go to state 1304
=======
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 65)

    $default	reduce using rule 65 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1276

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1305
=======
    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1318
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1277

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1306
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    CLOSE_PAR	shift, and go to state 1274
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1278

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1307
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    INTDECLARATION	shift, and go to state 1319
    CHARDECLARATION	shift, and go to state 1320
    UNSIGNED	shift, and go to state 1321
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1279

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1308
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    INTDECLARATION	shift, and go to state 1322
    CHARDECLARATION	shift, and go to state 1323
    UNSIGNED	shift, and go to state 1324
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1280

<<<<<<< HEAD
    option_case_par  ->  BREAK . case_par   (rule 414)

    CASE	shift, and go to state 911

    case_par	go to state 1309
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    CLOSE_PAR	shift, and go to state 1269
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1281

<<<<<<< HEAD
    option_case_par  ->  case_par .   (rule 415)

    $default	reduce using rule 415 (option_case_par)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    OPEN_PAR	shift, and go to state 1325
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1282

<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par .   (rule 413)

    $default	reduce using rule 413 (case_par)
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    CLOSE_PAR	shift, and go to state 1271
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1283

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 1310
    ID  	shift, and go to state 1311

    array	go to state 578
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1272
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1284

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_PAR	shift, and go to state 248
    OPEN_MPAR	shift, and go to state 249
=======
    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 96)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 420)

    COMMA	shift, and go to state 778

    COMMA	[reduce using rule 96 (function)]
    CLOSE_PAR	reduce using rule 96 (function)
    CLOSE_PAR	[reduce using rule 421 (inner_option_function_identifier)]
    $default	reduce using rule 96 (function)

    inner_option_function_identifier	go to state 1326
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1285

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 146)

    $default	reduce using rule 146 (ass_right)
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp . inner_option_identifier_array_declaration   (rule 128)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    COMMA	shift, and go to state 554
    CON 	shift, and go to state 697

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1327
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1286

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 264
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string . inner_option_identifier_array_declaration   (rule 129)

    COMMA	shift, and go to state 554

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    inner_option_identifier_array_declaration	go to state 1328



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1312
=======
state 1287

    casted_element  ->  MALLOC OPEN_PAR alg_exp CLOSE_PAR .   (rule 281)

    $default	reduce using rule 281 (casted_element)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1288

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1313
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1289

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1314

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_optional_define_identifier   (rule 406)

    CLOSE_PAR	shift, and go to state 1329
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1290

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1315
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 410)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1330
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1291

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1316
=======
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    CLOSE_MPAR	shift, and go to state 1331
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1292

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1317

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 408)

    $default	reduce using rule 408 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1293

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (array)
=======
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 61)

    $default	reduce using rule 61 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1294

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1318

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par .   (rule 451)

    $default	reduce using rule 451 (extend_for_statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1295

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1319

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 174)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1332
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1296

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    MALLOC	shift, and go to state 874
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 1085
    INTLITERAL	shift, and go to state 1320
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    type_cast_alg_exp	go to state 875
    simple_ari_exp	go to state 708
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    casted_element	go to state 1026
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier .   (rule 394)

    $default	reduce using rule 394 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1297

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 155)

    $default	reduce using rule 155 (array)
=======
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 389)

    $default	reduce using rule 389 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1298

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)
=======
    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1333
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1299

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 91)

    OPEN_PAR	shift, and go to state 813
    OPEN_BPAR	shift, and go to state 397
    OPEN_MPAR	shift, and go to state 398

    array_exp	go to state 1321
    option_list_value	go to state 404
    option_struct_list_value	go to state 405
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1334
    MUL 	shift, and go to state 820
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1300

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1287
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1335
    MUL 	shift, and go to state 823
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1301

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1288
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 1336
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1302

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    INTLITERAL	shift, and go to state 1322
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 179)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1337
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1303

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1290
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 155)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    option_alg_exp	go to state 1338
    alg_operator	go to state 374



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1291
=======
state 1304

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1339
    MUL 	shift, and go to state 820
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1305

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1323
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1340
    MUL 	shift, and go to state 823
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1306

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    INTLITERAL	shift, and go to state 1324
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 1341
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1307

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1325
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 182)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1342
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1308

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1326
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 153)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1343
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1309

<<<<<<< HEAD
    option_case_par  ->  BREAK case_par .   (rule 414)

    $default	reduce using rule 414 (option_case_par)
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 181)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1344
    alg_operator	go to state 374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1310

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 156)

    INTDECLARATION	shift, and go to state 748
    CHARDECLARATION	shift, and go to state 749
    FLOATDECLARATION	shift, and go to state 750
    OPEN_PAR	shift, and go to state 1310
    UNSIGNED	shift, and go to state 751
    ID  	shift, and go to state 1311

    array	go to state 578
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 156)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1345
    alg_operator	go to state 374



<<<<<<< HEAD
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_MPAR	shift, and go to state 249
=======
state 1311

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1346
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1312

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 1327
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1347
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1313

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_MPAR	shift, and go to state 1328
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1348
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1314

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1329
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 832
    CHARDECLARATION	shift, and go to state 1349
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1315

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1330
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1350
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1316

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1331
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1351
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1317

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1332
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1352



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1333
=======
state 1318

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1319

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1334
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    MUL 	shift, and go to state 1353
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1320

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 389)

    CLOSE_PAR	shift, and go to state 1335

    CLOSE_PAR	[reduce using rule 389 (intliteral)]
    $default	reduce using rule 389 (intliteral)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    MUL 	shift, and go to state 1354
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1321

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 91)
    array_exp  ->  array_exp . CON array_exp   (rule 203)

    CON 	shift, and go to state 619

    $default	reduce using rule 91 (declaration)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CHARDECLARATION	shift, and go to state 1355
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1322

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1314
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    MUL 	shift, and go to state 1356
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1323

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1317
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    MUL 	shift, and go to state 1357
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1324

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1318
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CHARDECLARATION	shift, and go to state 1358
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1325

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1319
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    INTDECLARATION	shift, and go to state 1359
    CHARDECLARATION	shift, and go to state 1360
    UNSIGNED	shift, and go to state 1361
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1326

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTLITERAL	shift, and go to state 1336
=======
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 420)

    $default	reduce using rule 420 (inner_option_function_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1327

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1337
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration .   (rule 128)

    $default	reduce using rule 128 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1328

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1338
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration .   (rule 129)

    $default	reduce using rule 129 (option_identifier_array_declaration)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1329

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 1339
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_optional_define_identifier   (rule 406)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1362
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1330

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1340
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 410)

    $default	reduce using rule 410 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1331

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1341
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 409)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1363
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1332

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1342
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 174)

    CLOSE_PAR	shift, and go to state 1364
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1333

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_MPAR	shift, and go to state 1343
=======
    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1365
    alg_operator	go to state 374


<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1344
=======

state 1334
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1096
    INTEGER	shift, and go to state 1366
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1345
=======
state 1335

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 1367
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1336

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1335
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1368
    MUL 	shift, and go to state 1024
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1337

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1346
    bi_operator	go to state 331
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 179)

    CLOSE_MPAR	shift, and go to state 1369
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1338

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1347
    bi_operator	go to state 331
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 155)

    CLOSE_MPAR	shift, and go to state 1370
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1339

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1348
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1096
    INTEGER	shift, and go to state 1371
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1340

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1349
    bi_operator	go to state 331
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 1372
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1341

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1350
    bi_operator	go to state 331
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1373
    MUL 	shift, and go to state 1024
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1342

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1351
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 182)

    CLOSE_MPAR	shift, and go to state 1374
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1343

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1352
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1375
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1344

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1353
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 181)

    CLOSE_MPAR	shift, and go to state 1376
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1345

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1354
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 156)

    CLOSE_MPAR	shift, and go to state 1377
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1346

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1355



state 1347

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 1356



state 1348

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1357
    bi_operator	go to state 331
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 180)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1378
    alg_operator	go to state 374



state 1347

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1379
    MUL 	shift, and go to state 820



state 1348

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1380
    MUL 	shift, and go to state 823
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1349

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1358
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 836
    MUL 	shift, and go to state 1381
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1350

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1359



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1360
    bi_operator	go to state 331



state 1352

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 137)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1361
    bi_operator	go to state 331
=======
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 183)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1382
    alg_operator	go to state 374



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 154)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1383
    alg_operator	go to state 374



state 1352

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU list_exp   (rule 115)

    CLOSE_PAR	shift, and go to state 1384
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1353

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1362
    bi_operator	go to state 331
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    CLOSE_PAR	shift, and go to state 1385
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1354

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 108
    POINTERNULL	shift, and go to state 109
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 110
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 111
    CEIL	shift, and go to state 112
    FLOOR	shift, and go to state 113
    ROUND	shift, and go to state 114
    SIN 	shift, and go to state 115
    COS 	shift, and go to state 116
    TAN 	shift, and go to state 117
    ASIN	shift, and go to state 118
    ACOS	shift, and go to state 119
    ATAN	shift, and go to state 120
    SINH	shift, and go to state 121
    COSH	shift, and go to state 122
    TANH	shift, and go to state 123
    EXP 	shift, and go to state 124
    LOG 	shift, and go to state 125
    LOG10	shift, and go to state 126
    SQRT	shift, and go to state 127
    ATAN2	shift, and go to state 128
    POW 	shift, and go to state 129
    ABS 	shift, and go to state 130
    FABS	shift, and go to state 131
    LABS	shift, and go to state 132
    FMOD	shift, and go to state 133
    MODF	shift, and go to state 134
    LDEXP	shift, and go to state 135
    ADDRESS	shift, and go to state 136
    SUB 	shift, and go to state 137
    MUL 	shift, and go to state 65
    BNE 	shift, and go to state 138
    ID  	shift, and go to state 72
    INTLITERAL	shift, and go to state 139
    FLOATLITERAL	shift, and go to state 140
    CHARLITERAL	shift, and go to state 141

    function	go to state 142
    file_statement	go to state 81
    array	go to state 143
    point_exp	go to state 144
    ari_exp	go to state 1363
    simple_ari_exp	go to state 146
    member_in_exp	go to state 147
    address_exp	go to state 148
    type_cast	go to state 149
    size_of	go to state 150
    String_Function	go to state 87
    String_Function_head	go to state 88
    String_Function_tail	go to state 89
    String_Function_cat	go to state 90
    String_Function_cmp	go to state 91
    String_Function_cpy	go to state 92
    String_Function_len	go to state 93
    math_function	go to state 151
    identifier	go to state 152
    intliteral	go to state 153
    charliteral	go to state 154
    floatliteral	go to state 155
    struct_member_exp	go to state 156
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    CLOSE_PAR	shift, and go to state 1386
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1355

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    MUL 	shift, and go to state 1387
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1356

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    $default	reduce using rule 138 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    CLOSE_PAR	shift, and go to state 1388
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1357

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 1364
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1389
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1358

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    MUL 	shift, and go to state 1390
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1359

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    MUL 	shift, and go to state 1391
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1360

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1365
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    MUL 	shift, and go to state 1392
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1361

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 137)

    CLOSE_MPAR	shift, and go to state 1366
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CHARDECLARATION	shift, and go to state 1393
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1362

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1367
=======
    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier .   (rule 406)

    $default	reduce using rule 406 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1363

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . bi_operator simple_ari_exp   (rule 169)

    COMMA	shift, and go to state 679
    INTER_OR	shift, and go to state 323
    CON 	shift, and go to state 324
    ADDRESS	shift, and go to state 325
    LST 	shift, and go to state 326
    RST 	shift, and go to state 327
    MUL 	shift, and go to state 328
    DIV 	shift, and go to state 329
    MOD 	shift, and go to state 330

    $default	reduce using rule 159 (option_ari_exp)

    option_ari_exp	go to state 1368
    bi_operator	go to state 331
=======
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 409)

    $default	reduce using rule 409 (inner_optional_define_identifier)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1364

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (leftaddrshift)
=======
    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 174)

    OPEN_PAR	shift, and go to state 1394
    ID  	shift, and go to state 1395

    function	go to state 1396
    list	go to state 1397
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1365

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)
=======
    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_array_declaration   (rule 135)

    CLOSE_MPAR	shift, and go to state 1398
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1366

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 137)

    $default	reduce using rule 137 (leftaddrshift)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1399

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1367

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1368

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1369
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1400

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1368

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1210
    INTEGER	shift, and go to state 1401
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1369

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)
=======
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 179)

    $default	reduce using rule 179 (list)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1370

<<<<<<< HEAD
    $   	go to state 1371
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 155)

    $default	reduce using rule 155 (leftaddrshift)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1371

<<<<<<< HEAD
    $   	go to state 1372
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1402

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)
>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5



state 1372

<<<<<<< HEAD
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1403

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1373

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1210
    INTEGER	shift, and go to state 1404
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1374

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 182)

    $default	reduce using rule 182 (list)



state 1375

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (leftaddrshift)



state 1376

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 181)

    $default	reduce using rule 181 (list)



state 1377

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 156)

    $default	reduce using rule 156 (leftaddrshift)



state 1378

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 180)

    CLOSE_MPAR	shift, and go to state 1405



state 1379

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1096
    INTEGER	shift, and go to state 1406
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1380

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 1407
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1381

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1408
    MUL 	shift, and go to state 1024



state 1382

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 183)

    CLOSE_MPAR	shift, and go to state 1409



state 1383

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 1410



state 1384

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU list_exp   (rule 115)

    ASS_EQU	shift, and go to state 1411

    $default	reduce using rule 114 (declaration)



state 1385

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    INTEGER	shift, and go to state 1412



state 1386

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    INTEGER	shift, and go to state 1413



state 1387

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CLOSE_PAR	shift, and go to state 1414



state 1388

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    INTEGER	shift, and go to state 1415



state 1389

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    INTEGER	shift, and go to state 1416



state 1390

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CLOSE_PAR	shift, and go to state 1417



state 1391

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    CLOSE_PAR	shift, and go to state 1418



state 1392

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    CLOSE_PAR	shift, and go to state 1419



state 1393

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    MUL 	shift, and go to state 1420



state 1394

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)

    OPEN_PAR	shift, and go to state 1421
    ID  	shift, and go to state 1422

    list	go to state 656



state 1395

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    OPEN_PAR	shift, and go to state 294
    OPEN_MPAR	shift, and go to state 295



state 1396

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 174)

    $default	reduce using rule 174 (ass_exp)



state 1397

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)

    OPEN_PAR	shift, and go to state 311



state 1398

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_array_declaration   (rule 135)

    COMMA	shift, and go to state 1198

    COMMA	[reduce using rule 136 (inner_option_array_declaration)]
    $default	reduce using rule 136 (inner_option_array_declaration)

    inner_option_array_declaration	go to state 1423



state 1399

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    CLOSE_PAR	shift, and go to state 1424



state 1400

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    CLOSE_PAR	shift, and go to state 1425



state 1401

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1426

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1402

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    CLOSE_PAR	shift, and go to state 1427



state 1403

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1428



state 1404

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1429

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1405

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 180)

    $default	reduce using rule 180 (list)



state 1406

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1430

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1407

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1431

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1408

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1005
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1210
    INTEGER	shift, and go to state 1432
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1006
    simple_alg_exp	go to state 818
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1409

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 183)

    $default	reduce using rule 183 (list)



state 1410

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (leftaddrshift)



state 1411

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . list_exp   (rule 115)

    OPEN_PAR	shift, and go to state 917
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448

    list_exp	go to state 1433
    option_list_value	go to state 455
    option_struct_list_value	go to state 456



state 1412

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    CLOSE_PAR	shift, and go to state 1399



state 1413

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    CLOSE_PAR	shift, and go to state 1400



state 1414

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    INTEGER	shift, and go to state 1434



state 1415

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    CLOSE_PAR	shift, and go to state 1402



state 1416

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1403



state 1417

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    INTEGER	shift, and go to state 1435



state 1418

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    INTEGER	shift, and go to state 1436



state 1419

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    INTEGER	shift, and go to state 1437



state 1420

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CLOSE_PAR	shift, and go to state 1438



state 1421

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)

    INTDECLARATION	shift, and go to state 858
    CHARDECLARATION	shift, and go to state 859
    FLOATDECLARATION	shift, and go to state 860
    OPEN_PAR	shift, and go to state 1421
    UNSIGNED	shift, and go to state 861
    ID  	shift, and go to state 1422

    list	go to state 656



state 1422

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    OPEN_MPAR	shift, and go to state 295



state 1423

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration .   (rule 135)

    $default	reduce using rule 135 (inner_option_array_declaration)



state 1424

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    OPEN_MPAR	shift, and go to state 1439



state 1425

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    OPEN_MPAR	shift, and go to state 1440



state 1426

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CLOSE_PAR	shift, and go to state 1441



state 1427

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    OPEN_MPAR	shift, and go to state 1442



state 1428

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    OPEN_MPAR	shift, and go to state 1443



state 1429

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CLOSE_PAR	shift, and go to state 1444



state 1430

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    CLOSE_PAR	shift, and go to state 1445



state 1431

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    CLOSE_PAR	shift, and go to state 1446



state 1432

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    integer  ->  INTEGER .   (rule 430)

    CLOSE_PAR	shift, and go to state 1447

    CLOSE_PAR	[reduce using rule 430 (integer)]
    $default	reduce using rule 430 (integer)



state 1433

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp .   (rule 115)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    CON 	shift, and go to state 697

    $default	reduce using rule 115 (declaration)



state 1434

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CLOSE_PAR	shift, and go to state 1426



state 1435

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CLOSE_PAR	shift, and go to state 1429



state 1436

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    CLOSE_PAR	shift, and go to state 1430



state 1437

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    CLOSE_PAR	shift, and go to state 1431



state 1438

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    INTEGER	shift, and go to state 1448



state 1439

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1449
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1440

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1450
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1441

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    OPEN_MPAR	shift, and go to state 1451



state 1442

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1452
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1443

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1444

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    OPEN_MPAR	shift, and go to state 1454



state 1445

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    OPEN_MPAR	shift, and go to state 1455



state 1446

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    OPEN_MPAR	shift, and go to state 1456



state 1447

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CLOSE_PAR	shift, and go to state 1457



state 1448

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CLOSE_PAR	shift, and go to state 1447



state 1449

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 165)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1458
    alg_operator	go to state 374



state 1450

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 163)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1459
    alg_operator	go to state 374



state 1451

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1460
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1452

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 159)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1461
    alg_operator	go to state 374



state 1453

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 157)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1462
    alg_operator	go to state 374



state 1454

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1463
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1455

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1464
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1456

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1465
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1457

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    OPEN_MPAR	shift, and go to state 1466



state 1458

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 165)

    CLOSE_MPAR	shift, and go to state 1467



state 1459

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 163)

    CLOSE_MPAR	shift, and go to state 1468



state 1460

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 164)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1469
    alg_operator	go to state 374



state 1461

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 159)

    CLOSE_MPAR	shift, and go to state 1470



state 1462

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 157)

    CLOSE_MPAR	shift, and go to state 1471



state 1463

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 158)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1472
    alg_operator	go to state 374



state 1464

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 162)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1473
    alg_operator	go to state 374



state 1465

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 160)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1474
    alg_operator	go to state 374



state 1466

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1475
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1467

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 165)

    $default	reduce using rule 165 (leftaddrshift)



state 1468

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 163)

    $default	reduce using rule 163 (leftaddrshift)



state 1469

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 164)

    CLOSE_MPAR	shift, and go to state 1476



state 1470

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 159)

    $default	reduce using rule 159 (leftaddrshift)



state 1471

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 157)

    $default	reduce using rule 157 (leftaddrshift)



state 1472

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 158)

    CLOSE_MPAR	shift, and go to state 1477



state 1473

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 162)

    CLOSE_MPAR	shift, and go to state 1478



state 1474

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 160)

    CLOSE_MPAR	shift, and go to state 1479



state 1475

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 161)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 781
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1480
    alg_operator	go to state 374



state 1476

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 164)

    $default	reduce using rule 164 (leftaddrshift)



state 1477

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 158)

    $default	reduce using rule 158 (leftaddrshift)



state 1478

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 162)

    $default	reduce using rule 162 (leftaddrshift)



state 1479

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 160)

    $default	reduce using rule 160 (leftaddrshift)



state 1480

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 161)

    CLOSE_MPAR	shift, and go to state 1481



state 1481

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 161)

    $default	reduce using rule 161 (leftaddrshift)



state 1482

    $   	go to state 1483



state 1483

    $   	go to state 1484



state 1484

>>>>>>> 7e066d3dac393c19da223f0e65c67b34da89b4f5
    $default	accept
